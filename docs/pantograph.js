"use strict";
(() => {
  var __async = (__this, __arguments, generator) => {
    return new Promise((resolve, reject) => {
      var fulfilled = (value14) => {
        try {
          step5(generator.next(value14));
        } catch (e) {
          reject(e);
        }
      };
      var rejected = (value14) => {
        try {
          step5(generator.throw(value14));
        } catch (e) {
          reject(e);
        }
      };
      var step5 = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
      step5((generator = generator.apply(__this, __arguments)).next());
    });
  };

  // output/Control.Bind/foreign.js
  var arrayBind = function(arr) {
    return function(f) {
      var result = [];
      for (var i2 = 0, l = arr.length; i2 < l; i2++) {
        Array.prototype.push.apply(result, f(arr[i2]));
      }
      return result;
    };
  };

  // output/Control.Apply/foreign.js
  var arrayApply = function(fs) {
    return function(xs) {
      var l = fs.length;
      var k = xs.length;
      var result = new Array(l * k);
      var n = 0;
      for (var i2 = 0; i2 < l; i2++) {
        var f = fs[i2];
        for (var j = 0; j < k; j++) {
          result[n++] = f(xs[j]);
        }
      }
      return result;
    };
  };

  // output/Control.Semigroupoid/index.js
  var semigroupoidFn = {
    compose: function(f) {
      return function(g) {
        return function(x) {
          return f(g(x));
        };
      };
    }
  };
  var compose = function(dict) {
    return dict.compose;
  };

  // output/Control.Category/index.js
  var identity = function(dict) {
    return dict.identity;
  };
  var categoryFn = {
    identity: function(x) {
      return x;
    },
    Semigroupoid0: function() {
      return semigroupoidFn;
    }
  };

  // output/Data.Boolean/index.js
  var otherwise = true;

  // output/Data.Function/index.js
  var on = function(f) {
    return function(g) {
      return function(x) {
        return function(y) {
          return f(g(x))(g(y));
        };
      };
    };
  };
  var flip = function(f) {
    return function(b2) {
      return function(a2) {
        return f(a2)(b2);
      };
    };
  };
  var $$const = function(a2) {
    return function(v) {
      return a2;
    };
  };
  var applyFlipped = function(x) {
    return function(f) {
      return f(x);
    };
  };

  // output/Data.Functor/foreign.js
  var arrayMap = function(f) {
    return function(arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i2 = 0; i2 < l; i2++) {
        result[i2] = f(arr[i2]);
      }
      return result;
    };
  };

  // output/Data.Unit/foreign.js
  var unit = void 0;

  // output/Type.Proxy/index.js
  var $$Proxy = /* @__PURE__ */ function() {
    function $$Proxy2() {
    }
    ;
    $$Proxy2.value = new $$Proxy2();
    return $$Proxy2;
  }();

  // output/Data.Functor/index.js
  var map = function(dict) {
    return dict.map;
  };
  var mapFlipped = function(dictFunctor) {
    var map123 = map(dictFunctor);
    return function(fa) {
      return function(f) {
        return map123(f)(fa);
      };
    };
  };
  var $$void = function(dictFunctor) {
    return map(dictFunctor)($$const(unit));
  };
  var voidLeft = function(dictFunctor) {
    var map123 = map(dictFunctor);
    return function(f) {
      return function(x) {
        return map123($$const(x))(f);
      };
    };
  };
  var voidRight = function(dictFunctor) {
    var map123 = map(dictFunctor);
    return function(x) {
      return map123($$const(x));
    };
  };
  var functorFn = {
    map: /* @__PURE__ */ compose(semigroupoidFn)
  };
  var functorArray = {
    map: arrayMap
  };

  // output/Control.Apply/index.js
  var identity2 = /* @__PURE__ */ identity(categoryFn);
  var applyArray = {
    apply: arrayApply,
    Functor0: function() {
      return functorArray;
    }
  };
  var apply = function(dict) {
    return dict.apply;
  };
  var applySecond = function(dictApply) {
    var apply1 = apply(dictApply);
    var map69 = map(dictApply.Functor0());
    return function(a2) {
      return function(b2) {
        return apply1(map69($$const(identity2))(a2))(b2);
      };
    };
  };
  var lift2 = function(dictApply) {
    var apply1 = apply(dictApply);
    var map69 = map(dictApply.Functor0());
    return function(f) {
      return function(a2) {
        return function(b2) {
          return apply1(map69(f)(a2))(b2);
        };
      };
    };
  };

  // output/Control.Applicative/index.js
  var pure = function(dict) {
    return dict.pure;
  };
  var unless = function(dictApplicative) {
    var pure117 = pure(dictApplicative);
    return function(v) {
      return function(v1) {
        if (!v) {
          return v1;
        }
        ;
        if (v) {
          return pure117(unit);
        }
        ;
        throw new Error("Failed pattern match at Control.Applicative (line 68, column 1 - line 68, column 65): " + [v.constructor.name, v1.constructor.name]);
      };
    };
  };
  var when = function(dictApplicative) {
    var pure117 = pure(dictApplicative);
    return function(v) {
      return function(v1) {
        if (v) {
          return v1;
        }
        ;
        if (!v) {
          return pure117(unit);
        }
        ;
        throw new Error("Failed pattern match at Control.Applicative (line 63, column 1 - line 63, column 63): " + [v.constructor.name, v1.constructor.name]);
      };
    };
  };
  var liftA1 = function(dictApplicative) {
    var apply6 = apply(dictApplicative.Apply0());
    var pure117 = pure(dictApplicative);
    return function(f) {
      return function(a2) {
        return apply6(pure117(f))(a2);
      };
    };
  };
  var applicativeArray = {
    pure: function(x) {
      return [x];
    },
    Apply0: function() {
      return applyArray;
    }
  };

  // output/Control.Bind/index.js
  var discard = function(dict) {
    return dict.discard;
  };
  var bindArray = {
    bind: arrayBind,
    Apply0: function() {
      return applyArray;
    }
  };
  var bind = function(dict) {
    return dict.bind;
  };
  var bindFlipped = function(dictBind) {
    return flip(bind(dictBind));
  };
  var composeKleisliFlipped = function(dictBind) {
    var bindFlipped12 = bindFlipped(dictBind);
    return function(f) {
      return function(g) {
        return function(a2) {
          return bindFlipped12(f)(g(a2));
        };
      };
    };
  };
  var discardUnit = {
    discard: function(dictBind) {
      return bind(dictBind);
    }
  };

  // output/Effect.Aff/foreign.js
  var Aff = function() {
    var EMPTY = {};
    var PURE = "Pure";
    var THROW = "Throw";
    var CATCH = "Catch";
    var SYNC = "Sync";
    var ASYNC = "Async";
    var BIND = "Bind";
    var BRACKET = "Bracket";
    var FORK = "Fork";
    var SEQ = "Sequential";
    var MAP = "Map";
    var APPLY = "Apply";
    var ALT = "Alt";
    var CONS = "Cons";
    var RESUME = "Resume";
    var RELEASE = "Release";
    var FINALIZER = "Finalizer";
    var FINALIZED = "Finalized";
    var FORKED = "Forked";
    var FIBER = "Fiber";
    var THUNK = "Thunk";
    function Aff2(tag, _1, _2, _3) {
      this.tag = tag;
      this._1 = _1;
      this._2 = _2;
      this._3 = _3;
    }
    function AffCtr(tag) {
      var fn = function(_1, _2, _3) {
        return new Aff2(tag, _1, _2, _3);
      };
      fn.tag = tag;
      return fn;
    }
    function nonCanceler2(error4) {
      return new Aff2(PURE, void 0);
    }
    function runEff(eff) {
      try {
        eff();
      } catch (error4) {
        setTimeout(function() {
          throw error4;
        }, 0);
      }
    }
    function runSync(left, right, eff) {
      try {
        return right(eff());
      } catch (error4) {
        return left(error4);
      }
    }
    function runAsync(left, eff, k) {
      try {
        return eff(k)();
      } catch (error4) {
        k(left(error4))();
        return nonCanceler2;
      }
    }
    var Scheduler = function() {
      var limit = 1024;
      var size5 = 0;
      var ix = 0;
      var queue = new Array(limit);
      var draining = false;
      function drain() {
        var thunk;
        draining = true;
        while (size5 !== 0) {
          size5--;
          thunk = queue[ix];
          queue[ix] = void 0;
          ix = (ix + 1) % limit;
          thunk();
        }
        draining = false;
      }
      return {
        isDraining: function() {
          return draining;
        },
        enqueue: function(cb) {
          var i2, tmp;
          if (size5 === limit) {
            tmp = draining;
            drain();
            draining = tmp;
          }
          queue[(ix + size5) % limit] = cb;
          size5++;
          if (!draining) {
            drain();
          }
        }
      };
    }();
    function Supervisor(util2) {
      var fibers = {};
      var fiberId = 0;
      var count = 0;
      return {
        register: function(fiber) {
          var fid = fiberId++;
          fiber.onComplete({
            rethrow: true,
            handler: function(result) {
              return function() {
                count--;
                delete fibers[fid];
              };
            }
          })();
          fibers[fid] = fiber;
          count++;
        },
        isEmpty: function() {
          return count === 0;
        },
        killAll: function(killError, cb) {
          return function() {
            if (count === 0) {
              return cb();
            }
            var killCount = 0;
            var kills = {};
            function kill3(fid) {
              kills[fid] = fibers[fid].kill(killError, function(result) {
                return function() {
                  delete kills[fid];
                  killCount--;
                  if (util2.isLeft(result) && util2.fromLeft(result)) {
                    setTimeout(function() {
                      throw util2.fromLeft(result);
                    }, 0);
                  }
                  if (killCount === 0) {
                    cb();
                  }
                };
              })();
            }
            for (var k in fibers) {
              if (fibers.hasOwnProperty(k)) {
                killCount++;
                kill3(k);
              }
            }
            fibers = {};
            fiberId = 0;
            count = 0;
            return function(error4) {
              return new Aff2(SYNC, function() {
                for (var k2 in kills) {
                  if (kills.hasOwnProperty(k2)) {
                    kills[k2]();
                  }
                }
              });
            };
          };
        }
      };
    }
    var SUSPENDED = 0;
    var CONTINUE = 1;
    var STEP_BIND = 2;
    var STEP_RESULT = 3;
    var PENDING = 4;
    var RETURN = 5;
    var COMPLETED = 6;
    function Fiber(util2, supervisor, aff) {
      var runTick = 0;
      var status = SUSPENDED;
      var step5 = aff;
      var fail2 = null;
      var interrupt = null;
      var bhead = null;
      var btail = null;
      var attempts = null;
      var bracketCount = 0;
      var joinId = 0;
      var joins = null;
      var rethrow = true;
      function run3(localRunTick) {
        var tmp, result, attempt;
        while (true) {
          tmp = null;
          result = null;
          attempt = null;
          switch (status) {
            case STEP_BIND:
              status = CONTINUE;
              try {
                step5 = bhead(step5);
                if (btail === null) {
                  bhead = null;
                } else {
                  bhead = btail._1;
                  btail = btail._2;
                }
              } catch (e) {
                status = RETURN;
                fail2 = util2.left(e);
                step5 = null;
              }
              break;
            case STEP_RESULT:
              if (util2.isLeft(step5)) {
                status = RETURN;
                fail2 = step5;
                step5 = null;
              } else if (bhead === null) {
                status = RETURN;
              } else {
                status = STEP_BIND;
                step5 = util2.fromRight(step5);
              }
              break;
            case CONTINUE:
              switch (step5.tag) {
                case BIND:
                  if (bhead) {
                    btail = new Aff2(CONS, bhead, btail);
                  }
                  bhead = step5._2;
                  status = CONTINUE;
                  step5 = step5._1;
                  break;
                case PURE:
                  if (bhead === null) {
                    status = RETURN;
                    step5 = util2.right(step5._1);
                  } else {
                    status = STEP_BIND;
                    step5 = step5._1;
                  }
                  break;
                case SYNC:
                  status = STEP_RESULT;
                  step5 = runSync(util2.left, util2.right, step5._1);
                  break;
                case ASYNC:
                  status = PENDING;
                  step5 = runAsync(util2.left, step5._1, function(result2) {
                    return function() {
                      if (runTick !== localRunTick) {
                        return;
                      }
                      runTick++;
                      Scheduler.enqueue(function() {
                        if (runTick !== localRunTick + 1) {
                          return;
                        }
                        status = STEP_RESULT;
                        step5 = result2;
                        run3(runTick);
                      });
                    };
                  });
                  return;
                case THROW:
                  status = RETURN;
                  fail2 = util2.left(step5._1);
                  step5 = null;
                  break;
                case CATCH:
                  if (bhead === null) {
                    attempts = new Aff2(CONS, step5, attempts, interrupt);
                  } else {
                    attempts = new Aff2(CONS, step5, new Aff2(CONS, new Aff2(RESUME, bhead, btail), attempts, interrupt), interrupt);
                  }
                  bhead = null;
                  btail = null;
                  status = CONTINUE;
                  step5 = step5._1;
                  break;
                case BRACKET:
                  bracketCount++;
                  if (bhead === null) {
                    attempts = new Aff2(CONS, step5, attempts, interrupt);
                  } else {
                    attempts = new Aff2(CONS, step5, new Aff2(CONS, new Aff2(RESUME, bhead, btail), attempts, interrupt), interrupt);
                  }
                  bhead = null;
                  btail = null;
                  status = CONTINUE;
                  step5 = step5._1;
                  break;
                case FORK:
                  status = STEP_RESULT;
                  tmp = Fiber(util2, supervisor, step5._2);
                  if (supervisor) {
                    supervisor.register(tmp);
                  }
                  if (step5._1) {
                    tmp.run();
                  }
                  step5 = util2.right(tmp);
                  break;
                case SEQ:
                  status = CONTINUE;
                  step5 = sequential3(util2, supervisor, step5._1);
                  break;
              }
              break;
            case RETURN:
              bhead = null;
              btail = null;
              if (attempts === null) {
                status = COMPLETED;
                step5 = interrupt || fail2 || step5;
              } else {
                tmp = attempts._3;
                attempt = attempts._1;
                attempts = attempts._2;
                switch (attempt.tag) {
                  case CATCH:
                    if (interrupt && interrupt !== tmp && bracketCount === 0) {
                      status = RETURN;
                    } else if (fail2) {
                      status = CONTINUE;
                      step5 = attempt._2(util2.fromLeft(fail2));
                      fail2 = null;
                    }
                    break;
                  case RESUME:
                    if (interrupt && interrupt !== tmp && bracketCount === 0 || fail2) {
                      status = RETURN;
                    } else {
                      bhead = attempt._1;
                      btail = attempt._2;
                      status = STEP_BIND;
                      step5 = util2.fromRight(step5);
                    }
                    break;
                  case BRACKET:
                    bracketCount--;
                    if (fail2 === null) {
                      result = util2.fromRight(step5);
                      attempts = new Aff2(CONS, new Aff2(RELEASE, attempt._2, result), attempts, tmp);
                      if (interrupt === tmp || bracketCount > 0) {
                        status = CONTINUE;
                        step5 = attempt._3(result);
                      }
                    }
                    break;
                  case RELEASE:
                    attempts = new Aff2(CONS, new Aff2(FINALIZED, step5, fail2), attempts, interrupt);
                    status = CONTINUE;
                    if (interrupt && interrupt !== tmp && bracketCount === 0) {
                      step5 = attempt._1.killed(util2.fromLeft(interrupt))(attempt._2);
                    } else if (fail2) {
                      step5 = attempt._1.failed(util2.fromLeft(fail2))(attempt._2);
                    } else {
                      step5 = attempt._1.completed(util2.fromRight(step5))(attempt._2);
                    }
                    fail2 = null;
                    bracketCount++;
                    break;
                  case FINALIZER:
                    bracketCount++;
                    attempts = new Aff2(CONS, new Aff2(FINALIZED, step5, fail2), attempts, interrupt);
                    status = CONTINUE;
                    step5 = attempt._1;
                    break;
                  case FINALIZED:
                    bracketCount--;
                    status = RETURN;
                    step5 = attempt._1;
                    fail2 = attempt._2;
                    break;
                }
              }
              break;
            case COMPLETED:
              for (var k in joins) {
                if (joins.hasOwnProperty(k)) {
                  rethrow = rethrow && joins[k].rethrow;
                  runEff(joins[k].handler(step5));
                }
              }
              joins = null;
              if (interrupt && fail2) {
                setTimeout(function() {
                  throw util2.fromLeft(fail2);
                }, 0);
              } else if (util2.isLeft(step5) && rethrow) {
                setTimeout(function() {
                  if (rethrow) {
                    throw util2.fromLeft(step5);
                  }
                }, 0);
              }
              return;
            case SUSPENDED:
              status = CONTINUE;
              break;
            case PENDING:
              return;
          }
        }
      }
      function onComplete(join4) {
        return function() {
          if (status === COMPLETED) {
            rethrow = rethrow && join4.rethrow;
            join4.handler(step5)();
            return function() {
            };
          }
          var jid = joinId++;
          joins = joins || {};
          joins[jid] = join4;
          return function() {
            if (joins !== null) {
              delete joins[jid];
            }
          };
        };
      }
      function kill3(error4, cb) {
        return function() {
          if (status === COMPLETED) {
            cb(util2.right(void 0))();
            return function() {
            };
          }
          var canceler = onComplete({
            rethrow: false,
            handler: function() {
              return cb(util2.right(void 0));
            }
          })();
          switch (status) {
            case SUSPENDED:
              interrupt = util2.left(error4);
              status = COMPLETED;
              step5 = interrupt;
              run3(runTick);
              break;
            case PENDING:
              if (interrupt === null) {
                interrupt = util2.left(error4);
              }
              if (bracketCount === 0) {
                if (status === PENDING) {
                  attempts = new Aff2(CONS, new Aff2(FINALIZER, step5(error4)), attempts, interrupt);
                }
                status = RETURN;
                step5 = null;
                fail2 = null;
                run3(++runTick);
              }
              break;
            default:
              if (interrupt === null) {
                interrupt = util2.left(error4);
              }
              if (bracketCount === 0) {
                status = RETURN;
                step5 = null;
                fail2 = null;
              }
          }
          return canceler;
        };
      }
      function join3(cb) {
        return function() {
          var canceler = onComplete({
            rethrow: false,
            handler: cb
          })();
          if (status === SUSPENDED) {
            run3(runTick);
          }
          return canceler;
        };
      }
      return {
        kill: kill3,
        join: join3,
        onComplete,
        isSuspended: function() {
          return status === SUSPENDED;
        },
        run: function() {
          if (status === SUSPENDED) {
            if (!Scheduler.isDraining()) {
              Scheduler.enqueue(function() {
                run3(runTick);
              });
            } else {
              run3(runTick);
            }
          }
        }
      };
    }
    function runPar(util2, supervisor, par, cb) {
      var fiberId = 0;
      var fibers = {};
      var killId = 0;
      var kills = {};
      var early = new Error("[ParAff] Early exit");
      var interrupt = null;
      var root = EMPTY;
      function kill3(error4, par2, cb2) {
        var step5 = par2;
        var head5 = null;
        var tail3 = null;
        var count = 0;
        var kills2 = {};
        var tmp, kid;
        loop:
          while (true) {
            tmp = null;
            switch (step5.tag) {
              case FORKED:
                if (step5._3 === EMPTY) {
                  tmp = fibers[step5._1];
                  kills2[count++] = tmp.kill(error4, function(result) {
                    return function() {
                      count--;
                      if (count === 0) {
                        cb2(result)();
                      }
                    };
                  });
                }
                if (head5 === null) {
                  break loop;
                }
                step5 = head5._2;
                if (tail3 === null) {
                  head5 = null;
                } else {
                  head5 = tail3._1;
                  tail3 = tail3._2;
                }
                break;
              case MAP:
                step5 = step5._2;
                break;
              case APPLY:
              case ALT:
                if (head5) {
                  tail3 = new Aff2(CONS, head5, tail3);
                }
                head5 = step5;
                step5 = step5._1;
                break;
            }
          }
        if (count === 0) {
          cb2(util2.right(void 0))();
        } else {
          kid = 0;
          tmp = count;
          for (; kid < tmp; kid++) {
            kills2[kid] = kills2[kid]();
          }
        }
        return kills2;
      }
      function join3(result, head5, tail3) {
        var fail2, step5, lhs, rhs, tmp, kid;
        if (util2.isLeft(result)) {
          fail2 = result;
          step5 = null;
        } else {
          step5 = result;
          fail2 = null;
        }
        loop:
          while (true) {
            lhs = null;
            rhs = null;
            tmp = null;
            kid = null;
            if (interrupt !== null) {
              return;
            }
            if (head5 === null) {
              cb(fail2 || step5)();
              return;
            }
            if (head5._3 !== EMPTY) {
              return;
            }
            switch (head5.tag) {
              case MAP:
                if (fail2 === null) {
                  head5._3 = util2.right(head5._1(util2.fromRight(step5)));
                  step5 = head5._3;
                } else {
                  head5._3 = fail2;
                }
                break;
              case APPLY:
                lhs = head5._1._3;
                rhs = head5._2._3;
                if (fail2) {
                  head5._3 = fail2;
                  tmp = true;
                  kid = killId++;
                  kills[kid] = kill3(early, fail2 === lhs ? head5._2 : head5._1, function() {
                    return function() {
                      delete kills[kid];
                      if (tmp) {
                        tmp = false;
                      } else if (tail3 === null) {
                        join3(fail2, null, null);
                      } else {
                        join3(fail2, tail3._1, tail3._2);
                      }
                    };
                  });
                  if (tmp) {
                    tmp = false;
                    return;
                  }
                } else if (lhs === EMPTY || rhs === EMPTY) {
                  return;
                } else {
                  step5 = util2.right(util2.fromRight(lhs)(util2.fromRight(rhs)));
                  head5._3 = step5;
                }
                break;
              case ALT:
                lhs = head5._1._3;
                rhs = head5._2._3;
                if (lhs === EMPTY && util2.isLeft(rhs) || rhs === EMPTY && util2.isLeft(lhs)) {
                  return;
                }
                if (lhs !== EMPTY && util2.isLeft(lhs) && rhs !== EMPTY && util2.isLeft(rhs)) {
                  fail2 = step5 === lhs ? rhs : lhs;
                  step5 = null;
                  head5._3 = fail2;
                } else {
                  head5._3 = step5;
                  tmp = true;
                  kid = killId++;
                  kills[kid] = kill3(early, step5 === lhs ? head5._2 : head5._1, function() {
                    return function() {
                      delete kills[kid];
                      if (tmp) {
                        tmp = false;
                      } else if (tail3 === null) {
                        join3(step5, null, null);
                      } else {
                        join3(step5, tail3._1, tail3._2);
                      }
                    };
                  });
                  if (tmp) {
                    tmp = false;
                    return;
                  }
                }
                break;
            }
            if (tail3 === null) {
              head5 = null;
            } else {
              head5 = tail3._1;
              tail3 = tail3._2;
            }
          }
      }
      function resolve(fiber) {
        return function(result) {
          return function() {
            delete fibers[fiber._1];
            fiber._3 = result;
            join3(result, fiber._2._1, fiber._2._2);
          };
        };
      }
      function run3() {
        var status = CONTINUE;
        var step5 = par;
        var head5 = null;
        var tail3 = null;
        var tmp, fid;
        loop:
          while (true) {
            tmp = null;
            fid = null;
            switch (status) {
              case CONTINUE:
                switch (step5.tag) {
                  case MAP:
                    if (head5) {
                      tail3 = new Aff2(CONS, head5, tail3);
                    }
                    head5 = new Aff2(MAP, step5._1, EMPTY, EMPTY);
                    step5 = step5._2;
                    break;
                  case APPLY:
                    if (head5) {
                      tail3 = new Aff2(CONS, head5, tail3);
                    }
                    head5 = new Aff2(APPLY, EMPTY, step5._2, EMPTY);
                    step5 = step5._1;
                    break;
                  case ALT:
                    if (head5) {
                      tail3 = new Aff2(CONS, head5, tail3);
                    }
                    head5 = new Aff2(ALT, EMPTY, step5._2, EMPTY);
                    step5 = step5._1;
                    break;
                  default:
                    fid = fiberId++;
                    status = RETURN;
                    tmp = step5;
                    step5 = new Aff2(FORKED, fid, new Aff2(CONS, head5, tail3), EMPTY);
                    tmp = Fiber(util2, supervisor, tmp);
                    tmp.onComplete({
                      rethrow: false,
                      handler: resolve(step5)
                    })();
                    fibers[fid] = tmp;
                    if (supervisor) {
                      supervisor.register(tmp);
                    }
                }
                break;
              case RETURN:
                if (head5 === null) {
                  break loop;
                }
                if (head5._1 === EMPTY) {
                  head5._1 = step5;
                  status = CONTINUE;
                  step5 = head5._2;
                  head5._2 = EMPTY;
                } else {
                  head5._2 = step5;
                  step5 = head5;
                  if (tail3 === null) {
                    head5 = null;
                  } else {
                    head5 = tail3._1;
                    tail3 = tail3._2;
                  }
                }
            }
          }
        root = step5;
        for (fid = 0; fid < fiberId; fid++) {
          fibers[fid].run();
        }
      }
      function cancel(error4, cb2) {
        interrupt = util2.left(error4);
        var innerKills;
        for (var kid in kills) {
          if (kills.hasOwnProperty(kid)) {
            innerKills = kills[kid];
            for (kid in innerKills) {
              if (innerKills.hasOwnProperty(kid)) {
                innerKills[kid]();
              }
            }
          }
        }
        kills = null;
        var newKills = kill3(error4, root, cb2);
        return function(killError) {
          return new Aff2(ASYNC, function(killCb) {
            return function() {
              for (var kid2 in newKills) {
                if (newKills.hasOwnProperty(kid2)) {
                  newKills[kid2]();
                }
              }
              return nonCanceler2;
            };
          });
        };
      }
      run3();
      return function(killError) {
        return new Aff2(ASYNC, function(killCb) {
          return function() {
            return cancel(killError, killCb);
          };
        });
      };
    }
    function sequential3(util2, supervisor, par) {
      return new Aff2(ASYNC, function(cb) {
        return function() {
          return runPar(util2, supervisor, par, cb);
        };
      });
    }
    Aff2.EMPTY = EMPTY;
    Aff2.Pure = AffCtr(PURE);
    Aff2.Throw = AffCtr(THROW);
    Aff2.Catch = AffCtr(CATCH);
    Aff2.Sync = AffCtr(SYNC);
    Aff2.Async = AffCtr(ASYNC);
    Aff2.Bind = AffCtr(BIND);
    Aff2.Bracket = AffCtr(BRACKET);
    Aff2.Fork = AffCtr(FORK);
    Aff2.Seq = AffCtr(SEQ);
    Aff2.ParMap = AffCtr(MAP);
    Aff2.ParApply = AffCtr(APPLY);
    Aff2.ParAlt = AffCtr(ALT);
    Aff2.Fiber = Fiber;
    Aff2.Supervisor = Supervisor;
    Aff2.Scheduler = Scheduler;
    Aff2.nonCanceler = nonCanceler2;
    return Aff2;
  }();
  var _pure = Aff.Pure;
  var _throwError = Aff.Throw;
  function _catchError(aff) {
    return function(k) {
      return Aff.Catch(aff, k);
    };
  }
  function _map(f) {
    return function(aff) {
      if (aff.tag === Aff.Pure.tag) {
        return Aff.Pure(f(aff._1));
      } else {
        return Aff.Bind(aff, function(value14) {
          return Aff.Pure(f(value14));
        });
      }
    };
  }
  function _bind(aff) {
    return function(k) {
      return Aff.Bind(aff, k);
    };
  }
  function _fork(immediate) {
    return function(aff) {
      return Aff.Fork(immediate, aff);
    };
  }
  var _liftEffect = Aff.Sync;
  function _parAffMap(f) {
    return function(aff) {
      return Aff.ParMap(f, aff);
    };
  }
  function _parAffApply(aff1) {
    return function(aff2) {
      return Aff.ParApply(aff1, aff2);
    };
  }
  var makeAff = Aff.Async;
  function generalBracket(acquire) {
    return function(options2) {
      return function(k) {
        return Aff.Bracket(acquire, options2, k);
      };
    };
  }
  function _makeFiber(util2, aff) {
    return function() {
      return Aff.Fiber(util2, null, aff);
    };
  }
  var _delay = function() {
    function setDelay(n, k) {
      if (n === 0 && typeof setImmediate !== "undefined") {
        return setImmediate(k);
      } else {
        return setTimeout(k, n);
      }
    }
    function clearDelay(n, t) {
      if (n === 0 && typeof clearImmediate !== "undefined") {
        return clearImmediate(t);
      } else {
        return clearTimeout(t);
      }
    }
    return function(right, ms) {
      return Aff.Async(function(cb) {
        return function() {
          var timer = setDelay(ms, cb(right()));
          return function() {
            return Aff.Sync(function() {
              return right(clearDelay(ms, timer));
            });
          };
        };
      });
    };
  }();
  var _sequential = Aff.Seq;

  // output/Control.Monad/index.js
  var unlessM = function(dictMonad) {
    var bind36 = bind(dictMonad.Bind1());
    var unless3 = unless(dictMonad.Applicative0());
    return function(mb) {
      return function(m) {
        return bind36(mb)(function(b2) {
          return unless3(b2)(m);
        });
      };
    };
  };
  var ap = function(dictMonad) {
    var bind36 = bind(dictMonad.Bind1());
    var pure38 = pure(dictMonad.Applicative0());
    return function(f) {
      return function(a2) {
        return bind36(f)(function(f$prime) {
          return bind36(a2)(function(a$prime) {
            return pure38(f$prime(a$prime));
          });
        });
      };
    };
  };

  // output/Data.Semigroup/foreign.js
  var concatString = function(s1) {
    return function(s2) {
      return s1 + s2;
    };
  };
  var concatArray = function(xs) {
    return function(ys) {
      if (xs.length === 0)
        return ys;
      if (ys.length === 0)
        return xs;
      return xs.concat(ys);
    };
  };

  // output/Data.Symbol/index.js
  var reflectSymbol = function(dict) {
    return dict.reflectSymbol;
  };

  // output/Record.Unsafe/foreign.js
  var unsafeGet = function(label5) {
    return function(rec) {
      return rec[label5];
    };
  };

  // output/Data.Semigroup/index.js
  var semigroupString = {
    append: concatString
  };
  var semigroupArray = {
    append: concatArray
  };
  var append = function(dict) {
    return dict.append;
  };

  // output/Control.Alt/index.js
  var altArray = {
    alt: /* @__PURE__ */ append(semigroupArray),
    Functor0: function() {
      return functorArray;
    }
  };
  var alt = function(dict) {
    return dict.alt;
  };

  // output/Data.Bounded/foreign.js
  var topInt = 2147483647;
  var bottomInt = -2147483648;
  var topChar = String.fromCharCode(65535);
  var bottomChar = String.fromCharCode(0);
  var topNumber = Number.POSITIVE_INFINITY;
  var bottomNumber = Number.NEGATIVE_INFINITY;

  // output/Data.Ord/foreign.js
  var unsafeCompareImpl = function(lt) {
    return function(eq9) {
      return function(gt) {
        return function(x) {
          return function(y) {
            return x < y ? lt : x === y ? eq9 : gt;
          };
        };
      };
    };
  };
  var ordIntImpl = unsafeCompareImpl;
  var ordStringImpl = unsafeCompareImpl;
  var ordCharImpl = unsafeCompareImpl;
  var ordArrayImpl = function(f) {
    return function(xs) {
      return function(ys) {
        var i2 = 0;
        var xlen = xs.length;
        var ylen = ys.length;
        while (i2 < xlen && i2 < ylen) {
          var x = xs[i2];
          var y = ys[i2];
          var o = f(x)(y);
          if (o !== 0) {
            return o;
          }
          i2++;
        }
        if (xlen === ylen) {
          return 0;
        } else if (xlen > ylen) {
          return -1;
        } else {
          return 1;
        }
      };
    };
  };

  // output/Data.Eq/foreign.js
  var refEq = function(r1) {
    return function(r2) {
      return r1 === r2;
    };
  };
  var eqBooleanImpl = refEq;
  var eqIntImpl = refEq;
  var eqCharImpl = refEq;
  var eqStringImpl = refEq;
  var eqArrayImpl = function(f) {
    return function(xs) {
      return function(ys) {
        if (xs.length !== ys.length)
          return false;
        for (var i2 = 0; i2 < xs.length; i2++) {
          if (!f(xs[i2])(ys[i2]))
            return false;
        }
        return true;
      };
    };
  };

  // output/Data.Eq/index.js
  var eqUnit = {
    eq: function(v) {
      return function(v1) {
        return true;
      };
    }
  };
  var eqString = {
    eq: eqStringImpl
  };
  var eqRowNil = {
    eqRecord: function(v) {
      return function(v1) {
        return function(v2) {
          return true;
        };
      };
    }
  };
  var eqRecord = function(dict) {
    return dict.eqRecord;
  };
  var eqRec = function() {
    return function(dictEqRecord) {
      return {
        eq: eqRecord(dictEqRecord)($$Proxy.value)
      };
    };
  };
  var eqProxy = {
    eq: function(v) {
      return function(v1) {
        return true;
      };
    }
  };
  var eqInt = {
    eq: eqIntImpl
  };
  var eqChar = {
    eq: eqCharImpl
  };
  var eqBoolean = {
    eq: eqBooleanImpl
  };
  var eq1 = function(dict) {
    return dict.eq1;
  };
  var eq = function(dict) {
    return dict.eq;
  };
  var eq2 = /* @__PURE__ */ eq(eqBoolean);
  var eqArray = function(dictEq) {
    return {
      eq: eqArrayImpl(eq(dictEq))
    };
  };
  var eqRowCons = function(dictEqRecord) {
    var eqRecord1 = eqRecord(dictEqRecord);
    return function() {
      return function(dictIsSymbol) {
        var reflectSymbol2 = reflectSymbol(dictIsSymbol);
        return function(dictEq) {
          var eq34 = eq(dictEq);
          return {
            eqRecord: function(v) {
              return function(ra) {
                return function(rb) {
                  var tail3 = eqRecord1($$Proxy.value)(ra)(rb);
                  var key6 = reflectSymbol2($$Proxy.value);
                  var get8 = unsafeGet(key6);
                  return eq34(get8(ra))(get8(rb)) && tail3;
                };
              };
            }
          };
        };
      };
    };
  };
  var notEq = function(dictEq) {
    var eq34 = eq(dictEq);
    return function(x) {
      return function(y) {
        return eq2(eq34(x)(y))(false);
      };
    };
  };

  // output/Data.Ordering/index.js
  var LT = /* @__PURE__ */ function() {
    function LT2() {
    }
    ;
    LT2.value = new LT2();
    return LT2;
  }();
  var GT = /* @__PURE__ */ function() {
    function GT2() {
    }
    ;
    GT2.value = new GT2();
    return GT2;
  }();
  var EQ = /* @__PURE__ */ function() {
    function EQ2() {
    }
    ;
    EQ2.value = new EQ2();
    return EQ2;
  }();
  var eqOrdering = {
    eq: function(v) {
      return function(v1) {
        if (v instanceof LT && v1 instanceof LT) {
          return true;
        }
        ;
        if (v instanceof GT && v1 instanceof GT) {
          return true;
        }
        ;
        if (v instanceof EQ && v1 instanceof EQ) {
          return true;
        }
        ;
        return false;
      };
    }
  };

  // output/Data.Ring/foreign.js
  var intSub = function(x) {
    return function(y) {
      return x - y | 0;
    };
  };

  // output/Data.Semiring/foreign.js
  var intAdd = function(x) {
    return function(y) {
      return x + y | 0;
    };
  };
  var intMul = function(x) {
    return function(y) {
      return x * y | 0;
    };
  };

  // output/Data.Semiring/index.js
  var zero = function(dict) {
    return dict.zero;
  };
  var semiringInt = {
    add: intAdd,
    zero: 0,
    mul: intMul,
    one: 1
  };
  var one = function(dict) {
    return dict.one;
  };
  var mul = function(dict) {
    return dict.mul;
  };
  var add = function(dict) {
    return dict.add;
  };

  // output/Data.Ring/index.js
  var sub = function(dict) {
    return dict.sub;
  };
  var ringInt = {
    sub: intSub,
    Semiring0: function() {
      return semiringInt;
    }
  };
  var negate = function(dictRing) {
    var sub12 = sub(dictRing);
    var zero2 = zero(dictRing.Semiring0());
    return function(a2) {
      return sub12(zero2)(a2);
    };
  };

  // output/Data.Ord/index.js
  var ordUnit = {
    compare: function(v) {
      return function(v1) {
        return EQ.value;
      };
    },
    Eq0: function() {
      return eqUnit;
    }
  };
  var ordString = /* @__PURE__ */ function() {
    return {
      compare: ordStringImpl(LT.value)(EQ.value)(GT.value),
      Eq0: function() {
        return eqString;
      }
    };
  }();
  var ordProxy = {
    compare: function(v) {
      return function(v1) {
        return EQ.value;
      };
    },
    Eq0: function() {
      return eqProxy;
    }
  };
  var ordInt = /* @__PURE__ */ function() {
    return {
      compare: ordIntImpl(LT.value)(EQ.value)(GT.value),
      Eq0: function() {
        return eqInt;
      }
    };
  }();
  var ordChar = /* @__PURE__ */ function() {
    return {
      compare: ordCharImpl(LT.value)(EQ.value)(GT.value),
      Eq0: function() {
        return eqChar;
      }
    };
  }();
  var compare1 = function(dict) {
    return dict.compare1;
  };
  var compare = function(dict) {
    return dict.compare;
  };
  var compare2 = /* @__PURE__ */ compare(ordInt);
  var comparing = function(dictOrd) {
    var compare33 = compare(dictOrd);
    return function(f) {
      return function(x) {
        return function(y) {
          return compare33(f(x))(f(y));
        };
      };
    };
  };
  var greaterThan = function(dictOrd) {
    var compare33 = compare(dictOrd);
    return function(a1) {
      return function(a2) {
        var v = compare33(a1)(a2);
        if (v instanceof GT) {
          return true;
        }
        ;
        return false;
      };
    };
  };
  var greaterThanOrEq = function(dictOrd) {
    var compare33 = compare(dictOrd);
    return function(a1) {
      return function(a2) {
        var v = compare33(a1)(a2);
        if (v instanceof LT) {
          return false;
        }
        ;
        return true;
      };
    };
  };
  var lessThan = function(dictOrd) {
    var compare33 = compare(dictOrd);
    return function(a1) {
      return function(a2) {
        var v = compare33(a1)(a2);
        if (v instanceof LT) {
          return true;
        }
        ;
        return false;
      };
    };
  };
  var signum = function(dictOrd) {
    var lessThan1 = lessThan(dictOrd);
    var greaterThan1 = greaterThan(dictOrd);
    return function(dictRing) {
      var Semiring0 = dictRing.Semiring0();
      var zero2 = zero(Semiring0);
      var negate1 = negate(dictRing);
      var one2 = one(Semiring0);
      return function(x) {
        var $89 = lessThan1(x)(zero2);
        if ($89) {
          return negate1(one2);
        }
        ;
        var $90 = greaterThan1(x)(zero2);
        if ($90) {
          return one2;
        }
        ;
        return x;
      };
    };
  };
  var lessThanOrEq = function(dictOrd) {
    var compare33 = compare(dictOrd);
    return function(a1) {
      return function(a2) {
        var v = compare33(a1)(a2);
        if (v instanceof GT) {
          return false;
        }
        ;
        return true;
      };
    };
  };
  var max = function(dictOrd) {
    var compare33 = compare(dictOrd);
    return function(x) {
      return function(y) {
        var v = compare33(x)(y);
        if (v instanceof LT) {
          return y;
        }
        ;
        if (v instanceof EQ) {
          return x;
        }
        ;
        if (v instanceof GT) {
          return x;
        }
        ;
        throw new Error("Failed pattern match at Data.Ord (line 181, column 3 - line 184, column 12): " + [v.constructor.name]);
      };
    };
  };
  var min = function(dictOrd) {
    var compare33 = compare(dictOrd);
    return function(x) {
      return function(y) {
        var v = compare33(x)(y);
        if (v instanceof LT) {
          return x;
        }
        ;
        if (v instanceof EQ) {
          return x;
        }
        ;
        if (v instanceof GT) {
          return y;
        }
        ;
        throw new Error("Failed pattern match at Data.Ord (line 172, column 3 - line 175, column 12): " + [v.constructor.name]);
      };
    };
  };
  var ordArray = function(dictOrd) {
    var compare33 = compare(dictOrd);
    var eqArray3 = eqArray(dictOrd.Eq0());
    return {
      compare: function() {
        var toDelta = function(x) {
          return function(y) {
            var v = compare33(x)(y);
            if (v instanceof EQ) {
              return 0;
            }
            ;
            if (v instanceof LT) {
              return 1;
            }
            ;
            if (v instanceof GT) {
              return -1 | 0;
            }
            ;
            throw new Error("Failed pattern match at Data.Ord (line 79, column 7 - line 82, column 17): " + [v.constructor.name]);
          };
        };
        return function(xs) {
          return function(ys) {
            return compare2(0)(ordArrayImpl(toDelta)(xs)(ys));
          };
        };
      }(),
      Eq0: function() {
        return eqArray3;
      }
    };
  };
  var clamp = function(dictOrd) {
    var min1 = min(dictOrd);
    var max1 = max(dictOrd);
    return function(low2) {
      return function(hi) {
        return function(x) {
          return min1(hi)(max1(low2)(x));
        };
      };
    };
  };
  var abs = function(dictOrd) {
    var greaterThanOrEq1 = greaterThanOrEq(dictOrd);
    return function(dictRing) {
      var zero2 = zero(dictRing.Semiring0());
      var negate1 = negate(dictRing);
      return function(x) {
        var $99 = greaterThanOrEq1(x)(zero2);
        if ($99) {
          return x;
        }
        ;
        return negate1(x);
      };
    };
  };

  // output/Data.Bounded/index.js
  var top = function(dict) {
    return dict.top;
  };
  var boundedInt = {
    top: topInt,
    bottom: bottomInt,
    Ord0: function() {
      return ordInt;
    }
  };
  var boundedChar = {
    top: topChar,
    bottom: bottomChar,
    Ord0: function() {
      return ordChar;
    }
  };
  var bottom = function(dict) {
    return dict.bottom;
  };

  // output/Data.Show/foreign.js
  var showIntImpl = function(n) {
    return n.toString();
  };
  var showNumberImpl = function(n) {
    var str = n.toString();
    return isNaN(str + ".0") ? str : str + ".0";
  };
  var showStringImpl = function(s) {
    var l = s.length;
    return '"' + s.replace(
      /[\0-\x1F\x7F"\\]/g,
      // eslint-disable-line no-control-regex
      function(c, i2) {
        switch (c) {
          case '"':
          case "\\":
            return "\\" + c;
          case "\x07":
            return "\\a";
          case "\b":
            return "\\b";
          case "\f":
            return "\\f";
          case "\n":
            return "\\n";
          case "\r":
            return "\\r";
          case "	":
            return "\\t";
          case "\v":
            return "\\v";
        }
        var k = i2 + 1;
        var empty13 = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
        return "\\" + c.charCodeAt(0).toString(10) + empty13;
      }
    ) + '"';
  };
  var showArrayImpl = function(f) {
    return function(xs) {
      var ss = [];
      for (var i2 = 0, l = xs.length; i2 < l; i2++) {
        ss[i2] = f(xs[i2]);
      }
      return "[" + ss.join(",") + "]";
    };
  };

  // output/Data.Show/index.js
  var showString = {
    show: showStringImpl
  };
  var showRecordFields = function(dict) {
    return dict.showRecordFields;
  };
  var showRecord = function() {
    return function() {
      return function(dictShowRecordFields) {
        var showRecordFields1 = showRecordFields(dictShowRecordFields);
        return {
          show: function(record) {
            return "{" + (showRecordFields1($$Proxy.value)(record) + "}");
          }
        };
      };
    };
  };
  var showNumber = {
    show: showNumberImpl
  };
  var showInt = {
    show: showIntImpl
  };
  var showBoolean = {
    show: function(v) {
      if (v) {
        return "true";
      }
      ;
      if (!v) {
        return "false";
      }
      ;
      throw new Error("Failed pattern match at Data.Show (line 29, column 1 - line 31, column 23): " + [v.constructor.name]);
    }
  };
  var show = function(dict) {
    return dict.show;
  };
  var showArray = function(dictShow) {
    return {
      show: showArrayImpl(show(dictShow))
    };
  };
  var showRecordFieldsCons = function(dictIsSymbol) {
    var reflectSymbol2 = reflectSymbol(dictIsSymbol);
    return function(dictShowRecordFields) {
      var showRecordFields1 = showRecordFields(dictShowRecordFields);
      return function(dictShow) {
        var show19 = show(dictShow);
        return {
          showRecordFields: function(v) {
            return function(record) {
              var tail3 = showRecordFields1($$Proxy.value)(record);
              var key6 = reflectSymbol2($$Proxy.value);
              var focus3 = unsafeGet(key6)(record);
              return " " + (key6 + (": " + (show19(focus3) + ("," + tail3))));
            };
          }
        };
      };
    };
  };
  var showRecordFieldsConsNil = function(dictIsSymbol) {
    var reflectSymbol2 = reflectSymbol(dictIsSymbol);
    return function(dictShow) {
      var show19 = show(dictShow);
      return {
        showRecordFields: function(v) {
          return function(record) {
            var key6 = reflectSymbol2($$Proxy.value);
            var focus3 = unsafeGet(key6)(record);
            return " " + (key6 + (": " + (show19(focus3) + " ")));
          };
        }
      };
    };
  };

  // output/Data.Generic.Rep/index.js
  var Inl = /* @__PURE__ */ function() {
    function Inl2(value0) {
      this.value0 = value0;
    }
    ;
    Inl2.create = function(value0) {
      return new Inl2(value0);
    };
    return Inl2;
  }();
  var Inr = /* @__PURE__ */ function() {
    function Inr2(value0) {
      this.value0 = value0;
    }
    ;
    Inr2.create = function(value0) {
      return new Inr2(value0);
    };
    return Inr2;
  }();
  var Product = /* @__PURE__ */ function() {
    function Product3(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    Product3.create = function(value0) {
      return function(value14) {
        return new Product3(value0, value14);
      };
    };
    return Product3;
  }();
  var NoArguments = /* @__PURE__ */ function() {
    function NoArguments2() {
    }
    ;
    NoArguments2.value = new NoArguments2();
    return NoArguments2;
  }();
  var Constructor = function(x) {
    return x;
  };
  var Argument = function(x) {
    return x;
  };
  var to = function(dict) {
    return dict.to;
  };
  var from = function(dict) {
    return dict.from;
  };

  // output/Data.Maybe/index.js
  var identity3 = /* @__PURE__ */ identity(categoryFn);
  var Nothing = /* @__PURE__ */ function() {
    function Nothing2() {
    }
    ;
    Nothing2.value = new Nothing2();
    return Nothing2;
  }();
  var Just = /* @__PURE__ */ function() {
    function Just2(value0) {
      this.value0 = value0;
    }
    ;
    Just2.create = function(value0) {
      return new Just2(value0);
    };
    return Just2;
  }();
  var showMaybe = function(dictShow) {
    var show19 = show(dictShow);
    return {
      show: function(v) {
        if (v instanceof Just) {
          return "(Just " + (show19(v.value0) + ")");
        }
        ;
        if (v instanceof Nothing) {
          return "Nothing";
        }
        ;
        throw new Error("Failed pattern match at Data.Maybe (line 223, column 1 - line 225, column 28): " + [v.constructor.name]);
      }
    };
  };
  var maybe = function(v) {
    return function(v1) {
      return function(v2) {
        if (v2 instanceof Nothing) {
          return v;
        }
        ;
        if (v2 instanceof Just) {
          return v1(v2.value0);
        }
        ;
        throw new Error("Failed pattern match at Data.Maybe (line 237, column 1 - line 237, column 51): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
      };
    };
  };
  var isNothing = /* @__PURE__ */ maybe(true)(/* @__PURE__ */ $$const(false));
  var isJust = /* @__PURE__ */ maybe(false)(/* @__PURE__ */ $$const(true));
  var functorMaybe = {
    map: function(v) {
      return function(v1) {
        if (v1 instanceof Just) {
          return new Just(v(v1.value0));
        }
        ;
        return Nothing.value;
      };
    }
  };
  var map2 = /* @__PURE__ */ map(functorMaybe);
  var fromMaybe = function(a2) {
    return maybe(a2)(identity3);
  };
  var fromJust = function() {
    return function(v) {
      if (v instanceof Just) {
        return v.value0;
      }
      ;
      throw new Error("Failed pattern match at Data.Maybe (line 288, column 1 - line 288, column 46): " + [v.constructor.name]);
    };
  };
  var eqMaybe = function(dictEq) {
    var eq9 = eq(dictEq);
    return {
      eq: function(x) {
        return function(y) {
          if (x instanceof Nothing && y instanceof Nothing) {
            return true;
          }
          ;
          if (x instanceof Just && y instanceof Just) {
            return eq9(x.value0)(y.value0);
          }
          ;
          return false;
        };
      }
    };
  };
  var ordMaybe = function(dictOrd) {
    var compare10 = compare(dictOrd);
    var eqMaybe1 = eqMaybe(dictOrd.Eq0());
    return {
      compare: function(x) {
        return function(y) {
          if (x instanceof Nothing && y instanceof Nothing) {
            return EQ.value;
          }
          ;
          if (x instanceof Nothing) {
            return LT.value;
          }
          ;
          if (y instanceof Nothing) {
            return GT.value;
          }
          ;
          if (x instanceof Just && y instanceof Just) {
            return compare10(x.value0)(y.value0);
          }
          ;
          throw new Error("Failed pattern match at Data.Maybe (line 0, column 0 - line 0, column 0): " + [x.constructor.name, y.constructor.name]);
        };
      },
      Eq0: function() {
        return eqMaybe1;
      }
    };
  };
  var applyMaybe = {
    apply: function(v) {
      return function(v1) {
        if (v instanceof Just) {
          return map2(v.value0)(v1);
        }
        ;
        if (v instanceof Nothing) {
          return Nothing.value;
        }
        ;
        throw new Error("Failed pattern match at Data.Maybe (line 67, column 1 - line 69, column 30): " + [v.constructor.name, v1.constructor.name]);
      };
    },
    Functor0: function() {
      return functorMaybe;
    }
  };
  var bindMaybe = {
    bind: function(v) {
      return function(v1) {
        if (v instanceof Just) {
          return v1(v.value0);
        }
        ;
        if (v instanceof Nothing) {
          return Nothing.value;
        }
        ;
        throw new Error("Failed pattern match at Data.Maybe (line 125, column 1 - line 127, column 28): " + [v.constructor.name, v1.constructor.name]);
      };
    },
    Apply0: function() {
      return applyMaybe;
    }
  };
  var applicativeMaybe = /* @__PURE__ */ function() {
    return {
      pure: Just.create,
      Apply0: function() {
        return applyMaybe;
      }
    };
  }();
  var monadMaybe = {
    Applicative0: function() {
      return applicativeMaybe;
    },
    Bind1: function() {
      return bindMaybe;
    }
  };
  var altMaybe = {
    alt: function(v) {
      return function(v1) {
        if (v instanceof Nothing) {
          return v1;
        }
        ;
        return v;
      };
    },
    Functor0: function() {
      return functorMaybe;
    }
  };
  var plusMaybe = /* @__PURE__ */ function() {
    return {
      empty: Nothing.value,
      Alt0: function() {
        return altMaybe;
      }
    };
  }();
  var alternativeMaybe = {
    Applicative0: function() {
      return applicativeMaybe;
    },
    Plus1: function() {
      return plusMaybe;
    }
  };

  // output/Data.Either/index.js
  var Left = /* @__PURE__ */ function() {
    function Left2(value0) {
      this.value0 = value0;
    }
    ;
    Left2.create = function(value0) {
      return new Left2(value0);
    };
    return Left2;
  }();
  var Right = /* @__PURE__ */ function() {
    function Right2(value0) {
      this.value0 = value0;
    }
    ;
    Right2.create = function(value0) {
      return new Right2(value0);
    };
    return Right2;
  }();
  var note = function(a2) {
    return maybe(new Left(a2))(Right.create);
  };
  var functorEither = {
    map: function(f) {
      return function(m) {
        if (m instanceof Left) {
          return new Left(m.value0);
        }
        ;
        if (m instanceof Right) {
          return new Right(f(m.value0));
        }
        ;
        throw new Error("Failed pattern match at Data.Either (line 0, column 0 - line 0, column 0): " + [m.constructor.name]);
      };
    }
  };
  var map3 = /* @__PURE__ */ map(functorEither);
  var eqEither = function(dictEq) {
    var eq9 = eq(dictEq);
    return function(dictEq1) {
      var eq15 = eq(dictEq1);
      return {
        eq: function(x) {
          return function(y) {
            if (x instanceof Left && y instanceof Left) {
              return eq9(x.value0)(y.value0);
            }
            ;
            if (x instanceof Right && y instanceof Right) {
              return eq15(x.value0)(y.value0);
            }
            ;
            return false;
          };
        }
      };
    };
  };
  var either = function(v) {
    return function(v1) {
      return function(v2) {
        if (v2 instanceof Left) {
          return v(v2.value0);
        }
        ;
        if (v2 instanceof Right) {
          return v1(v2.value0);
        }
        ;
        throw new Error("Failed pattern match at Data.Either (line 208, column 1 - line 208, column 64): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
      };
    };
  };
  var applyEither = {
    apply: function(v) {
      return function(v1) {
        if (v instanceof Left) {
          return new Left(v.value0);
        }
        ;
        if (v instanceof Right) {
          return map3(v.value0)(v1);
        }
        ;
        throw new Error("Failed pattern match at Data.Either (line 70, column 1 - line 72, column 30): " + [v.constructor.name, v1.constructor.name]);
      };
    },
    Functor0: function() {
      return functorEither;
    }
  };
  var apply2 = /* @__PURE__ */ apply(applyEither);
  var bindEither = {
    bind: /* @__PURE__ */ either(function(e) {
      return function(v) {
        return new Left(e);
      };
    })(function(a2) {
      return function(f) {
        return f(a2);
      };
    }),
    Apply0: function() {
      return applyEither;
    }
  };
  var semigroupEither = function(dictSemigroup) {
    var append112 = append(dictSemigroup);
    return {
      append: function(x) {
        return function(y) {
          return apply2(map3(append112)(x))(y);
        };
      }
    };
  };
  var applicativeEither = /* @__PURE__ */ function() {
    return {
      pure: Right.create,
      Apply0: function() {
        return applyEither;
      }
    };
  }();
  var monadEither = {
    Applicative0: function() {
      return applicativeEither;
    },
    Bind1: function() {
      return bindEither;
    }
  };
  var altEither = {
    alt: function(v) {
      return function(v1) {
        if (v instanceof Left) {
          return v1;
        }
        ;
        return v;
      };
    },
    Functor0: function() {
      return functorEither;
    }
  };

  // output/Effect/foreign.js
  var pureE = function(a2) {
    return function() {
      return a2;
    };
  };
  var bindE = function(a2) {
    return function(f) {
      return function() {
        return f(a2())();
      };
    };
  };

  // output/Data.EuclideanRing/foreign.js
  var intDegree = function(x) {
    return Math.min(Math.abs(x), 2147483647);
  };
  var intDiv = function(x) {
    return function(y) {
      if (y === 0)
        return 0;
      return y > 0 ? Math.floor(x / y) : -Math.floor(x / -y);
    };
  };
  var intMod = function(x) {
    return function(y) {
      if (y === 0)
        return 0;
      var yy = Math.abs(y);
      return (x % yy + yy) % yy;
    };
  };

  // output/Data.CommutativeRing/index.js
  var commutativeRingInt = {
    Ring0: function() {
      return ringInt;
    }
  };

  // output/Data.EuclideanRing/index.js
  var mod = function(dict) {
    return dict.mod;
  };
  var gcd = function(dictEq) {
    var eq9 = eq(dictEq);
    return function(dictEuclideanRing) {
      var zero2 = zero(dictEuclideanRing.CommutativeRing0().Ring0().Semiring0());
      var mod1 = mod(dictEuclideanRing);
      return function(a2) {
        return function(b2) {
          var $24 = eq9(b2)(zero2);
          if ($24) {
            return a2;
          }
          ;
          return gcd(dictEq)(dictEuclideanRing)(b2)(mod1(a2)(b2));
        };
      };
    };
  };
  var euclideanRingInt = {
    degree: intDegree,
    div: intDiv,
    mod: intMod,
    CommutativeRing0: function() {
      return commutativeRingInt;
    }
  };
  var div = function(dict) {
    return dict.div;
  };

  // output/Data.Monoid/index.js
  var monoidString = {
    mempty: "",
    Semigroup0: function() {
      return semigroupString;
    }
  };
  var monoidArray = {
    mempty: [],
    Semigroup0: function() {
      return semigroupArray;
    }
  };
  var mempty = function(dict) {
    return dict.mempty;
  };

  // output/Effect/index.js
  var $runtime_lazy = function(name15, moduleName, init3) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2)
        return val;
      if (state3 === 1)
        throw new ReferenceError(name15 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init3();
      state3 = 2;
      return val;
    };
  };
  var monadEffect = {
    Applicative0: function() {
      return applicativeEffect;
    },
    Bind1: function() {
      return bindEffect;
    }
  };
  var bindEffect = {
    bind: bindE,
    Apply0: function() {
      return $lazy_applyEffect(0);
    }
  };
  var applicativeEffect = {
    pure: pureE,
    Apply0: function() {
      return $lazy_applyEffect(0);
    }
  };
  var $lazy_functorEffect = /* @__PURE__ */ $runtime_lazy("functorEffect", "Effect", function() {
    return {
      map: liftA1(applicativeEffect)
    };
  });
  var $lazy_applyEffect = /* @__PURE__ */ $runtime_lazy("applyEffect", "Effect", function() {
    return {
      apply: ap(monadEffect),
      Functor0: function() {
        return $lazy_functorEffect(0);
      }
    };
  });
  var functorEffect = /* @__PURE__ */ $lazy_functorEffect(20);

  // output/Effect.Exception/foreign.js
  function error(msg) {
    return new Error(msg);
  }
  function throwException(e) {
    return function() {
      throw e;
    };
  }

  // output/Effect.Exception/index.js
  var $$throw = function($4) {
    return throwException(error($4));
  };

  // output/Control.Monad.Error.Class/index.js
  var throwError = function(dict) {
    return dict.throwError;
  };
  var monadThrowEither = /* @__PURE__ */ function() {
    return {
      throwError: Left.create,
      Monad0: function() {
        return monadEither;
      }
    };
  }();
  var catchError = function(dict) {
    return dict.catchError;
  };
  var $$try = function(dictMonadError) {
    var catchError1 = catchError(dictMonadError);
    var Monad0 = dictMonadError.MonadThrow0().Monad0();
    var map69 = map(Monad0.Bind1().Apply0().Functor0());
    var pure38 = pure(Monad0.Applicative0());
    return function(a2) {
      return catchError1(map69(Right.create)(a2))(function($52) {
        return pure38(Left.create($52));
      });
    };
  };

  // output/Data.Identity/index.js
  var Identity = function(x) {
    return x;
  };
  var functorIdentity = {
    map: function(f) {
      return function(m) {
        return f(m);
      };
    }
  };
  var applyIdentity = {
    apply: function(v) {
      return function(v1) {
        return v(v1);
      };
    },
    Functor0: function() {
      return functorIdentity;
    }
  };
  var bindIdentity = {
    bind: function(v) {
      return function(f) {
        return f(v);
      };
    },
    Apply0: function() {
      return applyIdentity;
    }
  };
  var applicativeIdentity = {
    pure: Identity,
    Apply0: function() {
      return applyIdentity;
    }
  };
  var monadIdentity = {
    Applicative0: function() {
      return applicativeIdentity;
    },
    Bind1: function() {
      return bindIdentity;
    }
  };

  // output/Effect.Ref/foreign.js
  var _new = function(val) {
    return function() {
      return { value: val };
    };
  };
  var read = function(ref3) {
    return function() {
      return ref3.value;
    };
  };
  var modifyImpl = function(f) {
    return function(ref3) {
      return function() {
        var t = f(ref3.value);
        ref3.value = t.state;
        return t.value;
      };
    };
  };
  var write = function(val) {
    return function(ref3) {
      return function() {
        ref3.value = val;
      };
    };
  };

  // output/Effect.Ref/index.js
  var $$void2 = /* @__PURE__ */ $$void(functorEffect);
  var $$new = _new;
  var modify$prime = modifyImpl;
  var modify = function(f) {
    return modify$prime(function(s) {
      var s$prime = f(s);
      return {
        state: s$prime,
        value: s$prime
      };
    });
  };
  var modify_ = function(f) {
    return function(s) {
      return $$void2(modify(f)(s));
    };
  };

  // output/Control.Monad.Rec.Class/index.js
  var bindFlipped2 = /* @__PURE__ */ bindFlipped(bindEffect);
  var map4 = /* @__PURE__ */ map(functorEffect);
  var Loop = /* @__PURE__ */ function() {
    function Loop2(value0) {
      this.value0 = value0;
    }
    ;
    Loop2.create = function(value0) {
      return new Loop2(value0);
    };
    return Loop2;
  }();
  var Done = /* @__PURE__ */ function() {
    function Done2(value0) {
      this.value0 = value0;
    }
    ;
    Done2.create = function(value0) {
      return new Done2(value0);
    };
    return Done2;
  }();
  var tailRecM = function(dict) {
    return dict.tailRecM;
  };
  var tailRecM2 = function(dictMonadRec) {
    var tailRecM1 = tailRecM(dictMonadRec);
    return function(f) {
      return function(a2) {
        return function(b2) {
          return tailRecM1(function(o) {
            return f(o.a)(o.b);
          })({
            a: a2,
            b: b2
          });
        };
      };
    };
  };
  var tailRec = function(f) {
    var go2 = function($copy_v) {
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v) {
        if (v instanceof Loop) {
          $copy_v = f(v.value0);
          return;
        }
        ;
        if (v instanceof Done) {
          $tco_done = true;
          return v.value0;
        }
        ;
        throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 103, column 3 - line 103, column 25): " + [v.constructor.name]);
      }
      ;
      while (!$tco_done) {
        $tco_result = $tco_loop($copy_v);
      }
      ;
      return $tco_result;
    };
    return function($85) {
      return go2(f($85));
    };
  };
  var monadRecMaybe = {
    tailRecM: function(f) {
      return function(a0) {
        var g = function(v) {
          if (v instanceof Nothing) {
            return new Done(Nothing.value);
          }
          ;
          if (v instanceof Just && v.value0 instanceof Loop) {
            return new Loop(f(v.value0.value0));
          }
          ;
          if (v instanceof Just && v.value0 instanceof Done) {
            return new Done(new Just(v.value0.value0));
          }
          ;
          throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 153, column 7 - line 153, column 31): " + [v.constructor.name]);
        };
        return tailRec(g)(f(a0));
      };
    },
    Monad0: function() {
      return monadMaybe;
    }
  };
  var monadRecEffect = {
    tailRecM: function(f) {
      return function(a2) {
        var fromDone = function(v) {
          if (v instanceof Done) {
            return v.value0;
          }
          ;
          throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 137, column 30 - line 137, column 44): " + [v.constructor.name]);
        };
        return function __do2() {
          var r = bindFlipped2($$new)(f(a2))();
          (function() {
            while (!function __do3() {
              var v = read(r)();
              if (v instanceof Loop) {
                var e = f(v.value0)();
                write(e)(r)();
                return false;
              }
              ;
              if (v instanceof Done) {
                return true;
              }
              ;
              throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 128, column 22 - line 133, column 28): " + [v.constructor.name]);
            }()) {
            }
            ;
            return {};
          })();
          return map4(fromDone)(read(r))();
        };
      };
    },
    Monad0: function() {
      return monadEffect;
    }
  };

  // output/Unsafe.Coerce/foreign.js
  var unsafeCoerce2 = function(x) {
    return x;
  };

  // output/Control.Monad.ST.Internal/foreign.js
  var map_ = function(f) {
    return function(a2) {
      return function() {
        return f(a2());
      };
    };
  };
  var pure_ = function(a2) {
    return function() {
      return a2;
    };
  };
  var bind_ = function(a2) {
    return function(f) {
      return function() {
        return f(a2())();
      };
    };
  };
  var foreach = function(as) {
    return function(f) {
      return function() {
        for (var i2 = 0, l = as.length; i2 < l; i2++) {
          f(as[i2])();
        }
      };
    };
  };
  function newSTRef(val) {
    return function() {
      return { value: val };
    };
  }
  var read2 = function(ref3) {
    return function() {
      return ref3.value;
    };
  };
  var modifyImpl2 = function(f) {
    return function(ref3) {
      return function() {
        var t = f(ref3.value);
        ref3.value = t.state;
        return t.value;
      };
    };
  };
  var write2 = function(a2) {
    return function(ref3) {
      return function() {
        return ref3.value = a2;
      };
    };
  };

  // output/Control.Monad.ST.Internal/index.js
  var $runtime_lazy2 = function(name15, moduleName, init3) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2)
        return val;
      if (state3 === 1)
        throw new ReferenceError(name15 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init3();
      state3 = 2;
      return val;
    };
  };
  var modify$prime2 = modifyImpl2;
  var modify2 = function(f) {
    return modify$prime2(function(s) {
      var s$prime = f(s);
      return {
        state: s$prime,
        value: s$prime
      };
    });
  };
  var functorST = {
    map: map_
  };
  var monadST = {
    Applicative0: function() {
      return applicativeST;
    },
    Bind1: function() {
      return bindST;
    }
  };
  var bindST = {
    bind: bind_,
    Apply0: function() {
      return $lazy_applyST(0);
    }
  };
  var applicativeST = {
    pure: pure_,
    Apply0: function() {
      return $lazy_applyST(0);
    }
  };
  var $lazy_applyST = /* @__PURE__ */ $runtime_lazy2("applyST", "Control.Monad.ST.Internal", function() {
    return {
      apply: ap(monadST),
      Functor0: function() {
        return functorST;
      }
    };
  });

  // output/Control.Lazy/index.js
  var defer = function(dict) {
    return dict.defer;
  };

  // output/Data.HeytingAlgebra/foreign.js
  var boolConj = function(b1) {
    return function(b2) {
      return b1 && b2;
    };
  };
  var boolDisj = function(b1) {
    return function(b2) {
      return b1 || b2;
    };
  };
  var boolNot = function(b2) {
    return !b2;
  };

  // output/Data.HeytingAlgebra/index.js
  var tt = function(dict) {
    return dict.tt;
  };
  var not = function(dict) {
    return dict.not;
  };
  var implies = function(dict) {
    return dict.implies;
  };
  var ff = function(dict) {
    return dict.ff;
  };
  var disj = function(dict) {
    return dict.disj;
  };
  var heytingAlgebraBoolean = {
    ff: false,
    tt: true,
    implies: function(a2) {
      return function(b2) {
        return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a2))(b2);
      };
    },
    conj: boolConj,
    disj: boolDisj,
    not: boolNot
  };
  var conj = function(dict) {
    return dict.conj;
  };
  var heytingAlgebraFunction = function(dictHeytingAlgebra) {
    var ff1 = ff(dictHeytingAlgebra);
    var tt1 = tt(dictHeytingAlgebra);
    var implies1 = implies(dictHeytingAlgebra);
    var conj1 = conj(dictHeytingAlgebra);
    var disj1 = disj(dictHeytingAlgebra);
    var not12 = not(dictHeytingAlgebra);
    return {
      ff: function(v) {
        return ff1;
      },
      tt: function(v) {
        return tt1;
      },
      implies: function(f) {
        return function(g) {
          return function(a2) {
            return implies1(f(a2))(g(a2));
          };
        };
      },
      conj: function(f) {
        return function(g) {
          return function(a2) {
            return conj1(f(a2))(g(a2));
          };
        };
      },
      disj: function(f) {
        return function(g) {
          return function(a2) {
            return disj1(f(a2))(g(a2));
          };
        };
      },
      not: function(f) {
        return function(a2) {
          return not12(f(a2));
        };
      }
    };
  };

  // output/Data.Tuple/index.js
  var Tuple = /* @__PURE__ */ function() {
    function Tuple2(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    Tuple2.create = function(value0) {
      return function(value14) {
        return new Tuple2(value0, value14);
      };
    };
    return Tuple2;
  }();
  var uncurry = function(f) {
    return function(v) {
      return f(v.value0)(v.value1);
    };
  };
  var snd = function(v) {
    return v.value1;
  };
  var showTuple = function(dictShow) {
    var show19 = show(dictShow);
    return function(dictShow1) {
      var show110 = show(dictShow1);
      return {
        show: function(v) {
          return "(Tuple " + (show19(v.value0) + (" " + (show110(v.value1) + ")")));
        }
      };
    };
  };
  var functorTuple = {
    map: function(f) {
      return function(m) {
        return new Tuple(m.value0, f(m.value1));
      };
    }
  };
  var fst = function(v) {
    return v.value0;
  };
  var eqTuple = function(dictEq) {
    var eq9 = eq(dictEq);
    return function(dictEq1) {
      var eq15 = eq(dictEq1);
      return {
        eq: function(x) {
          return function(y) {
            return eq9(x.value0)(y.value0) && eq15(x.value1)(y.value1);
          };
        }
      };
    };
  };
  var ordTuple = function(dictOrd) {
    var compare10 = compare(dictOrd);
    var eqTuple1 = eqTuple(dictOrd.Eq0());
    return function(dictOrd1) {
      var compare15 = compare(dictOrd1);
      var eqTuple2 = eqTuple1(dictOrd1.Eq0());
      return {
        compare: function(x) {
          return function(y) {
            var v = compare10(x.value0)(y.value0);
            if (v instanceof LT) {
              return LT.value;
            }
            ;
            if (v instanceof GT) {
              return GT.value;
            }
            ;
            return compare15(x.value1)(y.value1);
          };
        },
        Eq0: function() {
          return eqTuple2;
        }
      };
    };
  };

  // output/Control.Monad.State.Class/index.js
  var state = function(dict) {
    return dict.state;
  };
  var modify_2 = function(dictMonadState) {
    var state1 = state(dictMonadState);
    return function(f) {
      return state1(function(s) {
        return new Tuple(unit, f(s));
      });
    };
  };
  var modify3 = function(dictMonadState) {
    var state1 = state(dictMonadState);
    return function(f) {
      return state1(function(s) {
        var s$prime = f(s);
        return new Tuple(s$prime, s$prime);
      });
    };
  };
  var gets = function(dictMonadState) {
    var state1 = state(dictMonadState);
    return function(f) {
      return state1(function(s) {
        return new Tuple(f(s), s);
      });
    };
  };
  var get = function(dictMonadState) {
    return state(dictMonadState)(function(s) {
      return new Tuple(s, s);
    });
  };

  // output/Control.Monad.Trans.Class/index.js
  var lift = function(dict) {
    return dict.lift;
  };

  // output/Effect.Class/index.js
  var monadEffectEffect = {
    liftEffect: /* @__PURE__ */ identity(categoryFn),
    Monad0: function() {
      return monadEffect;
    }
  };
  var liftEffect = function(dict) {
    return dict.liftEffect;
  };

  // output/Control.Monad.Writer.Class/index.js
  var tell = function(dict) {
    return dict.tell;
  };

  // output/Control.Monad.Except.Trans/index.js
  var map5 = /* @__PURE__ */ map(functorEither);
  var ExceptT = function(x) {
    return x;
  };
  var runExceptT = function(v) {
    return v;
  };
  var monadTransExceptT = {
    lift: function(dictMonad) {
      var bind36 = bind(dictMonad.Bind1());
      var pure38 = pure(dictMonad.Applicative0());
      return function(m) {
        return bind36(m)(function(a2) {
          return pure38(new Right(a2));
        });
      };
    }
  };
  var lift3 = /* @__PURE__ */ lift(monadTransExceptT);
  var mapExceptT = function(f) {
    return function(v) {
      return f(v);
    };
  };
  var functorExceptT = function(dictFunctor) {
    var map123 = map(dictFunctor);
    return {
      map: function(f) {
        return mapExceptT(map123(map5(f)));
      }
    };
  };
  var monadExceptT = function(dictMonad) {
    return {
      Applicative0: function() {
        return applicativeExceptT(dictMonad);
      },
      Bind1: function() {
        return bindExceptT(dictMonad);
      }
    };
  };
  var bindExceptT = function(dictMonad) {
    var bind36 = bind(dictMonad.Bind1());
    var pure38 = pure(dictMonad.Applicative0());
    return {
      bind: function(v) {
        return function(k) {
          return bind36(v)(either(function($187) {
            return pure38(Left.create($187));
          })(function(a2) {
            var v1 = k(a2);
            return v1;
          }));
        };
      },
      Apply0: function() {
        return applyExceptT(dictMonad);
      }
    };
  };
  var applyExceptT = function(dictMonad) {
    var functorExceptT1 = functorExceptT(dictMonad.Bind1().Apply0().Functor0());
    return {
      apply: ap(monadExceptT(dictMonad)),
      Functor0: function() {
        return functorExceptT1;
      }
    };
  };
  var applicativeExceptT = function(dictMonad) {
    return {
      pure: function() {
        var $188 = pure(dictMonad.Applicative0());
        return function($189) {
          return ExceptT($188(Right.create($189)));
        };
      }(),
      Apply0: function() {
        return applyExceptT(dictMonad);
      }
    };
  };
  var monadStateExceptT = function(dictMonadState) {
    var Monad0 = dictMonadState.Monad0();
    var lift1 = lift3(Monad0);
    var state3 = state(dictMonadState);
    var monadExceptT1 = monadExceptT(Monad0);
    return {
      state: function(f) {
        return lift1(state3(f));
      },
      Monad0: function() {
        return monadExceptT1;
      }
    };
  };
  var monadThrowExceptT = function(dictMonad) {
    var monadExceptT1 = monadExceptT(dictMonad);
    return {
      throwError: function() {
        var $198 = pure(dictMonad.Applicative0());
        return function($199) {
          return ExceptT($198(Left.create($199)));
        };
      }(),
      Monad0: function() {
        return monadExceptT1;
      }
    };
  };
  var altExceptT = function(dictSemigroup) {
    var append21 = append(dictSemigroup);
    return function(dictMonad) {
      var Bind1 = dictMonad.Bind1();
      var bind36 = bind(Bind1);
      var pure38 = pure(dictMonad.Applicative0());
      var functorExceptT1 = functorExceptT(Bind1.Apply0().Functor0());
      return {
        alt: function(v) {
          return function(v1) {
            return bind36(v)(function(rm) {
              if (rm instanceof Right) {
                return pure38(new Right(rm.value0));
              }
              ;
              if (rm instanceof Left) {
                return bind36(v1)(function(rn) {
                  if (rn instanceof Right) {
                    return pure38(new Right(rn.value0));
                  }
                  ;
                  if (rn instanceof Left) {
                    return pure38(new Left(append21(rm.value0)(rn.value0)));
                  }
                  ;
                  throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 86, column 9 - line 88, column 49): " + [rn.constructor.name]);
                });
              }
              ;
              throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 82, column 5 - line 88, column 49): " + [rm.constructor.name]);
            });
          };
        },
        Functor0: function() {
          return functorExceptT1;
        }
      };
    };
  };

  // output/Control.Plus/index.js
  var plusArray = {
    empty: [],
    Alt0: function() {
      return altArray;
    }
  };
  var empty = function(dict) {
    return dict.empty;
  };

  // output/Safe.Coerce/index.js
  var coerce = function() {
    return unsafeCoerce2;
  };

  // output/Data.Newtype/index.js
  var coerce2 = /* @__PURE__ */ coerce();
  var unwrap = function() {
    return coerce2;
  };
  var over = function() {
    return function() {
      return function(v) {
        return coerce2;
      };
    };
  };
  var alaF = function() {
    return function() {
      return function() {
        return function() {
          return function(v) {
            return coerce2;
          };
        };
      };
    };
  };

  // output/Control.Monad.Writer.Trans/index.js
  var WriterT = function(x) {
    return x;
  };
  var runWriterT = function(v) {
    return v;
  };
  var mapWriterT = function(f) {
    return function(v) {
      return f(v);
    };
  };
  var functorWriterT = function(dictFunctor) {
    var map69 = map(dictFunctor);
    return {
      map: function(f) {
        return mapWriterT(map69(function(v) {
          return new Tuple(f(v.value0), v.value1);
        }));
      }
    };
  };
  var applyWriterT = function(dictSemigroup) {
    var append21 = append(dictSemigroup);
    return function(dictApply) {
      var apply6 = apply(dictApply);
      var Functor0 = dictApply.Functor0();
      var map69 = map(Functor0);
      var functorWriterT1 = functorWriterT(Functor0);
      return {
        apply: function(v) {
          return function(v1) {
            var k = function(v3) {
              return function(v4) {
                return new Tuple(v3.value0(v4.value0), append21(v3.value1)(v4.value1));
              };
            };
            return apply6(map69(k)(v))(v1);
          };
        },
        Functor0: function() {
          return functorWriterT1;
        }
      };
    };
  };
  var bindWriterT = function(dictSemigroup) {
    var append21 = append(dictSemigroup);
    var applyWriterT1 = applyWriterT(dictSemigroup);
    return function(dictBind) {
      var bind36 = bind(dictBind);
      var Apply0 = dictBind.Apply0();
      var map69 = map(Apply0.Functor0());
      var applyWriterT2 = applyWriterT1(Apply0);
      return {
        bind: function(v) {
          return function(k) {
            return bind36(v)(function(v1) {
              var v2 = k(v1.value0);
              return map69(function(v3) {
                return new Tuple(v3.value0, append21(v1.value1)(v3.value1));
              })(v2);
            });
          };
        },
        Apply0: function() {
          return applyWriterT2;
        }
      };
    };
  };
  var applicativeWriterT = function(dictMonoid) {
    var mempty6 = mempty(dictMonoid);
    var applyWriterT1 = applyWriterT(dictMonoid.Semigroup0());
    return function(dictApplicative) {
      var pure38 = pure(dictApplicative);
      var applyWriterT2 = applyWriterT1(dictApplicative.Apply0());
      return {
        pure: function(a2) {
          return pure38(new Tuple(a2, mempty6));
        },
        Apply0: function() {
          return applyWriterT2;
        }
      };
    };
  };
  var monadWriterT = function(dictMonoid) {
    var applicativeWriterT1 = applicativeWriterT(dictMonoid);
    var bindWriterT1 = bindWriterT(dictMonoid.Semigroup0());
    return function(dictMonad) {
      var applicativeWriterT2 = applicativeWriterT1(dictMonad.Applicative0());
      var bindWriterT2 = bindWriterT1(dictMonad.Bind1());
      return {
        Applicative0: function() {
          return applicativeWriterT2;
        },
        Bind1: function() {
          return bindWriterT2;
        }
      };
    };
  };
  var monadTellWriterT = function(dictMonoid) {
    var Semigroup0 = dictMonoid.Semigroup0();
    var monadWriterT1 = monadWriterT(dictMonoid);
    return function(dictMonad) {
      var monadWriterT2 = monadWriterT1(dictMonad);
      return {
        tell: function() {
          var $252 = pure(dictMonad.Applicative0());
          var $253 = Tuple.create(unit);
          return function($254) {
            return WriterT($252($253($254)));
          };
        }(),
        Semigroup0: function() {
          return Semigroup0;
        },
        Monad1: function() {
          return monadWriterT2;
        }
      };
    };
  };

  // output/Data.Profunctor/index.js
  var profunctorFn = {
    dimap: function(a2b) {
      return function(c2d) {
        return function(b2c) {
          return function($18) {
            return c2d(b2c(a2b($18)));
          };
        };
      };
    }
  };

  // output/Control.Parallel.Class/index.js
  var sequential = function(dict) {
    return dict.sequential;
  };
  var parallel = function(dict) {
    return dict.parallel;
  };

  // output/Data.Foldable/foreign.js
  var foldrArray = function(f) {
    return function(init3) {
      return function(xs) {
        var acc = init3;
        var len = xs.length;
        for (var i2 = len - 1; i2 >= 0; i2--) {
          acc = f(xs[i2])(acc);
        }
        return acc;
      };
    };
  };
  var foldlArray = function(f) {
    return function(init3) {
      return function(xs) {
        var acc = init3;
        var len = xs.length;
        for (var i2 = 0; i2 < len; i2++) {
          acc = f(acc)(xs[i2]);
        }
        return acc;
      };
    };
  };

  // output/Data.Bifunctor/index.js
  var identity4 = /* @__PURE__ */ identity(categoryFn);
  var bimap = function(dict) {
    return dict.bimap;
  };
  var lmap = function(dictBifunctor) {
    var bimap1 = bimap(dictBifunctor);
    return function(f) {
      return bimap1(f)(identity4);
    };
  };
  var bifunctorTuple = {
    bimap: function(f) {
      return function(g) {
        return function(v) {
          return new Tuple(f(v.value0), g(v.value1));
        };
      };
    }
  };
  var bifunctorEither = {
    bimap: function(v) {
      return function(v1) {
        return function(v2) {
          if (v2 instanceof Left) {
            return new Left(v(v2.value0));
          }
          ;
          if (v2 instanceof Right) {
            return new Right(v1(v2.value0));
          }
          ;
          throw new Error("Failed pattern match at Data.Bifunctor (line 32, column 1 - line 34, column 36): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
        };
      };
    }
  };

  // output/Data.Maybe.First/index.js
  var semigroupFirst = {
    append: function(v) {
      return function(v1) {
        if (v instanceof Just) {
          return v;
        }
        ;
        return v1;
      };
    }
  };
  var monoidFirst = /* @__PURE__ */ function() {
    return {
      mempty: Nothing.value,
      Semigroup0: function() {
        return semigroupFirst;
      }
    };
  }();

  // output/Data.Monoid.Conj/index.js
  var Conj = function(x) {
    return x;
  };
  var semigroupConj = function(dictHeytingAlgebra) {
    var conj2 = conj(dictHeytingAlgebra);
    return {
      append: function(v) {
        return function(v1) {
          return conj2(v)(v1);
        };
      }
    };
  };
  var monoidConj = function(dictHeytingAlgebra) {
    var semigroupConj1 = semigroupConj(dictHeytingAlgebra);
    return {
      mempty: tt(dictHeytingAlgebra),
      Semigroup0: function() {
        return semigroupConj1;
      }
    };
  };

  // output/Data.Foldable/index.js
  var identity5 = /* @__PURE__ */ identity(categoryFn);
  var unwrap2 = /* @__PURE__ */ unwrap();
  var alaF2 = /* @__PURE__ */ alaF()()()();
  var foldr = function(dict) {
    return dict.foldr;
  };
  var traverse_ = function(dictApplicative) {
    var applySecond3 = applySecond(dictApplicative.Apply0());
    var pure38 = pure(dictApplicative);
    return function(dictFoldable) {
      var foldr22 = foldr(dictFoldable);
      return function(f) {
        return foldr22(function($454) {
          return applySecond3(f($454));
        })(pure38(unit));
      };
    };
  };
  var for_ = function(dictApplicative) {
    var traverse_14 = traverse_(dictApplicative);
    return function(dictFoldable) {
      return flip(traverse_14(dictFoldable));
    };
  };
  var sequence_ = function(dictApplicative) {
    var traverse_14 = traverse_(dictApplicative);
    return function(dictFoldable) {
      return traverse_14(dictFoldable)(identity5);
    };
  };
  var foldl = function(dict) {
    return dict.foldl;
  };
  var intercalate = function(dictFoldable) {
    var foldl23 = foldl(dictFoldable);
    return function(dictMonoid) {
      var append21 = append(dictMonoid.Semigroup0());
      var mempty6 = mempty(dictMonoid);
      return function(sep) {
        return function(xs) {
          var go2 = function(v) {
            return function(v1) {
              if (v.init) {
                return {
                  init: false,
                  acc: v1
                };
              }
              ;
              return {
                init: false,
                acc: append21(v.acc)(append21(sep)(v1))
              };
            };
          };
          return foldl23(go2)({
            init: true,
            acc: mempty6
          })(xs).acc;
        };
      };
    };
  };
  var length = function(dictFoldable) {
    var foldl23 = foldl(dictFoldable);
    return function(dictSemiring) {
      var add1 = add(dictSemiring);
      var one2 = one(dictSemiring);
      return foldl23(function(c) {
        return function(v) {
          return add1(one2)(c);
        };
      })(zero(dictSemiring));
    };
  };
  var foldableMaybe = {
    foldr: function(v) {
      return function(v1) {
        return function(v2) {
          if (v2 instanceof Nothing) {
            return v1;
          }
          ;
          if (v2 instanceof Just) {
            return v(v2.value0)(v1);
          }
          ;
          throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
        };
      };
    },
    foldl: function(v) {
      return function(v1) {
        return function(v2) {
          if (v2 instanceof Nothing) {
            return v1;
          }
          ;
          if (v2 instanceof Just) {
            return v(v1)(v2.value0);
          }
          ;
          throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
        };
      };
    },
    foldMap: function(dictMonoid) {
      var mempty6 = mempty(dictMonoid);
      return function(v) {
        return function(v1) {
          if (v1 instanceof Nothing) {
            return mempty6;
          }
          ;
          if (v1 instanceof Just) {
            return v(v1.value0);
          }
          ;
          throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [v.constructor.name, v1.constructor.name]);
        };
      };
    }
  };
  var foldableEither = {
    foldr: function(v) {
      return function(v1) {
        return function(v2) {
          if (v2 instanceof Left) {
            return v1;
          }
          ;
          if (v2 instanceof Right) {
            return v(v2.value0)(v1);
          }
          ;
          throw new Error("Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
        };
      };
    },
    foldl: function(v) {
      return function(v1) {
        return function(v2) {
          if (v2 instanceof Left) {
            return v1;
          }
          ;
          if (v2 instanceof Right) {
            return v(v1)(v2.value0);
          }
          ;
          throw new Error("Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
        };
      };
    },
    foldMap: function(dictMonoid) {
      var mempty6 = mempty(dictMonoid);
      return function(v) {
        return function(v1) {
          if (v1 instanceof Left) {
            return mempty6;
          }
          ;
          if (v1 instanceof Right) {
            return v(v1.value0);
          }
          ;
          throw new Error("Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): " + [v.constructor.name, v1.constructor.name]);
        };
      };
    }
  };
  var foldMapDefaultR = function(dictFoldable) {
    var foldr22 = foldr(dictFoldable);
    return function(dictMonoid) {
      var append21 = append(dictMonoid.Semigroup0());
      var mempty6 = mempty(dictMonoid);
      return function(f) {
        return foldr22(function(x) {
          return function(acc) {
            return append21(f(x))(acc);
          };
        })(mempty6);
      };
    };
  };
  var foldableArray = {
    foldr: foldrArray,
    foldl: foldlArray,
    foldMap: function(dictMonoid) {
      return foldMapDefaultR(foldableArray)(dictMonoid);
    }
  };
  var foldMap = function(dict) {
    return dict.foldMap;
  };
  var lookup = function(dictFoldable) {
    var foldMap22 = foldMap(dictFoldable)(monoidFirst);
    return function(dictEq) {
      var eq24 = eq(dictEq);
      return function(a2) {
        var $460 = foldMap22(function(v) {
          var $444 = eq24(a2)(v.value0);
          if ($444) {
            return new Just(v.value1);
          }
          ;
          return Nothing.value;
        });
        return function($461) {
          return unwrap2($460($461));
        };
      };
    };
  };
  var findMap = function(dictFoldable) {
    var foldl23 = foldl(dictFoldable);
    return function(p2) {
      var go2 = function(v) {
        return function(v1) {
          if (v instanceof Nothing) {
            return p2(v1);
          }
          ;
          return v;
        };
      };
      return foldl23(go2)(Nothing.value);
    };
  };
  var all = function(dictFoldable) {
    var foldMap22 = foldMap(dictFoldable);
    return function(dictHeytingAlgebra) {
      return alaF2(Conj)(foldMap22(monoidConj(dictHeytingAlgebra)));
    };
  };
  var and = function(dictFoldable) {
    var all1 = all(dictFoldable);
    return function(dictHeytingAlgebra) {
      return all1(dictHeytingAlgebra)(identity5);
    };
  };

  // output/Data.Traversable/foreign.js
  var traverseArrayImpl = function() {
    function array1(a2) {
      return [a2];
    }
    function array2(a2) {
      return function(b2) {
        return [a2, b2];
      };
    }
    function array3(a2) {
      return function(b2) {
        return function(c) {
          return [a2, b2, c];
        };
      };
    }
    function concat22(xs) {
      return function(ys) {
        return xs.concat(ys);
      };
    }
    return function(apply6) {
      return function(map69) {
        return function(pure38) {
          return function(f) {
            return function(array) {
              function go2(bot, top3) {
                switch (top3 - bot) {
                  case 0:
                    return pure38([]);
                  case 1:
                    return map69(array1)(f(array[bot]));
                  case 2:
                    return apply6(map69(array2)(f(array[bot])))(f(array[bot + 1]));
                  case 3:
                    return apply6(apply6(map69(array3)(f(array[bot])))(f(array[bot + 1])))(f(array[bot + 2]));
                  default:
                    var pivot = bot + Math.floor((top3 - bot) / 4) * 2;
                    return apply6(map69(concat22)(go2(bot, pivot)))(go2(pivot, top3));
                }
              }
              return go2(0, array.length);
            };
          };
        };
      };
    };
  }();

  // output/Data.Traversable/index.js
  var identity6 = /* @__PURE__ */ identity(categoryFn);
  var traverse = function(dict) {
    return dict.traverse;
  };
  var sequenceDefault = function(dictTraversable) {
    var traverse22 = traverse(dictTraversable);
    return function(dictApplicative) {
      return traverse22(dictApplicative)(identity6);
    };
  };
  var traversableArray = {
    traverse: function(dictApplicative) {
      var Apply0 = dictApplicative.Apply0();
      return traverseArrayImpl(apply(Apply0))(map(Apply0.Functor0()))(pure(dictApplicative));
    },
    sequence: function(dictApplicative) {
      return sequenceDefault(traversableArray)(dictApplicative);
    },
    Functor0: function() {
      return functorArray;
    },
    Foldable1: function() {
      return foldableArray;
    }
  };
  var sequence = function(dict) {
    return dict.sequence;
  };

  // output/Control.Parallel/index.js
  var identity7 = /* @__PURE__ */ identity(categoryFn);
  var parTraverse_ = function(dictParallel) {
    var sequential3 = sequential(dictParallel);
    var traverse_8 = traverse_(dictParallel.Applicative1());
    var parallel3 = parallel(dictParallel);
    return function(dictFoldable) {
      var traverse_14 = traverse_8(dictFoldable);
      return function(f) {
        var $48 = traverse_14(function($50) {
          return parallel3(f($50));
        });
        return function($49) {
          return sequential3($48($49));
        };
      };
    };
  };
  var parSequence_ = function(dictParallel) {
    var parTraverse_1 = parTraverse_(dictParallel);
    return function(dictFoldable) {
      return parTraverse_1(dictFoldable)(identity7);
    };
  };

  // output/Effect.Unsafe/foreign.js
  var unsafePerformEffect = function(f) {
    return f();
  };

  // output/Partial.Unsafe/foreign.js
  var _unsafePartial = function(f) {
    return f();
  };

  // output/Partial/foreign.js
  var _crashWith = function(msg) {
    throw new Error(msg);
  };

  // output/Partial/index.js
  var crashWith = function() {
    return _crashWith;
  };

  // output/Partial.Unsafe/index.js
  var crashWith2 = /* @__PURE__ */ crashWith();
  var unsafePartial = _unsafePartial;
  var unsafeCrashWith = function(msg) {
    return unsafePartial(function() {
      return crashWith2(msg);
    });
  };

  // output/Effect.Aff/index.js
  var $runtime_lazy3 = function(name15, moduleName, init3) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2)
        return val;
      if (state3 === 1)
        throw new ReferenceError(name15 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init3();
      state3 = 2;
      return val;
    };
  };
  var pure2 = /* @__PURE__ */ pure(applicativeEffect);
  var $$void3 = /* @__PURE__ */ $$void(functorEffect);
  var map6 = /* @__PURE__ */ map(functorEffect);
  var Canceler = function(x) {
    return x;
  };
  var suspendAff = /* @__PURE__ */ _fork(false);
  var functorParAff = {
    map: _parAffMap
  };
  var functorAff = {
    map: _map
  };
  var map1 = /* @__PURE__ */ map(functorAff);
  var forkAff = /* @__PURE__ */ _fork(true);
  var ffiUtil = /* @__PURE__ */ function() {
    var unsafeFromRight = function(v) {
      if (v instanceof Right) {
        return v.value0;
      }
      ;
      if (v instanceof Left) {
        return unsafeCrashWith("unsafeFromRight: Left");
      }
      ;
      throw new Error("Failed pattern match at Effect.Aff (line 412, column 21 - line 414, column 54): " + [v.constructor.name]);
    };
    var unsafeFromLeft = function(v) {
      if (v instanceof Left) {
        return v.value0;
      }
      ;
      if (v instanceof Right) {
        return unsafeCrashWith("unsafeFromLeft: Right");
      }
      ;
      throw new Error("Failed pattern match at Effect.Aff (line 407, column 20 - line 409, column 55): " + [v.constructor.name]);
    };
    var isLeft = function(v) {
      if (v instanceof Left) {
        return true;
      }
      ;
      if (v instanceof Right) {
        return false;
      }
      ;
      throw new Error("Failed pattern match at Effect.Aff (line 402, column 12 - line 404, column 21): " + [v.constructor.name]);
    };
    return {
      isLeft,
      fromLeft: unsafeFromLeft,
      fromRight: unsafeFromRight,
      left: Left.create,
      right: Right.create
    };
  }();
  var makeFiber = function(aff) {
    return _makeFiber(ffiUtil, aff);
  };
  var launchAff = function(aff) {
    return function __do2() {
      var fiber = makeFiber(aff)();
      fiber.run();
      return fiber;
    };
  };
  var bracket = function(acquire) {
    return function(completed) {
      return generalBracket(acquire)({
        killed: $$const(completed),
        failed: $$const(completed),
        completed: $$const(completed)
      });
    };
  };
  var applyParAff = {
    apply: _parAffApply,
    Functor0: function() {
      return functorParAff;
    }
  };
  var monadAff = {
    Applicative0: function() {
      return applicativeAff;
    },
    Bind1: function() {
      return bindAff;
    }
  };
  var bindAff = {
    bind: _bind,
    Apply0: function() {
      return $lazy_applyAff(0);
    }
  };
  var applicativeAff = {
    pure: _pure,
    Apply0: function() {
      return $lazy_applyAff(0);
    }
  };
  var $lazy_applyAff = /* @__PURE__ */ $runtime_lazy3("applyAff", "Effect.Aff", function() {
    return {
      apply: ap(monadAff),
      Functor0: function() {
        return functorAff;
      }
    };
  });
  var pure22 = /* @__PURE__ */ pure(applicativeAff);
  var bind1 = /* @__PURE__ */ bind(bindAff);
  var bindFlipped3 = /* @__PURE__ */ bindFlipped(bindAff);
  var $$finally = function(fin) {
    return function(a2) {
      return bracket(pure22(unit))($$const(fin))($$const(a2));
    };
  };
  var monadEffectAff = {
    liftEffect: _liftEffect,
    Monad0: function() {
      return monadAff;
    }
  };
  var liftEffect2 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var effectCanceler = function($75) {
    return Canceler($$const(liftEffect2($75)));
  };
  var joinFiber = function(v) {
    return makeAff(function(k) {
      return map6(effectCanceler)(v.join(k));
    });
  };
  var functorFiber = {
    map: function(f) {
      return function(t) {
        return unsafePerformEffect(makeFiber(map1(f)(joinFiber(t))));
      };
    }
  };
  var killFiber = function(e) {
    return function(v) {
      return bind1(liftEffect2(v.isSuspended))(function(suspended) {
        if (suspended) {
          return liftEffect2($$void3(v.kill(e, $$const(pure2(unit)))));
        }
        ;
        return makeAff(function(k) {
          return map6(effectCanceler)(v.kill(e, k));
        });
      });
    };
  };
  var monadThrowAff = {
    throwError: _throwError,
    Monad0: function() {
      return monadAff;
    }
  };
  var monadErrorAff = {
    catchError: _catchError,
    MonadThrow0: function() {
      return monadThrowAff;
    }
  };
  var $$try2 = /* @__PURE__ */ $$try(monadErrorAff);
  var runAff = function(k) {
    return function(aff) {
      return launchAff(bindFlipped3(function($80) {
        return liftEffect2(k($80));
      })($$try2(aff)));
    };
  };
  var runAff_ = function(k) {
    return function(aff) {
      return $$void3(runAff(k)(aff));
    };
  };
  var parallelAff = {
    parallel: unsafeCoerce2,
    sequential: _sequential,
    Monad0: function() {
      return monadAff;
    },
    Applicative1: function() {
      return $lazy_applicativeParAff(0);
    }
  };
  var $lazy_applicativeParAff = /* @__PURE__ */ $runtime_lazy3("applicativeParAff", "Effect.Aff", function() {
    return {
      pure: function() {
        var $82 = parallel(parallelAff);
        return function($83) {
          return $82(pure22($83));
        };
      }(),
      Apply0: function() {
        return applyParAff;
      }
    };
  });
  var applicativeParAff = /* @__PURE__ */ $lazy_applicativeParAff(136);
  var parSequence_2 = /* @__PURE__ */ parSequence_(parallelAff)(foldableArray);
  var semigroupCanceler = {
    append: function(v) {
      return function(v1) {
        return function(err) {
          return parSequence_2([v(err), v1(err)]);
        };
      };
    }
  };
  var monadRecAff = {
    tailRecM: function(k) {
      var go2 = function(a2) {
        return bind1(k(a2))(function(res) {
          if (res instanceof Done) {
            return pure22(res.value0);
          }
          ;
          if (res instanceof Loop) {
            return go2(res.value0);
          }
          ;
          throw new Error("Failed pattern match at Effect.Aff (line 104, column 7 - line 106, column 23): " + [res.constructor.name]);
        });
      };
      return go2;
    },
    Monad0: function() {
      return monadAff;
    }
  };
  var nonCanceler = /* @__PURE__ */ $$const(/* @__PURE__ */ pure22(unit));
  var monoidCanceler = {
    mempty: nonCanceler,
    Semigroup0: function() {
      return semigroupCanceler;
    }
  };

  // output/Effect.Console/foreign.js
  var log = function(s) {
    return function() {
      console.log(s);
    };
  };
  var warn = function(s) {
    return function() {
      console.warn(s);
    };
  };

  // output/Effect.Class.Console/index.js
  var log2 = function(dictMonadEffect) {
    var $51 = liftEffect(dictMonadEffect);
    return function($52) {
      return $51(log($52));
    };
  };

  // output/Web.DOM.ParentNode/foreign.js
  var getEffProp = function(name15) {
    return function(node) {
      return function() {
        return node[name15];
      };
    };
  };
  var children = getEffProp("children");
  var _firstElementChild = getEffProp("firstElementChild");
  var _lastElementChild = getEffProp("lastElementChild");
  var childElementCount = getEffProp("childElementCount");
  function _querySelector(selector) {
    return function(node) {
      return function() {
        return node.querySelector(selector);
      };
    };
  }

  // output/Data.Nullable/foreign.js
  var nullImpl = null;
  function nullable(a2, r, f) {
    return a2 == null ? r : f(a2);
  }
  function notNull(x) {
    return x;
  }

  // output/Data.Nullable/index.js
  var toNullable = /* @__PURE__ */ maybe(nullImpl)(notNull);
  var toMaybe = function(n) {
    return nullable(n, Nothing.value, Just.create);
  };

  // output/Web.DOM.ParentNode/index.js
  var map7 = /* @__PURE__ */ map(functorEffect);
  var querySelector = function(qs) {
    var $2 = map7(toMaybe);
    var $3 = _querySelector(qs);
    return function($4) {
      return $2($3($4));
    };
  };

  // output/Web.Event.EventTarget/foreign.js
  function eventListener(fn) {
    return function() {
      return function(event) {
        return fn(event)();
      };
    };
  }
  function addEventListener(type) {
    return function(listener) {
      return function(useCapture) {
        return function(target6) {
          return function() {
            return target6.addEventListener(type, listener, useCapture);
          };
        };
      };
    };
  }
  function removeEventListener(type) {
    return function(listener) {
      return function(useCapture) {
        return function(target6) {
          return function() {
            return target6.removeEventListener(type, listener, useCapture);
          };
        };
      };
    };
  }

  // output/Web.HTML/foreign.js
  var windowImpl = function() {
    return window;
  };

  // output/Web.HTML.Common/index.js
  var ClassName = function(x) {
    return x;
  };

  // output/Web.Internal.FFI/foreign.js
  function _unsafeReadProtoTagged(nothing, just2, name15, value14) {
    if (typeof window !== "undefined") {
      var ty = window[name15];
      if (ty != null && value14 instanceof ty) {
        return just2(value14);
      }
    }
    var obj = value14;
    while (obj != null) {
      var proto = Object.getPrototypeOf(obj);
      var constructorName = proto.constructor.name;
      if (constructorName === name15) {
        return just2(value14);
      } else if (constructorName === "Object") {
        return nothing;
      }
      obj = proto;
    }
    return nothing;
  }

  // output/Web.Internal.FFI/index.js
  var unsafeReadProtoTagged = function(name15) {
    return function(value14) {
      return _unsafeReadProtoTagged(Nothing.value, Just.create, name15, value14);
    };
  };

  // output/Web.HTML.HTMLDocument/foreign.js
  function _readyState(doc) {
    return doc.readyState;
  }

  // output/Web.HTML.HTMLDocument.ReadyState/index.js
  var Loading = /* @__PURE__ */ function() {
    function Loading2() {
    }
    ;
    Loading2.value = new Loading2();
    return Loading2;
  }();
  var Interactive = /* @__PURE__ */ function() {
    function Interactive2() {
    }
    ;
    Interactive2.value = new Interactive2();
    return Interactive2;
  }();
  var Complete = /* @__PURE__ */ function() {
    function Complete2() {
    }
    ;
    Complete2.value = new Complete2();
    return Complete2;
  }();
  var parse = function(v) {
    if (v === "loading") {
      return new Just(Loading.value);
    }
    ;
    if (v === "interactive") {
      return new Just(Interactive.value);
    }
    ;
    if (v === "complete") {
      return new Just(Complete.value);
    }
    ;
    return Nothing.value;
  };

  // output/Web.HTML.HTMLDocument/index.js
  var map8 = /* @__PURE__ */ map(functorEffect);
  var toParentNode = unsafeCoerce2;
  var toNonElementParentNode = unsafeCoerce2;
  var toEventTarget = unsafeCoerce2;
  var toDocument = unsafeCoerce2;
  var readyState = function(doc) {
    return map8(function() {
      var $4 = fromMaybe(Loading.value);
      return function($5) {
        return $4(parse($5));
      };
    }())(function() {
      return _readyState(doc);
    });
  };

  // output/Web.HTML.HTMLElement/foreign.js
  function _read(nothing, just2, value14) {
    var tag = Object.prototype.toString.call(value14);
    if (tag.indexOf("[object HTML") === 0 && tag.indexOf("Element]") === tag.length - 8) {
      return just2(value14);
    } else {
      return nothing;
    }
  }
  function focus(elt) {
    return function() {
      return elt.focus();
    };
  }

  // output/Web.HTML.HTMLElement/index.js
  var toNode = unsafeCoerce2;
  var toElement = unsafeCoerce2;
  var fromElement = function(x) {
    return _read(Nothing.value, Just.create, x);
  };

  // output/Web.HTML.HTMLInputElement/foreign.js
  function setValue3(value14) {
    return function(input3) {
      return function() {
        input3.value = value14;
      };
    };
  }

  // output/Web.HTML.HTMLInputElement/index.js
  var fromElement2 = /* @__PURE__ */ unsafeReadProtoTagged("HTMLInputElement");

  // output/Data.Enum/foreign.js
  function toCharCode(c) {
    return c.charCodeAt(0);
  }
  function fromCharCode(c) {
    return String.fromCharCode(c);
  }

  // output/Control.Alternative/index.js
  var guard = function(dictAlternative) {
    var pure38 = pure(dictAlternative.Applicative0());
    var empty13 = empty(dictAlternative.Plus1());
    return function(v) {
      if (v) {
        return pure38(unit);
      }
      ;
      if (!v) {
        return empty13;
      }
      ;
      throw new Error("Failed pattern match at Control.Alternative (line 48, column 1 - line 48, column 54): " + [v.constructor.name]);
    };
  };
  var alternativeArray = {
    Applicative0: function() {
      return applicativeArray;
    },
    Plus1: function() {
      return plusArray;
    }
  };

  // output/Data.Unfoldable/foreign.js
  var unfoldrArrayImpl = function(isNothing2) {
    return function(fromJust8) {
      return function(fst2) {
        return function(snd2) {
          return function(f) {
            return function(b2) {
              var result = [];
              var value14 = b2;
              while (true) {
                var maybe2 = f(value14);
                if (isNothing2(maybe2))
                  return result;
                var tuple = fromJust8(maybe2);
                result.push(fst2(tuple));
                value14 = snd2(tuple);
              }
            };
          };
        };
      };
    };
  };

  // output/Data.Unfoldable1/foreign.js
  var unfoldr1ArrayImpl = function(isNothing2) {
    return function(fromJust8) {
      return function(fst2) {
        return function(snd2) {
          return function(f) {
            return function(b2) {
              var result = [];
              var value14 = b2;
              while (true) {
                var tuple = f(value14);
                result.push(fst2(tuple));
                var maybe2 = snd2(tuple);
                if (isNothing2(maybe2))
                  return result;
                value14 = fromJust8(maybe2);
              }
            };
          };
        };
      };
    };
  };

  // output/Data.Unfoldable1/index.js
  var fromJust2 = /* @__PURE__ */ fromJust();
  var unfoldr1 = function(dict) {
    return dict.unfoldr1;
  };
  var unfoldable1Array = {
    unfoldr1: /* @__PURE__ */ unfoldr1ArrayImpl(isNothing)(fromJust2)(fst)(snd)
  };
  var replicate1 = function(dictUnfoldable1) {
    var unfoldr11 = unfoldr1(dictUnfoldable1);
    return function(n) {
      return function(v) {
        var step5 = function(i2) {
          if (i2 <= 0) {
            return new Tuple(v, Nothing.value);
          }
          ;
          if (otherwise) {
            return new Tuple(v, new Just(i2 - 1 | 0));
          }
          ;
          throw new Error("Failed pattern match at Data.Unfoldable1 (line 68, column 5 - line 68, column 39): " + [i2.constructor.name]);
        };
        return unfoldr11(step5)(n - 1 | 0);
      };
    };
  };
  var singleton = function(dictUnfoldable1) {
    return replicate1(dictUnfoldable1)(1);
  };

  // output/Data.Unfoldable/index.js
  var fromJust3 = /* @__PURE__ */ fromJust();
  var unfoldr = function(dict) {
    return dict.unfoldr;
  };
  var unfoldableArray = {
    unfoldr: /* @__PURE__ */ unfoldrArrayImpl(isNothing)(fromJust3)(fst)(snd),
    Unfoldable10: function() {
      return unfoldable1Array;
    }
  };

  // output/Data.Enum/index.js
  var bind2 = /* @__PURE__ */ bind(bindMaybe);
  var voidLeft2 = /* @__PURE__ */ voidLeft(functorMaybe);
  var guard2 = /* @__PURE__ */ guard(alternativeMaybe);
  var bottom1 = /* @__PURE__ */ bottom(boundedChar);
  var top1 = /* @__PURE__ */ top(boundedChar);
  var toEnum = function(dict) {
    return dict.toEnum;
  };
  var succ = function(dict) {
    return dict.succ;
  };
  var pred = function(dict) {
    return dict.pred;
  };
  var fromEnum = function(dict) {
    return dict.fromEnum;
  };
  var toEnumWithDefaults = function(dictBoundedEnum) {
    var toEnum1 = toEnum(dictBoundedEnum);
    var fromEnum1 = fromEnum(dictBoundedEnum);
    var bottom22 = bottom(dictBoundedEnum.Bounded0());
    return function(low2) {
      return function(high2) {
        return function(x) {
          var v = toEnum1(x);
          if (v instanceof Just) {
            return v.value0;
          }
          ;
          if (v instanceof Nothing) {
            var $140 = x < fromEnum1(bottom22);
            if ($140) {
              return low2;
            }
            ;
            return high2;
          }
          ;
          throw new Error("Failed pattern match at Data.Enum (line 158, column 33 - line 160, column 62): " + [v.constructor.name]);
        };
      };
    };
  };
  var enumFromTo = function(dictEnum) {
    var Ord0 = dictEnum.Ord0();
    var eq15 = eq(Ord0.Eq0());
    var lessThan1 = lessThan(Ord0);
    var succ1 = succ(dictEnum);
    var lessThanOrEq1 = lessThanOrEq(Ord0);
    var pred1 = pred(dictEnum);
    var greaterThanOrEq1 = greaterThanOrEq(Ord0);
    return function(dictUnfoldable1) {
      var singleton12 = singleton(dictUnfoldable1);
      var unfoldr12 = unfoldr1(dictUnfoldable1);
      var go2 = function(step5) {
        return function(op) {
          return function(to2) {
            return function(a2) {
              return new Tuple(a2, bind2(step5(a2))(function(a$prime) {
                return voidLeft2(guard2(op(a$prime)(to2)))(a$prime);
              }));
            };
          };
        };
      };
      return function(v) {
        return function(v1) {
          if (eq15(v)(v1)) {
            return singleton12(v);
          }
          ;
          if (lessThan1(v)(v1)) {
            return unfoldr12(go2(succ1)(lessThanOrEq1)(v1))(v);
          }
          ;
          if (otherwise) {
            return unfoldr12(go2(pred1)(greaterThanOrEq1)(v1))(v);
          }
          ;
          throw new Error("Failed pattern match at Data.Enum (line 186, column 14 - line 190, column 51): " + [v.constructor.name, v1.constructor.name]);
        };
      };
    };
  };
  var defaultSucc = function(toEnum$prime) {
    return function(fromEnum$prime) {
      return function(a2) {
        return toEnum$prime(fromEnum$prime(a2) + 1 | 0);
      };
    };
  };
  var defaultPred = function(toEnum$prime) {
    return function(fromEnum$prime) {
      return function(a2) {
        return toEnum$prime(fromEnum$prime(a2) - 1 | 0);
      };
    };
  };
  var charToEnum = function(v) {
    if (v >= toCharCode(bottom1) && v <= toCharCode(top1)) {
      return new Just(fromCharCode(v));
    }
    ;
    return Nothing.value;
  };
  var enumChar = {
    succ: /* @__PURE__ */ defaultSucc(charToEnum)(toCharCode),
    pred: /* @__PURE__ */ defaultPred(charToEnum)(toCharCode),
    Ord0: function() {
      return ordChar;
    }
  };
  var boundedEnumChar = /* @__PURE__ */ function() {
    return {
      cardinality: toCharCode(top1) - toCharCode(bottom1) | 0,
      toEnum: charToEnum,
      fromEnum: toCharCode,
      Bounded0: function() {
        return boundedChar;
      },
      Enum1: function() {
        return enumChar;
      }
    };
  }();

  // output/Web.HTML.Window/foreign.js
  function document(window2) {
    return function() {
      return window2.document;
    };
  }

  // output/Web.HTML.Window/index.js
  var toEventTarget2 = unsafeCoerce2;

  // output/Web.HTML.Event.EventTypes/index.js
  var input = "input";
  var domcontentloaded = "DOMContentLoaded";

  // output/Halogen.Aff.Util/index.js
  var bind3 = /* @__PURE__ */ bind(bindAff);
  var liftEffect3 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var bindFlipped4 = /* @__PURE__ */ bindFlipped(bindEffect);
  var composeKleisliFlipped2 = /* @__PURE__ */ composeKleisliFlipped(bindEffect);
  var pure3 = /* @__PURE__ */ pure(applicativeAff);
  var bindFlipped1 = /* @__PURE__ */ bindFlipped(bindMaybe);
  var pure1 = /* @__PURE__ */ pure(applicativeEffect);
  var map9 = /* @__PURE__ */ map(functorEffect);
  var discard2 = /* @__PURE__ */ discard(discardUnit);
  var throwError2 = /* @__PURE__ */ throwError(monadThrowAff);
  var selectElement = function(query4) {
    return bind3(liftEffect3(bindFlipped4(composeKleisliFlipped2(function() {
      var $16 = querySelector(query4);
      return function($17) {
        return $16(toParentNode($17));
      };
    }())(document))(windowImpl)))(function(mel) {
      return pure3(bindFlipped1(fromElement)(mel));
    });
  };
  var runHalogenAff = /* @__PURE__ */ runAff_(/* @__PURE__ */ either(throwException)(/* @__PURE__ */ $$const(/* @__PURE__ */ pure1(unit))));
  var awaitLoad = /* @__PURE__ */ makeAff(function(callback) {
    return function __do2() {
      var rs = bindFlipped4(readyState)(bindFlipped4(document)(windowImpl))();
      if (rs instanceof Loading) {
        var et = map9(toEventTarget2)(windowImpl)();
        var listener = eventListener(function(v) {
          return callback(new Right(unit));
        })();
        addEventListener(domcontentloaded)(listener)(false)(et)();
        return effectCanceler(removeEventListener(domcontentloaded)(listener)(false)(et));
      }
      ;
      callback(new Right(unit))();
      return nonCanceler;
    };
  });
  var awaitBody = /* @__PURE__ */ discard2(bindAff)(awaitLoad)(function() {
    return bind3(selectElement("body"))(function(body2) {
      return maybe(throwError2(error("Could not find body")))(pure3)(body2);
    });
  });

  // output/Control.Monad.Fork.Class/index.js
  var monadForkAff = {
    suspend: suspendAff,
    fork: forkAff,
    join: joinFiber,
    Monad0: function() {
      return monadAff;
    },
    Functor1: function() {
      return functorFiber;
    }
  };
  var fork = function(dict) {
    return dict.fork;
  };

  // output/Data.FunctorWithIndex/foreign.js
  var mapWithIndexArray = function(f) {
    return function(xs) {
      var l = xs.length;
      var result = Array(l);
      for (var i2 = 0; i2 < l; i2++) {
        result[i2] = f(i2)(xs[i2]);
      }
      return result;
    };
  };

  // output/Data.FunctorWithIndex/index.js
  var mapWithIndex = function(dict) {
    return dict.mapWithIndex;
  };
  var functorWithIndexArray = {
    mapWithIndex: mapWithIndexArray,
    Functor0: function() {
      return functorArray;
    }
  };

  // output/Data.FoldableWithIndex/index.js
  var foldr8 = /* @__PURE__ */ foldr(foldableArray);
  var mapWithIndex2 = /* @__PURE__ */ mapWithIndex(functorWithIndexArray);
  var foldl8 = /* @__PURE__ */ foldl(foldableArray);
  var foldrWithIndex = function(dict) {
    return dict.foldrWithIndex;
  };
  var foldlWithIndex = function(dict) {
    return dict.foldlWithIndex;
  };
  var foldMapWithIndexDefaultR = function(dictFoldableWithIndex) {
    var foldrWithIndex1 = foldrWithIndex(dictFoldableWithIndex);
    return function(dictMonoid) {
      var append21 = append(dictMonoid.Semigroup0());
      var mempty6 = mempty(dictMonoid);
      return function(f) {
        return foldrWithIndex1(function(i2) {
          return function(x) {
            return function(acc) {
              return append21(f(i2)(x))(acc);
            };
          };
        })(mempty6);
      };
    };
  };
  var foldableWithIndexArray = {
    foldrWithIndex: function(f) {
      return function(z) {
        var $291 = foldr8(function(v) {
          return function(y) {
            return f(v.value0)(v.value1)(y);
          };
        })(z);
        var $292 = mapWithIndex2(Tuple.create);
        return function($293) {
          return $291($292($293));
        };
      };
    },
    foldlWithIndex: function(f) {
      return function(z) {
        var $294 = foldl8(function(y) {
          return function(v) {
            return f(v.value0)(y)(v.value1);
          };
        })(z);
        var $295 = mapWithIndex2(Tuple.create);
        return function($296) {
          return $294($295($296));
        };
      };
    },
    foldMapWithIndex: function(dictMonoid) {
      return foldMapWithIndexDefaultR(foldableWithIndexArray)(dictMonoid);
    },
    Foldable0: function() {
      return foldableArray;
    }
  };
  var foldMapWithIndex = function(dict) {
    return dict.foldMapWithIndex;
  };

  // output/Data.TraversableWithIndex/index.js
  var traverseWithIndexDefault = function(dictTraversableWithIndex) {
    var sequence9 = sequence(dictTraversableWithIndex.Traversable2());
    var mapWithIndex4 = mapWithIndex(dictTraversableWithIndex.FunctorWithIndex0());
    return function(dictApplicative) {
      var sequence16 = sequence9(dictApplicative);
      return function(f) {
        var $174 = mapWithIndex4(f);
        return function($175) {
          return sequence16($174($175));
        };
      };
    };
  };
  var traverseWithIndex = function(dict) {
    return dict.traverseWithIndex;
  };
  var traversableWithIndexArray = {
    traverseWithIndex: function(dictApplicative) {
      return traverseWithIndexDefault(traversableWithIndexArray)(dictApplicative);
    },
    FunctorWithIndex0: function() {
      return functorWithIndexArray;
    },
    FoldableWithIndex1: function() {
      return foldableWithIndexArray;
    },
    Traversable2: function() {
      return traversableArray;
    }
  };

  // output/Data.NonEmpty/index.js
  var NonEmpty = /* @__PURE__ */ function() {
    function NonEmpty2(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    NonEmpty2.create = function(value0) {
      return function(value14) {
        return new NonEmpty2(value0, value14);
      };
    };
    return NonEmpty2;
  }();
  var singleton2 = function(dictPlus) {
    var empty13 = empty(dictPlus);
    return function(a2) {
      return new NonEmpty(a2, empty13);
    };
  };
  var oneOf2 = function(dictAlternative) {
    var alt7 = alt(dictAlternative.Plus1().Alt0());
    var pure38 = pure(dictAlternative.Applicative0());
    return function(v) {
      return alt7(pure38(v.value0))(v.value1);
    };
  };
  var functorNonEmpty = function(dictFunctor) {
    var map216 = map(dictFunctor);
    return {
      map: function(f) {
        return function(m) {
          return new NonEmpty(f(m.value0), map216(f)(m.value1));
        };
      }
    };
  };

  // output/Data.List.Types/index.js
  var identity8 = /* @__PURE__ */ identity(categoryFn);
  var Nil = /* @__PURE__ */ function() {
    function Nil3() {
    }
    ;
    Nil3.value = new Nil3();
    return Nil3;
  }();
  var Cons = /* @__PURE__ */ function() {
    function Cons3(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    Cons3.create = function(value0) {
      return function(value14) {
        return new Cons3(value0, value14);
      };
    };
    return Cons3;
  }();
  var NonEmptyList = function(x) {
    return x;
  };
  var toList = function(v) {
    return new Cons(v.value0, v.value1);
  };
  var listMap = function(f) {
    var chunkedRevMap = function($copy_v) {
      return function($copy_v1) {
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v, v1) {
          if (v1 instanceof Cons && (v1.value1 instanceof Cons && v1.value1.value1 instanceof Cons)) {
            $tco_var_v = new Cons(v1, v);
            $copy_v1 = v1.value1.value1.value1;
            return;
          }
          ;
          var unrolledMap = function(v2) {
            if (v2 instanceof Cons && (v2.value1 instanceof Cons && v2.value1.value1 instanceof Nil)) {
              return new Cons(f(v2.value0), new Cons(f(v2.value1.value0), Nil.value));
            }
            ;
            if (v2 instanceof Cons && v2.value1 instanceof Nil) {
              return new Cons(f(v2.value0), Nil.value);
            }
            ;
            return Nil.value;
          };
          var reverseUnrolledMap = function($copy_v2) {
            return function($copy_v3) {
              var $tco_var_v2 = $copy_v2;
              var $tco_done1 = false;
              var $tco_result2;
              function $tco_loop2(v2, v3) {
                if (v2 instanceof Cons && (v2.value0 instanceof Cons && (v2.value0.value1 instanceof Cons && v2.value0.value1.value1 instanceof Cons))) {
                  $tco_var_v2 = v2.value1;
                  $copy_v3 = new Cons(f(v2.value0.value0), new Cons(f(v2.value0.value1.value0), new Cons(f(v2.value0.value1.value1.value0), v3)));
                  return;
                }
                ;
                $tco_done1 = true;
                return v3;
              }
              ;
              while (!$tco_done1) {
                $tco_result2 = $tco_loop2($tco_var_v2, $copy_v3);
              }
              ;
              return $tco_result2;
            };
          };
          $tco_done = true;
          return reverseUnrolledMap(v)(unrolledMap(v1));
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_v, $copy_v1);
        }
        ;
        return $tco_result;
      };
    };
    return chunkedRevMap(Nil.value);
  };
  var functorList = {
    map: listMap
  };
  var map10 = /* @__PURE__ */ map(functorList);
  var foldableList = {
    foldr: function(f) {
      return function(b2) {
        var rev3 = function() {
          var go2 = function($copy_v) {
            return function($copy_v1) {
              var $tco_var_v = $copy_v;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v, v1) {
                if (v1 instanceof Nil) {
                  $tco_done = true;
                  return v;
                }
                ;
                if (v1 instanceof Cons) {
                  $tco_var_v = new Cons(v1.value0, v);
                  $copy_v1 = v1.value1;
                  return;
                }
                ;
                throw new Error("Failed pattern match at Data.List.Types (line 107, column 7 - line 107, column 23): " + [v.constructor.name, v1.constructor.name]);
              }
              ;
              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $copy_v1);
              }
              ;
              return $tco_result;
            };
          };
          return go2(Nil.value);
        }();
        var $284 = foldl(foldableList)(flip(f))(b2);
        return function($285) {
          return $284(rev3($285));
        };
      };
    },
    foldl: function(f) {
      var go2 = function($copy_b) {
        return function($copy_v) {
          var $tco_var_b = $copy_b;
          var $tco_done1 = false;
          var $tco_result;
          function $tco_loop(b2, v) {
            if (v instanceof Nil) {
              $tco_done1 = true;
              return b2;
            }
            ;
            if (v instanceof Cons) {
              $tco_var_b = f(b2)(v.value0);
              $copy_v = v.value1;
              return;
            }
            ;
            throw new Error("Failed pattern match at Data.List.Types (line 111, column 12 - line 113, column 30): " + [v.constructor.name]);
          }
          ;
          while (!$tco_done1) {
            $tco_result = $tco_loop($tco_var_b, $copy_v);
          }
          ;
          return $tco_result;
        };
      };
      return go2;
    },
    foldMap: function(dictMonoid) {
      var append27 = append(dictMonoid.Semigroup0());
      var mempty6 = mempty(dictMonoid);
      return function(f) {
        return foldl(foldableList)(function(acc) {
          var $286 = append27(acc);
          return function($287) {
            return $286(f($287));
          };
        })(mempty6);
      };
    }
  };
  var foldl2 = /* @__PURE__ */ foldl(foldableList);
  var foldr2 = /* @__PURE__ */ foldr(foldableList);
  var intercalate2 = /* @__PURE__ */ intercalate(foldableList)(monoidString);
  var semigroupList = {
    append: function(xs) {
      return function(ys) {
        return foldr2(Cons.create)(ys)(xs);
      };
    }
  };
  var append1 = /* @__PURE__ */ append(semigroupList);
  var monoidList = /* @__PURE__ */ function() {
    return {
      mempty: Nil.value,
      Semigroup0: function() {
        return semigroupList;
      }
    };
  }();
  var semigroupNonEmptyList = {
    append: function(v) {
      return function(as$prime) {
        return new NonEmpty(v.value0, append1(v.value1)(toList(as$prime)));
      };
    }
  };
  var showList = function(dictShow) {
    var show19 = show(dictShow);
    return {
      show: function(v) {
        if (v instanceof Nil) {
          return "Nil";
        }
        ;
        return "(" + (intercalate2(" : ")(map10(show19)(v)) + " : Nil)");
      }
    };
  };
  var traversableList = {
    traverse: function(dictApplicative) {
      var Apply0 = dictApplicative.Apply0();
      var map123 = map(Apply0.Functor0());
      var lift23 = lift2(Apply0);
      var pure117 = pure(dictApplicative);
      return function(f) {
        var $301 = map123(foldl2(flip(Cons.create))(Nil.value));
        var $302 = foldl2(function(acc) {
          var $304 = lift23(flip(Cons.create))(acc);
          return function($305) {
            return $304(f($305));
          };
        })(pure117(Nil.value));
        return function($303) {
          return $301($302($303));
        };
      };
    },
    sequence: function(dictApplicative) {
      return traverse(traversableList)(dictApplicative)(identity8);
    },
    Functor0: function() {
      return functorList;
    },
    Foldable1: function() {
      return foldableList;
    }
  };
  var unfoldable1List = {
    unfoldr1: function(f) {
      return function(b2) {
        var go2 = function($copy_source) {
          return function($copy_memo) {
            var $tco_var_source = $copy_source;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(source3, memo) {
              var v = f(source3);
              if (v.value1 instanceof Just) {
                $tco_var_source = v.value1.value0;
                $copy_memo = new Cons(v.value0, memo);
                return;
              }
              ;
              if (v.value1 instanceof Nothing) {
                $tco_done = true;
                return foldl2(flip(Cons.create))(Nil.value)(new Cons(v.value0, memo));
              }
              ;
              throw new Error("Failed pattern match at Data.List.Types (line 135, column 22 - line 137, column 61): " + [v.constructor.name]);
            }
            ;
            while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_source, $copy_memo);
            }
            ;
            return $tco_result;
          };
        };
        return go2(b2)(Nil.value);
      };
    }
  };
  var unfoldableList = {
    unfoldr: function(f) {
      return function(b2) {
        var go2 = function($copy_source) {
          return function($copy_memo) {
            var $tco_var_source = $copy_source;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(source3, memo) {
              var v = f(source3);
              if (v instanceof Nothing) {
                $tco_done = true;
                return foldl2(flip(Cons.create))(Nil.value)(memo);
              }
              ;
              if (v instanceof Just) {
                $tco_var_source = v.value0.value1;
                $copy_memo = new Cons(v.value0.value0, memo);
                return;
              }
              ;
              throw new Error("Failed pattern match at Data.List.Types (line 142, column 22 - line 144, column 52): " + [v.constructor.name]);
            }
            ;
            while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_source, $copy_memo);
            }
            ;
            return $tco_result;
          };
        };
        return go2(b2)(Nil.value);
      };
    },
    Unfoldable10: function() {
      return unfoldable1List;
    }
  };
  var eq1List = {
    eq1: function(dictEq) {
      var eq9 = eq(dictEq);
      return function(xs) {
        return function(ys) {
          var go2 = function($copy_v) {
            return function($copy_v1) {
              return function($copy_v2) {
                var $tco_var_v = $copy_v;
                var $tco_var_v1 = $copy_v1;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(v, v1, v2) {
                  if (!v2) {
                    $tco_done = true;
                    return false;
                  }
                  ;
                  if (v instanceof Nil && v1 instanceof Nil) {
                    $tco_done = true;
                    return v2;
                  }
                  ;
                  if (v instanceof Cons && v1 instanceof Cons) {
                    $tco_var_v = v.value1;
                    $tco_var_v1 = v1.value1;
                    $copy_v2 = v2 && eq9(v1.value0)(v.value0);
                    return;
                  }
                  ;
                  $tco_done = true;
                  return false;
                }
                ;
                while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);
                }
                ;
                return $tco_result;
              };
            };
          };
          return go2(xs)(ys)(true);
        };
      };
    }
  };
  var eq12 = /* @__PURE__ */ eq1(eq1List);
  var eqList = function(dictEq) {
    return {
      eq: eq12(dictEq)
    };
  };
  var ord1List = {
    compare1: function(dictOrd) {
      var compare10 = compare(dictOrd);
      return function(xs) {
        return function(ys) {
          var go2 = function($copy_v) {
            return function($copy_v1) {
              var $tco_var_v = $copy_v;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v, v1) {
                if (v instanceof Nil && v1 instanceof Nil) {
                  $tco_done = true;
                  return EQ.value;
                }
                ;
                if (v instanceof Nil) {
                  $tco_done = true;
                  return LT.value;
                }
                ;
                if (v1 instanceof Nil) {
                  $tco_done = true;
                  return GT.value;
                }
                ;
                if (v instanceof Cons && v1 instanceof Cons) {
                  var v2 = compare10(v.value0)(v1.value0);
                  if (v2 instanceof EQ) {
                    $tco_var_v = v.value1;
                    $copy_v1 = v1.value1;
                    return;
                  }
                  ;
                  $tco_done = true;
                  return v2;
                }
                ;
                throw new Error("Failed pattern match at Data.List.Types (line 60, column 5 - line 60, column 20): " + [v.constructor.name, v1.constructor.name]);
              }
              ;
              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $copy_v1);
              }
              ;
              return $tco_result;
            };
          };
          return go2(xs)(ys);
        };
      };
    },
    Eq10: function() {
      return eq1List;
    }
  };
  var compare12 = /* @__PURE__ */ compare1(ord1List);
  var ordList = function(dictOrd) {
    var eqList1 = eqList(dictOrd.Eq0());
    return {
      compare: compare12(dictOrd),
      Eq0: function() {
        return eqList1;
      }
    };
  };
  var applyList = {
    apply: function(v) {
      return function(v1) {
        if (v instanceof Nil) {
          return Nil.value;
        }
        ;
        if (v instanceof Cons) {
          return append1(map10(v.value0)(v1))(apply(applyList)(v.value1)(v1));
        }
        ;
        throw new Error("Failed pattern match at Data.List.Types (line 157, column 1 - line 159, column 48): " + [v.constructor.name, v1.constructor.name]);
      };
    },
    Functor0: function() {
      return functorList;
    }
  };
  var bindList = {
    bind: function(v) {
      return function(v1) {
        if (v instanceof Nil) {
          return Nil.value;
        }
        ;
        if (v instanceof Cons) {
          return append1(v1(v.value0))(bind(bindList)(v.value1)(v1));
        }
        ;
        throw new Error("Failed pattern match at Data.List.Types (line 164, column 1 - line 166, column 37): " + [v.constructor.name, v1.constructor.name]);
      };
    },
    Apply0: function() {
      return applyList;
    }
  };
  var applicativeList = {
    pure: function(a2) {
      return new Cons(a2, Nil.value);
    },
    Apply0: function() {
      return applyList;
    }
  };
  var altList = {
    alt: append1,
    Functor0: function() {
      return functorList;
    }
  };
  var plusList = /* @__PURE__ */ function() {
    return {
      empty: Nil.value,
      Alt0: function() {
        return altList;
      }
    };
  }();

  // output/Data.List/index.js
  var map11 = /* @__PURE__ */ map(functorMaybe);
  var foldr3 = /* @__PURE__ */ foldr(foldableList);
  var tailRecM22 = /* @__PURE__ */ tailRecM2(monadRecMaybe);
  var foldl3 = /* @__PURE__ */ foldl(foldableList);
  var bind4 = /* @__PURE__ */ bind(bindList);
  var identity9 = /* @__PURE__ */ identity(categoryFn);
  var unzip = /* @__PURE__ */ function() {
    return foldr3(function(v) {
      return function(v1) {
        return new Tuple(new Cons(v.value0, v1.value0), new Cons(v.value1, v1.value1));
      };
    })(new Tuple(Nil.value, Nil.value));
  }();
  var uncons = function(v) {
    if (v instanceof Nil) {
      return Nothing.value;
    }
    ;
    if (v instanceof Cons) {
      return new Just({
        head: v.value0,
        tail: v.value1
      });
    }
    ;
    throw new Error("Failed pattern match at Data.List (line 259, column 1 - line 259, column 66): " + [v.constructor.name]);
  };
  var toUnfoldable = function(dictUnfoldable) {
    return unfoldr(dictUnfoldable)(function(xs) {
      return map11(function(rec) {
        return new Tuple(rec.head, rec.tail);
      })(uncons(xs));
    });
  };
  var tail = function(v) {
    if (v instanceof Nil) {
      return Nothing.value;
    }
    ;
    if (v instanceof Cons) {
      return new Just(v.value1);
    }
    ;
    throw new Error("Failed pattern match at Data.List (line 245, column 1 - line 245, column 43): " + [v.constructor.name]);
  };
  var stripPrefix = function(dictEq) {
    var eq24 = eq(dictEq);
    return function(v) {
      return function(s) {
        var go2 = function(prefix) {
          return function(input3) {
            if (prefix instanceof Cons && (input3 instanceof Cons && eq24(prefix.value0)(input3.value0))) {
              return new Just(new Loop({
                a: prefix.value1,
                b: input3.value1
              }));
            }
            ;
            if (prefix instanceof Nil) {
              return new Just(new Done(input3));
            }
            ;
            return Nothing.value;
          };
        };
        return tailRecM22(go2)(v)(s);
      };
    };
  };
  var singleton3 = function(a2) {
    return new Cons(a2, Nil.value);
  };
  var reverse = /* @__PURE__ */ function() {
    var go2 = function($copy_v) {
      return function($copy_v1) {
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v, v1) {
          if (v1 instanceof Nil) {
            $tco_done = true;
            return v;
          }
          ;
          if (v1 instanceof Cons) {
            $tco_var_v = new Cons(v1.value0, v);
            $copy_v1 = v1.value1;
            return;
          }
          ;
          throw new Error("Failed pattern match at Data.List (line 368, column 3 - line 368, column 19): " + [v.constructor.name, v1.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_v, $copy_v1);
        }
        ;
        return $tco_result;
      };
    };
    return go2(Nil.value);
  }();
  var zipWith = function(f) {
    return function(xs) {
      return function(ys) {
        var go2 = function($copy_v) {
          return function($copy_v1) {
            return function($copy_v2) {
              var $tco_var_v = $copy_v;
              var $tco_var_v1 = $copy_v1;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v, v1, v2) {
                if (v instanceof Nil) {
                  $tco_done = true;
                  return v2;
                }
                ;
                if (v1 instanceof Nil) {
                  $tco_done = true;
                  return v2;
                }
                ;
                if (v instanceof Cons && v1 instanceof Cons) {
                  $tco_var_v = v.value1;
                  $tco_var_v1 = v1.value1;
                  $copy_v2 = new Cons(f(v.value0)(v1.value0), v2);
                  return;
                }
                ;
                throw new Error("Failed pattern match at Data.List (line 779, column 3 - line 779, column 21): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
              }
              ;
              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);
              }
              ;
              return $tco_result;
            };
          };
        };
        return reverse(go2(xs)(ys)(Nil.value));
      };
    };
  };
  var $$null = function(v) {
    if (v instanceof Nil) {
      return true;
    }
    ;
    return false;
  };
  var mapMaybe = function(f) {
    var go2 = function($copy_v) {
      return function($copy_v1) {
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v, v1) {
          if (v1 instanceof Nil) {
            $tco_done = true;
            return reverse(v);
          }
          ;
          if (v1 instanceof Cons) {
            var v2 = f(v1.value0);
            if (v2 instanceof Nothing) {
              $tco_var_v = v;
              $copy_v1 = v1.value1;
              return;
            }
            ;
            if (v2 instanceof Just) {
              $tco_var_v = new Cons(v2.value0, v);
              $copy_v1 = v1.value1;
              return;
            }
            ;
            throw new Error("Failed pattern match at Data.List (line 419, column 5 - line 421, column 32): " + [v2.constructor.name]);
          }
          ;
          throw new Error("Failed pattern match at Data.List (line 417, column 3 - line 417, column 27): " + [v.constructor.name, v1.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_v, $copy_v1);
        }
        ;
        return $tco_result;
      };
    };
    return go2(Nil.value);
  };
  var length4 = /* @__PURE__ */ foldl3(function(acc) {
    return function(v) {
      return acc + 1 | 0;
    };
  })(0);
  var index2 = function($copy_v) {
    return function($copy_v1) {
      var $tco_var_v = $copy_v;
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v, v1) {
        if (v instanceof Nil) {
          $tco_done = true;
          return Nothing.value;
        }
        ;
        if (v instanceof Cons && v1 === 0) {
          $tco_done = true;
          return new Just(v.value0);
        }
        ;
        if (v instanceof Cons) {
          $tco_var_v = v.value1;
          $copy_v1 = v1 - 1 | 0;
          return;
        }
        ;
        throw new Error("Failed pattern match at Data.List (line 281, column 1 - line 281, column 44): " + [v.constructor.name, v1.constructor.name]);
      }
      ;
      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_v, $copy_v1);
      }
      ;
      return $tco_result;
    };
  };
  var head = function(v) {
    if (v instanceof Nil) {
      return Nothing.value;
    }
    ;
    if (v instanceof Cons) {
      return new Just(v.value0);
    }
    ;
    throw new Error("Failed pattern match at Data.List (line 230, column 1 - line 230, column 22): " + [v.constructor.name]);
  };
  var fromFoldable = function(dictFoldable) {
    return foldr(dictFoldable)(Cons.create)(Nil.value);
  };
  var concat = function(v) {
    return bind4(v)(identity9);
  };

  // output/Data.Lazy/foreign.js
  var defer3 = function(thunk) {
    var v = null;
    return function() {
      if (thunk === void 0)
        return v;
      v = thunk();
      thunk = void 0;
      return v;
    };
  };
  var force = function(l) {
    return l();
  };

  // output/Data.Lazy/index.js
  var functorLazy = {
    map: function(f) {
      return function(l) {
        return defer3(function(v) {
          return f(force(l));
        });
      };
    }
  };
  var applyLazy = {
    apply: function(f) {
      return function(x) {
        return defer3(function(v) {
          return force(f)(force(x));
        });
      };
    },
    Functor0: function() {
      return functorLazy;
    }
  };
  var applicativeLazy = {
    pure: function(a2) {
      return defer3(function(v) {
        return a2;
      });
    },
    Apply0: function() {
      return applyLazy;
    }
  };

  // output/Data.List.Lazy.Types/index.js
  var unwrap3 = /* @__PURE__ */ unwrap();
  var List = function(x) {
    return x;
  };
  var Nil2 = /* @__PURE__ */ function() {
    function Nil3() {
    }
    ;
    Nil3.value = new Nil3();
    return Nil3;
  }();
  var Cons2 = /* @__PURE__ */ function() {
    function Cons3(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    Cons3.create = function(value0) {
      return function(value14) {
        return new Cons3(value0, value14);
      };
    };
    return Cons3;
  }();
  var nil = /* @__PURE__ */ defer3(function(v) {
    return Nil2.value;
  });
  var step2 = function($319) {
    return force(unwrap3($319));
  };
  var lazyList = {
    defer: function(f) {
      return defer3(function($320) {
        return step2(f($320));
      });
    }
  };
  var defer4 = /* @__PURE__ */ defer(lazyList);
  var cons = function(x) {
    return function(xs) {
      return defer3(function(v) {
        return new Cons2(x, xs);
      });
    };
  };
  var foldableList2 = {
    foldr: function(op) {
      return function(z) {
        return function(xs) {
          var rev3 = foldl(foldableList2)(flip(cons))(nil);
          return foldl(foldableList2)(flip(op))(z)(rev3(xs));
        };
      };
    },
    foldl: function(op) {
      var go2 = function($copy_b) {
        return function($copy_xs) {
          var $tco_var_b = $copy_b;
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(b2, xs) {
            var v = step2(xs);
            if (v instanceof Nil2) {
              $tco_done = true;
              return b2;
            }
            ;
            if (v instanceof Cons2) {
              $tco_var_b = op(b2)(v.value0);
              $copy_xs = v.value1;
              return;
            }
            ;
            throw new Error("Failed pattern match at Data.List.Lazy.Types (line 127, column 7 - line 129, column 40): " + [v.constructor.name]);
          }
          ;
          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_b, $copy_xs);
          }
          ;
          return $tco_result;
        };
      };
      return go2;
    },
    foldMap: function(dictMonoid) {
      var append27 = append(dictMonoid.Semigroup0());
      var mempty6 = mempty(dictMonoid);
      return function(f) {
        return foldl(foldableList2)(function(b2) {
          return function(a2) {
            return append27(b2)(f(a2));
          };
        })(mempty6);
      };
    }
  };
  var unfoldable1List2 = {
    unfoldr1: /* @__PURE__ */ function() {
      var go2 = function(f) {
        return function(b2) {
          return defer4(function(v) {
            var v1 = f(b2);
            if (v1.value1 instanceof Just) {
              return cons(v1.value0)(go2(f)(v1.value1.value0));
            }
            ;
            if (v1.value1 instanceof Nothing) {
              return cons(v1.value0)(nil);
            }
            ;
            throw new Error("Failed pattern match at Data.List.Lazy.Types (line 151, column 28 - line 153, column 33): " + [v1.constructor.name]);
          });
        };
      };
      return go2;
    }()
  };
  var unfoldableList2 = {
    unfoldr: /* @__PURE__ */ function() {
      var go2 = function(f) {
        return function(b2) {
          return defer4(function(v) {
            var v1 = f(b2);
            if (v1 instanceof Nothing) {
              return nil;
            }
            ;
            if (v1 instanceof Just) {
              return cons(v1.value0.value0)(go2(f)(v1.value0.value1));
            }
            ;
            throw new Error("Failed pattern match at Data.List.Lazy.Types (line 157, column 28 - line 159, column 39): " + [v1.constructor.name]);
          });
        };
      };
      return go2;
    }(),
    Unfoldable10: function() {
      return unfoldable1List2;
    }
  };

  // output/Data.List.Lazy/index.js
  var map12 = /* @__PURE__ */ map(functorLazy);
  var unwrap4 = /* @__PURE__ */ unwrap();
  var filter = function(p2) {
    var go2 = function($copy_v) {
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v) {
        if (v instanceof Nil2) {
          $tco_done = true;
          return Nil2.value;
        }
        ;
        if (v instanceof Cons2) {
          if (p2(v.value0)) {
            $tco_done = true;
            return new Cons2(v.value0, filter(p2)(v.value1));
          }
          ;
          if (otherwise) {
            $copy_v = step2(v.value1);
            return;
          }
          ;
        }
        ;
        throw new Error("Failed pattern match at Data.List.Lazy (line 416, column 3 - line 416, column 15): " + [v.constructor.name]);
      }
      ;
      while (!$tco_done) {
        $tco_result = $tco_loop($copy_v);
      }
      ;
      return $tco_result;
    };
    var $344 = map12(go2);
    return function($345) {
      return List($344(unwrap4($345)));
    };
  };

  // output/Data.Map.Internal/index.js
  var identity10 = /* @__PURE__ */ identity(categoryFn);
  var Leaf = /* @__PURE__ */ function() {
    function Leaf2() {
    }
    ;
    Leaf2.value = new Leaf2();
    return Leaf2;
  }();
  var Two = /* @__PURE__ */ function() {
    function Two2(value0, value14, value23, value33) {
      this.value0 = value0;
      this.value1 = value14;
      this.value2 = value23;
      this.value3 = value33;
    }
    ;
    Two2.create = function(value0) {
      return function(value14) {
        return function(value23) {
          return function(value33) {
            return new Two2(value0, value14, value23, value33);
          };
        };
      };
    };
    return Two2;
  }();
  var Three = /* @__PURE__ */ function() {
    function Three2(value0, value14, value23, value33, value42, value52, value62) {
      this.value0 = value0;
      this.value1 = value14;
      this.value2 = value23;
      this.value3 = value33;
      this.value4 = value42;
      this.value5 = value52;
      this.value6 = value62;
    }
    ;
    Three2.create = function(value0) {
      return function(value14) {
        return function(value23) {
          return function(value33) {
            return function(value42) {
              return function(value52) {
                return function(value62) {
                  return new Three2(value0, value14, value23, value33, value42, value52, value62);
                };
              };
            };
          };
        };
      };
    };
    return Three2;
  }();
  var TwoLeft = /* @__PURE__ */ function() {
    function TwoLeft2(value0, value14, value23) {
      this.value0 = value0;
      this.value1 = value14;
      this.value2 = value23;
    }
    ;
    TwoLeft2.create = function(value0) {
      return function(value14) {
        return function(value23) {
          return new TwoLeft2(value0, value14, value23);
        };
      };
    };
    return TwoLeft2;
  }();
  var TwoRight = /* @__PURE__ */ function() {
    function TwoRight2(value0, value14, value23) {
      this.value0 = value0;
      this.value1 = value14;
      this.value2 = value23;
    }
    ;
    TwoRight2.create = function(value0) {
      return function(value14) {
        return function(value23) {
          return new TwoRight2(value0, value14, value23);
        };
      };
    };
    return TwoRight2;
  }();
  var ThreeLeft = /* @__PURE__ */ function() {
    function ThreeLeft2(value0, value14, value23, value33, value42, value52) {
      this.value0 = value0;
      this.value1 = value14;
      this.value2 = value23;
      this.value3 = value33;
      this.value4 = value42;
      this.value5 = value52;
    }
    ;
    ThreeLeft2.create = function(value0) {
      return function(value14) {
        return function(value23) {
          return function(value33) {
            return function(value42) {
              return function(value52) {
                return new ThreeLeft2(value0, value14, value23, value33, value42, value52);
              };
            };
          };
        };
      };
    };
    return ThreeLeft2;
  }();
  var ThreeMiddle = /* @__PURE__ */ function() {
    function ThreeMiddle2(value0, value14, value23, value33, value42, value52) {
      this.value0 = value0;
      this.value1 = value14;
      this.value2 = value23;
      this.value3 = value33;
      this.value4 = value42;
      this.value5 = value52;
    }
    ;
    ThreeMiddle2.create = function(value0) {
      return function(value14) {
        return function(value23) {
          return function(value33) {
            return function(value42) {
              return function(value52) {
                return new ThreeMiddle2(value0, value14, value23, value33, value42, value52);
              };
            };
          };
        };
      };
    };
    return ThreeMiddle2;
  }();
  var ThreeRight = /* @__PURE__ */ function() {
    function ThreeRight2(value0, value14, value23, value33, value42, value52) {
      this.value0 = value0;
      this.value1 = value14;
      this.value2 = value23;
      this.value3 = value33;
      this.value4 = value42;
      this.value5 = value52;
    }
    ;
    ThreeRight2.create = function(value0) {
      return function(value14) {
        return function(value23) {
          return function(value33) {
            return function(value42) {
              return function(value52) {
                return new ThreeRight2(value0, value14, value23, value33, value42, value52);
              };
            };
          };
        };
      };
    };
    return ThreeRight2;
  }();
  var KickUp = /* @__PURE__ */ function() {
    function KickUp2(value0, value14, value23, value33) {
      this.value0 = value0;
      this.value1 = value14;
      this.value2 = value23;
      this.value3 = value33;
    }
    ;
    KickUp2.create = function(value0) {
      return function(value14) {
        return function(value23) {
          return function(value33) {
            return new KickUp2(value0, value14, value23, value33);
          };
        };
      };
    };
    return KickUp2;
  }();
  var singleton4 = function(k) {
    return function(v) {
      return new Two(Leaf.value, k, v, Leaf.value);
    };
  };
  var toUnfoldable2 = function(dictUnfoldable) {
    var unfoldr4 = unfoldr(dictUnfoldable);
    return function(m) {
      var go2 = function($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
          if (v instanceof Nil) {
            $tco_done = true;
            return Nothing.value;
          }
          ;
          if (v instanceof Cons) {
            if (v.value0 instanceof Leaf) {
              $copy_v = v.value1;
              return;
            }
            ;
            if (v.value0 instanceof Two && (v.value0.value0 instanceof Leaf && v.value0.value3 instanceof Leaf)) {
              $tco_done = true;
              return new Just(new Tuple(new Tuple(v.value0.value1, v.value0.value2), v.value1));
            }
            ;
            if (v.value0 instanceof Two && v.value0.value0 instanceof Leaf) {
              $tco_done = true;
              return new Just(new Tuple(new Tuple(v.value0.value1, v.value0.value2), new Cons(v.value0.value3, v.value1)));
            }
            ;
            if (v.value0 instanceof Two) {
              $copy_v = new Cons(v.value0.value0, new Cons(singleton4(v.value0.value1)(v.value0.value2), new Cons(v.value0.value3, v.value1)));
              return;
            }
            ;
            if (v.value0 instanceof Three) {
              $copy_v = new Cons(v.value0.value0, new Cons(singleton4(v.value0.value1)(v.value0.value2), new Cons(v.value0.value3, new Cons(singleton4(v.value0.value4)(v.value0.value5), new Cons(v.value0.value6, v.value1)))));
              return;
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 624, column 18 - line 633, column 71): " + [v.value0.constructor.name]);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 623, column 3 - line 623, column 19): " + [v.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
        }
        ;
        return $tco_result;
      };
      return unfoldr4(go2)(new Cons(m, Nil.value));
    };
  };
  var toUnfoldable1 = /* @__PURE__ */ toUnfoldable2(unfoldableList2);
  var toAscArray = /* @__PURE__ */ toUnfoldable2(unfoldableArray);
  var showMap = function(dictShow) {
    var showTuple2 = showTuple(dictShow);
    return function(dictShow1) {
      var show19 = show(showArray(showTuple2(dictShow1)));
      return {
        show: function(m) {
          return "(fromFoldable " + (show19(toAscArray(m)) + ")");
        }
      };
    };
  };
  var lookup2 = function(dictOrd) {
    var compare10 = compare(dictOrd);
    return function(k) {
      var go2 = function($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
          if (v instanceof Leaf) {
            $tco_done = true;
            return Nothing.value;
          }
          ;
          if (v instanceof Two) {
            var v2 = compare10(k)(v.value1);
            if (v2 instanceof EQ) {
              $tco_done = true;
              return new Just(v.value2);
            }
            ;
            if (v2 instanceof LT) {
              $copy_v = v.value0;
              return;
            }
            ;
            $copy_v = v.value3;
            return;
          }
          ;
          if (v instanceof Three) {
            var v3 = compare10(k)(v.value1);
            if (v3 instanceof EQ) {
              $tco_done = true;
              return new Just(v.value2);
            }
            ;
            var v4 = compare10(k)(v.value4);
            if (v4 instanceof EQ) {
              $tco_done = true;
              return new Just(v.value5);
            }
            ;
            if (v3 instanceof LT) {
              $copy_v = v.value0;
              return;
            }
            ;
            if (v4 instanceof GT) {
              $copy_v = v.value6;
              return;
            }
            ;
            $copy_v = v.value3;
            return;
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 241, column 5 - line 241, column 22): " + [v.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
        }
        ;
        return $tco_result;
      };
      return go2;
    };
  };
  var member = function(dictOrd) {
    var lookup111 = lookup2(dictOrd);
    return function(k) {
      return function(m) {
        return isJust(lookup111(k)(m));
      };
    };
  };
  var isEmpty = function(v) {
    if (v instanceof Leaf) {
      return true;
    }
    ;
    return false;
  };
  var functorMap = {
    map: function(v) {
      return function(v1) {
        if (v1 instanceof Leaf) {
          return Leaf.value;
        }
        ;
        if (v1 instanceof Two) {
          return new Two(map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), map(functorMap)(v)(v1.value3));
        }
        ;
        if (v1 instanceof Three) {
          return new Three(map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), map(functorMap)(v)(v1.value3), v1.value4, v(v1.value5), map(functorMap)(v)(v1.value6));
        }
        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 116, column 1 - line 119, column 110): " + [v.constructor.name, v1.constructor.name]);
      };
    }
  };
  var fromZipper = function($copy_dictOrd) {
    return function($copy_v) {
      return function($copy_v1) {
        var $tco_var_dictOrd = $copy_dictOrd;
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(dictOrd, v, v1) {
          if (v instanceof Nil) {
            $tco_done = true;
            return v1;
          }
          ;
          if (v instanceof Cons) {
            if (v.value0 instanceof TwoLeft) {
              $tco_var_dictOrd = dictOrd;
              $tco_var_v = v.value1;
              $copy_v1 = new Two(v1, v.value0.value0, v.value0.value1, v.value0.value2);
              return;
            }
            ;
            if (v.value0 instanceof TwoRight) {
              $tco_var_dictOrd = dictOrd;
              $tco_var_v = v.value1;
              $copy_v1 = new Two(v.value0.value0, v.value0.value1, v.value0.value2, v1);
              return;
            }
            ;
            if (v.value0 instanceof ThreeLeft) {
              $tco_var_dictOrd = dictOrd;
              $tco_var_v = v.value1;
              $copy_v1 = new Three(v1, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5);
              return;
            }
            ;
            if (v.value0 instanceof ThreeMiddle) {
              $tco_var_dictOrd = dictOrd;
              $tco_var_v = v.value1;
              $copy_v1 = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v1, v.value0.value3, v.value0.value4, v.value0.value5);
              return;
            }
            ;
            if (v.value0 instanceof ThreeRight) {
              $tco_var_dictOrd = dictOrd;
              $tco_var_v = v.value1;
              $copy_v1 = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5, v1);
              return;
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 462, column 3 - line 467, column 88): " + [v.value0.constructor.name]);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 459, column 1 - line 459, column 80): " + [v.constructor.name, v1.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_dictOrd, $tco_var_v, $copy_v1);
        }
        ;
        return $tco_result;
      };
    };
  };
  var insert = function(dictOrd) {
    var fromZipper1 = fromZipper(dictOrd);
    var compare10 = compare(dictOrd);
    return function(k) {
      return function(v) {
        var up = function($copy_v1) {
          return function($copy_v2) {
            var $tco_var_v1 = $copy_v1;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v1, v2) {
              if (v1 instanceof Nil) {
                $tco_done = true;
                return new Two(v2.value0, v2.value1, v2.value2, v2.value3);
              }
              ;
              if (v1 instanceof Cons) {
                if (v1.value0 instanceof TwoLeft) {
                  $tco_done = true;
                  return fromZipper1(v1.value1)(new Three(v2.value0, v2.value1, v2.value2, v2.value3, v1.value0.value0, v1.value0.value1, v1.value0.value2));
                }
                ;
                if (v1.value0 instanceof TwoRight) {
                  $tco_done = true;
                  return fromZipper1(v1.value1)(new Three(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0, v2.value1, v2.value2, v2.value3));
                }
                ;
                if (v1.value0 instanceof ThreeLeft) {
                  $tco_var_v1 = v1.value1;
                  $copy_v2 = new KickUp(new Two(v2.value0, v2.value1, v2.value2, v2.value3), v1.value0.value0, v1.value0.value1, new Two(v1.value0.value2, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                  return;
                }
                ;
                if (v1.value0 instanceof ThreeMiddle) {
                  $tco_var_v1 = v1.value1;
                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0), v2.value1, v2.value2, new Two(v2.value3, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                  return;
                }
                ;
                if (v1.value0 instanceof ThreeRight) {
                  $tco_var_v1 = v1.value1;
                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v1.value0.value3), v1.value0.value4, v1.value0.value5, new Two(v2.value0, v2.value1, v2.value2, v2.value3));
                  return;
                }
                ;
                throw new Error("Failed pattern match at Data.Map.Internal (line 498, column 5 - line 503, column 108): " + [v1.value0.constructor.name, v2.constructor.name]);
              }
              ;
              throw new Error("Failed pattern match at Data.Map.Internal (line 495, column 3 - line 495, column 56): " + [v1.constructor.name, v2.constructor.name]);
            }
            ;
            while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_v1, $copy_v2);
            }
            ;
            return $tco_result;
          };
        };
        var down = function($copy_v1) {
          return function($copy_v2) {
            var $tco_var_v1 = $copy_v1;
            var $tco_done1 = false;
            var $tco_result;
            function $tco_loop(v1, v2) {
              if (v2 instanceof Leaf) {
                $tco_done1 = true;
                return up(v1)(new KickUp(Leaf.value, k, v, Leaf.value));
              }
              ;
              if (v2 instanceof Two) {
                var v3 = compare10(k)(v2.value1);
                if (v3 instanceof EQ) {
                  $tco_done1 = true;
                  return fromZipper1(v1)(new Two(v2.value0, k, v, v2.value3));
                }
                ;
                if (v3 instanceof LT) {
                  $tco_var_v1 = new Cons(new TwoLeft(v2.value1, v2.value2, v2.value3), v1);
                  $copy_v2 = v2.value0;
                  return;
                }
                ;
                $tco_var_v1 = new Cons(new TwoRight(v2.value0, v2.value1, v2.value2), v1);
                $copy_v2 = v2.value3;
                return;
              }
              ;
              if (v2 instanceof Three) {
                var v3 = compare10(k)(v2.value1);
                if (v3 instanceof EQ) {
                  $tco_done1 = true;
                  return fromZipper1(v1)(new Three(v2.value0, k, v, v2.value3, v2.value4, v2.value5, v2.value6));
                }
                ;
                var v4 = compare10(k)(v2.value4);
                if (v4 instanceof EQ) {
                  $tco_done1 = true;
                  return fromZipper1(v1)(new Three(v2.value0, v2.value1, v2.value2, v2.value3, k, v, v2.value6));
                }
                ;
                if (v3 instanceof LT) {
                  $tco_var_v1 = new Cons(new ThreeLeft(v2.value1, v2.value2, v2.value3, v2.value4, v2.value5, v2.value6), v1);
                  $copy_v2 = v2.value0;
                  return;
                }
                ;
                if (v3 instanceof GT && v4 instanceof LT) {
                  $tco_var_v1 = new Cons(new ThreeMiddle(v2.value0, v2.value1, v2.value2, v2.value4, v2.value5, v2.value6), v1);
                  $copy_v2 = v2.value3;
                  return;
                }
                ;
                $tco_var_v1 = new Cons(new ThreeRight(v2.value0, v2.value1, v2.value2, v2.value3, v2.value4, v2.value5), v1);
                $copy_v2 = v2.value6;
                return;
              }
              ;
              throw new Error("Failed pattern match at Data.Map.Internal (line 478, column 3 - line 478, column 55): " + [v1.constructor.name, v2.constructor.name]);
            }
            ;
            while (!$tco_done1) {
              $tco_result = $tco_loop($tco_var_v1, $copy_v2);
            }
            ;
            return $tco_result;
          };
        };
        return down(Nil.value);
      };
    };
  };
  var pop = function(dictOrd) {
    var fromZipper1 = fromZipper(dictOrd);
    var compare10 = compare(dictOrd);
    return function(k) {
      var up = function($copy_ctxs) {
        return function($copy_tree) {
          var $tco_var_ctxs = $copy_ctxs;
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(ctxs, tree) {
            if (ctxs instanceof Nil) {
              $tco_done = true;
              return tree;
            }
            ;
            if (ctxs instanceof Cons) {
              if (ctxs.value0 instanceof TwoLeft && (ctxs.value0.value2 instanceof Leaf && tree instanceof Leaf)) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value));
              }
              ;
              if (ctxs.value0 instanceof TwoRight && (ctxs.value0.value0 instanceof Leaf && tree instanceof Leaf)) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value));
              }
              ;
              if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Two) {
                $tco_var_ctxs = ctxs.value1;
                $copy_tree = new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3);
                return;
              }
              ;
              if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Two) {
                $tco_var_ctxs = ctxs.value1;
                $copy_tree = new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree);
                return;
              }
              ;
              if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Three) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Two(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6)));
              }
              ;
              if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Three) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Two(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree)));
              }
              ;
              if (ctxs.value0 instanceof ThreeLeft && (ctxs.value0.value2 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
              }
              ;
              if (ctxs.value0 instanceof ThreeMiddle && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
              }
              ;
              if (ctxs.value0 instanceof ThreeRight && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value3 instanceof Leaf && tree instanceof Leaf))) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value4, ctxs.value0.value5, Leaf.value));
              }
              ;
              if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Two) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Two(new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
              }
              ;
              if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Two) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Two(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
              }
              ;
              if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Two) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0, ctxs.value0.value5.value1, ctxs.value0.value5.value2, ctxs.value0.value5.value3)));
              }
              ;
              if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Two) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3, ctxs.value0.value4, ctxs.value0.value5, tree)));
              }
              ;
              if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Three) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Three(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
              }
              ;
              if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Three) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Three(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
              }
              ;
              if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Three) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0), ctxs.value0.value5.value1, ctxs.value0.value5.value2, new Two(ctxs.value0.value5.value3, ctxs.value0.value5.value4, ctxs.value0.value5.value5, ctxs.value0.value5.value6)));
              }
              ;
              if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Three) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3), ctxs.value0.value3.value4, ctxs.value0.value3.value5, new Two(ctxs.value0.value3.value6, ctxs.value0.value4, ctxs.value0.value5, tree)));
              }
              ;
              $tco_done = true;
              return unsafeCrashWith("The impossible happened in partial function `up`.");
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 552, column 5 - line 573, column 86): " + [ctxs.constructor.name]);
          }
          ;
          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_ctxs, $copy_tree);
          }
          ;
          return $tco_result;
        };
      };
      var removeMaxNode = function($copy_ctx) {
        return function($copy_m) {
          var $tco_var_ctx = $copy_ctx;
          var $tco_done1 = false;
          var $tco_result;
          function $tco_loop(ctx, m) {
            if (m instanceof Two && (m.value0 instanceof Leaf && m.value3 instanceof Leaf)) {
              $tco_done1 = true;
              return up(ctx)(Leaf.value);
            }
            ;
            if (m instanceof Two) {
              $tco_var_ctx = new Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
              $copy_m = m.value3;
              return;
            }
            ;
            if (m instanceof Three && (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf))) {
              $tco_done1 = true;
              return up(new Cons(new TwoRight(Leaf.value, m.value1, m.value2), ctx))(Leaf.value);
            }
            ;
            if (m instanceof Three) {
              $tco_var_ctx = new Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
              $copy_m = m.value6;
              return;
            }
            ;
            $tco_done1 = true;
            return unsafeCrashWith("The impossible happened in partial function `removeMaxNode`.");
          }
          ;
          while (!$tco_done1) {
            $tco_result = $tco_loop($tco_var_ctx, $copy_m);
          }
          ;
          return $tco_result;
        };
      };
      var maxNode = function($copy_m) {
        var $tco_done2 = false;
        var $tco_result;
        function $tco_loop(m) {
          if (m instanceof Two && m.value3 instanceof Leaf) {
            $tco_done2 = true;
            return {
              key: m.value1,
              value: m.value2
            };
          }
          ;
          if (m instanceof Two) {
            $copy_m = m.value3;
            return;
          }
          ;
          if (m instanceof Three && m.value6 instanceof Leaf) {
            $tco_done2 = true;
            return {
              key: m.value4,
              value: m.value5
            };
          }
          ;
          if (m instanceof Three) {
            $copy_m = m.value6;
            return;
          }
          ;
          $tco_done2 = true;
          return unsafeCrashWith("The impossible happened in partial function `maxNode`.");
        }
        ;
        while (!$tco_done2) {
          $tco_result = $tco_loop($copy_m);
        }
        ;
        return $tco_result;
      };
      var down = function($copy_ctx) {
        return function($copy_m) {
          var $tco_var_ctx = $copy_ctx;
          var $tco_done3 = false;
          var $tco_result;
          function $tco_loop(ctx, m) {
            if (m instanceof Leaf) {
              $tco_done3 = true;
              return Nothing.value;
            }
            ;
            if (m instanceof Two) {
              var v = compare10(k)(m.value1);
              if (m.value3 instanceof Leaf && v instanceof EQ) {
                $tco_done3 = true;
                return new Just(new Tuple(m.value2, up(ctx)(Leaf.value)));
              }
              ;
              if (v instanceof EQ) {
                var max8 = maxNode(m.value0);
                $tco_done3 = true;
                return new Just(new Tuple(m.value2, removeMaxNode(new Cons(new TwoLeft(max8.key, max8.value, m.value3), ctx))(m.value0)));
              }
              ;
              if (v instanceof LT) {
                $tco_var_ctx = new Cons(new TwoLeft(m.value1, m.value2, m.value3), ctx);
                $copy_m = m.value0;
                return;
              }
              ;
              $tco_var_ctx = new Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
              $copy_m = m.value3;
              return;
            }
            ;
            if (m instanceof Three) {
              var leaves = function() {
                if (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf)) {
                  return true;
                }
                ;
                return false;
              }();
              var v = compare10(k)(m.value4);
              var v3 = compare10(k)(m.value1);
              if (leaves && v3 instanceof EQ) {
                $tco_done3 = true;
                return new Just(new Tuple(m.value2, fromZipper1(ctx)(new Two(Leaf.value, m.value4, m.value5, Leaf.value))));
              }
              ;
              if (leaves && v instanceof EQ) {
                $tco_done3 = true;
                return new Just(new Tuple(m.value5, fromZipper1(ctx)(new Two(Leaf.value, m.value1, m.value2, Leaf.value))));
              }
              ;
              if (v3 instanceof EQ) {
                var max8 = maxNode(m.value0);
                $tco_done3 = true;
                return new Just(new Tuple(m.value2, removeMaxNode(new Cons(new ThreeLeft(max8.key, max8.value, m.value3, m.value4, m.value5, m.value6), ctx))(m.value0)));
              }
              ;
              if (v instanceof EQ) {
                var max8 = maxNode(m.value3);
                $tco_done3 = true;
                return new Just(new Tuple(m.value5, removeMaxNode(new Cons(new ThreeMiddle(m.value0, m.value1, m.value2, max8.key, max8.value, m.value6), ctx))(m.value3)));
              }
              ;
              if (v3 instanceof LT) {
                $tco_var_ctx = new Cons(new ThreeLeft(m.value1, m.value2, m.value3, m.value4, m.value5, m.value6), ctx);
                $copy_m = m.value0;
                return;
              }
              ;
              if (v3 instanceof GT && v instanceof LT) {
                $tco_var_ctx = new Cons(new ThreeMiddle(m.value0, m.value1, m.value2, m.value4, m.value5, m.value6), ctx);
                $copy_m = m.value3;
                return;
              }
              ;
              $tco_var_ctx = new Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
              $copy_m = m.value6;
              return;
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 525, column 16 - line 548, column 80): " + [m.constructor.name]);
          }
          ;
          while (!$tco_done3) {
            $tco_result = $tco_loop($tco_var_ctx, $copy_m);
          }
          ;
          return $tco_result;
        };
      };
      return down(Nil.value);
    };
  };
  var foldableMap = {
    foldr: function(f) {
      return function(z) {
        return function(m) {
          if (m instanceof Leaf) {
            return z;
          }
          ;
          if (m instanceof Two) {
            return foldr(foldableMap)(f)(f(m.value2)(foldr(foldableMap)(f)(z)(m.value3)))(m.value0);
          }
          ;
          if (m instanceof Three) {
            return foldr(foldableMap)(f)(f(m.value2)(foldr(foldableMap)(f)(f(m.value5)(foldr(foldableMap)(f)(z)(m.value6)))(m.value3)))(m.value0);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 133, column 17 - line 136, column 85): " + [m.constructor.name]);
        };
      };
    },
    foldl: function(f) {
      return function(z) {
        return function(m) {
          if (m instanceof Leaf) {
            return z;
          }
          ;
          if (m instanceof Two) {
            return foldl(foldableMap)(f)(f(foldl(foldableMap)(f)(z)(m.value0))(m.value2))(m.value3);
          }
          ;
          if (m instanceof Three) {
            return foldl(foldableMap)(f)(f(foldl(foldableMap)(f)(f(foldl(foldableMap)(f)(z)(m.value0))(m.value2))(m.value3))(m.value5))(m.value6);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 137, column 17 - line 140, column 85): " + [m.constructor.name]);
        };
      };
    },
    foldMap: function(dictMonoid) {
      var mempty6 = mempty(dictMonoid);
      var append27 = append(dictMonoid.Semigroup0());
      return function(f) {
        return function(m) {
          if (m instanceof Leaf) {
            return mempty6;
          }
          ;
          if (m instanceof Two) {
            return append27(foldMap(foldableMap)(dictMonoid)(f)(m.value0))(append27(f(m.value2))(foldMap(foldableMap)(dictMonoid)(f)(m.value3)));
          }
          ;
          if (m instanceof Three) {
            return append27(foldMap(foldableMap)(dictMonoid)(f)(m.value0))(append27(f(m.value2))(append27(foldMap(foldableMap)(dictMonoid)(f)(m.value3))(append27(f(m.value5))(foldMap(foldableMap)(dictMonoid)(f)(m.value6)))));
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 141, column 17 - line 144, column 93): " + [m.constructor.name]);
        };
      };
    }
  };
  var foldableWithIndexMap = {
    foldrWithIndex: function(f) {
      return function(z) {
        return function(m) {
          if (m instanceof Leaf) {
            return z;
          }
          ;
          if (m instanceof Two) {
            return foldrWithIndex(foldableWithIndexMap)(f)(f(m.value1)(m.value2)(foldrWithIndex(foldableWithIndexMap)(f)(z)(m.value3)))(m.value0);
          }
          ;
          if (m instanceof Three) {
            return foldrWithIndex(foldableWithIndexMap)(f)(f(m.value1)(m.value2)(foldrWithIndex(foldableWithIndexMap)(f)(f(m.value4)(m.value5)(foldrWithIndex(foldableWithIndexMap)(f)(z)(m.value6)))(m.value3)))(m.value0);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 147, column 26 - line 150, column 120): " + [m.constructor.name]);
        };
      };
    },
    foldlWithIndex: function(f) {
      return function(z) {
        return function(m) {
          if (m instanceof Leaf) {
            return z;
          }
          ;
          if (m instanceof Two) {
            return foldlWithIndex(foldableWithIndexMap)(f)(f(m.value1)(foldlWithIndex(foldableWithIndexMap)(f)(z)(m.value0))(m.value2))(m.value3);
          }
          ;
          if (m instanceof Three) {
            return foldlWithIndex(foldableWithIndexMap)(f)(f(m.value4)(foldlWithIndex(foldableWithIndexMap)(f)(f(m.value1)(foldlWithIndex(foldableWithIndexMap)(f)(z)(m.value0))(m.value2))(m.value3))(m.value5))(m.value6);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 151, column 26 - line 154, column 120): " + [m.constructor.name]);
        };
      };
    },
    foldMapWithIndex: function(dictMonoid) {
      var mempty6 = mempty(dictMonoid);
      var append27 = append(dictMonoid.Semigroup0());
      return function(f) {
        return function(m) {
          if (m instanceof Leaf) {
            return mempty6;
          }
          ;
          if (m instanceof Two) {
            return append27(foldMapWithIndex(foldableWithIndexMap)(dictMonoid)(f)(m.value0))(append27(f(m.value1)(m.value2))(foldMapWithIndex(foldableWithIndexMap)(dictMonoid)(f)(m.value3)));
          }
          ;
          if (m instanceof Three) {
            return append27(foldMapWithIndex(foldableWithIndexMap)(dictMonoid)(f)(m.value0))(append27(f(m.value1)(m.value2))(append27(foldMapWithIndex(foldableWithIndexMap)(dictMonoid)(f)(m.value3))(append27(f(m.value4)(m.value5))(foldMapWithIndex(foldableWithIndexMap)(dictMonoid)(f)(m.value6)))));
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 155, column 26 - line 158, column 128): " + [m.constructor.name]);
        };
      };
    },
    Foldable0: function() {
      return foldableMap;
    }
  };
  var foldrWithIndex2 = /* @__PURE__ */ foldrWithIndex(foldableWithIndexMap);
  var foldlWithIndex2 = /* @__PURE__ */ foldlWithIndex(foldableWithIndexMap);
  var keys = /* @__PURE__ */ function() {
    return foldrWithIndex2(function(k) {
      return function(v) {
        return function(acc) {
          return new Cons(k, acc);
        };
      };
    })(Nil.value);
  }();
  var traversableMap = {
    traverse: function(dictApplicative) {
      var pure117 = pure(dictApplicative);
      var Apply0 = dictApplicative.Apply0();
      var apply6 = apply(Apply0);
      var map123 = map(Apply0.Functor0());
      return function(v) {
        return function(v1) {
          if (v1 instanceof Leaf) {
            return pure117(Leaf.value);
          }
          ;
          if (v1 instanceof Two) {
            return apply6(apply6(apply6(map123(Two.create)(traverse(traversableMap)(dictApplicative)(v)(v1.value0)))(pure117(v1.value1)))(v(v1.value2)))(traverse(traversableMap)(dictApplicative)(v)(v1.value3));
          }
          ;
          if (v1 instanceof Three) {
            return apply6(apply6(apply6(apply6(apply6(apply6(map123(Three.create)(traverse(traversableMap)(dictApplicative)(v)(v1.value0)))(pure117(v1.value1)))(v(v1.value2)))(traverse(traversableMap)(dictApplicative)(v)(v1.value3)))(pure117(v1.value4)))(v(v1.value5)))(traverse(traversableMap)(dictApplicative)(v)(v1.value6));
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 160, column 1 - line 175, column 31): " + [v.constructor.name, v1.constructor.name]);
        };
      };
    },
    sequence: function(dictApplicative) {
      return traverse(traversableMap)(dictApplicative)(identity10);
    },
    Functor0: function() {
      return functorMap;
    },
    Foldable1: function() {
      return foldableMap;
    }
  };
  var eqMap = function(dictEq) {
    var eqTuple2 = eqTuple(dictEq);
    return function(dictEq1) {
      var eq15 = eq(eqArray(eqTuple2(dictEq1)));
      return {
        eq: function(m1) {
          return function(m2) {
            return eq15(toAscArray(m1))(toAscArray(m2));
          };
        }
      };
    };
  };
  var ordMap = function(dictOrd) {
    var ordTuple4 = ordTuple(dictOrd);
    var eqMap1 = eqMap(dictOrd.Eq0());
    return function(dictOrd1) {
      var compare10 = compare(ordArray(ordTuple4(dictOrd1)));
      var eqMap22 = eqMap1(dictOrd1.Eq0());
      return {
        compare: function(m1) {
          return function(m2) {
            return compare10(toAscArray(m1))(toAscArray(m2));
          };
        },
        Eq0: function() {
          return eqMap22;
        }
      };
    };
  };
  var empty2 = /* @__PURE__ */ function() {
    return Leaf.value;
  }();
  var fromFoldable2 = function(dictOrd) {
    var insert16 = insert(dictOrd);
    return function(dictFoldable) {
      return foldl(dictFoldable)(function(m) {
        return function(v) {
          return insert16(v.value0)(v.value1)(m);
        };
      })(empty2);
    };
  };
  var filterWithKey = function(dictOrd) {
    var fromFoldable110 = fromFoldable2(dictOrd)(foldableList2);
    return function(predicate) {
      var $927 = filter(uncurry(predicate));
      return function($928) {
        return fromFoldable110($927(toUnfoldable1($928)));
      };
    };
  };
  var mapMaybeWithKey = function(dictOrd) {
    var insert16 = insert(dictOrd);
    return function(f) {
      return foldrWithIndex2(function(k) {
        return function(a2) {
          return function(acc) {
            return maybe(acc)(function(b2) {
              return insert16(k)(b2)(acc);
            })(f(k)(a2));
          };
        };
      })(empty2);
    };
  };
  var $$delete = function(dictOrd) {
    var pop12 = pop(dictOrd);
    return function(k) {
      return function(m) {
        return maybe(m)(snd)(pop12(k)(m));
      };
    };
  };
  var alter = function(dictOrd) {
    var lookup111 = lookup2(dictOrd);
    var delete1 = $$delete(dictOrd);
    var insert16 = insert(dictOrd);
    return function(f) {
      return function(k) {
        return function(m) {
          var v = f(lookup111(k)(m));
          if (v instanceof Nothing) {
            return delete1(k)(m);
          }
          ;
          if (v instanceof Just) {
            return insert16(k)(v.value0)(m);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 596, column 15 - line 598, column 25): " + [v.constructor.name]);
        };
      };
    };
  };
  var unionWith = function(dictOrd) {
    var alter1 = alter(dictOrd);
    return function(f) {
      return function(m1) {
        return function(m2) {
          var go2 = function(k) {
            return function(m) {
              return function(v) {
                return alter1(function() {
                  var $936 = maybe(v)(f(v));
                  return function($937) {
                    return Just.create($936($937));
                  };
                }())(k)(m);
              };
            };
          };
          return foldlWithIndex2(go2)(m2)(m1);
        };
      };
    };
  };
  var union = function(dictOrd) {
    return unionWith(dictOrd)($$const);
  };
  var unions = function(dictOrd) {
    var union1 = union(dictOrd);
    return function(dictFoldable) {
      return foldl(dictFoldable)(union1)(empty2);
    };
  };

  // output/Data.Exists/index.js
  var runExists = unsafeCoerce2;
  var mkExists = unsafeCoerce2;

  // output/Data.Coyoneda/index.js
  var CoyonedaF = /* @__PURE__ */ function() {
    function CoyonedaF2(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    CoyonedaF2.create = function(value0) {
      return function(value14) {
        return new CoyonedaF2(value0, value14);
      };
    };
    return CoyonedaF2;
  }();
  var unCoyoneda = function(f) {
    return function(v) {
      return runExists(function(v1) {
        return f(v1.value0)(v1.value1);
      })(v);
    };
  };
  var coyoneda = function(k) {
    return function(fi) {
      return mkExists(new CoyonedaF(k, fi));
    };
  };
  var functorCoyoneda = {
    map: function(f) {
      return function(v) {
        return runExists(function(v1) {
          return coyoneda(function($180) {
            return f(v1.value0($180));
          })(v1.value1);
        })(v);
      };
    }
  };
  var liftCoyoneda = /* @__PURE__ */ coyoneda(/* @__PURE__ */ identity(categoryFn));

  // output/Halogen.Data.OrdBox/index.js
  var OrdBox = /* @__PURE__ */ function() {
    function OrdBox2(value0, value14, value23) {
      this.value0 = value0;
      this.value1 = value14;
      this.value2 = value23;
    }
    ;
    OrdBox2.create = function(value0) {
      return function(value14) {
        return function(value23) {
          return new OrdBox2(value0, value14, value23);
        };
      };
    };
    return OrdBox2;
  }();
  var mkOrdBox = function(dictOrd) {
    return OrdBox.create(eq(dictOrd.Eq0()))(compare(dictOrd));
  };
  var eqOrdBox = {
    eq: function(v) {
      return function(v1) {
        return v.value0(v.value2)(v1.value2);
      };
    }
  };
  var ordOrdBox = {
    compare: function(v) {
      return function(v1) {
        return v.value1(v.value2)(v1.value2);
      };
    },
    Eq0: function() {
      return eqOrdBox;
    }
  };

  // output/Halogen.Data.Slot/index.js
  var ordTuple2 = /* @__PURE__ */ ordTuple(ordString)(ordOrdBox);
  var pop1 = /* @__PURE__ */ pop(ordTuple2);
  var lookup1 = /* @__PURE__ */ lookup2(ordTuple2);
  var insert1 = /* @__PURE__ */ insert(ordTuple2);
  var pop2 = function() {
    return function(dictIsSymbol) {
      var reflectSymbol2 = reflectSymbol(dictIsSymbol);
      return function(dictOrd) {
        var mkOrdBox2 = mkOrdBox(dictOrd);
        return function(sym) {
          return function(key6) {
            return function(v) {
              return pop1(new Tuple(reflectSymbol2(sym), mkOrdBox2(key6)))(v);
            };
          };
        };
      };
    };
  };
  var lookup3 = function() {
    return function(dictIsSymbol) {
      var reflectSymbol2 = reflectSymbol(dictIsSymbol);
      return function(dictOrd) {
        var mkOrdBox2 = mkOrdBox(dictOrd);
        return function(sym) {
          return function(key6) {
            return function(v) {
              return lookup1(new Tuple(reflectSymbol2(sym), mkOrdBox2(key6)))(v);
            };
          };
        };
      };
    };
  };
  var insert2 = function() {
    return function(dictIsSymbol) {
      var reflectSymbol2 = reflectSymbol(dictIsSymbol);
      return function(dictOrd) {
        var mkOrdBox2 = mkOrdBox(dictOrd);
        return function(sym) {
          return function(key6) {
            return function(val) {
              return function(v) {
                return insert1(new Tuple(reflectSymbol2(sym), mkOrdBox2(key6)))(val)(v);
              };
            };
          };
        };
      };
    };
  };
  var foreachSlot = function(dictApplicative) {
    var traverse_8 = traverse_(dictApplicative)(foldableMap);
    return function(v) {
      return function(k) {
        return traverse_8(function($54) {
          return k($54);
        })(v);
      };
    };
  };
  var empty3 = empty2;

  // output/Data.String.Common/foreign.js
  var replaceAll = function(s1) {
    return function(s2) {
      return function(s3) {
        return s3.replace(new RegExp(s1.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&"), "g"), s2);
      };
    };
  };
  var split = function(sep) {
    return function(s) {
      return s.split(sep);
    };
  };
  var toLower = function(s) {
    return s.toLowerCase();
  };
  var joinWith = function(s) {
    return function(xs) {
      return xs.join(s);
    };
  };

  // output/Data.String.Common/index.js
  var $$null2 = function(s) {
    return s === "";
  };

  // output/DOM.HTML.Indexed.InputType/index.js
  var InputButton = /* @__PURE__ */ function() {
    function InputButton2() {
    }
    ;
    InputButton2.value = new InputButton2();
    return InputButton2;
  }();
  var InputCheckbox = /* @__PURE__ */ function() {
    function InputCheckbox2() {
    }
    ;
    InputCheckbox2.value = new InputCheckbox2();
    return InputCheckbox2;
  }();
  var InputColor = /* @__PURE__ */ function() {
    function InputColor2() {
    }
    ;
    InputColor2.value = new InputColor2();
    return InputColor2;
  }();
  var InputDate = /* @__PURE__ */ function() {
    function InputDate2() {
    }
    ;
    InputDate2.value = new InputDate2();
    return InputDate2;
  }();
  var InputDatetimeLocal = /* @__PURE__ */ function() {
    function InputDatetimeLocal2() {
    }
    ;
    InputDatetimeLocal2.value = new InputDatetimeLocal2();
    return InputDatetimeLocal2;
  }();
  var InputEmail = /* @__PURE__ */ function() {
    function InputEmail2() {
    }
    ;
    InputEmail2.value = new InputEmail2();
    return InputEmail2;
  }();
  var InputFile = /* @__PURE__ */ function() {
    function InputFile2() {
    }
    ;
    InputFile2.value = new InputFile2();
    return InputFile2;
  }();
  var InputHidden = /* @__PURE__ */ function() {
    function InputHidden2() {
    }
    ;
    InputHidden2.value = new InputHidden2();
    return InputHidden2;
  }();
  var InputImage = /* @__PURE__ */ function() {
    function InputImage2() {
    }
    ;
    InputImage2.value = new InputImage2();
    return InputImage2;
  }();
  var InputMonth = /* @__PURE__ */ function() {
    function InputMonth2() {
    }
    ;
    InputMonth2.value = new InputMonth2();
    return InputMonth2;
  }();
  var InputNumber = /* @__PURE__ */ function() {
    function InputNumber2() {
    }
    ;
    InputNumber2.value = new InputNumber2();
    return InputNumber2;
  }();
  var InputPassword = /* @__PURE__ */ function() {
    function InputPassword2() {
    }
    ;
    InputPassword2.value = new InputPassword2();
    return InputPassword2;
  }();
  var InputRadio = /* @__PURE__ */ function() {
    function InputRadio2() {
    }
    ;
    InputRadio2.value = new InputRadio2();
    return InputRadio2;
  }();
  var InputRange = /* @__PURE__ */ function() {
    function InputRange2() {
    }
    ;
    InputRange2.value = new InputRange2();
    return InputRange2;
  }();
  var InputReset = /* @__PURE__ */ function() {
    function InputReset2() {
    }
    ;
    InputReset2.value = new InputReset2();
    return InputReset2;
  }();
  var InputSearch = /* @__PURE__ */ function() {
    function InputSearch2() {
    }
    ;
    InputSearch2.value = new InputSearch2();
    return InputSearch2;
  }();
  var InputSubmit = /* @__PURE__ */ function() {
    function InputSubmit2() {
    }
    ;
    InputSubmit2.value = new InputSubmit2();
    return InputSubmit2;
  }();
  var InputTel = /* @__PURE__ */ function() {
    function InputTel2() {
    }
    ;
    InputTel2.value = new InputTel2();
    return InputTel2;
  }();
  var InputText = /* @__PURE__ */ function() {
    function InputText2() {
    }
    ;
    InputText2.value = new InputText2();
    return InputText2;
  }();
  var InputTime = /* @__PURE__ */ function() {
    function InputTime2() {
    }
    ;
    InputTime2.value = new InputTime2();
    return InputTime2;
  }();
  var InputUrl = /* @__PURE__ */ function() {
    function InputUrl2() {
    }
    ;
    InputUrl2.value = new InputUrl2();
    return InputUrl2;
  }();
  var InputWeek = /* @__PURE__ */ function() {
    function InputWeek2() {
    }
    ;
    InputWeek2.value = new InputWeek2();
    return InputWeek2;
  }();
  var renderInputType = function(v) {
    if (v instanceof InputButton) {
      return "button";
    }
    ;
    if (v instanceof InputCheckbox) {
      return "checkbox";
    }
    ;
    if (v instanceof InputColor) {
      return "color";
    }
    ;
    if (v instanceof InputDate) {
      return "date";
    }
    ;
    if (v instanceof InputDatetimeLocal) {
      return "datetime-local";
    }
    ;
    if (v instanceof InputEmail) {
      return "email";
    }
    ;
    if (v instanceof InputFile) {
      return "file";
    }
    ;
    if (v instanceof InputHidden) {
      return "hidden";
    }
    ;
    if (v instanceof InputImage) {
      return "image";
    }
    ;
    if (v instanceof InputMonth) {
      return "month";
    }
    ;
    if (v instanceof InputNumber) {
      return "number";
    }
    ;
    if (v instanceof InputPassword) {
      return "password";
    }
    ;
    if (v instanceof InputRadio) {
      return "radio";
    }
    ;
    if (v instanceof InputRange) {
      return "range";
    }
    ;
    if (v instanceof InputReset) {
      return "reset";
    }
    ;
    if (v instanceof InputSearch) {
      return "search";
    }
    ;
    if (v instanceof InputSubmit) {
      return "submit";
    }
    ;
    if (v instanceof InputTel) {
      return "tel";
    }
    ;
    if (v instanceof InputText) {
      return "text";
    }
    ;
    if (v instanceof InputTime) {
      return "time";
    }
    ;
    if (v instanceof InputUrl) {
      return "url";
    }
    ;
    if (v instanceof InputWeek) {
      return "week";
    }
    ;
    throw new Error("Failed pattern match at DOM.HTML.Indexed.InputType (line 33, column 19 - line 55, column 22): " + [v.constructor.name]);
  };

  // output/Halogen.Query.Input/index.js
  var RefUpdate = /* @__PURE__ */ function() {
    function RefUpdate2(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    RefUpdate2.create = function(value0) {
      return function(value14) {
        return new RefUpdate2(value0, value14);
      };
    };
    return RefUpdate2;
  }();
  var Action = /* @__PURE__ */ function() {
    function Action3(value0) {
      this.value0 = value0;
    }
    ;
    Action3.create = function(value0) {
      return new Action3(value0);
    };
    return Action3;
  }();

  // output/Data.Array/foreign.js
  var range2 = function(start2) {
    return function(end) {
      var step5 = start2 > end ? -1 : 1;
      var result = new Array(step5 * (end - start2) + 1);
      var i2 = start2, n = 0;
      while (i2 !== end) {
        result[n++] = i2;
        i2 += step5;
      }
      result[n] = i2;
      return result;
    };
  };
  var replicateFill = function(count) {
    return function(value14) {
      if (count < 1) {
        return [];
      }
      var result = new Array(count);
      return result.fill(value14);
    };
  };
  var replicatePolyfill = function(count) {
    return function(value14) {
      var result = [];
      var n = 0;
      for (var i2 = 0; i2 < count; i2++) {
        result[n++] = value14;
      }
      return result;
    };
  };
  var replicate = typeof Array.prototype.fill === "function" ? replicateFill : replicatePolyfill;
  var fromFoldableImpl = function() {
    function Cons3(head5, tail3) {
      this.head = head5;
      this.tail = tail3;
    }
    var emptyList = {};
    function curryCons(head5) {
      return function(tail3) {
        return new Cons3(head5, tail3);
      };
    }
    function listToArray(list) {
      var result = [];
      var count = 0;
      var xs = list;
      while (xs !== emptyList) {
        result[count++] = xs.head;
        xs = xs.tail;
      }
      return result;
    }
    return function(foldr10) {
      return function(xs) {
        return listToArray(foldr10(curryCons)(emptyList)(xs));
      };
    };
  }();
  var length5 = function(xs) {
    return xs.length;
  };
  var unconsImpl = function(empty13) {
    return function(next2) {
      return function(xs) {
        return xs.length === 0 ? empty13({}) : next2(xs[0])(xs.slice(1));
      };
    };
  };
  var indexImpl = function(just2) {
    return function(nothing) {
      return function(xs) {
        return function(i2) {
          return i2 < 0 || i2 >= xs.length ? nothing : just2(xs[i2]);
        };
      };
    };
  };
  var findIndexImpl = function(just2) {
    return function(nothing) {
      return function(f) {
        return function(xs) {
          for (var i2 = 0, l = xs.length; i2 < l; i2++) {
            if (f(xs[i2]))
              return just2(i2);
          }
          return nothing;
        };
      };
    };
  };
  var _deleteAt = function(just2) {
    return function(nothing) {
      return function(i2) {
        return function(l) {
          if (i2 < 0 || i2 >= l.length)
            return nothing;
          var l1 = l.slice();
          l1.splice(i2, 1);
          return just2(l1);
        };
      };
    };
  };
  var _updateAt = function(just2) {
    return function(nothing) {
      return function(i2) {
        return function(a2) {
          return function(l) {
            if (i2 < 0 || i2 >= l.length)
              return nothing;
            var l1 = l.slice();
            l1[i2] = a2;
            return just2(l1);
          };
        };
      };
    };
  };
  var reverse2 = function(l) {
    return l.slice().reverse();
  };
  var concat2 = function(xss) {
    if (xss.length <= 1e4) {
      return Array.prototype.concat.apply([], xss);
    }
    var result = [];
    for (var i2 = 0, l = xss.length; i2 < l; i2++) {
      var xs = xss[i2];
      for (var j = 0, m = xs.length; j < m; j++) {
        result.push(xs[j]);
      }
    }
    return result;
  };
  var filter2 = function(f) {
    return function(xs) {
      return xs.filter(f);
    };
  };
  var sortByImpl = function() {
    function mergeFromTo(compare10, fromOrdering, xs1, xs2, from3, to2) {
      var mid;
      var i2;
      var j;
      var k;
      var x;
      var y;
      var c;
      mid = from3 + (to2 - from3 >> 1);
      if (mid - from3 > 1)
        mergeFromTo(compare10, fromOrdering, xs2, xs1, from3, mid);
      if (to2 - mid > 1)
        mergeFromTo(compare10, fromOrdering, xs2, xs1, mid, to2);
      i2 = from3;
      j = mid;
      k = from3;
      while (i2 < mid && j < to2) {
        x = xs2[i2];
        y = xs2[j];
        c = fromOrdering(compare10(x)(y));
        if (c > 0) {
          xs1[k++] = y;
          ++j;
        } else {
          xs1[k++] = x;
          ++i2;
        }
      }
      while (i2 < mid) {
        xs1[k++] = xs2[i2++];
      }
      while (j < to2) {
        xs1[k++] = xs2[j++];
      }
    }
    return function(compare10) {
      return function(fromOrdering) {
        return function(xs) {
          var out;
          if (xs.length < 2)
            return xs;
          out = xs.slice(0);
          mergeFromTo(compare10, fromOrdering, out, xs.slice(0), 0, xs.length);
          return out;
        };
      };
    };
  }();
  var slice = function(s) {
    return function(e) {
      return function(l) {
        return l.slice(s, e);
      };
    };
  };
  var zipWith2 = function(f) {
    return function(xs) {
      return function(ys) {
        var l = xs.length < ys.length ? xs.length : ys.length;
        var result = new Array(l);
        for (var i2 = 0; i2 < l; i2++) {
          result[i2] = f(xs[i2])(ys[i2]);
        }
        return result;
      };
    };
  };
  var any2 = function(p2) {
    return function(xs) {
      var len = xs.length;
      for (var i2 = 0; i2 < len; i2++) {
        if (p2(xs[i2]))
          return true;
      }
      return false;
    };
  };
  var all2 = function(p2) {
    return function(xs) {
      var len = xs.length;
      for (var i2 = 0; i2 < len; i2++) {
        if (!p2(xs[i2]))
          return false;
      }
      return true;
    };
  };
  var unsafeIndexImpl = function(xs) {
    return function(n) {
      return xs[n];
    };
  };

  // output/Data.Array.ST/foreign.js
  function newSTArray() {
    return [];
  }
  var pushAll = function(as) {
    return function(xs) {
      return function() {
        return xs.push.apply(xs, as);
      };
    };
  };
  var unsafeFreeze = function(xs) {
    return function() {
      return xs;
    };
  };
  var unsafeThaw = function(xs) {
    return function() {
      return xs;
    };
  };
  function copyImpl(xs) {
    return function() {
      return xs.slice();
    };
  }
  var thaw = copyImpl;
  var sortByImpl2 = function() {
    function mergeFromTo(compare10, fromOrdering, xs1, xs2, from3, to2) {
      var mid;
      var i2;
      var j;
      var k;
      var x;
      var y;
      var c;
      mid = from3 + (to2 - from3 >> 1);
      if (mid - from3 > 1)
        mergeFromTo(compare10, fromOrdering, xs2, xs1, from3, mid);
      if (to2 - mid > 1)
        mergeFromTo(compare10, fromOrdering, xs2, xs1, mid, to2);
      i2 = from3;
      j = mid;
      k = from3;
      while (i2 < mid && j < to2) {
        x = xs2[i2];
        y = xs2[j];
        c = fromOrdering(compare10(x)(y));
        if (c > 0) {
          xs1[k++] = y;
          ++j;
        } else {
          xs1[k++] = x;
          ++i2;
        }
      }
      while (i2 < mid) {
        xs1[k++] = xs2[i2++];
      }
      while (j < to2) {
        xs1[k++] = xs2[j++];
      }
    }
    return function(compare10) {
      return function(fromOrdering) {
        return function(xs) {
          return function() {
            if (xs.length < 2)
              return xs;
            mergeFromTo(compare10, fromOrdering, xs, xs.slice(0), 0, xs.length);
            return xs;
          };
        };
      };
    };
  }();

  // output/Data.Array.ST/index.js
  var withArray = function(f) {
    return function(xs) {
      return function __do2() {
        var result = thaw(xs)();
        f(result)();
        return unsafeFreeze(result)();
      };
    };
  };
  var push = function(a2) {
    return pushAll([a2]);
  };

  // output/Data.Array.ST.Iterator/index.js
  var map13 = /* @__PURE__ */ map(functorST);
  var not2 = /* @__PURE__ */ not(heytingAlgebraBoolean);
  var $$void4 = /* @__PURE__ */ $$void(functorST);
  var Iterator = /* @__PURE__ */ function() {
    function Iterator2(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    Iterator2.create = function(value0) {
      return function(value14) {
        return new Iterator2(value0, value14);
      };
    };
    return Iterator2;
  }();
  var next = function(v) {
    return function __do2() {
      var i2 = read2(v.value1)();
      modify2(function(v1) {
        return v1 + 1 | 0;
      })(v.value1)();
      return v.value0(i2);
    };
  };
  var iterator = function(f) {
    return map13(Iterator.create(f))(newSTRef(0));
  };
  var iterate = function(iter) {
    return function(f) {
      return function __do2() {
        var $$break = newSTRef(false)();
        while (map13(not2)(read2($$break))()) {
          (function __do3() {
            var mx = next(iter)();
            if (mx instanceof Just) {
              return f(mx.value0)();
            }
            ;
            if (mx instanceof Nothing) {
              return $$void4(write2(true)($$break))();
            }
            ;
            throw new Error("Failed pattern match at Data.Array.ST.Iterator (line 42, column 5 - line 44, column 47): " + [mx.constructor.name]);
          })();
        }
        ;
        return {};
      };
    };
  };

  // output/Data.Array/index.js
  var map14 = /* @__PURE__ */ map(functorST);
  var when2 = /* @__PURE__ */ when(applicativeST);
  var $$void5 = /* @__PURE__ */ $$void(functorST);
  var intercalate1 = /* @__PURE__ */ intercalate(foldableArray);
  var apply3 = /* @__PURE__ */ apply(applyMaybe);
  var map15 = /* @__PURE__ */ map(functorMaybe);
  var map22 = /* @__PURE__ */ map(functorArray);
  var fromJust4 = /* @__PURE__ */ fromJust();
  var notEq2 = /* @__PURE__ */ notEq(eqOrdering);
  var foldMap12 = /* @__PURE__ */ foldMap(foldableArray);
  var append2 = /* @__PURE__ */ append(semigroupArray);
  var zip = /* @__PURE__ */ function() {
    return zipWith2(Tuple.create);
  }();
  var updateAt = /* @__PURE__ */ function() {
    return _updateAt(Just.create)(Nothing.value);
  }();
  var unsafeIndex = function() {
    return unsafeIndexImpl;
  };
  var uncons2 = /* @__PURE__ */ function() {
    return unconsImpl($$const(Nothing.value))(function(x) {
      return function(xs) {
        return new Just({
          head: x,
          tail: xs
        });
      };
    });
  }();
  var take = function(n) {
    return function(xs) {
      var $148 = n < 1;
      if ($148) {
        return [];
      }
      ;
      return slice(0)(n)(xs);
    };
  };
  var sortBy = function(comp) {
    return sortByImpl(comp)(function(v) {
      if (v instanceof GT) {
        return 1;
      }
      ;
      if (v instanceof EQ) {
        return 0;
      }
      ;
      if (v instanceof LT) {
        return -1 | 0;
      }
      ;
      throw new Error("Failed pattern match at Data.Array (line 870, column 31 - line 873, column 11): " + [v.constructor.name]);
    });
  };
  var sortWith = function(dictOrd) {
    var comparing2 = comparing(dictOrd);
    return function(f) {
      return sortBy(comparing2(f));
    };
  };
  var sortWith1 = /* @__PURE__ */ sortWith(ordInt);
  var snoc = function(xs) {
    return function(x) {
      return withArray(push(x))(xs)();
    };
  };
  var singleton5 = function(a2) {
    return [a2];
  };
  var $$null3 = function(xs) {
    return length5(xs) === 0;
  };
  var mapWithIndex3 = function(f) {
    return function(xs) {
      return zipWith2(f)(range2(0)(length5(xs) - 1 | 0))(xs);
    };
  };
  var intercalate3 = function(dictMonoid) {
    return intercalate1(dictMonoid);
  };
  var init = function(xs) {
    if ($$null3(xs)) {
      return Nothing.value;
    }
    ;
    if (otherwise) {
      return new Just(slice(0)(length5(xs) - 1 | 0)(xs));
    }
    ;
    throw new Error("Failed pattern match at Data.Array (line 339, column 1 - line 339, column 45): " + [xs.constructor.name]);
  };
  var index3 = /* @__PURE__ */ function() {
    return indexImpl(Just.create)(Nothing.value);
  }();
  var last = function(xs) {
    return index3(xs)(length5(xs) - 1 | 0);
  };
  var unsnoc = function(xs) {
    return apply3(map15(function(v) {
      return function(v1) {
        return {
          init: v,
          last: v1
        };
      };
    })(init(xs)))(last(xs));
  };
  var modifyAt = function(i2) {
    return function(f) {
      return function(xs) {
        var go2 = function(x) {
          return updateAt(i2)(f(x))(xs);
        };
        return maybe(Nothing.value)(go2)(index3(xs)(i2));
      };
    };
  };
  var unzip2 = function(xs) {
    return function __do2() {
      var fsts = newSTArray();
      var snds = newSTArray();
      var iter = iterator(function(v) {
        return index3(xs)(v);
      })();
      iterate(iter)(function(v) {
        return function __do3() {
          $$void5(push(v.value0)(fsts))();
          return $$void5(push(v.value1)(snds))();
        };
      })();
      var fsts$prime = unsafeFreeze(fsts)();
      var snds$prime = unsafeFreeze(snds)();
      return new Tuple(fsts$prime, snds$prime);
    }();
  };
  var head3 = function(xs) {
    return index3(xs)(0);
  };
  var nubBy = function(comp) {
    return function(xs) {
      var indexedAndSorted = sortBy(function(x) {
        return function(y) {
          return comp(snd(x))(snd(y));
        };
      })(mapWithIndex3(Tuple.create)(xs));
      var v = head3(indexedAndSorted);
      if (v instanceof Nothing) {
        return [];
      }
      ;
      if (v instanceof Just) {
        return map22(snd)(sortWith1(fst)(function __do2() {
          var result = unsafeThaw(singleton5(v.value0))();
          foreach(indexedAndSorted)(function(v1) {
            return function __do3() {
              var lst = map14(function() {
                var $184 = function($186) {
                  return fromJust4(last($186));
                };
                return function($185) {
                  return snd($184($185));
                };
              }())(unsafeFreeze(result))();
              return when2(notEq2(comp(lst)(v1.value1))(EQ.value))($$void5(push(v1)(result)))();
            };
          })();
          return unsafeFreeze(result)();
        }()));
      }
      ;
      throw new Error("Failed pattern match at Data.Array (line 1085, column 17 - line 1093, column 29): " + [v.constructor.name]);
    };
  };
  var nub2 = function(dictOrd) {
    return nubBy(compare(dictOrd));
  };
  var fromFoldable3 = function(dictFoldable) {
    return fromFoldableImpl(foldr(dictFoldable));
  };
  var foldMap2 = function(dictMonoid) {
    return foldMap12(dictMonoid);
  };
  var findIndex = /* @__PURE__ */ function() {
    return findIndexImpl(Just.create)(Nothing.value);
  }();
  var elemIndex = function(dictEq) {
    var eq24 = eq(dictEq);
    return function(x) {
      return findIndex(function(v) {
        return eq24(v)(x);
      });
    };
  };
  var elem2 = function(dictEq) {
    var elemIndex1 = elemIndex(dictEq);
    return function(a2) {
      return function(arr) {
        return isJust(elemIndex1(a2)(arr));
      };
    };
  };
  var drop = function(n) {
    return function(xs) {
      var $172 = n < 1;
      if ($172) {
        return xs;
      }
      ;
      return slice(n)(length5(xs))(xs);
    };
  };
  var deleteAt = /* @__PURE__ */ function() {
    return _deleteAt(Just.create)(Nothing.value);
  }();
  var deleteBy = function(v) {
    return function(v1) {
      return function(v2) {
        if (v2.length === 0) {
          return [];
        }
        ;
        return maybe(v2)(function(i2) {
          return fromJust4(deleteAt(i2)(v2));
        })(findIndex(v(v1))(v2));
      };
    };
  };
  var cons2 = function(x) {
    return function(xs) {
      return append2([x])(xs);
    };
  };
  var concatMap = /* @__PURE__ */ flip(/* @__PURE__ */ bind(bindArray));
  var mapMaybe2 = function(f) {
    return concatMap(function() {
      var $190 = maybe([])(singleton5);
      return function($191) {
        return $190(f($191));
      };
    }());
  };
  var catMaybes = /* @__PURE__ */ mapMaybe2(/* @__PURE__ */ identity(categoryFn));

  // output/Halogen.VDom.Machine/index.js
  var Step = /* @__PURE__ */ function() {
    function Step4(value0, value14, value23, value33) {
      this.value0 = value0;
      this.value1 = value14;
      this.value2 = value23;
      this.value3 = value33;
    }
    ;
    Step4.create = function(value0) {
      return function(value14) {
        return function(value23) {
          return function(value33) {
            return new Step4(value0, value14, value23, value33);
          };
        };
      };
    };
    return Step4;
  }();
  var unStep = unsafeCoerce2;
  var step3 = function(v, a2) {
    return v.value2(v.value1, a2);
  };
  var mkStep = unsafeCoerce2;
  var halt = function(v) {
    return v.value3(v.value1);
  };
  var extract2 = /* @__PURE__ */ unStep(function(v) {
    return v.value0;
  });

  // output/Halogen.VDom.Types/index.js
  var map16 = /* @__PURE__ */ map(functorArray);
  var map17 = /* @__PURE__ */ map(functorTuple);
  var Text = /* @__PURE__ */ function() {
    function Text2(value0) {
      this.value0 = value0;
    }
    ;
    Text2.create = function(value0) {
      return new Text2(value0);
    };
    return Text2;
  }();
  var Elem = /* @__PURE__ */ function() {
    function Elem3(value0, value14, value23, value33) {
      this.value0 = value0;
      this.value1 = value14;
      this.value2 = value23;
      this.value3 = value33;
    }
    ;
    Elem3.create = function(value0) {
      return function(value14) {
        return function(value23) {
          return function(value33) {
            return new Elem3(value0, value14, value23, value33);
          };
        };
      };
    };
    return Elem3;
  }();
  var Keyed = /* @__PURE__ */ function() {
    function Keyed2(value0, value14, value23, value33) {
      this.value0 = value0;
      this.value1 = value14;
      this.value2 = value23;
      this.value3 = value33;
    }
    ;
    Keyed2.create = function(value0) {
      return function(value14) {
        return function(value23) {
          return function(value33) {
            return new Keyed2(value0, value14, value23, value33);
          };
        };
      };
    };
    return Keyed2;
  }();
  var Widget = /* @__PURE__ */ function() {
    function Widget2(value0) {
      this.value0 = value0;
    }
    ;
    Widget2.create = function(value0) {
      return new Widget2(value0);
    };
    return Widget2;
  }();
  var Grafted = /* @__PURE__ */ function() {
    function Grafted2(value0) {
      this.value0 = value0;
    }
    ;
    Grafted2.create = function(value0) {
      return new Grafted2(value0);
    };
    return Grafted2;
  }();
  var Graft = /* @__PURE__ */ function() {
    function Graft2(value0, value14, value23) {
      this.value0 = value0;
      this.value1 = value14;
      this.value2 = value23;
    }
    ;
    Graft2.create = function(value0) {
      return function(value14) {
        return function(value23) {
          return new Graft2(value0, value14, value23);
        };
      };
    };
    return Graft2;
  }();
  var unGraft = function(f) {
    return function($61) {
      return f($61);
    };
  };
  var graft = unsafeCoerce2;
  var bifunctorGraft = {
    bimap: function(f) {
      return function(g) {
        return unGraft(function(v) {
          return graft(new Graft(function($63) {
            return f(v.value0($63));
          }, function($64) {
            return g(v.value1($64));
          }, v.value2));
        });
      };
    }
  };
  var bimap2 = /* @__PURE__ */ bimap(bifunctorGraft);
  var runGraft = /* @__PURE__ */ unGraft(function(v) {
    var go2 = function(v2) {
      if (v2 instanceof Text) {
        return new Text(v2.value0);
      }
      ;
      if (v2 instanceof Elem) {
        return new Elem(v2.value0, v2.value1, v.value0(v2.value2), map16(go2)(v2.value3));
      }
      ;
      if (v2 instanceof Keyed) {
        return new Keyed(v2.value0, v2.value1, v.value0(v2.value2), map16(map17(go2))(v2.value3));
      }
      ;
      if (v2 instanceof Widget) {
        return new Widget(v.value1(v2.value0));
      }
      ;
      if (v2 instanceof Grafted) {
        return new Grafted(bimap2(v.value0)(v.value1)(v2.value0));
      }
      ;
      throw new Error("Failed pattern match at Halogen.VDom.Types (line 86, column 7 - line 86, column 27): " + [v2.constructor.name]);
    };
    return go2(v.value2);
  });

  // output/Halogen.VDom.Util/foreign.js
  function unsafeGetAny(key6, obj) {
    return obj[key6];
  }
  function unsafeHasAny(key6, obj) {
    return obj.hasOwnProperty(key6);
  }
  function unsafeSetAny(key6, val, obj) {
    obj[key6] = val;
  }
  function forE2(a2, f) {
    var b2 = [];
    for (var i2 = 0; i2 < a2.length; i2++) {
      b2.push(f(i2, a2[i2]));
    }
    return b2;
  }
  function forEachE(a2, f) {
    for (var i2 = 0; i2 < a2.length; i2++) {
      f(a2[i2]);
    }
  }
  function forInE(o, f) {
    var ks = Object.keys(o);
    for (var i2 = 0; i2 < ks.length; i2++) {
      var k = ks[i2];
      f(k, o[k]);
    }
  }
  function diffWithIxE(a1, a2, f1, f2, f3) {
    var a3 = [];
    var l1 = a1.length;
    var l2 = a2.length;
    var i2 = 0;
    while (1) {
      if (i2 < l1) {
        if (i2 < l2) {
          a3.push(f1(i2, a1[i2], a2[i2]));
        } else {
          f2(i2, a1[i2]);
        }
      } else if (i2 < l2) {
        a3.push(f3(i2, a2[i2]));
      } else {
        break;
      }
      i2++;
    }
    return a3;
  }
  function strMapWithIxE(as, fk, f) {
    var o = {};
    for (var i2 = 0; i2 < as.length; i2++) {
      var a2 = as[i2];
      var k = fk(a2);
      o[k] = f(k, i2, a2);
    }
    return o;
  }
  function diffWithKeyAndIxE(o1, as, fk, f1, f2, f3) {
    var o2 = {};
    for (var i2 = 0; i2 < as.length; i2++) {
      var a2 = as[i2];
      var k = fk(a2);
      if (o1.hasOwnProperty(k)) {
        o2[k] = f1(k, i2, o1[k], a2);
      } else {
        o2[k] = f3(k, i2, a2);
      }
    }
    for (var k in o1) {
      if (k in o2) {
        continue;
      }
      f2(k, o1[k]);
    }
    return o2;
  }
  function refEq2(a2, b2) {
    return a2 === b2;
  }
  function createTextNode(s, doc) {
    return doc.createTextNode(s);
  }
  function setTextContent(s, n) {
    n.textContent = s;
  }
  function createElement(ns, name15, doc) {
    if (ns != null) {
      return doc.createElementNS(ns, name15);
    } else {
      return doc.createElement(name15);
    }
  }
  function insertChildIx(i2, a2, b2) {
    var n = b2.childNodes.item(i2) || null;
    if (n !== a2) {
      b2.insertBefore(a2, n);
    }
  }
  function removeChild(a2, b2) {
    if (b2 && a2.parentNode === b2) {
      b2.removeChild(a2);
    }
  }
  function parentNode(a2) {
    return a2.parentNode;
  }
  function setAttribute(ns, attr3, val, el) {
    if (ns != null) {
      el.setAttributeNS(ns, attr3, val);
    } else {
      el.setAttribute(attr3, val);
    }
  }
  function removeAttribute(ns, attr3, el) {
    if (ns != null) {
      el.removeAttributeNS(ns, attr3);
    } else {
      el.removeAttribute(attr3);
    }
  }
  function hasAttribute(ns, attr3, el) {
    if (ns != null) {
      return el.hasAttributeNS(ns, attr3);
    } else {
      return el.hasAttribute(attr3);
    }
  }
  function addEventListener2(ev, listener, el) {
    el.addEventListener(ev, listener, false);
  }
  function removeEventListener2(ev, listener, el) {
    el.removeEventListener(ev, listener, false);
  }
  var jsUndefined = void 0;

  // output/Foreign.Object.ST/foreign.js
  var newImpl = function() {
    return {};
  };
  function poke2(k) {
    return function(v) {
      return function(m) {
        return function() {
          m[k] = v;
          return m;
        };
      };
    };
  }

  // output/Halogen.VDom.Util/index.js
  var unsafeLookup = unsafeGetAny;
  var unsafeFreeze2 = unsafeCoerce2;
  var pokeMutMap = unsafeSetAny;
  var newMutMap = newImpl;

  // output/Web.DOM.Element/foreign.js
  var getProp = function(name15) {
    return function(doctype) {
      return doctype[name15];
    };
  };
  var _namespaceURI = getProp("namespaceURI");
  var _prefix = getProp("prefix");
  var localName = getProp("localName");
  var tagName = getProp("tagName");
  function classList(element4) {
    return function() {
      return element4.classList;
    };
  }
  function getBoundingClientRect(el) {
    return function() {
      var rect = el.getBoundingClientRect();
      return {
        top: rect.top,
        right: rect.right,
        bottom: rect.bottom,
        left: rect.left,
        width: rect.width,
        height: rect.height,
        x: rect.x,
        y: rect.y
      };
    };
  }

  // output/Web.DOM.Element/index.js
  var toNode2 = unsafeCoerce2;

  // output/Halogen.VDom.DOM/index.js
  var $runtime_lazy4 = function(name15, moduleName, init3) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2)
        return val;
      if (state3 === 1)
        throw new ReferenceError(name15 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init3();
      state3 = 2;
      return val;
    };
  };
  var haltWidget = function(v) {
    return halt(v.widget);
  };
  var $lazy_patchWidget = /* @__PURE__ */ $runtime_lazy4("patchWidget", "Halogen.VDom.DOM", function() {
    return function(state3, vdom) {
      if (vdom instanceof Grafted) {
        return $lazy_patchWidget(291)(state3, runGraft(vdom.value0));
      }
      ;
      if (vdom instanceof Widget) {
        var res = step3(state3.widget, vdom.value0);
        var res$prime = unStep(function(v) {
          return mkStep(new Step(v.value0, {
            build: state3.build,
            widget: res
          }, $lazy_patchWidget(296), haltWidget));
        })(res);
        return res$prime;
      }
      ;
      haltWidget(state3);
      return state3.build(vdom);
    };
  });
  var patchWidget = /* @__PURE__ */ $lazy_patchWidget(286);
  var haltText = function(v) {
    var parent2 = parentNode(v.node);
    return removeChild(v.node, parent2);
  };
  var $lazy_patchText = /* @__PURE__ */ $runtime_lazy4("patchText", "Halogen.VDom.DOM", function() {
    return function(state3, vdom) {
      if (vdom instanceof Grafted) {
        return $lazy_patchText(82)(state3, runGraft(vdom.value0));
      }
      ;
      if (vdom instanceof Text) {
        if (state3.value === vdom.value0) {
          return mkStep(new Step(state3.node, state3, $lazy_patchText(85), haltText));
        }
        ;
        if (otherwise) {
          var nextState = {
            build: state3.build,
            node: state3.node,
            value: vdom.value0
          };
          setTextContent(vdom.value0, state3.node);
          return mkStep(new Step(state3.node, nextState, $lazy_patchText(89), haltText));
        }
        ;
      }
      ;
      haltText(state3);
      return state3.build(vdom);
    };
  });
  var patchText = /* @__PURE__ */ $lazy_patchText(77);
  var haltKeyed = function(v) {
    var parent2 = parentNode(v.node);
    removeChild(v.node, parent2);
    forInE(v.children, function(v1, s) {
      return halt(s);
    });
    return halt(v.attrs);
  };
  var haltElem = function(v) {
    var parent2 = parentNode(v.node);
    removeChild(v.node, parent2);
    forEachE(v.children, halt);
    return halt(v.attrs);
  };
  var eqElemSpec = function(ns1, v, ns2, v1) {
    var $63 = v === v1;
    if ($63) {
      if (ns1 instanceof Just && (ns2 instanceof Just && ns1.value0 === ns2.value0)) {
        return true;
      }
      ;
      if (ns1 instanceof Nothing && ns2 instanceof Nothing) {
        return true;
      }
      ;
      return false;
    }
    ;
    return false;
  };
  var $lazy_patchElem = /* @__PURE__ */ $runtime_lazy4("patchElem", "Halogen.VDom.DOM", function() {
    return function(state3, vdom) {
      if (vdom instanceof Grafted) {
        return $lazy_patchElem(135)(state3, runGraft(vdom.value0));
      }
      ;
      if (vdom instanceof Elem && eqElemSpec(state3.ns, state3.name, vdom.value0, vdom.value1)) {
        var v = length5(vdom.value3);
        var v1 = length5(state3.children);
        if (v1 === 0 && v === 0) {
          var attrs2 = step3(state3.attrs, vdom.value2);
          var nextState = {
            build: state3.build,
            node: state3.node,
            attrs: attrs2,
            ns: vdom.value0,
            name: vdom.value1,
            children: state3.children
          };
          return mkStep(new Step(state3.node, nextState, $lazy_patchElem(149), haltElem));
        }
        ;
        var onThis = function(v2, s) {
          return halt(s);
        };
        var onThese = function(ix, s, v2) {
          var res = step3(s, v2);
          insertChildIx(ix, extract2(res), state3.node);
          return res;
        };
        var onThat = function(ix, v2) {
          var res = state3.build(v2);
          insertChildIx(ix, extract2(res), state3.node);
          return res;
        };
        var children2 = diffWithIxE(state3.children, vdom.value3, onThese, onThis, onThat);
        var attrs2 = step3(state3.attrs, vdom.value2);
        var nextState = {
          build: state3.build,
          node: state3.node,
          attrs: attrs2,
          ns: vdom.value0,
          name: vdom.value1,
          children: children2
        };
        return mkStep(new Step(state3.node, nextState, $lazy_patchElem(172), haltElem));
      }
      ;
      haltElem(state3);
      return state3.build(vdom);
    };
  });
  var patchElem = /* @__PURE__ */ $lazy_patchElem(130);
  var $lazy_patchKeyed = /* @__PURE__ */ $runtime_lazy4("patchKeyed", "Halogen.VDom.DOM", function() {
    return function(state3, vdom) {
      if (vdom instanceof Grafted) {
        return $lazy_patchKeyed(222)(state3, runGraft(vdom.value0));
      }
      ;
      if (vdom instanceof Keyed && eqElemSpec(state3.ns, state3.name, vdom.value0, vdom.value1)) {
        var v = length5(vdom.value3);
        if (state3.length === 0 && v === 0) {
          var attrs2 = step3(state3.attrs, vdom.value2);
          var nextState = {
            build: state3.build,
            node: state3.node,
            attrs: attrs2,
            ns: vdom.value0,
            name: vdom.value1,
            children: state3.children,
            length: 0
          };
          return mkStep(new Step(state3.node, nextState, $lazy_patchKeyed(237), haltKeyed));
        }
        ;
        var onThis = function(v2, s) {
          return halt(s);
        };
        var onThese = function(v2, ix$prime, s, v3) {
          var res = step3(s, v3.value1);
          insertChildIx(ix$prime, extract2(res), state3.node);
          return res;
        };
        var onThat = function(v2, ix, v3) {
          var res = state3.build(v3.value1);
          insertChildIx(ix, extract2(res), state3.node);
          return res;
        };
        var children2 = diffWithKeyAndIxE(state3.children, vdom.value3, fst, onThese, onThis, onThat);
        var attrs2 = step3(state3.attrs, vdom.value2);
        var nextState = {
          build: state3.build,
          node: state3.node,
          attrs: attrs2,
          ns: vdom.value0,
          name: vdom.value1,
          children: children2,
          length: v
        };
        return mkStep(new Step(state3.node, nextState, $lazy_patchKeyed(261), haltKeyed));
      }
      ;
      haltKeyed(state3);
      return state3.build(vdom);
    };
  });
  var patchKeyed = /* @__PURE__ */ $lazy_patchKeyed(217);
  var buildWidget = function(v, build, w) {
    var res = v.buildWidget(v)(w);
    var res$prime = unStep(function(v1) {
      return mkStep(new Step(v1.value0, {
        build,
        widget: res
      }, patchWidget, haltWidget));
    })(res);
    return res$prime;
  };
  var buildText = function(v, build, s) {
    var node = createTextNode(s, v.document);
    var state3 = {
      build,
      node,
      value: s
    };
    return mkStep(new Step(node, state3, patchText, haltText));
  };
  var buildKeyed = function(v, build, ns1, name1, as1, ch1) {
    var el = createElement(toNullable(ns1), name1, v.document);
    var node = toNode2(el);
    var onChild = function(v1, ix, v2) {
      var res = build(v2.value1);
      insertChildIx(ix, extract2(res), node);
      return res;
    };
    var children2 = strMapWithIxE(ch1, fst, onChild);
    var attrs = v.buildAttributes(el)(as1);
    var state3 = {
      build,
      node,
      attrs,
      ns: ns1,
      name: name1,
      children: children2,
      length: length5(ch1)
    };
    return mkStep(new Step(node, state3, patchKeyed, haltKeyed));
  };
  var buildElem = function(v, build, ns1, name1, as1, ch1) {
    var el = createElement(toNullable(ns1), name1, v.document);
    var node = toNode2(el);
    var onChild = function(ix, child2) {
      var res = build(child2);
      insertChildIx(ix, extract2(res), node);
      return res;
    };
    var children2 = forE2(ch1, onChild);
    var attrs = v.buildAttributes(el)(as1);
    var state3 = {
      build,
      node,
      attrs,
      ns: ns1,
      name: name1,
      children: children2
    };
    return mkStep(new Step(node, state3, patchElem, haltElem));
  };
  var buildVDom = function(spec) {
    var $lazy_build = $runtime_lazy4("build", "Halogen.VDom.DOM", function() {
      return function(v) {
        if (v instanceof Text) {
          return buildText(spec, $lazy_build(59), v.value0);
        }
        ;
        if (v instanceof Elem) {
          return buildElem(spec, $lazy_build(60), v.value0, v.value1, v.value2, v.value3);
        }
        ;
        if (v instanceof Keyed) {
          return buildKeyed(spec, $lazy_build(61), v.value0, v.value1, v.value2, v.value3);
        }
        ;
        if (v instanceof Widget) {
          return buildWidget(spec, $lazy_build(62), v.value0);
        }
        ;
        if (v instanceof Grafted) {
          return $lazy_build(63)(runGraft(v.value0));
        }
        ;
        throw new Error("Failed pattern match at Halogen.VDom.DOM (line 58, column 27 - line 63, column 52): " + [v.constructor.name]);
      };
    });
    var build = $lazy_build(58);
    return build;
  };

  // output/Foreign/foreign.js
  function typeOf(value14) {
    return typeof value14;
  }
  function tagOf(value14) {
    return Object.prototype.toString.call(value14).slice(8, -1);
  }
  var isArray = Array.isArray || function(value14) {
    return Object.prototype.toString.call(value14) === "[object Array]";
  };

  // output/Data.Int/foreign.js
  var fromNumberImpl = function(just2) {
    return function(nothing) {
      return function(n) {
        return (n | 0) === n ? just2(n) : nothing;
      };
    };
  };
  var toNumber = function(n) {
    return n;
  };
  var fromStringAsImpl = function(just2) {
    return function(nothing) {
      return function(radix) {
        var digits;
        if (radix < 11) {
          digits = "[0-" + (radix - 1).toString() + "]";
        } else if (radix === 11) {
          digits = "[0-9a]";
        } else {
          digits = "[0-9a-" + String.fromCharCode(86 + radix) + "]";
        }
        var pattern2 = new RegExp("^[\\+\\-]?" + digits + "+$", "i");
        return function(s) {
          if (pattern2.test(s)) {
            var i2 = parseInt(s, radix);
            return (i2 | 0) === i2 ? just2(i2) : nothing;
          } else {
            return nothing;
          }
        };
      };
    };
  };
  var pow = function(x) {
    return function(y) {
      return Math.pow(x, y) | 0;
    };
  };

  // output/Data.Number/foreign.js
  var isFiniteImpl = isFinite;
  var abs2 = Math.abs;
  var floor = Math.floor;
  var remainder = function(n) {
    return function(m) {
      return n % m;
    };
  };
  var round = Math.round;

  // output/Data.Int/index.js
  var top2 = /* @__PURE__ */ top(boundedInt);
  var bottom2 = /* @__PURE__ */ bottom(boundedInt);
  var fromStringAs = /* @__PURE__ */ function() {
    return fromStringAsImpl(Just.create)(Nothing.value);
  }();
  var fromString = /* @__PURE__ */ fromStringAs(10);
  var fromNumber = /* @__PURE__ */ function() {
    return fromNumberImpl(Just.create)(Nothing.value);
  }();
  var unsafeClamp = function(x) {
    if (!isFiniteImpl(x)) {
      return 0;
    }
    ;
    if (x >= toNumber(top2)) {
      return top2;
    }
    ;
    if (x <= toNumber(bottom2)) {
      return bottom2;
    }
    ;
    if (otherwise) {
      return fromMaybe(0)(fromNumber(x));
    }
    ;
    throw new Error("Failed pattern match at Data.Int (line 72, column 1 - line 72, column 29): " + [x.constructor.name]);
  };
  var round2 = function($37) {
    return unsafeClamp(round($37));
  };
  var floor2 = function($39) {
    return unsafeClamp(floor($39));
  };

  // output/Data.List.NonEmpty/index.js
  var singleton6 = /* @__PURE__ */ function() {
    var $200 = singleton2(plusList);
    return function($201) {
      return NonEmptyList($200($201));
    };
  }();
  var cons3 = function(y) {
    return function(v) {
      return new NonEmpty(y, new Cons(v.value0, v.value1));
    };
  };

  // output/Data.String.CodeUnits/foreign.js
  var singleton7 = function(c) {
    return c;
  };
  var length6 = function(s) {
    return s.length;
  };
  var _indexOf = function(just2) {
    return function(nothing) {
      return function(x) {
        return function(s) {
          var i2 = s.indexOf(x);
          return i2 === -1 ? nothing : just2(i2);
        };
      };
    };
  };
  var _lastIndexOf = function(just2) {
    return function(nothing) {
      return function(x) {
        return function(s) {
          var i2 = s.lastIndexOf(x);
          return i2 === -1 ? nothing : just2(i2);
        };
      };
    };
  };
  var take3 = function(n) {
    return function(s) {
      return s.substr(0, n);
    };
  };
  var drop3 = function(n) {
    return function(s) {
      return s.substring(n);
    };
  };

  // output/Data.String.Unsafe/foreign.js
  var charAt = function(i2) {
    return function(s) {
      if (i2 >= 0 && i2 < s.length)
        return s.charAt(i2);
      throw new Error("Data.String.Unsafe.charAt: Invalid index.");
    };
  };

  // output/Data.String.CodeUnits/index.js
  var lastIndexOf = /* @__PURE__ */ function() {
    return _lastIndexOf(Just.create)(Nothing.value);
  }();
  var indexOf = /* @__PURE__ */ function() {
    return _indexOf(Just.create)(Nothing.value);
  }();
  var contains = function(pat) {
    var $23 = indexOf(pat);
    return function($24) {
      return isJust($23($24));
    };
  };

  // output/Foreign/index.js
  var TypeMismatch = /* @__PURE__ */ function() {
    function TypeMismatch3(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    TypeMismatch3.create = function(value0) {
      return function(value14) {
        return new TypeMismatch3(value0, value14);
      };
    };
    return TypeMismatch3;
  }();
  var unsafeFromForeign = unsafeCoerce2;
  var fail = function(dictMonad) {
    var $153 = throwError(monadThrowExceptT(dictMonad));
    return function($154) {
      return $153(singleton6($154));
    };
  };
  var unsafeReadTagged = function(dictMonad) {
    var pure117 = pure(applicativeExceptT(dictMonad));
    var fail1 = fail(dictMonad);
    return function(tag) {
      return function(value14) {
        if (tagOf(value14) === tag) {
          return pure117(unsafeFromForeign(value14));
        }
        ;
        if (otherwise) {
          return fail1(new TypeMismatch(tag, tagOf(value14)));
        }
        ;
        throw new Error("Failed pattern match at Foreign (line 123, column 1 - line 123, column 104): " + [tag.constructor.name, value14.constructor.name]);
      };
    };
  };
  var readString = function(dictMonad) {
    return unsafeReadTagged(dictMonad)("String");
  };

  // output/Foreign.Object/foreign.js
  function _copyST(m) {
    return function() {
      var r = {};
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r[k] = m[k];
        }
      }
      return r;
    };
  }
  var empty4 = {};
  function runST(f) {
    return f();
  }
  function _foldM(bind36) {
    return function(f) {
      return function(mz) {
        return function(m) {
          var acc = mz;
          function g(k2) {
            return function(z) {
              return f(z)(k2)(m[k2]);
            };
          }
          for (var k in m) {
            if (hasOwnProperty.call(m, k)) {
              acc = bind36(acc)(g(k));
            }
          }
          return acc;
        };
      };
    };
  }
  function all3(f) {
    return function(m) {
      for (var k in m) {
        if (hasOwnProperty.call(m, k) && !f(k)(m[k]))
          return false;
      }
      return true;
    };
  }
  function _lookup(no, yes, k, m) {
    return k in m ? yes(m[k]) : no;
  }
  function toArrayWithKey(f) {
    return function(m) {
      var r = [];
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r.push(f(k)(m[k]));
        }
      }
      return r;
    };
  }
  var keys2 = Object.keys || toArrayWithKey(function(k) {
    return function() {
      return k;
    };
  });

  // output/Data.Function.Uncurried/foreign.js
  var runFn4 = function(fn) {
    return function(a2) {
      return function(b2) {
        return function(c) {
          return function(d) {
            return fn(a2, b2, c, d);
          };
        };
      };
    };
  };

  // output/Foreign.Object/index.js
  var $$void6 = /* @__PURE__ */ $$void(functorST);
  var thawST = _copyST;
  var mutate = function(f) {
    return function(m) {
      return runST(function __do2() {
        var s = thawST(m)();
        f(s)();
        return s;
      });
    };
  };
  var lookup4 = /* @__PURE__ */ function() {
    return runFn4(_lookup)(Nothing.value)(Just.create);
  }();
  var isEmpty2 = /* @__PURE__ */ all3(function(v) {
    return function(v1) {
      return false;
    };
  });
  var insert3 = function(k) {
    return function(v) {
      return mutate(poke2(k)(v));
    };
  };
  var fromFoldable4 = function(dictFoldable) {
    var fromFoldable110 = fromFoldable3(dictFoldable);
    return function(l) {
      return runST(function __do2() {
        var s = newImpl();
        foreach(fromFoldable110(l))(function(v) {
          return $$void6(poke2(v.value0)(v.value1)(s));
        })();
        return s;
      });
    };
  };
  var fold2 = /* @__PURE__ */ _foldM(applyFlipped);
  var foldMap3 = function(dictMonoid) {
    var append112 = append(dictMonoid.Semigroup0());
    var mempty6 = mempty(dictMonoid);
    return function(f) {
      return fold2(function(acc) {
        return function(k) {
          return function(v) {
            return append112(acc)(f(k)(v));
          };
        };
      })(mempty6);
    };
  };

  // output/Halogen.VDom.DOM.Prop/index.js
  var $runtime_lazy5 = function(name15, moduleName, init3) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2)
        return val;
      if (state3 === 1)
        throw new ReferenceError(name15 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init3();
      state3 = 2;
      return val;
    };
  };
  var Created = /* @__PURE__ */ function() {
    function Created2(value0) {
      this.value0 = value0;
    }
    ;
    Created2.create = function(value0) {
      return new Created2(value0);
    };
    return Created2;
  }();
  var Removed = /* @__PURE__ */ function() {
    function Removed2(value0) {
      this.value0 = value0;
    }
    ;
    Removed2.create = function(value0) {
      return new Removed2(value0);
    };
    return Removed2;
  }();
  var Attribute = /* @__PURE__ */ function() {
    function Attribute2(value0, value14, value23) {
      this.value0 = value0;
      this.value1 = value14;
      this.value2 = value23;
    }
    ;
    Attribute2.create = function(value0) {
      return function(value14) {
        return function(value23) {
          return new Attribute2(value0, value14, value23);
        };
      };
    };
    return Attribute2;
  }();
  var Property = /* @__PURE__ */ function() {
    function Property3(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    Property3.create = function(value0) {
      return function(value14) {
        return new Property3(value0, value14);
      };
    };
    return Property3;
  }();
  var Handler = /* @__PURE__ */ function() {
    function Handler2(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    Handler2.create = function(value0) {
      return function(value14) {
        return new Handler2(value0, value14);
      };
    };
    return Handler2;
  }();
  var Ref = /* @__PURE__ */ function() {
    function Ref2(value0) {
      this.value0 = value0;
    }
    ;
    Ref2.create = function(value0) {
      return new Ref2(value0);
    };
    return Ref2;
  }();
  var unsafeGetProperty = unsafeGetAny;
  var setProperty = unsafeSetAny;
  var removeProperty = function(key6, el) {
    var v = hasAttribute(nullImpl, key6, el);
    if (v) {
      return removeAttribute(nullImpl, key6, el);
    }
    ;
    var v1 = typeOf(unsafeGetAny(key6, el));
    if (v1 === "string") {
      return unsafeSetAny(key6, "", el);
    }
    ;
    if (key6 === "rowSpan") {
      return unsafeSetAny(key6, 1, el);
    }
    ;
    if (key6 === "colSpan") {
      return unsafeSetAny(key6, 1, el);
    }
    ;
    return unsafeSetAny(key6, jsUndefined, el);
  };
  var propToStrKey = function(v) {
    if (v instanceof Attribute && v.value0 instanceof Just) {
      return "attr/" + (v.value0.value0 + (":" + v.value1));
    }
    ;
    if (v instanceof Attribute) {
      return "attr/:" + v.value1;
    }
    ;
    if (v instanceof Property) {
      return "prop/" + v.value0;
    }
    ;
    if (v instanceof Handler) {
      return "handler/" + v.value0;
    }
    ;
    if (v instanceof Ref) {
      return "ref";
    }
    ;
    throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 182, column 16 - line 187, column 16): " + [v.constructor.name]);
  };
  var propFromString = unsafeCoerce2;
  var propFromBoolean = unsafeCoerce2;
  var buildProp = function(emit) {
    return function(el) {
      var removeProp = function(prevEvents) {
        return function(v, v1) {
          if (v1 instanceof Attribute) {
            return removeAttribute(toNullable(v1.value0), v1.value1, el);
          }
          ;
          if (v1 instanceof Property) {
            return removeProperty(v1.value0, el);
          }
          ;
          if (v1 instanceof Handler) {
            var handler3 = unsafeLookup(v1.value0, prevEvents);
            return removeEventListener2(v1.value0, fst(handler3), el);
          }
          ;
          if (v1 instanceof Ref) {
            return unit;
          }
          ;
          throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 169, column 5 - line 179, column 18): " + [v1.constructor.name]);
        };
      };
      var mbEmit = function(v) {
        if (v instanceof Just) {
          return emit(v.value0)();
        }
        ;
        return unit;
      };
      var haltProp = function(state3) {
        var v = lookup4("ref")(state3.props);
        if (v instanceof Just && v.value0 instanceof Ref) {
          return mbEmit(v.value0.value0(new Removed(el)));
        }
        ;
        return unit;
      };
      var diffProp = function(prevEvents, events) {
        return function(v, v1, v11, v2) {
          if (v11 instanceof Attribute && v2 instanceof Attribute) {
            var $66 = v11.value2 === v2.value2;
            if ($66) {
              return v2;
            }
            ;
            setAttribute(toNullable(v2.value0), v2.value1, v2.value2, el);
            return v2;
          }
          ;
          if (v11 instanceof Property && v2 instanceof Property) {
            var v4 = refEq2(v11.value1, v2.value1);
            if (v4) {
              return v2;
            }
            ;
            if (v2.value0 === "value") {
              var elVal = unsafeGetProperty("value", el);
              var $75 = refEq2(elVal, v2.value1);
              if ($75) {
                return v2;
              }
              ;
              setProperty(v2.value0, v2.value1, el);
              return v2;
            }
            ;
            setProperty(v2.value0, v2.value1, el);
            return v2;
          }
          ;
          if (v11 instanceof Handler && v2 instanceof Handler) {
            var handler3 = unsafeLookup(v2.value0, prevEvents);
            write(v2.value1)(snd(handler3))();
            pokeMutMap(v2.value0, handler3, events);
            return v2;
          }
          ;
          return v2;
        };
      };
      var applyProp = function(events) {
        return function(v, v1, v2) {
          if (v2 instanceof Attribute) {
            setAttribute(toNullable(v2.value0), v2.value1, v2.value2, el);
            return v2;
          }
          ;
          if (v2 instanceof Property) {
            setProperty(v2.value0, v2.value1, el);
            return v2;
          }
          ;
          if (v2 instanceof Handler) {
            var v3 = unsafeGetAny(v2.value0, events);
            if (unsafeHasAny(v2.value0, events)) {
              write(v2.value1)(snd(v3))();
              return v2;
            }
            ;
            var ref3 = $$new(v2.value1)();
            var listener = eventListener(function(ev) {
              return function __do2() {
                var f$prime = read(ref3)();
                return mbEmit(f$prime(ev));
              };
            })();
            pokeMutMap(v2.value0, new Tuple(listener, ref3), events);
            addEventListener2(v2.value0, listener, el);
            return v2;
          }
          ;
          if (v2 instanceof Ref) {
            mbEmit(v2.value0(new Created(el)));
            return v2;
          }
          ;
          throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 113, column 5 - line 135, column 15): " + [v2.constructor.name]);
        };
      };
      var $lazy_patchProp = $runtime_lazy5("patchProp", "Halogen.VDom.DOM.Prop", function() {
        return function(state3, ps2) {
          var events = newMutMap();
          var onThis = removeProp(state3.events);
          var onThese = diffProp(state3.events, events);
          var onThat = applyProp(events);
          var props = diffWithKeyAndIxE(state3.props, ps2, propToStrKey, onThese, onThis, onThat);
          var nextState = {
            events: unsafeFreeze2(events),
            props
          };
          return mkStep(new Step(unit, nextState, $lazy_patchProp(100), haltProp));
        };
      });
      var patchProp = $lazy_patchProp(87);
      var renderProp = function(ps1) {
        var events = newMutMap();
        var ps1$prime = strMapWithIxE(ps1, propToStrKey, applyProp(events));
        var state3 = {
          events: unsafeFreeze2(events),
          props: ps1$prime
        };
        return mkStep(new Step(unit, state3, patchProp, haltProp));
      };
      return renderProp;
    };
  };

  // output/Halogen.HTML.Core/index.js
  var HTML = function(x) {
    return x;
  };
  var widget = function($28) {
    return HTML(Widget.create($28));
  };
  var toPropValue = function(dict) {
    return dict.toPropValue;
  };
  var text5 = function($29) {
    return HTML(Text.create($29));
  };
  var ref = function(f) {
    return new Ref(function($30) {
      return f(function(v) {
        if (v instanceof Created) {
          return new Just(v.value0);
        }
        ;
        if (v instanceof Removed) {
          return Nothing.value;
        }
        ;
        throw new Error("Failed pattern match at Halogen.HTML.Core (line 109, column 21 - line 111, column 23): " + [v.constructor.name]);
      }($30));
    });
  };
  var prop = function(dictIsProp) {
    var toPropValue1 = toPropValue(dictIsProp);
    return function(v) {
      var $31 = Property.create(v);
      return function($32) {
        return $31(toPropValue1($32));
      };
    };
  };
  var isPropString = {
    toPropValue: propFromString
  };
  var isPropInputType = {
    toPropValue: function($45) {
      return propFromString(renderInputType($45));
    }
  };
  var isPropBoolean = {
    toPropValue: propFromBoolean
  };
  var handler = /* @__PURE__ */ function() {
    return Handler.create;
  }();
  var element = function(ns) {
    return function(name15) {
      return function(props) {
        return function(children2) {
          return new Elem(ns, name15, props, children2);
        };
      };
    };
  };
  var attr = function(ns) {
    return function(v) {
      return Attribute.create(ns)(v);
    };
  };

  // output/Control.Applicative.Free/index.js
  var identity11 = /* @__PURE__ */ identity(categoryFn);
  var Pure = /* @__PURE__ */ function() {
    function Pure2(value0) {
      this.value0 = value0;
    }
    ;
    Pure2.create = function(value0) {
      return new Pure2(value0);
    };
    return Pure2;
  }();
  var Lift = /* @__PURE__ */ function() {
    function Lift4(value0) {
      this.value0 = value0;
    }
    ;
    Lift4.create = function(value0) {
      return new Lift4(value0);
    };
    return Lift4;
  }();
  var Ap = /* @__PURE__ */ function() {
    function Ap2(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    Ap2.create = function(value0) {
      return function(value14) {
        return new Ap2(value0, value14);
      };
    };
    return Ap2;
  }();
  var mkAp = function(fba) {
    return function(fb) {
      return new Ap(fba, fb);
    };
  };
  var liftFreeAp = /* @__PURE__ */ function() {
    return Lift.create;
  }();
  var goLeft = function(dictApplicative) {
    var pure38 = pure(dictApplicative);
    return function(fStack) {
      return function(valStack) {
        return function(nat) {
          return function(func) {
            return function(count) {
              if (func instanceof Pure) {
                return new Tuple(new Cons({
                  func: pure38(func.value0),
                  count
                }, fStack), valStack);
              }
              ;
              if (func instanceof Lift) {
                return new Tuple(new Cons({
                  func: nat(func.value0),
                  count
                }, fStack), valStack);
              }
              ;
              if (func instanceof Ap) {
                return goLeft(dictApplicative)(fStack)(cons3(func.value1)(valStack))(nat)(func.value0)(count + 1 | 0);
              }
              ;
              throw new Error("Failed pattern match at Control.Applicative.Free (line 102, column 41 - line 105, column 81): " + [func.constructor.name]);
            };
          };
        };
      };
    };
  };
  var goApply = function(dictApplicative) {
    var apply6 = apply(dictApplicative.Apply0());
    return function(fStack) {
      return function(vals) {
        return function(gVal) {
          if (fStack instanceof Nil) {
            return new Left(gVal);
          }
          ;
          if (fStack instanceof Cons) {
            var gRes = apply6(fStack.value0.func)(gVal);
            var $31 = fStack.value0.count === 1;
            if ($31) {
              if (fStack.value1 instanceof Nil) {
                return new Left(gRes);
              }
              ;
              return goApply(dictApplicative)(fStack.value1)(vals)(gRes);
            }
            ;
            if (vals instanceof Nil) {
              return new Left(gRes);
            }
            ;
            if (vals instanceof Cons) {
              return new Right(new Tuple(new Cons({
                func: gRes,
                count: fStack.value0.count - 1 | 0
              }, fStack.value1), new NonEmpty(vals.value0, vals.value1)));
            }
            ;
            throw new Error("Failed pattern match at Control.Applicative.Free (line 83, column 11 - line 88, column 50): " + [vals.constructor.name]);
          }
          ;
          throw new Error("Failed pattern match at Control.Applicative.Free (line 72, column 3 - line 88, column 50): " + [fStack.constructor.name]);
        };
      };
    };
  };
  var functorFreeAp = {
    map: function(f) {
      return function(x) {
        return mkAp(new Pure(f))(x);
      };
    }
  };
  var foldFreeAp = function(dictApplicative) {
    var goApply1 = goApply(dictApplicative);
    var pure38 = pure(dictApplicative);
    var goLeft1 = goLeft(dictApplicative);
    return function(nat) {
      return function(z) {
        var go2 = function($copy_v) {
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(v) {
            if (v.value1.value0 instanceof Pure) {
              var v1 = goApply1(v.value0)(v.value1.value1)(pure38(v.value1.value0.value0));
              if (v1 instanceof Left) {
                $tco_done = true;
                return v1.value0;
              }
              ;
              if (v1 instanceof Right) {
                $copy_v = v1.value0;
                return;
              }
              ;
              throw new Error("Failed pattern match at Control.Applicative.Free (line 54, column 17 - line 56, column 24): " + [v1.constructor.name]);
            }
            ;
            if (v.value1.value0 instanceof Lift) {
              var v1 = goApply1(v.value0)(v.value1.value1)(nat(v.value1.value0.value0));
              if (v1 instanceof Left) {
                $tco_done = true;
                return v1.value0;
              }
              ;
              if (v1 instanceof Right) {
                $copy_v = v1.value0;
                return;
              }
              ;
              throw new Error("Failed pattern match at Control.Applicative.Free (line 57, column 17 - line 59, column 24): " + [v1.constructor.name]);
            }
            ;
            if (v.value1.value0 instanceof Ap) {
              var nextVals = new NonEmpty(v.value1.value0.value1, v.value1.value1);
              $copy_v = goLeft1(v.value0)(nextVals)(nat)(v.value1.value0.value0)(1);
              return;
            }
            ;
            throw new Error("Failed pattern match at Control.Applicative.Free (line 53, column 5 - line 62, column 47): " + [v.value1.value0.constructor.name]);
          }
          ;
          while (!$tco_done) {
            $tco_result = $tco_loop($copy_v);
          }
          ;
          return $tco_result;
        };
        return go2(new Tuple(Nil.value, singleton6(z)));
      };
    };
  };
  var retractFreeAp = function(dictApplicative) {
    return foldFreeAp(dictApplicative)(identity11);
  };
  var applyFreeAp = {
    apply: function(fba) {
      return function(fb) {
        return mkAp(fba)(fb);
      };
    },
    Functor0: function() {
      return functorFreeAp;
    }
  };
  var applicativeFreeAp = /* @__PURE__ */ function() {
    return {
      pure: Pure.create,
      Apply0: function() {
        return applyFreeAp;
      }
    };
  }();
  var foldFreeAp1 = /* @__PURE__ */ foldFreeAp(applicativeFreeAp);
  var hoistFreeAp = function(f) {
    return foldFreeAp1(function($54) {
      return liftFreeAp(f($54));
    });
  };

  // output/Data.CatQueue/index.js
  var CatQueue = /* @__PURE__ */ function() {
    function CatQueue2(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    CatQueue2.create = function(value0) {
      return function(value14) {
        return new CatQueue2(value0, value14);
      };
    };
    return CatQueue2;
  }();
  var uncons3 = function($copy_v) {
    var $tco_done = false;
    var $tco_result;
    function $tco_loop(v) {
      if (v.value0 instanceof Nil && v.value1 instanceof Nil) {
        $tco_done = true;
        return Nothing.value;
      }
      ;
      if (v.value0 instanceof Nil) {
        $copy_v = new CatQueue(reverse(v.value1), Nil.value);
        return;
      }
      ;
      if (v.value0 instanceof Cons) {
        $tco_done = true;
        return new Just(new Tuple(v.value0.value0, new CatQueue(v.value0.value1, v.value1)));
      }
      ;
      throw new Error("Failed pattern match at Data.CatQueue (line 82, column 1 - line 82, column 63): " + [v.constructor.name]);
    }
    ;
    while (!$tco_done) {
      $tco_result = $tco_loop($copy_v);
    }
    ;
    return $tco_result;
  };
  var snoc3 = function(v) {
    return function(a2) {
      return new CatQueue(v.value0, new Cons(a2, v.value1));
    };
  };
  var $$null4 = function(v) {
    if (v.value0 instanceof Nil && v.value1 instanceof Nil) {
      return true;
    }
    ;
    return false;
  };
  var empty5 = /* @__PURE__ */ function() {
    return new CatQueue(Nil.value, Nil.value);
  }();

  // output/Data.CatList/index.js
  var CatNil = /* @__PURE__ */ function() {
    function CatNil2() {
    }
    ;
    CatNil2.value = new CatNil2();
    return CatNil2;
  }();
  var CatCons = /* @__PURE__ */ function() {
    function CatCons2(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    CatCons2.create = function(value0) {
      return function(value14) {
        return new CatCons2(value0, value14);
      };
    };
    return CatCons2;
  }();
  var link = function(v) {
    return function(v1) {
      if (v instanceof CatNil) {
        return v1;
      }
      ;
      if (v1 instanceof CatNil) {
        return v;
      }
      ;
      if (v instanceof CatCons) {
        return new CatCons(v.value0, snoc3(v.value1)(v1));
      }
      ;
      throw new Error("Failed pattern match at Data.CatList (line 108, column 1 - line 108, column 54): " + [v.constructor.name, v1.constructor.name]);
    };
  };
  var foldr4 = function(k) {
    return function(b2) {
      return function(q2) {
        var foldl11 = function($copy_v) {
          return function($copy_v1) {
            return function($copy_v2) {
              var $tco_var_v = $copy_v;
              var $tco_var_v1 = $copy_v1;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v, v1, v2) {
                if (v2 instanceof Nil) {
                  $tco_done = true;
                  return v1;
                }
                ;
                if (v2 instanceof Cons) {
                  $tco_var_v = v;
                  $tco_var_v1 = v(v1)(v2.value0);
                  $copy_v2 = v2.value1;
                  return;
                }
                ;
                throw new Error("Failed pattern match at Data.CatList (line 124, column 3 - line 124, column 59): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
              }
              ;
              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);
              }
              ;
              return $tco_result;
            };
          };
        };
        var go2 = function($copy_xs) {
          return function($copy_ys) {
            var $tco_var_xs = $copy_xs;
            var $tco_done1 = false;
            var $tco_result;
            function $tco_loop(xs, ys) {
              var v = uncons3(xs);
              if (v instanceof Nothing) {
                $tco_done1 = true;
                return foldl11(function(x) {
                  return function(i2) {
                    return i2(x);
                  };
                })(b2)(ys);
              }
              ;
              if (v instanceof Just) {
                $tco_var_xs = v.value0.value1;
                $copy_ys = new Cons(k(v.value0.value0), ys);
                return;
              }
              ;
              throw new Error("Failed pattern match at Data.CatList (line 120, column 14 - line 122, column 67): " + [v.constructor.name]);
            }
            ;
            while (!$tco_done1) {
              $tco_result = $tco_loop($tco_var_xs, $copy_ys);
            }
            ;
            return $tco_result;
          };
        };
        return go2(q2)(Nil.value);
      };
    };
  };
  var uncons4 = function(v) {
    if (v instanceof CatNil) {
      return Nothing.value;
    }
    ;
    if (v instanceof CatCons) {
      return new Just(new Tuple(v.value0, function() {
        var $66 = $$null4(v.value1);
        if ($66) {
          return CatNil.value;
        }
        ;
        return foldr4(link)(CatNil.value)(v.value1);
      }()));
    }
    ;
    throw new Error("Failed pattern match at Data.CatList (line 99, column 1 - line 99, column 61): " + [v.constructor.name]);
  };
  var empty6 = /* @__PURE__ */ function() {
    return CatNil.value;
  }();
  var append3 = link;
  var semigroupCatList = {
    append: append3
  };
  var snoc4 = function(cat) {
    return function(a2) {
      return append3(cat)(new CatCons(a2, empty5));
    };
  };

  // output/Control.Monad.Free/index.js
  var $runtime_lazy6 = function(name15, moduleName, init3) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2)
        return val;
      if (state3 === 1)
        throw new ReferenceError(name15 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init3();
      state3 = 2;
      return val;
    };
  };
  var append4 = /* @__PURE__ */ append(semigroupCatList);
  var map18 = /* @__PURE__ */ map(functorFn);
  var Free = /* @__PURE__ */ function() {
    function Free2(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    Free2.create = function(value0) {
      return function(value14) {
        return new Free2(value0, value14);
      };
    };
    return Free2;
  }();
  var Return = /* @__PURE__ */ function() {
    function Return2(value0) {
      this.value0 = value0;
    }
    ;
    Return2.create = function(value0) {
      return new Return2(value0);
    };
    return Return2;
  }();
  var Bind = /* @__PURE__ */ function() {
    function Bind2(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    Bind2.create = function(value0) {
      return function(value14) {
        return new Bind2(value0, value14);
      };
    };
    return Bind2;
  }();
  var toView = function($copy_v) {
    var $tco_done = false;
    var $tco_result;
    function $tco_loop(v) {
      var runExpF = function(v22) {
        return v22;
      };
      var concatF = function(v22) {
        return function(r) {
          return new Free(v22.value0, append4(v22.value1)(r));
        };
      };
      if (v.value0 instanceof Return) {
        var v2 = uncons4(v.value1);
        if (v2 instanceof Nothing) {
          $tco_done = true;
          return new Return(v.value0.value0);
        }
        ;
        if (v2 instanceof Just) {
          $copy_v = concatF(runExpF(v2.value0.value0)(v.value0.value0))(v2.value0.value1);
          return;
        }
        ;
        throw new Error("Failed pattern match at Control.Monad.Free (line 227, column 7 - line 231, column 64): " + [v2.constructor.name]);
      }
      ;
      if (v.value0 instanceof Bind) {
        $tco_done = true;
        return new Bind(v.value0.value0, function(a2) {
          return concatF(v.value0.value1(a2))(v.value1);
        });
      }
      ;
      throw new Error("Failed pattern match at Control.Monad.Free (line 225, column 3 - line 233, column 56): " + [v.value0.constructor.name]);
    }
    ;
    while (!$tco_done) {
      $tco_result = $tco_loop($copy_v);
    }
    ;
    return $tco_result;
  };
  var fromView = function(f) {
    return new Free(f, empty6);
  };
  var freeMonad = {
    Applicative0: function() {
      return freeApplicative;
    },
    Bind1: function() {
      return freeBind;
    }
  };
  var freeFunctor = {
    map: function(k) {
      return function(f) {
        return bindFlipped(freeBind)(function() {
          var $189 = pure(freeApplicative);
          return function($190) {
            return $189(k($190));
          };
        }())(f);
      };
    }
  };
  var freeBind = {
    bind: function(v) {
      return function(k) {
        return new Free(v.value0, snoc4(v.value1)(k));
      };
    },
    Apply0: function() {
      return $lazy_freeApply(0);
    }
  };
  var freeApplicative = {
    pure: function($191) {
      return fromView(Return.create($191));
    },
    Apply0: function() {
      return $lazy_freeApply(0);
    }
  };
  var $lazy_freeApply = /* @__PURE__ */ $runtime_lazy6("freeApply", "Control.Monad.Free", function() {
    return {
      apply: ap(freeMonad),
      Functor0: function() {
        return freeFunctor;
      }
    };
  });
  var freeApply = /* @__PURE__ */ $lazy_freeApply(77);
  var bind5 = /* @__PURE__ */ bind(freeBind);
  var pure4 = /* @__PURE__ */ pure(freeApplicative);
  var liftF = function(f) {
    return fromView(new Bind(f, function($192) {
      return pure4($192);
    }));
  };
  var substFree = function(k) {
    var go2 = function(f) {
      var v = toView(f);
      if (v instanceof Return) {
        return pure4(v.value0);
      }
      ;
      if (v instanceof Bind) {
        return bind5(k(v.value0))(map18(go2)(v.value1));
      }
      ;
      throw new Error("Failed pattern match at Control.Monad.Free (line 168, column 10 - line 170, column 33): " + [v.constructor.name]);
    };
    return go2;
  };
  var foldFree = function(dictMonadRec) {
    var Monad0 = dictMonadRec.Monad0();
    var map123 = map(Monad0.Bind1().Apply0().Functor0());
    var pure117 = pure(Monad0.Applicative0());
    var tailRecM4 = tailRecM(dictMonadRec);
    return function(k) {
      var go2 = function(f) {
        var v = toView(f);
        if (v instanceof Return) {
          return map123(Done.create)(pure117(v.value0));
        }
        ;
        if (v instanceof Bind) {
          return map123(function($199) {
            return Loop.create(v.value1($199));
          })(k(v.value0));
        }
        ;
        throw new Error("Failed pattern match at Control.Monad.Free (line 158, column 10 - line 160, column 37): " + [v.constructor.name]);
      };
      return tailRecM4(go2);
    };
  };

  // output/Control.Monad.State.Trans/index.js
  var functorStateT = function(dictFunctor) {
    var map69 = map(dictFunctor);
    return {
      map: function(f) {
        return function(v) {
          return function(s) {
            return map69(function(v1) {
              return new Tuple(f(v1.value0), v1.value1);
            })(v(s));
          };
        };
      }
    };
  };
  var monadStateT = function(dictMonad) {
    return {
      Applicative0: function() {
        return applicativeStateT(dictMonad);
      },
      Bind1: function() {
        return bindStateT(dictMonad);
      }
    };
  };
  var bindStateT = function(dictMonad) {
    var bind36 = bind(dictMonad.Bind1());
    return {
      bind: function(v) {
        return function(f) {
          return function(s) {
            return bind36(v(s))(function(v1) {
              var v3 = f(v1.value0);
              return v3(v1.value1);
            });
          };
        };
      },
      Apply0: function() {
        return applyStateT(dictMonad);
      }
    };
  };
  var applyStateT = function(dictMonad) {
    var functorStateT1 = functorStateT(dictMonad.Bind1().Apply0().Functor0());
    return {
      apply: ap(monadStateT(dictMonad)),
      Functor0: function() {
        return functorStateT1;
      }
    };
  };
  var applicativeStateT = function(dictMonad) {
    var pure38 = pure(dictMonad.Applicative0());
    return {
      pure: function(a2) {
        return function(s) {
          return pure38(new Tuple(a2, s));
        };
      },
      Apply0: function() {
        return applyStateT(dictMonad);
      }
    };
  };
  var monadStateStateT = function(dictMonad) {
    var pure38 = pure(dictMonad.Applicative0());
    var monadStateT1 = monadStateT(dictMonad);
    return {
      state: function(f) {
        return function($200) {
          return pure38(f($200));
        };
      },
      Monad0: function() {
        return monadStateT1;
      }
    };
  };

  // output/Effect.Aff.Class/index.js
  var monadAffAff = {
    liftAff: /* @__PURE__ */ identity(categoryFn),
    MonadEffect0: function() {
      return monadEffectAff;
    }
  };
  var liftAff = function(dict) {
    return dict.liftAff;
  };

  // output/Halogen.Query.ChildQuery/index.js
  var ChildQuery = /* @__PURE__ */ function() {
    function ChildQuery4(value0, value14, value23) {
      this.value0 = value0;
      this.value1 = value14;
      this.value2 = value23;
    }
    ;
    ChildQuery4.create = function(value0) {
      return function(value14) {
        return function(value23) {
          return new ChildQuery4(value0, value14, value23);
        };
      };
    };
    return ChildQuery4;
  }();
  var unChildQueryBox = unsafeCoerce2;
  var mkChildQueryBox = unsafeCoerce2;

  // output/Unsafe.Reference/foreign.js
  function reallyUnsafeRefEq(a2) {
    return function(b2) {
      return a2 === b2;
    };
  }

  // output/Unsafe.Reference/index.js
  var unsafeRefEq = reallyUnsafeRefEq;

  // output/Halogen.Subscription/index.js
  var $$void7 = /* @__PURE__ */ $$void(functorEffect);
  var coerce3 = /* @__PURE__ */ coerce();
  var bind6 = /* @__PURE__ */ bind(bindEffect);
  var append5 = /* @__PURE__ */ append(semigroupArray);
  var traverse_2 = /* @__PURE__ */ traverse_(applicativeEffect);
  var traverse_1 = /* @__PURE__ */ traverse_2(foldableArray);
  var unsubscribe = function(v) {
    return v;
  };
  var subscribe = function(v) {
    return function(k) {
      return v(function($76) {
        return $$void7(k($76));
      });
    };
  };
  var notify = function(v) {
    return function(a2) {
      return v(a2);
    };
  };
  var makeEmitter = coerce3;
  var create3 = function __do() {
    var subscribers = $$new([])();
    return {
      emitter: function(k) {
        return function __do2() {
          modify_(function(v) {
            return append5(v)([k]);
          })(subscribers)();
          return modify_(deleteBy(unsafeRefEq)(k))(subscribers);
        };
      },
      listener: function(a2) {
        return bind6(read(subscribers))(traverse_1(function(k) {
          return k(a2);
        }));
      }
    };
  };

  // output/Halogen.Query.HalogenM/index.js
  var identity12 = /* @__PURE__ */ identity(categoryFn);
  var lookup5 = /* @__PURE__ */ lookup3();
  var SubscriptionId = function(x) {
    return x;
  };
  var ForkId = function(x) {
    return x;
  };
  var State = /* @__PURE__ */ function() {
    function State2(value0) {
      this.value0 = value0;
    }
    ;
    State2.create = function(value0) {
      return new State2(value0);
    };
    return State2;
  }();
  var Subscribe = /* @__PURE__ */ function() {
    function Subscribe3(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    Subscribe3.create = function(value0) {
      return function(value14) {
        return new Subscribe3(value0, value14);
      };
    };
    return Subscribe3;
  }();
  var Unsubscribe = /* @__PURE__ */ function() {
    function Unsubscribe3(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    Unsubscribe3.create = function(value0) {
      return function(value14) {
        return new Unsubscribe3(value0, value14);
      };
    };
    return Unsubscribe3;
  }();
  var Lift2 = /* @__PURE__ */ function() {
    function Lift4(value0) {
      this.value0 = value0;
    }
    ;
    Lift4.create = function(value0) {
      return new Lift4(value0);
    };
    return Lift4;
  }();
  var ChildQuery2 = /* @__PURE__ */ function() {
    function ChildQuery4(value0) {
      this.value0 = value0;
    }
    ;
    ChildQuery4.create = function(value0) {
      return new ChildQuery4(value0);
    };
    return ChildQuery4;
  }();
  var Raise = /* @__PURE__ */ function() {
    function Raise3(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    Raise3.create = function(value0) {
      return function(value14) {
        return new Raise3(value0, value14);
      };
    };
    return Raise3;
  }();
  var Par = /* @__PURE__ */ function() {
    function Par3(value0) {
      this.value0 = value0;
    }
    ;
    Par3.create = function(value0) {
      return new Par3(value0);
    };
    return Par3;
  }();
  var Fork = /* @__PURE__ */ function() {
    function Fork3(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    Fork3.create = function(value0) {
      return function(value14) {
        return new Fork3(value0, value14);
      };
    };
    return Fork3;
  }();
  var Join = /* @__PURE__ */ function() {
    function Join2(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    Join2.create = function(value0) {
      return function(value14) {
        return new Join2(value0, value14);
      };
    };
    return Join2;
  }();
  var Kill = /* @__PURE__ */ function() {
    function Kill3(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    Kill3.create = function(value0) {
      return function(value14) {
        return new Kill3(value0, value14);
      };
    };
    return Kill3;
  }();
  var GetRef = /* @__PURE__ */ function() {
    function GetRef3(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    GetRef3.create = function(value0) {
      return function(value14) {
        return new GetRef3(value0, value14);
      };
    };
    return GetRef3;
  }();
  var HalogenAp = function(x) {
    return x;
  };
  var HalogenM = function(x) {
    return x;
  };
  var query = function() {
    return function(dictIsSymbol) {
      var lookup111 = lookup5(dictIsSymbol);
      return function(dictOrd) {
        var lookup23 = lookup111(dictOrd);
        return function(label5) {
          return function(p2) {
            return function(q2) {
              return liftF(new ChildQuery2(mkChildQueryBox(new ChildQuery(function(dictApplicative) {
                var pure117 = pure(dictApplicative);
                return function(k) {
                  var $177 = maybe(pure117(Nothing.value))(k);
                  var $178 = lookup23(label5)(p2);
                  return function($179) {
                    return $177($178($179));
                  };
                };
              }, q2, identity12))));
            };
          };
        };
      };
    };
  };
  var ordSubscriptionId = ordInt;
  var ordForkId = ordInt;
  var monadHalogenM = freeMonad;
  var monadStateHalogenM = {
    state: function($181) {
      return HalogenM(liftF(State.create($181)));
    },
    Monad0: function() {
      return monadHalogenM;
    }
  };
  var functorHalogenM = freeFunctor;
  var bindHalogenM = freeBind;
  var applicativeHalogenM = freeApplicative;
  var applicativeHalogenAp = applicativeFreeAp;

  // output/Halogen.Query.HalogenQ/index.js
  var Initialize = /* @__PURE__ */ function() {
    function Initialize3(value0) {
      this.value0 = value0;
    }
    ;
    Initialize3.create = function(value0) {
      return new Initialize3(value0);
    };
    return Initialize3;
  }();
  var Finalize = /* @__PURE__ */ function() {
    function Finalize3(value0) {
      this.value0 = value0;
    }
    ;
    Finalize3.create = function(value0) {
      return new Finalize3(value0);
    };
    return Finalize3;
  }();
  var Receive = /* @__PURE__ */ function() {
    function Receive2(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    Receive2.create = function(value0) {
      return function(value14) {
        return new Receive2(value0, value14);
      };
    };
    return Receive2;
  }();
  var Action2 = /* @__PURE__ */ function() {
    function Action3(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    Action3.create = function(value0) {
      return function(value14) {
        return new Action3(value0, value14);
      };
    };
    return Action3;
  }();
  var Query = /* @__PURE__ */ function() {
    function Query3(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    Query3.create = function(value0) {
      return function(value14) {
        return new Query3(value0, value14);
      };
    };
    return Query3;
  }();

  // output/Halogen.VDom.Thunk/index.js
  var $runtime_lazy7 = function(name15, moduleName, init3) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2)
        return val;
      if (state3 === 1)
        throw new ReferenceError(name15 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init3();
      state3 = 2;
      return val;
    };
  };
  var unsafeEqThunk = function(v, v1) {
    return refEq2(v.value0, v1.value0) && (refEq2(v.value1, v1.value1) && v.value1(v.value3, v1.value3));
  };
  var runThunk = function(v) {
    return v.value2(v.value3);
  };
  var buildThunk = function(toVDom) {
    var haltThunk = function(state3) {
      return halt(state3.vdom);
    };
    var $lazy_patchThunk = $runtime_lazy7("patchThunk", "Halogen.VDom.Thunk", function() {
      return function(state3, t2) {
        var $48 = unsafeEqThunk(state3.thunk, t2);
        if ($48) {
          return mkStep(new Step(extract2(state3.vdom), state3, $lazy_patchThunk(112), haltThunk));
        }
        ;
        var vdom = step3(state3.vdom, toVDom(runThunk(t2)));
        return mkStep(new Step(extract2(vdom), {
          vdom,
          thunk: t2
        }, $lazy_patchThunk(115), haltThunk));
      };
    });
    var patchThunk = $lazy_patchThunk(108);
    var renderThunk = function(spec) {
      return function(t) {
        var vdom = buildVDom(spec)(toVDom(runThunk(t)));
        return mkStep(new Step(extract2(vdom), {
          thunk: t,
          vdom
        }, patchThunk, haltThunk));
      };
    };
    return renderThunk;
  };

  // output/Halogen.Component/index.js
  var voidLeft3 = /* @__PURE__ */ voidLeft(functorHalogenM);
  var traverse_3 = /* @__PURE__ */ traverse_(applicativeHalogenM)(foldableMaybe);
  var map19 = /* @__PURE__ */ map(functorHalogenM);
  var pure5 = /* @__PURE__ */ pure(applicativeHalogenM);
  var lookup6 = /* @__PURE__ */ lookup3();
  var pop3 = /* @__PURE__ */ pop2();
  var insert4 = /* @__PURE__ */ insert2();
  var ComponentSlot = /* @__PURE__ */ function() {
    function ComponentSlot2(value0) {
      this.value0 = value0;
    }
    ;
    ComponentSlot2.create = function(value0) {
      return new ComponentSlot2(value0);
    };
    return ComponentSlot2;
  }();
  var ThunkSlot = /* @__PURE__ */ function() {
    function ThunkSlot2(value0) {
      this.value0 = value0;
    }
    ;
    ThunkSlot2.create = function(value0) {
      return new ThunkSlot2(value0);
    };
    return ThunkSlot2;
  }();
  var unComponentSlot = unsafeCoerce2;
  var unComponent = unsafeCoerce2;
  var mkEval = function(args) {
    return function(v) {
      if (v instanceof Initialize) {
        return voidLeft3(traverse_3(args.handleAction)(args.initialize))(v.value0);
      }
      ;
      if (v instanceof Finalize) {
        return voidLeft3(traverse_3(args.handleAction)(args.finalize))(v.value0);
      }
      ;
      if (v instanceof Receive) {
        return voidLeft3(traverse_3(args.handleAction)(args.receive(v.value0)))(v.value1);
      }
      ;
      if (v instanceof Action2) {
        return voidLeft3(args.handleAction(v.value0))(v.value1);
      }
      ;
      if (v instanceof Query) {
        return unCoyoneda(function(g) {
          var $45 = map19(maybe(v.value1(unit))(g));
          return function($46) {
            return $45(args.handleQuery($46));
          };
        })(v.value0);
      }
      ;
      throw new Error("Failed pattern match at Halogen.Component (line 182, column 15 - line 192, column 71): " + [v.constructor.name]);
    };
  };
  var mkComponentSlot = unsafeCoerce2;
  var mkComponent = unsafeCoerce2;
  var defaultEval = /* @__PURE__ */ function() {
    return {
      handleAction: $$const(pure5(unit)),
      handleQuery: $$const(pure5(Nothing.value)),
      receive: $$const(Nothing.value),
      initialize: Nothing.value,
      finalize: Nothing.value
    };
  }();
  var componentSlot = function() {
    return function(dictIsSymbol) {
      var lookup111 = lookup6(dictIsSymbol);
      var pop12 = pop3(dictIsSymbol);
      var insert16 = insert4(dictIsSymbol);
      return function(dictOrd) {
        var lookup23 = lookup111(dictOrd);
        var pop22 = pop12(dictOrd);
        var insert22 = insert16(dictOrd);
        return function(label5) {
          return function(p2) {
            return function(comp) {
              return function(input3) {
                return function(output2) {
                  return mkComponentSlot({
                    get: lookup23(label5)(p2),
                    pop: pop22(label5)(p2),
                    set: insert22(label5)(p2),
                    component: comp,
                    input: input3,
                    output: output2
                  });
                };
              };
            };
          };
        };
      };
    };
  };

  // output/Halogen.HTML.Elements/index.js
  var element2 = /* @__PURE__ */ function() {
    return element(Nothing.value);
  }();
  var input2 = function(props) {
    return element2("input")(props)([]);
  };
  var span3 = /* @__PURE__ */ element2("span");
  var div2 = /* @__PURE__ */ element2("div");
  var div_ = /* @__PURE__ */ div2([]);
  var button = /* @__PURE__ */ element2("button");
  var br = function(props) {
    return element2("br")(props)([]);
  };
  var br_ = /* @__PURE__ */ br([]);
  var b = /* @__PURE__ */ element2("b");
  var b_ = /* @__PURE__ */ b([]);

  // output/Halogen.HTML.Properties/index.js
  var unwrap5 = /* @__PURE__ */ unwrap();
  var ref2 = /* @__PURE__ */ function() {
    var go2 = function(p2) {
      return function(mel) {
        return new Just(new RefUpdate(p2, mel));
      };
    };
    return function($29) {
      return ref(go2($29));
    };
  }();
  var prop2 = function(dictIsProp) {
    return prop(dictIsProp);
  };
  var prop1 = /* @__PURE__ */ prop2(isPropBoolean);
  var prop22 = /* @__PURE__ */ prop2(isPropString);
  var type_17 = function(dictIsProp) {
    return prop2(dictIsProp)("type");
  };
  var id2 = /* @__PURE__ */ prop22("id");
  var classes = /* @__PURE__ */ function() {
    var $32 = prop22("className");
    var $33 = joinWith(" ");
    var $34 = map(functorArray)(unwrap5);
    return function($35) {
      return $32($33($34($35)));
    };
  }();
  var autofocus6 = /* @__PURE__ */ prop1("autofocus");
  var attr2 = /* @__PURE__ */ function() {
    return attr(Nothing.value);
  }();
  var style = /* @__PURE__ */ attr2("style");

  // output/Halogen.HTML/index.js
  var componentSlot2 = /* @__PURE__ */ componentSlot();
  var slot_ = function() {
    return function(dictIsSymbol) {
      var componentSlot1 = componentSlot2(dictIsSymbol);
      return function(dictOrd) {
        var componentSlot22 = componentSlot1(dictOrd);
        return function(label5) {
          return function(p2) {
            return function(component3) {
              return function(input3) {
                return widget(new ComponentSlot(componentSlot22(label5)(p2)(component3)(input3)($$const(Nothing.value))));
              };
            };
          };
        };
      };
    };
  };
  var slot = function() {
    return function(dictIsSymbol) {
      var componentSlot1 = componentSlot2(dictIsSymbol);
      return function(dictOrd) {
        var componentSlot22 = componentSlot1(dictOrd);
        return function(label5) {
          return function(p2) {
            return function(component3) {
              return function(input3) {
                return function(outputQuery) {
                  return widget(new ComponentSlot(componentSlot22(label5)(p2)(component3)(input3)(function($11) {
                    return Just.create(outputQuery($11));
                  })));
                };
              };
            };
          };
        };
      };
    };
  };

  // output/Halogen.Query/index.js
  var query2 = /* @__PURE__ */ query();
  var identity13 = /* @__PURE__ */ identity(categoryFn);
  var request = function() {
    return function(dictIsSymbol) {
      var query12 = query2(dictIsSymbol);
      return function(dictOrd) {
        var query22 = query12(dictOrd);
        return function(slot4) {
          return function(label5) {
            return function(req2) {
              return query22(slot4)(label5)(req2(identity13));
            };
          };
        };
      };
    };
  };
  var mkTell = function(act) {
    return act(unit);
  };

  // output/Halogen.Aff.Driver.State/index.js
  var unRenderStateX = unsafeCoerce2;
  var unDriverStateX = unsafeCoerce2;
  var renderStateX_ = function(dictApplicative) {
    var traverse_8 = traverse_(dictApplicative)(foldableMaybe);
    return function(f) {
      return unDriverStateX(function(st) {
        return traverse_8(f)(st.rendering);
      });
    };
  };
  var mkRenderStateX = unsafeCoerce2;
  var renderStateX = function(dictFunctor) {
    return function(f) {
      return unDriverStateX(function(st) {
        return mkRenderStateX(f(st.rendering));
      });
    };
  };
  var mkDriverStateXRef = unsafeCoerce2;
  var mapDriverState = function(f) {
    return function(v) {
      return f(v);
    };
  };
  var initDriverState = function(component3) {
    return function(input3) {
      return function(handler3) {
        return function(lchs) {
          return function __do2() {
            var selfRef = $$new({})();
            var childrenIn = $$new(empty3)();
            var childrenOut = $$new(empty3)();
            var handlerRef = $$new(handler3)();
            var pendingQueries = $$new(new Just(Nil.value))();
            var pendingOuts = $$new(new Just(Nil.value))();
            var pendingHandlers = $$new(Nothing.value)();
            var fresh2 = $$new(1)();
            var subscriptions = $$new(new Just(empty2))();
            var forks = $$new(empty2)();
            var ds = {
              component: component3,
              state: component3.initialState(input3),
              refs: empty2,
              children: empty3,
              childrenIn,
              childrenOut,
              selfRef,
              handlerRef,
              pendingQueries,
              pendingOuts,
              pendingHandlers,
              rendering: Nothing.value,
              fresh: fresh2,
              subscriptions,
              forks,
              lifecycleHandlers: lchs
            };
            write(ds)(selfRef)();
            return mkDriverStateXRef(selfRef);
          };
        };
      };
    };
  };

  // output/Halogen.Aff.Driver.Eval/index.js
  var traverse_4 = /* @__PURE__ */ traverse_(applicativeEffect)(foldableMaybe);
  var bindFlipped5 = /* @__PURE__ */ bindFlipped(bindMaybe);
  var lookup7 = /* @__PURE__ */ lookup2(ordSubscriptionId);
  var bind12 = /* @__PURE__ */ bind(bindAff);
  var liftEffect4 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var discard3 = /* @__PURE__ */ discard(discardUnit);
  var discard1 = /* @__PURE__ */ discard3(bindAff);
  var traverse_12 = /* @__PURE__ */ traverse_(applicativeAff);
  var traverse_22 = /* @__PURE__ */ traverse_12(foldableList);
  var fork3 = /* @__PURE__ */ fork(monadForkAff);
  var parSequence_3 = /* @__PURE__ */ parSequence_(parallelAff)(foldableList);
  var pure6 = /* @__PURE__ */ pure(applicativeAff);
  var map21 = /* @__PURE__ */ map(functorCoyoneda);
  var parallel2 = /* @__PURE__ */ parallel(parallelAff);
  var map110 = /* @__PURE__ */ map(functorAff);
  var sequential2 = /* @__PURE__ */ sequential(parallelAff);
  var map23 = /* @__PURE__ */ map(functorMaybe);
  var insert5 = /* @__PURE__ */ insert(ordSubscriptionId);
  var retractFreeAp2 = /* @__PURE__ */ retractFreeAp(applicativeParAff);
  var $$delete2 = /* @__PURE__ */ $$delete(ordForkId);
  var unlessM2 = /* @__PURE__ */ unlessM(monadEffect);
  var insert12 = /* @__PURE__ */ insert(ordForkId);
  var traverse_32 = /* @__PURE__ */ traverse_12(foldableMaybe);
  var lookup12 = /* @__PURE__ */ lookup2(ordForkId);
  var lookup22 = /* @__PURE__ */ lookup2(ordString);
  var foldFree2 = /* @__PURE__ */ foldFree(monadRecAff);
  var alter2 = /* @__PURE__ */ alter(ordString);
  var unsubscribe3 = function(sid) {
    return function(ref3) {
      return function __do2() {
        var v = read(ref3)();
        var subs = read(v.subscriptions)();
        return traverse_4(unsubscribe)(bindFlipped5(lookup7(sid))(subs))();
      };
    };
  };
  var queueOrRun = function(ref3) {
    return function(au) {
      return bind12(liftEffect4(read(ref3)))(function(v) {
        if (v instanceof Nothing) {
          return au;
        }
        ;
        if (v instanceof Just) {
          return liftEffect4(write(new Just(new Cons(au, v.value0)))(ref3));
        }
        ;
        throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 188, column 33 - line 190, column 57): " + [v.constructor.name]);
      });
    };
  };
  var handleLifecycle = function(lchs) {
    return function(f) {
      return discard1(liftEffect4(write({
        initializers: Nil.value,
        finalizers: Nil.value
      })(lchs)))(function() {
        return bind12(liftEffect4(f))(function(result) {
          return bind12(liftEffect4(read(lchs)))(function(v) {
            return discard1(traverse_22(fork3)(v.finalizers))(function() {
              return discard1(parSequence_3(v.initializers))(function() {
                return pure6(result);
              });
            });
          });
        });
      });
    };
  };
  var handleAff = /* @__PURE__ */ runAff_(/* @__PURE__ */ either(throwException)(/* @__PURE__ */ $$const(/* @__PURE__ */ pure(applicativeEffect)(unit))));
  var fresh = function(f) {
    return function(ref3) {
      return bind12(liftEffect4(read(ref3)))(function(v) {
        return liftEffect4(modify$prime(function(i2) {
          return {
            state: i2 + 1 | 0,
            value: f(i2)
          };
        })(v.fresh));
      });
    };
  };
  var evalQ = function(render2) {
    return function(ref3) {
      return function(q2) {
        return bind12(liftEffect4(read(ref3)))(function(v) {
          return evalM(render2)(ref3)(v["component"]["eval"](new Query(map21(Just.create)(liftCoyoneda(q2)), $$const(Nothing.value))));
        });
      };
    };
  };
  var evalM = function(render2) {
    return function(initRef) {
      return function(v) {
        var evalChildQuery = function(ref3) {
          return function(cqb) {
            return bind12(liftEffect4(read(ref3)))(function(v1) {
              return unChildQueryBox(function(v2) {
                var evalChild = function(v3) {
                  return parallel2(bind12(liftEffect4(read(v3)))(function(dsx) {
                    return unDriverStateX(function(ds) {
                      return evalQ(render2)(ds.selfRef)(v2.value1);
                    })(dsx);
                  }));
                };
                return map110(v2.value2)(sequential2(v2.value0(applicativeParAff)(evalChild)(v1.children)));
              })(cqb);
            });
          };
        };
        var go2 = function(ref3) {
          return function(v1) {
            if (v1 instanceof State) {
              return bind12(liftEffect4(read(ref3)))(function(v2) {
                var v3 = v1.value0(v2.state);
                if (unsafeRefEq(v2.state)(v3.value1)) {
                  return pure6(v3.value0);
                }
                ;
                if (otherwise) {
                  return discard1(liftEffect4(write({
                    component: v2.component,
                    refs: v2.refs,
                    children: v2.children,
                    childrenIn: v2.childrenIn,
                    childrenOut: v2.childrenOut,
                    selfRef: v2.selfRef,
                    handlerRef: v2.handlerRef,
                    pendingQueries: v2.pendingQueries,
                    pendingOuts: v2.pendingOuts,
                    pendingHandlers: v2.pendingHandlers,
                    rendering: v2.rendering,
                    fresh: v2.fresh,
                    subscriptions: v2.subscriptions,
                    forks: v2.forks,
                    lifecycleHandlers: v2.lifecycleHandlers,
                    state: v3.value1
                  })(ref3)))(function() {
                    return discard1(handleLifecycle(v2.lifecycleHandlers)(render2(v2.lifecycleHandlers)(ref3)))(function() {
                      return pure6(v3.value0);
                    });
                  });
                }
                ;
                throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 86, column 7 - line 92, column 21): " + [v3.constructor.name]);
              });
            }
            ;
            if (v1 instanceof Subscribe) {
              return bind12(fresh(SubscriptionId)(ref3))(function(sid) {
                return bind12(liftEffect4(subscribe(v1.value0(sid))(function(act) {
                  return handleAff(evalF(render2)(ref3)(new Action(act)));
                })))(function(finalize) {
                  return bind12(liftEffect4(read(ref3)))(function(v2) {
                    return discard1(liftEffect4(modify_(map23(insert5(sid)(finalize)))(v2.subscriptions)))(function() {
                      return pure6(v1.value1(sid));
                    });
                  });
                });
              });
            }
            ;
            if (v1 instanceof Unsubscribe) {
              return discard1(liftEffect4(unsubscribe3(v1.value0)(ref3)))(function() {
                return pure6(v1.value1);
              });
            }
            ;
            if (v1 instanceof Lift2) {
              return v1.value0;
            }
            ;
            if (v1 instanceof ChildQuery2) {
              return evalChildQuery(ref3)(v1.value0);
            }
            ;
            if (v1 instanceof Raise) {
              return bind12(liftEffect4(read(ref3)))(function(v2) {
                return bind12(liftEffect4(read(v2.handlerRef)))(function(handler3) {
                  return discard1(queueOrRun(v2.pendingOuts)(handler3(v1.value0)))(function() {
                    return pure6(v1.value1);
                  });
                });
              });
            }
            ;
            if (v1 instanceof Par) {
              return sequential2(retractFreeAp2(hoistFreeAp(function() {
                var $118 = evalM(render2)(ref3);
                return function($119) {
                  return parallel2($118($119));
                };
              }())(v1.value0)));
            }
            ;
            if (v1 instanceof Fork) {
              return bind12(fresh(ForkId)(ref3))(function(fid) {
                return bind12(liftEffect4(read(ref3)))(function(v2) {
                  return bind12(liftEffect4($$new(false)))(function(doneRef) {
                    return bind12(fork3($$finally(liftEffect4(function __do2() {
                      modify_($$delete2(fid))(v2.forks)();
                      return write(true)(doneRef)();
                    }))(evalM(render2)(ref3)(v1.value0))))(function(fiber) {
                      return discard1(liftEffect4(unlessM2(read(doneRef))(modify_(insert12(fid)(fiber))(v2.forks))))(function() {
                        return pure6(v1.value1(fid));
                      });
                    });
                  });
                });
              });
            }
            ;
            if (v1 instanceof Join) {
              return bind12(liftEffect4(read(ref3)))(function(v2) {
                return bind12(liftEffect4(read(v2.forks)))(function(forkMap) {
                  return discard1(traverse_32(joinFiber)(lookup12(v1.value0)(forkMap)))(function() {
                    return pure6(v1.value1);
                  });
                });
              });
            }
            ;
            if (v1 instanceof Kill) {
              return bind12(liftEffect4(read(ref3)))(function(v2) {
                return bind12(liftEffect4(read(v2.forks)))(function(forkMap) {
                  return discard1(traverse_32(killFiber(error("Cancelled")))(lookup12(v1.value0)(forkMap)))(function() {
                    return pure6(v1.value1);
                  });
                });
              });
            }
            ;
            if (v1 instanceof GetRef) {
              return bind12(liftEffect4(read(ref3)))(function(v2) {
                return pure6(v1.value1(lookup22(v1.value0)(v2.refs)));
              });
            }
            ;
            throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 83, column 12 - line 139, column 33): " + [v1.constructor.name]);
          };
        };
        return foldFree2(go2(initRef))(v);
      };
    };
  };
  var evalF = function(render2) {
    return function(ref3) {
      return function(v) {
        if (v instanceof RefUpdate) {
          return liftEffect4(flip(modify_)(ref3)(mapDriverState(function(st) {
            return {
              component: st.component,
              state: st.state,
              children: st.children,
              childrenIn: st.childrenIn,
              childrenOut: st.childrenOut,
              selfRef: st.selfRef,
              handlerRef: st.handlerRef,
              pendingQueries: st.pendingQueries,
              pendingOuts: st.pendingOuts,
              pendingHandlers: st.pendingHandlers,
              rendering: st.rendering,
              fresh: st.fresh,
              subscriptions: st.subscriptions,
              forks: st.forks,
              lifecycleHandlers: st.lifecycleHandlers,
              refs: alter2($$const(v.value1))(v.value0)(st.refs)
            };
          })));
        }
        ;
        if (v instanceof Action) {
          return bind12(liftEffect4(read(ref3)))(function(v1) {
            return evalM(render2)(ref3)(v1["component"]["eval"](new Action2(v.value0, unit)));
          });
        }
        ;
        throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 52, column 20 - line 58, column 62): " + [v.constructor.name]);
      };
    };
  };

  // output/Halogen.Aff.Driver/index.js
  var bind7 = /* @__PURE__ */ bind(bindEffect);
  var discard4 = /* @__PURE__ */ discard(discardUnit);
  var for_2 = /* @__PURE__ */ for_(applicativeEffect)(foldableMaybe);
  var traverse_5 = /* @__PURE__ */ traverse_(applicativeAff)(foldableList);
  var fork4 = /* @__PURE__ */ fork(monadForkAff);
  var bindFlipped6 = /* @__PURE__ */ bindFlipped(bindEffect);
  var traverse_13 = /* @__PURE__ */ traverse_(applicativeEffect);
  var traverse_23 = /* @__PURE__ */ traverse_13(foldableMaybe);
  var traverse_33 = /* @__PURE__ */ traverse_13(foldableMap);
  var discard22 = /* @__PURE__ */ discard4(bindAff);
  var parSequence_4 = /* @__PURE__ */ parSequence_(parallelAff)(foldableList);
  var liftEffect5 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var pure7 = /* @__PURE__ */ pure(applicativeEffect);
  var map24 = /* @__PURE__ */ map(functorEffect);
  var pure12 = /* @__PURE__ */ pure(applicativeAff);
  var when3 = /* @__PURE__ */ when(applicativeEffect);
  var renderStateX2 = /* @__PURE__ */ renderStateX(functorEffect);
  var $$void8 = /* @__PURE__ */ $$void(functorAff);
  var foreachSlot2 = /* @__PURE__ */ foreachSlot(applicativeEffect);
  var renderStateX_2 = /* @__PURE__ */ renderStateX_(applicativeEffect);
  var tailRecM3 = /* @__PURE__ */ tailRecM(monadRecEffect);
  var voidLeft4 = /* @__PURE__ */ voidLeft(functorEffect);
  var bind13 = /* @__PURE__ */ bind(bindAff);
  var liftEffect1 = /* @__PURE__ */ liftEffect(monadEffectEffect);
  var newLifecycleHandlers = /* @__PURE__ */ function() {
    return $$new({
      initializers: Nil.value,
      finalizers: Nil.value
    });
  }();
  var handlePending = function(ref3) {
    return function __do2() {
      var queue = read(ref3)();
      write(Nothing.value)(ref3)();
      return for_2(queue)(function() {
        var $58 = traverse_5(fork4);
        return function($59) {
          return handleAff($58(reverse($59)));
        };
      }())();
    };
  };
  var cleanupSubscriptionsAndForks = function(v) {
    return function __do2() {
      bindFlipped6(traverse_23(traverse_33(unsubscribe)))(read(v.subscriptions))();
      write(Nothing.value)(v.subscriptions)();
      bindFlipped6(traverse_33(function() {
        var $60 = killFiber(error("finalized"));
        return function($61) {
          return handleAff($60($61));
        };
      }()))(read(v.forks))();
      return write(empty2)(v.forks)();
    };
  };
  var runUI = function(renderSpec2) {
    return function(component3) {
      return function(i2) {
        var squashChildInitializers = function(lchs) {
          return function(preInits) {
            return unDriverStateX(function(st) {
              var parentInitializer = evalM(render2)(st.selfRef)(st["component"]["eval"](new Initialize(unit)));
              return modify_(function(handlers) {
                return {
                  initializers: new Cons(discard22(parSequence_4(reverse(handlers.initializers)))(function() {
                    return discard22(parentInitializer)(function() {
                      return liftEffect5(function __do2() {
                        handlePending(st.pendingQueries)();
                        return handlePending(st.pendingOuts)();
                      });
                    });
                  }), preInits),
                  finalizers: handlers.finalizers
                };
              })(lchs);
            });
          };
        };
        var runComponent = function(lchs) {
          return function(handler3) {
            return function(j) {
              return unComponent(function(c) {
                return function __do2() {
                  var lchs$prime = newLifecycleHandlers();
                  var $$var2 = initDriverState(c)(j)(handler3)(lchs$prime)();
                  var pre2 = read(lchs)();
                  write({
                    initializers: Nil.value,
                    finalizers: pre2.finalizers
                  })(lchs)();
                  bindFlipped6(unDriverStateX(function() {
                    var $62 = render2(lchs);
                    return function($63) {
                      return $62(function(v) {
                        return v.selfRef;
                      }($63));
                    };
                  }()))(read($$var2))();
                  bindFlipped6(squashChildInitializers(lchs)(pre2.initializers))(read($$var2))();
                  return $$var2;
                };
              });
            };
          };
        };
        var renderChild = function(lchs) {
          return function(handler3) {
            return function(childrenInRef) {
              return function(childrenOutRef) {
                return unComponentSlot(function(slot4) {
                  return function __do2() {
                    var childrenIn = map24(slot4.pop)(read(childrenInRef))();
                    var $$var2 = function() {
                      if (childrenIn instanceof Just) {
                        write(childrenIn.value0.value1)(childrenInRef)();
                        var dsx = read(childrenIn.value0.value0)();
                        unDriverStateX(function(st) {
                          return function __do3() {
                            flip(write)(st.handlerRef)(function() {
                              var $64 = maybe(pure12(unit))(handler3);
                              return function($65) {
                                return $64(slot4.output($65));
                              };
                            }())();
                            return handleAff(evalM(render2)(st.selfRef)(st["component"]["eval"](new Receive(slot4.input, unit))))();
                          };
                        })(dsx)();
                        return childrenIn.value0.value0;
                      }
                      ;
                      if (childrenIn instanceof Nothing) {
                        return runComponent(lchs)(function() {
                          var $66 = maybe(pure12(unit))(handler3);
                          return function($67) {
                            return $66(slot4.output($67));
                          };
                        }())(slot4.input)(slot4.component)();
                      }
                      ;
                      throw new Error("Failed pattern match at Halogen.Aff.Driver (line 213, column 14 - line 222, column 98): " + [childrenIn.constructor.name]);
                    }();
                    var isDuplicate = map24(function($68) {
                      return isJust(slot4.get($68));
                    })(read(childrenOutRef))();
                    when3(isDuplicate)(warn("Halogen: Duplicate slot address was detected during rendering, unexpected results may occur"))();
                    modify_(slot4.set($$var2))(childrenOutRef)();
                    return bind7(read($$var2))(renderStateX2(function(v) {
                      if (v instanceof Nothing) {
                        return $$throw("Halogen internal error: child was not initialized in renderChild");
                      }
                      ;
                      if (v instanceof Just) {
                        return pure7(renderSpec2.renderChild(v.value0));
                      }
                      ;
                      throw new Error("Failed pattern match at Halogen.Aff.Driver (line 227, column 37 - line 229, column 50): " + [v.constructor.name]);
                    }))();
                  };
                });
              };
            };
          };
        };
        var render2 = function(lchs) {
          return function($$var2) {
            return function __do2() {
              var v = read($$var2)();
              var shouldProcessHandlers = map24(isNothing)(read(v.pendingHandlers))();
              when3(shouldProcessHandlers)(write(new Just(Nil.value))(v.pendingHandlers))();
              write(empty3)(v.childrenOut)();
              write(v.children)(v.childrenIn)();
              var handler3 = function() {
                var $69 = queueOrRun(v.pendingHandlers);
                var $70 = evalF(render2)(v.selfRef);
                return function($71) {
                  return $69($$void8($70($71)));
                };
              }();
              var childHandler = function() {
                var $72 = queueOrRun(v.pendingQueries);
                return function($73) {
                  return $72(handler3(Action.create($73)));
                };
              }();
              var rendering = renderSpec2.render(function($74) {
                return handleAff(handler3($74));
              })(renderChild(lchs)(childHandler)(v.childrenIn)(v.childrenOut))(v.component.render(v.state))(v.rendering)();
              var children2 = read(v.childrenOut)();
              var childrenIn = read(v.childrenIn)();
              foreachSlot2(childrenIn)(function(v1) {
                return function __do3() {
                  var childDS = read(v1)();
                  renderStateX_2(renderSpec2.removeChild)(childDS)();
                  return finalize(lchs)(childDS)();
                };
              })();
              flip(modify_)(v.selfRef)(mapDriverState(function(ds$prime) {
                return {
                  component: ds$prime.component,
                  state: ds$prime.state,
                  refs: ds$prime.refs,
                  childrenIn: ds$prime.childrenIn,
                  childrenOut: ds$prime.childrenOut,
                  selfRef: ds$prime.selfRef,
                  handlerRef: ds$prime.handlerRef,
                  pendingQueries: ds$prime.pendingQueries,
                  pendingOuts: ds$prime.pendingOuts,
                  pendingHandlers: ds$prime.pendingHandlers,
                  fresh: ds$prime.fresh,
                  subscriptions: ds$prime.subscriptions,
                  forks: ds$prime.forks,
                  lifecycleHandlers: ds$prime.lifecycleHandlers,
                  rendering: new Just(rendering),
                  children: children2
                };
              }))();
              return when3(shouldProcessHandlers)(flip(tailRecM3)(unit)(function(v1) {
                return function __do3() {
                  var handlers = read(v.pendingHandlers)();
                  write(new Just(Nil.value))(v.pendingHandlers)();
                  traverse_23(function() {
                    var $75 = traverse_5(fork4);
                    return function($76) {
                      return handleAff($75(reverse($76)));
                    };
                  }())(handlers)();
                  var mmore = read(v.pendingHandlers)();
                  var $51 = maybe(false)($$null)(mmore);
                  if ($51) {
                    return voidLeft4(write(Nothing.value)(v.pendingHandlers))(new Done(unit))();
                  }
                  ;
                  return new Loop(unit);
                };
              }))();
            };
          };
        };
        var finalize = function(lchs) {
          return unDriverStateX(function(st) {
            return function __do2() {
              cleanupSubscriptionsAndForks(st)();
              var f = evalM(render2)(st.selfRef)(st["component"]["eval"](new Finalize(unit)));
              modify_(function(handlers) {
                return {
                  initializers: handlers.initializers,
                  finalizers: new Cons(f, handlers.finalizers)
                };
              })(lchs)();
              return foreachSlot2(st.children)(function(v) {
                return function __do3() {
                  var dsx = read(v)();
                  return finalize(lchs)(dsx)();
                };
              })();
            };
          });
        };
        var evalDriver = function(disposed) {
          return function(ref3) {
            return function(q2) {
              return bind13(liftEffect5(read(disposed)))(function(v) {
                if (v) {
                  return pure12(Nothing.value);
                }
                ;
                return evalQ(render2)(ref3)(q2);
              });
            };
          };
        };
        var dispose = function(disposed) {
          return function(lchs) {
            return function(dsx) {
              return handleLifecycle(lchs)(function __do2() {
                var v = read(disposed)();
                if (v) {
                  return unit;
                }
                ;
                write(true)(disposed)();
                finalize(lchs)(dsx)();
                return unDriverStateX(function(v1) {
                  return function __do3() {
                    var v2 = liftEffect1(read(v1.selfRef))();
                    return for_2(v2.rendering)(renderSpec2.dispose)();
                  };
                })(dsx)();
              });
            };
          };
        };
        return bind13(liftEffect5(newLifecycleHandlers))(function(lchs) {
          return bind13(liftEffect5($$new(false)))(function(disposed) {
            return handleLifecycle(lchs)(function __do2() {
              var sio = create3();
              var dsx = bindFlipped6(read)(runComponent(lchs)(function() {
                var $77 = notify(sio.listener);
                return function($78) {
                  return liftEffect5($77($78));
                };
              }())(i2)(component3))();
              return unDriverStateX(function(st) {
                return pure7({
                  query: evalDriver(disposed)(st.selfRef),
                  messages: sio.emitter,
                  dispose: dispose(disposed)(lchs)(dsx)
                });
              })(dsx)();
            });
          });
        });
      };
    };
  };

  // output/Web.DOM.Node/foreign.js
  var getEffProp2 = function(name15) {
    return function(node) {
      return function() {
        return node[name15];
      };
    };
  };
  var baseURI = getEffProp2("baseURI");
  var _ownerDocument = getEffProp2("ownerDocument");
  var _parentNode = getEffProp2("parentNode");
  var _parentElement = getEffProp2("parentElement");
  var childNodes = getEffProp2("childNodes");
  var _firstChild = getEffProp2("firstChild");
  var _lastChild = getEffProp2("lastChild");
  var _previousSibling = getEffProp2("previousSibling");
  var _nextSibling = getEffProp2("nextSibling");
  var _nodeValue = getEffProp2("nodeValue");
  var textContent = getEffProp2("textContent");
  function insertBefore(node1) {
    return function(node2) {
      return function(parent2) {
        return function() {
          parent2.insertBefore(node1, node2);
        };
      };
    };
  }
  function appendChild(node) {
    return function(parent2) {
      return function() {
        parent2.appendChild(node);
      };
    };
  }
  function removeChild2(node) {
    return function(parent2) {
      return function() {
        parent2.removeChild(node);
      };
    };
  }

  // output/Web.DOM.Node/index.js
  var map25 = /* @__PURE__ */ map(functorEffect);
  var parentNode2 = /* @__PURE__ */ function() {
    var $6 = map25(toMaybe);
    return function($7) {
      return $6(_parentNode($7));
    };
  }();
  var nextSibling = /* @__PURE__ */ function() {
    var $15 = map25(toMaybe);
    return function($16) {
      return $15(_nextSibling($16));
    };
  }();

  // output/Halogen.VDom.Driver/index.js
  var $runtime_lazy8 = function(name15, moduleName, init3) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2)
        return val;
      if (state3 === 1)
        throw new ReferenceError(name15 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init3();
      state3 = 2;
      return val;
    };
  };
  var $$void9 = /* @__PURE__ */ $$void(functorEffect);
  var pure8 = /* @__PURE__ */ pure(applicativeEffect);
  var traverse_6 = /* @__PURE__ */ traverse_(applicativeEffect)(foldableMaybe);
  var unwrap6 = /* @__PURE__ */ unwrap();
  var when4 = /* @__PURE__ */ when(applicativeEffect);
  var not3 = /* @__PURE__ */ not(/* @__PURE__ */ heytingAlgebraFunction(/* @__PURE__ */ heytingAlgebraFunction(heytingAlgebraBoolean)));
  var identity14 = /* @__PURE__ */ identity(categoryFn);
  var bind14 = /* @__PURE__ */ bind(bindAff);
  var liftEffect6 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var map26 = /* @__PURE__ */ map(functorEffect);
  var bindFlipped7 = /* @__PURE__ */ bindFlipped(bindEffect);
  var substInParent = function(v) {
    return function(v1) {
      return function(v2) {
        if (v1 instanceof Just && v2 instanceof Just) {
          return $$void9(insertBefore(v)(v1.value0)(v2.value0));
        }
        ;
        if (v1 instanceof Nothing && v2 instanceof Just) {
          return $$void9(appendChild(v)(v2.value0));
        }
        ;
        return pure8(unit);
      };
    };
  };
  var removeChild3 = function(v) {
    return function __do2() {
      var npn = parentNode2(v.node)();
      return traverse_6(function(pn) {
        return removeChild2(v.node)(pn);
      })(npn)();
    };
  };
  var mkSpec = function(handler3) {
    return function(renderChildRef) {
      return function(document2) {
        var getNode = unRenderStateX(function(v) {
          return v.node;
        });
        var done = function(st) {
          if (st instanceof Just) {
            return halt(st.value0);
          }
          ;
          return unit;
        };
        var buildWidget2 = function(spec) {
          var buildThunk2 = buildThunk(unwrap6)(spec);
          var $lazy_patch = $runtime_lazy8("patch", "Halogen.VDom.Driver", function() {
            return function(st, slot4) {
              if (st instanceof Just) {
                if (slot4 instanceof ComponentSlot) {
                  halt(st.value0);
                  return $lazy_renderComponentSlot(100)(slot4.value0);
                }
                ;
                if (slot4 instanceof ThunkSlot) {
                  var step$prime = step3(st.value0, slot4.value0);
                  return mkStep(new Step(extract2(step$prime), new Just(step$prime), $lazy_patch(103), done));
                }
                ;
                throw new Error("Failed pattern match at Halogen.VDom.Driver (line 97, column 22 - line 103, column 79): " + [slot4.constructor.name]);
              }
              ;
              return $lazy_render(104)(slot4);
            };
          });
          var $lazy_render = $runtime_lazy8("render", "Halogen.VDom.Driver", function() {
            return function(slot4) {
              if (slot4 instanceof ComponentSlot) {
                return $lazy_renderComponentSlot(86)(slot4.value0);
              }
              ;
              if (slot4 instanceof ThunkSlot) {
                var step5 = buildThunk2(slot4.value0);
                return mkStep(new Step(extract2(step5), new Just(step5), $lazy_patch(89), done));
              }
              ;
              throw new Error("Failed pattern match at Halogen.VDom.Driver (line 84, column 7 - line 89, column 75): " + [slot4.constructor.name]);
            };
          });
          var $lazy_renderComponentSlot = $runtime_lazy8("renderComponentSlot", "Halogen.VDom.Driver", function() {
            return function(cs) {
              var renderChild = read(renderChildRef)();
              var rsx = renderChild(cs)();
              var node = getNode(rsx);
              return mkStep(new Step(node, Nothing.value, $lazy_patch(117), done));
            };
          });
          var patch = $lazy_patch(91);
          var render2 = $lazy_render(82);
          var renderComponentSlot = $lazy_renderComponentSlot(109);
          return render2;
        };
        var buildAttributes = buildProp(handler3);
        return {
          buildWidget: buildWidget2,
          buildAttributes,
          document: document2
        };
      };
    };
  };
  var renderSpec = function(document2) {
    return function(container) {
      var render2 = function(handler3) {
        return function(child2) {
          return function(v) {
            return function(v1) {
              if (v1 instanceof Nothing) {
                return function __do2() {
                  var renderChildRef = $$new(child2)();
                  var spec = mkSpec(handler3)(renderChildRef)(document2);
                  var machine = buildVDom(spec)(v);
                  var node = extract2(machine);
                  $$void9(appendChild(node)(toNode(container)))();
                  return {
                    machine,
                    node,
                    renderChildRef
                  };
                };
              }
              ;
              if (v1 instanceof Just) {
                return function __do2() {
                  write(child2)(v1.value0.renderChildRef)();
                  var parent2 = parentNode2(v1.value0.node)();
                  var nextSib = nextSibling(v1.value0.node)();
                  var machine$prime = step3(v1.value0.machine, v);
                  var newNode = extract2(machine$prime);
                  when4(not3(unsafeRefEq)(v1.value0.node)(newNode))(substInParent(newNode)(nextSib)(parent2))();
                  return {
                    machine: machine$prime,
                    node: newNode,
                    renderChildRef: v1.value0.renderChildRef
                  };
                };
              }
              ;
              throw new Error("Failed pattern match at Halogen.VDom.Driver (line 157, column 5 - line 173, column 80): " + [v1.constructor.name]);
            };
          };
        };
      };
      return {
        render: render2,
        renderChild: identity14,
        removeChild: removeChild3,
        dispose: removeChild3
      };
    };
  };
  var runUI2 = function(component3) {
    return function(i2) {
      return function(element4) {
        return bind14(liftEffect6(map26(toDocument)(bindFlipped7(document)(windowImpl))))(function(document2) {
          return runUI(renderSpec(document2)(element4))(component3)(i2);
        });
      };
    };
  };

  // output/CSS.String/index.js
  var fromString2 = function(dict) {
    return dict.fromString;
  };

  // output/Data.Array.NonEmpty.Internal/foreign.js
  var traverse1Impl = function() {
    function Cont(fn) {
      this.fn = fn;
    }
    var emptyList = {};
    var ConsCell = function(head5, tail3) {
      this.head = head5;
      this.tail = tail3;
    };
    function finalCell(head5) {
      return new ConsCell(head5, emptyList);
    }
    function consList(x) {
      return function(xs) {
        return new ConsCell(x, xs);
      };
    }
    function listToArray(list) {
      var arr = [];
      var xs = list;
      while (xs !== emptyList) {
        arr.push(xs.head);
        xs = xs.tail;
      }
      return arr;
    }
    return function(apply6) {
      return function(map69) {
        return function(f) {
          var buildFrom = function(x, ys) {
            return apply6(map69(consList)(f(x)))(ys);
          };
          var go2 = function(acc, currentLen, xs) {
            if (currentLen === 0) {
              return acc;
            } else {
              var last3 = xs[currentLen - 1];
              return new Cont(function() {
                var built = go2(buildFrom(last3, acc), currentLen - 1, xs);
                return built;
              });
            }
          };
          return function(array) {
            var acc = map69(finalCell)(f(array[array.length - 1]));
            var result = go2(acc, array.length - 1, array);
            while (result instanceof Cont) {
              result = result.fn();
            }
            return map69(listToArray)(result);
          };
        };
      };
    };
  }();

  // output/Data.String.CodePoints/foreign.js
  var hasArrayFrom = typeof Array.from === "function";
  var hasStringIterator = typeof Symbol !== "undefined" && Symbol != null && typeof Symbol.iterator !== "undefined" && typeof String.prototype[Symbol.iterator] === "function";
  var hasFromCodePoint = typeof String.prototype.fromCodePoint === "function";
  var hasCodePointAt = typeof String.prototype.codePointAt === "function";
  var _unsafeCodePointAt0 = function(fallback) {
    return hasCodePointAt ? function(str) {
      return str.codePointAt(0);
    } : fallback;
  };
  var _singleton = function(fallback) {
    return hasFromCodePoint ? String.fromCodePoint : fallback;
  };
  var _take = function(fallback) {
    return function(n) {
      if (hasStringIterator) {
        return function(str) {
          var accum = "";
          var iter = str[Symbol.iterator]();
          for (var i2 = 0; i2 < n; ++i2) {
            var o = iter.next();
            if (o.done)
              return accum;
            accum += o.value;
          }
          return accum;
        };
      }
      return fallback(n);
    };
  };
  var _toCodePointArray = function(fallback) {
    return function(unsafeCodePointAt02) {
      if (hasArrayFrom) {
        return function(str) {
          return Array.from(str, unsafeCodePointAt02);
        };
      }
      return fallback;
    };
  };

  // output/Data.String.CodePoints/index.js
  var $runtime_lazy9 = function(name15, moduleName, init3) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2)
        return val;
      if (state3 === 1)
        throw new ReferenceError(name15 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init3();
      state3 = 2;
      return val;
    };
  };
  var fromEnum2 = /* @__PURE__ */ fromEnum(boundedEnumChar);
  var map27 = /* @__PURE__ */ map(functorMaybe);
  var unfoldr2 = /* @__PURE__ */ unfoldr(unfoldableArray);
  var div3 = /* @__PURE__ */ div(euclideanRingInt);
  var mod2 = /* @__PURE__ */ mod(euclideanRingInt);
  var compare3 = /* @__PURE__ */ compare(ordInt);
  var unsurrogate = function(lead) {
    return function(trail) {
      return (((lead - 55296 | 0) * 1024 | 0) + (trail - 56320 | 0) | 0) + 65536 | 0;
    };
  };
  var isTrail = function(cu) {
    return 56320 <= cu && cu <= 57343;
  };
  var isLead = function(cu) {
    return 55296 <= cu && cu <= 56319;
  };
  var uncons5 = function(s) {
    var v = length6(s);
    if (v === 0) {
      return Nothing.value;
    }
    ;
    if (v === 1) {
      return new Just({
        head: fromEnum2(charAt(0)(s)),
        tail: ""
      });
    }
    ;
    var cu1 = fromEnum2(charAt(1)(s));
    var cu0 = fromEnum2(charAt(0)(s));
    var $43 = isLead(cu0) && isTrail(cu1);
    if ($43) {
      return new Just({
        head: unsurrogate(cu0)(cu1),
        tail: drop3(2)(s)
      });
    }
    ;
    return new Just({
      head: cu0,
      tail: drop3(1)(s)
    });
  };
  var unconsButWithTuple = function(s) {
    return map27(function(v) {
      return new Tuple(v.head, v.tail);
    })(uncons5(s));
  };
  var toCodePointArrayFallback = function(s) {
    return unfoldr2(unconsButWithTuple)(s);
  };
  var unsafeCodePointAt0Fallback = function(s) {
    var cu0 = fromEnum2(charAt(0)(s));
    var $47 = isLead(cu0) && length6(s) > 1;
    if ($47) {
      var cu1 = fromEnum2(charAt(1)(s));
      var $48 = isTrail(cu1);
      if ($48) {
        return unsurrogate(cu0)(cu1);
      }
      ;
      return cu0;
    }
    ;
    return cu0;
  };
  var unsafeCodePointAt0 = /* @__PURE__ */ _unsafeCodePointAt0(unsafeCodePointAt0Fallback);
  var toCodePointArray = /* @__PURE__ */ _toCodePointArray(toCodePointArrayFallback)(unsafeCodePointAt0);
  var length7 = function($74) {
    return length5(toCodePointArray($74));
  };
  var lastIndexOf2 = function(p2) {
    return function(s) {
      return map27(function(i2) {
        return length7(take3(i2)(s));
      })(lastIndexOf(p2)(s));
    };
  };
  var indexOf2 = function(p2) {
    return function(s) {
      return map27(function(i2) {
        return length7(take3(i2)(s));
      })(indexOf(p2)(s));
    };
  };
  var fromCharCode2 = /* @__PURE__ */ function() {
    var $75 = toEnumWithDefaults(boundedEnumChar)(bottom(boundedChar))(top(boundedChar));
    return function($76) {
      return singleton7($75($76));
    };
  }();
  var singletonFallback = function(v) {
    if (v <= 65535) {
      return fromCharCode2(v);
    }
    ;
    var lead = div3(v - 65536 | 0)(1024) + 55296 | 0;
    var trail = mod2(v - 65536 | 0)(1024) + 56320 | 0;
    return fromCharCode2(lead) + fromCharCode2(trail);
  };
  var singleton8 = /* @__PURE__ */ _singleton(singletonFallback);
  var takeFallback = function(v) {
    return function(v1) {
      if (v < 1) {
        return "";
      }
      ;
      var v2 = uncons5(v1);
      if (v2 instanceof Just) {
        return singleton8(v2.value0.head) + takeFallback(v - 1 | 0)(v2.value0.tail);
      }
      ;
      return v1;
    };
  };
  var take4 = /* @__PURE__ */ _take(takeFallback);
  var eqCodePoint = {
    eq: function(x) {
      return function(y) {
        return x === y;
      };
    }
  };
  var ordCodePoint = {
    compare: function(x) {
      return function(y) {
        return compare3(x)(y);
      };
    },
    Eq0: function() {
      return eqCodePoint;
    }
  };
  var drop4 = function(n) {
    return function(s) {
      return drop3(length6(take4(n)(s)))(s);
    };
  };
  var boundedCodePoint = {
    bottom: 0,
    top: 1114111,
    Ord0: function() {
      return ordCodePoint;
    }
  };
  var boundedEnumCodePoint = /* @__PURE__ */ function() {
    return {
      cardinality: 1114111 + 1 | 0,
      fromEnum: function(v) {
        return v;
      },
      toEnum: function(n) {
        if (n >= 0 && n <= 1114111) {
          return new Just(n);
        }
        ;
        if (otherwise) {
          return Nothing.value;
        }
        ;
        throw new Error("Failed pattern match at Data.String.CodePoints (line 63, column 1 - line 68, column 26): " + [n.constructor.name]);
      },
      Bounded0: function() {
        return boundedCodePoint;
      },
      Enum1: function() {
        return $lazy_enumCodePoint(0);
      }
    };
  }();
  var $lazy_enumCodePoint = /* @__PURE__ */ $runtime_lazy9("enumCodePoint", "Data.String.CodePoints", function() {
    return {
      succ: defaultSucc(toEnum(boundedEnumCodePoint))(fromEnum(boundedEnumCodePoint)),
      pred: defaultPred(toEnum(boundedEnumCodePoint))(fromEnum(boundedEnumCodePoint)),
      Ord0: function() {
        return ordCodePoint;
      }
    };
  });

  // output/Data.String.Regex/foreign.js
  var regexImpl = function(left) {
    return function(right) {
      return function(s1) {
        return function(s2) {
          try {
            return right(new RegExp(s1, s2));
          } catch (e) {
            return left(e.message);
          }
        };
      };
    };
  };
  var split2 = function(r) {
    return function(s) {
      return s.split(r);
    };
  };

  // output/Data.String.Regex/index.js
  var renderFlags = function(v) {
    return function() {
      if (v.global) {
        return "g";
      }
      ;
      return "";
    }() + (function() {
      if (v.ignoreCase) {
        return "i";
      }
      ;
      return "";
    }() + (function() {
      if (v.multiline) {
        return "m";
      }
      ;
      return "";
    }() + (function() {
      if (v.dotAll) {
        return "s";
      }
      ;
      return "";
    }() + (function() {
      if (v.sticky) {
        return "y";
      }
      ;
      return "";
    }() + function() {
      if (v.unicode) {
        return "u";
      }
      ;
      return "";
    }()))));
  };
  var regex = function(s) {
    return function(f) {
      return regexImpl(Left.create)(Right.create)(s)(renderFlags(f));
    };
  };
  var parseFlags = function(s) {
    return {
      global: contains("g")(s),
      ignoreCase: contains("i")(s),
      multiline: contains("m")(s),
      dotAll: contains("s")(s),
      sticky: contains("y")(s),
      unicode: contains("u")(s)
    };
  };

  // output/Color/index.js
  var clamp2 = /* @__PURE__ */ clamp(ordInt);
  var max6 = /* @__PURE__ */ max(ordInt);
  var min5 = /* @__PURE__ */ min(ordInt);
  var show2 = /* @__PURE__ */ show(showNumber);
  var HSLA = /* @__PURE__ */ function() {
    function HSLA2(value0, value14, value23, value33) {
      this.value0 = value0;
      this.value1 = value14;
      this.value2 = value23;
      this.value3 = value33;
    }
    ;
    HSLA2.create = function(value0) {
      return function(value14) {
        return function(value23) {
          return function(value33) {
            return new HSLA2(value0, value14, value23, value33);
          };
        };
      };
    };
    return HSLA2;
  }();
  var modPos = function(x) {
    return function(y) {
      return remainder(remainder(x)(y) + y)(y);
    };
  };
  var rgba = function(red$prime) {
    return function(green$prime) {
      return function(blue$prime) {
        return function(alpha) {
          var red = clamp2(0)(255)(red$prime);
          var r = toNumber(red) / 255;
          var green = clamp2(0)(255)(green$prime);
          var g = toNumber(green) / 255;
          var blue = clamp2(0)(255)(blue$prime);
          var maxChroma = max6(max6(red)(green))(blue);
          var minChroma = min5(min5(red)(green))(blue);
          var chroma = maxChroma - minChroma | 0;
          var chroma$prime = toNumber(chroma) / 255;
          var lightness = toNumber(maxChroma + minChroma | 0) / (255 * 2);
          var saturation = function() {
            if (chroma === 0) {
              return 0;
            }
            ;
            if (otherwise) {
              return chroma$prime / (1 - abs2(2 * lightness - 1));
            }
            ;
            throw new Error("Failed pattern match at Color (line 160, column 3 - line 162, column 64): " + []);
          }();
          var b2 = toNumber(blue) / 255;
          var hue$prime = function(v) {
            if (v === 0) {
              return 0;
            }
            ;
            if (maxChroma === red) {
              return modPos((g - b2) / chroma$prime)(6);
            }
            ;
            if (maxChroma === green) {
              return (b2 - r) / chroma$prime + 2;
            }
            ;
            if (otherwise) {
              return (r - g) / chroma$prime + 4;
            }
            ;
            throw new Error("Failed pattern match at Color (line 150, column 3 - line 150, column 15): " + [v.constructor.name]);
          };
          var hue = 60 * hue$prime(chroma);
          return new HSLA(hue, saturation, lightness, alpha);
        };
      };
    };
  };
  var rgb = function(r) {
    return function(g) {
      return function(b2) {
        return rgba(r)(g)(b2)(1);
      };
    };
  };
  var cssStringHSLA = function(v) {
    var toString3 = function(n) {
      return show2(toNumber(round2(100 * n)) / 100);
    };
    var saturation = toString3(v.value1 * 100) + "%";
    var lightness = toString3(v.value2 * 100) + "%";
    var hue = toString3(v.value0);
    var alpha = show2(v.value3);
    var $118 = v.value3 === 1;
    if ($118) {
      return "hsl(" + (hue + (", " + (saturation + (", " + (lightness + ")")))));
    }
    ;
    return "hsla(" + (hue + (", " + (saturation + (", " + (lightness + (", " + (alpha + ")")))))));
  };

  // output/Data.Profunctor.Strong/index.js
  var strongFn = {
    first: function(a2b) {
      return function(v) {
        return new Tuple(a2b(v.value0), v.value1);
      };
    },
    second: /* @__PURE__ */ map(functorTuple),
    Profunctor0: function() {
      return profunctorFn;
    }
  };
  var second = function(dict) {
    return dict.second;
  };

  // output/CSS.Property/index.js
  var map28 = /* @__PURE__ */ map(functorArray);
  var second2 = /* @__PURE__ */ second(strongFn);
  var append12 = /* @__PURE__ */ append(semigroupArray);
  var lookup8 = /* @__PURE__ */ lookup(foldableArray)(eqString);
  var Prefixed = /* @__PURE__ */ function() {
    function Prefixed2(value0) {
      this.value0 = value0;
    }
    ;
    Prefixed2.create = function(value0) {
      return new Prefixed2(value0);
    };
    return Prefixed2;
  }();
  var Plain = /* @__PURE__ */ function() {
    function Plain2(value0) {
      this.value0 = value0;
    }
    ;
    Plain2.create = function(value0) {
      return new Plain2(value0);
    };
    return Plain2;
  }();
  var Value = function(x) {
    return x;
  };
  var Key = function(x) {
    return x;
  };
  var value12 = function(dict) {
    return dict.value;
  };
  var valValue = {
    value: /* @__PURE__ */ identity(categoryFn)
  };
  var semigroupPrefixed = {
    append: function(v) {
      return function(v1) {
        if (v instanceof Plain && v1 instanceof Plain) {
          return new Plain(v.value0 + v1.value0);
        }
        ;
        if (v instanceof Plain && v1 instanceof Prefixed) {
          return new Prefixed(map28(second2(function(v2) {
            return v.value0 + v2;
          }))(v1.value0));
        }
        ;
        if (v instanceof Prefixed && v1 instanceof Plain) {
          return new Prefixed(map28(second2(function(v2) {
            return v1.value0 + v2;
          }))(v.value0));
        }
        ;
        if (v instanceof Prefixed && v1 instanceof Prefixed) {
          return new Prefixed(append12(v.value0)(v1.value0));
        }
        ;
        throw new Error("Failed pattern match at CSS.Property (line 23, column 1 - line 27, column 59): " + [v.constructor.name, v1.constructor.name]);
      };
    }
  };
  var append22 = /* @__PURE__ */ append(semigroupPrefixed);
  var semigroupValue = {
    append: function(v) {
      return function(v1) {
        return append22(v)(v1);
      };
    }
  };
  var append32 = /* @__PURE__ */ append(semigroupValue);
  var quote = function(s) {
    return '"' + (s + '"');
  };
  var plain = function(v) {
    if (v instanceof Prefixed) {
      return fromMaybe("")(lookup8("")(v.value0));
    }
    ;
    if (v instanceof Plain) {
      return v.value0;
    }
    ;
    throw new Error("Failed pattern match at CSS.Property (line 32, column 1 - line 32, column 28): " + [v.constructor.name]);
  };
  var monoidPrefixed = /* @__PURE__ */ function() {
    return {
      mempty: new Plain(mempty(monoidString)),
      Semigroup0: function() {
        return semigroupPrefixed;
      }
    };
  }();
  var monoidValue = {
    mempty: /* @__PURE__ */ mempty(monoidPrefixed),
    Semigroup0: function() {
      return semigroupValue;
    }
  };
  var intercalate5 = /* @__PURE__ */ intercalate(foldableArray)(monoidValue);
  var isStringPrefixed = /* @__PURE__ */ function() {
    return {
      fromString: Plain.create
    };
  }();
  var fromString3 = /* @__PURE__ */ fromString2(isStringPrefixed);
  var isStringValue = {
    fromString: function($141) {
      return Value(fromString3($141));
    }
  };
  var fromString1 = /* @__PURE__ */ fromString2(isStringValue);
  var valColor = {
    value: function($144) {
      return fromString1(cssStringHSLA($144));
    }
  };
  var valList = function(dictVal) {
    var value14 = value12(dictVal);
    return {
      value: function() {
        var $145 = intercalate5(fromString1(", "));
        return function($146) {
          return $145(function(v) {
            return map28(value14)(v);
          }($146));
        };
      }()
    };
  };
  var valNumber = {
    value: /* @__PURE__ */ function() {
      var $149 = show(showNumber);
      return function($150) {
        return fromString1($149($150));
      };
    }()
  };
  var valString = {
    value: fromString1
  };
  var valTuple = function(dictVal) {
    var value14 = value12(dictVal);
    return function(dictVal1) {
      var value23 = value12(dictVal1);
      return {
        value: function(v) {
          return append32(value14(v.value0))(append32(fromString1(" "))(value23(v.value1)));
        }
      };
    };
  };
  var isStringKey = {
    fromString: function($151) {
      return Key(fromString3($151));
    }
  };
  var cast = function(v) {
    return v;
  };

  // output/CSS.Common/index.js
  var browsers = /* @__PURE__ */ function() {
    return new Prefixed([new Tuple("-webkit-", ""), new Tuple("-moz-", ""), new Tuple("-ms-", ""), new Tuple("-o-", ""), new Tuple("", "")]);
  }();

  // output/CSS.Size/index.js
  var append6 = /* @__PURE__ */ append(semigroupValue);
  var value13 = /* @__PURE__ */ value12(valNumber);
  var fromString4 = /* @__PURE__ */ fromString2(isStringValue);
  var show3 = /* @__PURE__ */ show(showNumber);
  var append23 = /* @__PURE__ */ append(semigroupPrefixed);
  var BasicSize = /* @__PURE__ */ function() {
    function BasicSize2(value0) {
      this.value0 = value0;
    }
    ;
    BasicSize2.create = function(value0) {
      return new BasicSize2(value0);
    };
    return BasicSize2;
  }();
  var SumSize = /* @__PURE__ */ function() {
    function SumSize2(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    SumSize2.create = function(value0) {
      return function(value14) {
        return new SumSize2(value0, value14);
      };
    };
    return SumSize2;
  }();
  var DiffSize = /* @__PURE__ */ function() {
    function DiffSize2(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    DiffSize2.create = function(value0) {
      return function(value14) {
        return new DiffSize2(value0, value14);
      };
    };
    return DiffSize2;
  }();
  var MultSize = /* @__PURE__ */ function() {
    function MultSize2(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    MultSize2.create = function(value0) {
      return function(value14) {
        return new MultSize2(value0, value14);
      };
    };
    return MultSize2;
  }();
  var DivSize = /* @__PURE__ */ function() {
    function DivSize2(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    DivSize2.create = function(value0) {
      return function(value14) {
        return new DivSize2(value0, value14);
      };
    };
    return DivSize2;
  }();
  var sizeToString = function(v) {
    if (v instanceof BasicSize) {
      return plain(v.value0);
    }
    ;
    if (v instanceof SumSize) {
      return runExists(function(a$prime) {
        return runExists(function(b$prime) {
          return "(" + (sizeToString(a$prime) + (" + " + (sizeToString(b$prime) + ")")));
        })(v.value1);
      })(v.value0);
    }
    ;
    if (v instanceof DiffSize) {
      return runExists(function(a$prime) {
        return runExists(function(b$prime) {
          return "(" + (sizeToString(a$prime) + (" - " + (sizeToString(b$prime) + ")")));
        })(v.value1);
      })(v.value0);
    }
    ;
    if (v instanceof MultSize) {
      return runExists(function(b$prime) {
        return "(" + (show3(v.value0) + (" * " + (sizeToString(b$prime) + ")")));
      })(v.value1);
    }
    ;
    if (v instanceof DivSize) {
      return runExists(function(b$prime) {
        return "(" + (sizeToString(b$prime) + (" / " + (show3(v.value0) + ")")));
      })(v.value1);
    }
    ;
    throw new Error("Failed pattern match at CSS.Size (line 29, column 1 - line 29, column 43): " + [v.constructor.name]);
  };
  var valSize = {
    value: function(v) {
      if (v instanceof BasicSize) {
        return v.value0;
      }
      ;
      return append23(browsers)(new Plain("calc" + sizeToString(v)));
    }
  };
  var em2 = function(i2) {
    return new BasicSize(append6(value13(i2))(fromString4("em")));
  };

  // output/Control.Monad.Writer/index.js
  var unwrap7 = /* @__PURE__ */ unwrap();
  var runWriter = function($5) {
    return unwrap7(runWriterT($5));
  };
  var execWriter = function(m) {
    return snd(runWriter(m));
  };

  // output/CSS.Stylesheet/index.js
  var map111 = /* @__PURE__ */ map(/* @__PURE__ */ functorWriterT(functorIdentity));
  var apply4 = /* @__PURE__ */ apply(/* @__PURE__ */ applyWriterT(semigroupArray)(applyIdentity));
  var bind8 = /* @__PURE__ */ bind(/* @__PURE__ */ bindWriterT(semigroupArray)(bindIdentity));
  var Property2 = /* @__PURE__ */ function() {
    function Property3(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    Property3.create = function(value0) {
      return function(value14) {
        return new Property3(value0, value14);
      };
    };
    return Property3;
  }();
  var S = function(x) {
    return x;
  };
  var runS = function(v) {
    return execWriter(v);
  };
  var rule = /* @__PURE__ */ function() {
    var $340 = tell(monadTellWriterT(monoidArray)(monadIdentity));
    return function($341) {
      return S($340(singleton5($341)));
    };
  }();
  var key = function(dictVal) {
    var value14 = value12(dictVal);
    return function(k) {
      return function(v) {
        return rule(new Property2(cast(k), value14(v)));
      };
    };
  };
  var functorStyleM = {
    map: function(f) {
      return function(v) {
        return map111(f)(v);
      };
    }
  };
  var applyStyleM = {
    apply: function(v) {
      return function(v1) {
        return apply4(v)(v1);
      };
    },
    Functor0: function() {
      return functorStyleM;
    }
  };
  var bindStyleM = {
    bind: function(v) {
      return function(f) {
        return bind8(v)(function($346) {
          return function(v1) {
            return v1;
          }(f($346));
        });
      };
    },
    Apply0: function() {
      return applyStyleM;
    }
  };

  // output/CSS.Background/index.js
  var fromString12 = /* @__PURE__ */ fromString2(isStringKey);
  var key2 = /* @__PURE__ */ key(valColor);
  var backgroundColor = /* @__PURE__ */ key2(/* @__PURE__ */ fromString12("background-color"));

  // output/CSS.Display/index.js
  var fromString5 = /* @__PURE__ */ fromString2(isStringKey);
  var fromString13 = /* @__PURE__ */ fromString2(isStringValue);
  var valDisplay = {
    value: function(v) {
      return v;
    }
  };
  var flex = /* @__PURE__ */ fromString13("flex");
  var display = /* @__PURE__ */ key(valDisplay)(/* @__PURE__ */ fromString5("display"));

  // output/CSS.Flexbox/index.js
  var fromString6 = /* @__PURE__ */ fromString2(isStringValue);
  var fromString14 = /* @__PURE__ */ fromString2(isStringKey);
  var valFlexDirection = {
    value: function(v) {
      return v;
    }
  };
  var row = /* @__PURE__ */ fromString6("row");
  var flexDirection = /* @__PURE__ */ key(valFlexDirection)(/* @__PURE__ */ fromString14("flex-direction"));
  var column = /* @__PURE__ */ fromString6("column");

  // output/CSS.Font/index.js
  var fromString7 = /* @__PURE__ */ fromString2(isStringValue);
  var fromString15 = /* @__PURE__ */ fromString2(isStringKey);
  var key3 = /* @__PURE__ */ key(valValue);
  var value1 = /* @__PURE__ */ value12(/* @__PURE__ */ valList(valValue));
  var append7 = /* @__PURE__ */ append(semigroupArray);
  var map29 = /* @__PURE__ */ map(functorArray);
  var value22 = /* @__PURE__ */ value12(valString);
  var oneOf3 = /* @__PURE__ */ oneOf2(alternativeArray);
  var map112 = /* @__PURE__ */ map(/* @__PURE__ */ functorNonEmpty(functorArray));
  var valGenericFontFamily = {
    value: function(v) {
      return v;
    }
  };
  var value32 = /* @__PURE__ */ value12(valGenericFontFamily);
  var monospace = /* @__PURE__ */ fromString7("monospace");
  var fontFamily = function(a2) {
    return function(b2) {
      return key3(fromString15("font-family"))(value1(append7(map29(function($47) {
        return value22(quote($47));
      })(a2))(oneOf3(map112(value32)(b2)))));
    };
  };
  var color = /* @__PURE__ */ key(valColor)(/* @__PURE__ */ fromString15("color"));

  // output/CSS.Geometry/index.js
  var key4 = /* @__PURE__ */ key(valSize);
  var fromString8 = /* @__PURE__ */ fromString2(isStringKey);
  var valTuple2 = /* @__PURE__ */ valTuple(valSize)(valSize);
  var key1 = /* @__PURE__ */ key(/* @__PURE__ */ valTuple(valTuple2)(valTuple2));
  var padding = function(a2) {
    return function(b2) {
      return function(c) {
        return function(d) {
          return key1(fromString8("padding"))(new Tuple(new Tuple(a2, b2), new Tuple(c, d)));
        };
      };
    };
  };
  var height8 = /* @__PURE__ */ key4(/* @__PURE__ */ fromString8("height"));

  // output/CSS.Render/index.js
  var map30 = /* @__PURE__ */ map(functorArray);
  var lookup9 = /* @__PURE__ */ lookup(foldableArray)(eqString);
  var collect$prime = function(v) {
    return function(v1) {
      if (v instanceof Plain && v1 instanceof Plain) {
        return [new Right(new Tuple(v.value0, v1.value0))];
      }
      ;
      if (v instanceof Prefixed && v1 instanceof Plain) {
        return map30(function(v3) {
          return new Right(new Tuple(v3.value0 + v3.value1, v1.value0));
        })(v.value0);
      }
      ;
      if (v instanceof Plain && v1 instanceof Prefixed) {
        return map30(function(v2) {
          return new Right(new Tuple(v.value0, v2.value0 + v2.value1));
        })(v1.value0);
      }
      ;
      if (v instanceof Prefixed && v1 instanceof Prefixed) {
        return map30(function(v2) {
          return maybe(new Left(v2.value0 + v2.value1))(function() {
            var $213 = Tuple.create(v2.value0 + v2.value1);
            return function($214) {
              return Right.create($213(function(v3) {
                return v2.value0 + v3;
              }($214)));
            };
          }())(lookup9(v2.value0)(v1.value0));
        })(v.value0);
      }
      ;
      throw new Error("Failed pattern match at CSS.Render (line 158, column 1 - line 158, column 80): " + [v.constructor.name, v1.constructor.name]);
    };
  };
  var collect2 = function(v) {
    return collect$prime(v.value0)(v.value1);
  };

  // output/Halogen.HTML.CSS/index.js
  var bind9 = /* @__PURE__ */ bind(bindArray);
  var fromFoldable5 = /* @__PURE__ */ fromFoldable4(foldableArray);
  var style3 = /* @__PURE__ */ function() {
    var toString3 = function() {
      var $13 = joinWith("; ");
      var $14 = foldMap3(monoidArray)(function(key6) {
        return function(val) {
          return [key6 + (": " + val)];
        };
      });
      return function($15) {
        return $13($14($15));
      };
    }();
    var rights = concatMap(foldMap(foldableEither)(monoidArray)(singleton5));
    var property = function(v) {
      if (v instanceof Property2) {
        return new Just(new Tuple(v.value0, v.value1));
      }
      ;
      return Nothing.value;
    };
    var rules = function(rs) {
      var properties = bind9(mapMaybe2(property)(rs))(function($16) {
        return rights(collect2($16));
      });
      return fromFoldable5(properties);
    };
    var $17 = attr2("style");
    return function($18) {
      return $17(toString3(rules(runS($18))));
    };
  }();

  // output/Control.Monad.Except/index.js
  var unwrap8 = /* @__PURE__ */ unwrap();
  var runExcept = function($3) {
    return unwrap8(runExceptT($3));
  };

  // output/Web.Event.Event/foreign.js
  function preventDefault(e) {
    return function() {
      return e.preventDefault();
    };
  }
  function stopPropagation(e) {
    return function() {
      return e.stopPropagation();
    };
  }

  // output/Web.UIEvent.KeyboardEvent.EventTypes/index.js
  var keydown = "keydown";

  // output/Web.UIEvent.MouseEvent.EventTypes/index.js
  var mouseover = "mouseover";
  var mousemove = "mousemove";
  var mouseleave = "mouseleave";
  var mousedown = "mousedown";

  // output/Halogen.HTML.Events/index.js
  var mouseHandler = unsafeCoerce2;
  var handler2 = function(et) {
    return function(f) {
      return handler(et)(function(ev) {
        return new Just(new Action(f(ev)));
      });
    };
  };
  var onInput = /* @__PURE__ */ handler2(input);
  var onMouseDown = /* @__PURE__ */ function() {
    var $27 = handler2(mousedown);
    return function($28) {
      return $27(mouseHandler($28));
    };
  }();
  var onMouseLeave = /* @__PURE__ */ function() {
    var $31 = handler2(mouseleave);
    return function($32) {
      return $31(mouseHandler($32));
    };
  }();
  var onMouseMove = /* @__PURE__ */ function() {
    var $33 = handler2(mousemove);
    return function($34) {
      return $33(mouseHandler($34));
    };
  }();
  var onMouseOver = /* @__PURE__ */ function() {
    var $37 = handler2(mouseover);
    return function($38) {
      return $37(mouseHandler($38));
    };
  }();

  // output/Bug/index.js
  var intercalate6 = /* @__PURE__ */ intercalate3(monoidString);
  var bug = function(msg) {
    return unsafeCrashWith(intercalate6("\n")(["", "==[ BUG ]=================================================================", msg, "==========================================================================", ""]));
  };

  // output/Bug.Assertion/index.js
  var identity15 = /* @__PURE__ */ identity(categoryFn);
  var strictlyOrdered = function(dictOrd) {
    var compare10 = compare(dictOrd);
    return function(source3) {
      return function(msg) {
        return function(a1) {
          return function(a2) {
            return {
              name: "strictlyOrdered",
              source: source3,
              result: function() {
                var v = compare10(a1)(a2);
                if (v instanceof LT) {
                  return new Right(LT.value);
                }
                ;
                return new Left(msg);
              }()
            };
          };
        };
      };
    };
  };
  var renderFailedAssertion = function(v) {
    return function(msg) {
      return "[" + (v.source + ("] Failed assertion '" + (v.name + ("': " + msg))));
    };
  };
  var makeAssertionBoolean = function(v) {
    return {
      name: v.name,
      source: v.source,
      result: function() {
        if (v.condition) {
          return new Right(unit);
        }
        ;
        return new Left(v.message);
      }()
    };
  };
  var just = function(source3) {
    return function(mb_a) {
      return {
        name: "just",
        source: source3,
        result: function() {
          if (mb_a instanceof Nothing) {
            return new Left("Wasn't 'Just'");
          }
          ;
          if (mb_a instanceof Just) {
            return new Right(mb_a.value0);
          }
          ;
          throw new Error("Failed pattern match at Bug.Assertion (line 100, column 13 - line 102, column 24): " + [mb_a.constructor.name]);
        }()
      };
    };
  };
  var equal = function(dictEq) {
    var eq9 = eq(dictEq);
    return function(source3) {
      return function(msg) {
        return function(a1) {
          return function(a2) {
            return {
              name: "equal",
              source: source3,
              result: function() {
                var $48 = eq9(a1)(a2);
                if ($48) {
                  return new Right(unit);
                }
                ;
                return new Left(msg(unit));
              }()
            };
          };
        };
      };
    };
  };
  var assertM = function(dictApplicative) {
    var pure38 = pure(dictApplicative);
    return function(v) {
      if (v.result instanceof Right) {
        return pure38(v.result.value0);
      }
      ;
      if (v.result instanceof Left) {
        return bug(renderFailedAssertion(v)(v.result.value0));
      }
      ;
      throw new Error("Failed pattern match at Bug.Assertion (line 45, column 27 - line 47, column 62): " + [v.result.constructor.name]);
    };
  };
  var assertM_ = function(dictApplicative) {
    var $$void14 = $$void(dictApplicative.Apply0().Functor0());
    var assertM1 = assertM(dictApplicative);
    return function(ass) {
      return $$void14(assertM1(ass));
    };
  };
  var assert = function(v) {
    return function(k) {
      var k1 = k();
      if (v.result instanceof Right) {
        return k1(v.result.value0);
      }
      ;
      if (v.result instanceof Left) {
        return bug(renderFailedAssertion(v)(v.result.value0));
      }
      ;
      throw new Error("Failed pattern match at Bug.Assertion (line 34, column 32 - line 36, column 62): " + [v.result.constructor.name]);
    };
  };
  var assertI = function(ass) {
    return assert(ass)(function() {
      return identity15;
    });
  };
  var assertInput_ = function(ass_a) {
    return function(f) {
      var f1 = f();
      return function(a2) {
        return assert(ass_a(a2))(function() {
          return function(v) {
            return f1(a2);
          };
        });
      };
    };
  };

  // output/Data.Argonaut.Core/foreign.js
  function id3(x) {
    return x;
  }
  function stringify(j) {
    return JSON.stringify(j);
  }
  function isArray2(a2) {
    return Object.prototype.toString.call(a2) === "[object Array]";
  }
  function _caseJson(isNull3, isBool, isNum, isStr, isArr, isObj, j) {
    if (j == null)
      return isNull3();
    else if (typeof j === "boolean")
      return isBool(j);
    else if (typeof j === "number")
      return isNum(j);
    else if (typeof j === "string")
      return isStr(j);
    else if (Object.prototype.toString.call(j) === "[object Array]")
      return isArr(j);
    else
      return isObj(j);
  }
  function _compare(EQ2, GT2, LT2, a2, b2) {
    if (a2 == null) {
      if (b2 == null)
        return EQ2;
      else
        return LT2;
    } else if (typeof a2 === "boolean") {
      if (typeof b2 === "boolean") {
        if (a2 === b2)
          return EQ2;
        else if (a2 === false)
          return LT2;
        else
          return GT2;
      } else if (b2 == null)
        return GT2;
      else
        return LT2;
    } else if (typeof a2 === "number") {
      if (typeof b2 === "number") {
        if (a2 === b2)
          return EQ2;
        else if (a2 < b2)
          return LT2;
        else
          return GT2;
      } else if (b2 == null)
        return GT2;
      else if (typeof b2 === "boolean")
        return GT2;
      else
        return LT2;
    } else if (typeof a2 === "string") {
      if (typeof b2 === "string") {
        if (a2 === b2)
          return EQ2;
        else if (a2 < b2)
          return LT2;
        else
          return GT2;
      } else if (b2 == null)
        return GT2;
      else if (typeof b2 === "boolean")
        return GT2;
      else if (typeof b2 === "number")
        return GT2;
      else
        return LT2;
    } else if (isArray2(a2)) {
      if (isArray2(b2)) {
        for (var i2 = 0; i2 < Math.min(a2.length, b2.length); i2++) {
          var ca = _compare(EQ2, GT2, LT2, a2[i2], b2[i2]);
          if (ca !== EQ2)
            return ca;
        }
        if (a2.length === b2.length)
          return EQ2;
        else if (a2.length < b2.length)
          return LT2;
        else
          return GT2;
      } else if (b2 == null)
        return GT2;
      else if (typeof b2 === "boolean")
        return GT2;
      else if (typeof b2 === "number")
        return GT2;
      else if (typeof b2 === "string")
        return GT2;
      else
        return LT2;
    } else {
      if (b2 == null)
        return GT2;
      else if (typeof b2 === "boolean")
        return GT2;
      else if (typeof b2 === "number")
        return GT2;
      else if (typeof b2 === "string")
        return GT2;
      else if (isArray2(b2))
        return GT2;
      else {
        var akeys = Object.keys(a2);
        var bkeys = Object.keys(b2);
        if (akeys.length < bkeys.length)
          return LT2;
        else if (akeys.length > bkeys.length)
          return GT2;
        var keys4 = akeys.concat(bkeys).sort();
        for (var j = 0; j < keys4.length; j++) {
          var k = keys4[j];
          if (a2[k] === void 0)
            return LT2;
          else if (b2[k] === void 0)
            return GT2;
          var ck = _compare(EQ2, GT2, LT2, a2[k], b2[k]);
          if (ck !== EQ2)
            return ck;
        }
        return EQ2;
      }
    }
  }

  // output/Data.Argonaut.Core/index.js
  var eq3 = /* @__PURE__ */ eq(eqOrdering);
  var verbJsonType = function(def) {
    return function(f) {
      return function(g) {
        return g(def)(f);
      };
    };
  };
  var toJsonType = /* @__PURE__ */ function() {
    return verbJsonType(Nothing.value)(Just.create);
  }();
  var ordJson = {
    compare: function(a2) {
      return function(b2) {
        return _compare(EQ.value, GT.value, LT.value, a2, b2);
      };
    },
    Eq0: function() {
      return eqJson;
    }
  };
  var eqJson = {
    eq: function(j1) {
      return function(j2) {
        return eq3(compare(ordJson)(j1)(j2))(EQ.value);
      };
    }
  };
  var caseJsonString = function(d) {
    return function(f) {
      return function(j) {
        return _caseJson($$const(d), $$const(d), $$const(d), f, $$const(d), $$const(d), j);
      };
    };
  };
  var toString = /* @__PURE__ */ toJsonType(caseJsonString);
  var caseJsonObject = function(d) {
    return function(f) {
      return function(j) {
        return _caseJson($$const(d), $$const(d), $$const(d), $$const(d), $$const(d), f, j);
      };
    };
  };
  var toObject = /* @__PURE__ */ toJsonType(caseJsonObject);
  var caseJsonNumber = function(d) {
    return function(f) {
      return function(j) {
        return _caseJson($$const(d), $$const(d), f, $$const(d), $$const(d), $$const(d), j);
      };
    };
  };
  var caseJsonArray = function(d) {
    return function(f) {
      return function(j) {
        return _caseJson($$const(d), $$const(d), $$const(d), $$const(d), f, $$const(d), j);
      };
    };
  };
  var toArray = /* @__PURE__ */ toJsonType(caseJsonArray);

  // output/Data.Argonaut.Decode.Error/index.js
  var show4 = /* @__PURE__ */ show(showString);
  var show1 = /* @__PURE__ */ show(showInt);
  var TypeMismatch2 = /* @__PURE__ */ function() {
    function TypeMismatch3(value0) {
      this.value0 = value0;
    }
    ;
    TypeMismatch3.create = function(value0) {
      return new TypeMismatch3(value0);
    };
    return TypeMismatch3;
  }();
  var UnexpectedValue = /* @__PURE__ */ function() {
    function UnexpectedValue2(value0) {
      this.value0 = value0;
    }
    ;
    UnexpectedValue2.create = function(value0) {
      return new UnexpectedValue2(value0);
    };
    return UnexpectedValue2;
  }();
  var AtIndex = /* @__PURE__ */ function() {
    function AtIndex2(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    AtIndex2.create = function(value0) {
      return function(value14) {
        return new AtIndex2(value0, value14);
      };
    };
    return AtIndex2;
  }();
  var AtKey = /* @__PURE__ */ function() {
    function AtKey2(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    AtKey2.create = function(value0) {
      return function(value14) {
        return new AtKey2(value0, value14);
      };
    };
    return AtKey2;
  }();
  var Named = /* @__PURE__ */ function() {
    function Named2(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    Named2.create = function(value0) {
      return function(value14) {
        return new Named2(value0, value14);
      };
    };
    return Named2;
  }();
  var MissingValue = /* @__PURE__ */ function() {
    function MissingValue2() {
    }
    ;
    MissingValue2.value = new MissingValue2();
    return MissingValue2;
  }();
  var showJsonDecodeError = {
    show: function(v) {
      if (v instanceof TypeMismatch2) {
        return "(TypeMismatch " + (show4(v.value0) + ")");
      }
      ;
      if (v instanceof UnexpectedValue) {
        return "(UnexpectedValue " + (stringify(v.value0) + ")");
      }
      ;
      if (v instanceof AtIndex) {
        return "(AtIndex " + (show1(v.value0) + (" " + (show(showJsonDecodeError)(v.value1) + ")")));
      }
      ;
      if (v instanceof AtKey) {
        return "(AtKey " + (show4(v.value0) + (" " + (show(showJsonDecodeError)(v.value1) + ")")));
      }
      ;
      if (v instanceof Named) {
        return "(Named " + (show4(v.value0) + (" " + (show(showJsonDecodeError)(v.value1) + ")")));
      }
      ;
      if (v instanceof MissingValue) {
        return "MissingValue";
      }
      ;
      throw new Error("Failed pattern match at Data.Argonaut.Decode.Error (line 24, column 10 - line 30, column 35): " + [v.constructor.name]);
    }
  };

  // output/Data.Set/index.js
  var foldMap4 = /* @__PURE__ */ foldMap(foldableList);
  var foldl4 = /* @__PURE__ */ foldl(foldableList);
  var foldr5 = /* @__PURE__ */ foldr(foldableList);
  var $$Set = function(x) {
    return x;
  };
  var union3 = function(dictOrd) {
    var union1 = union(dictOrd);
    return function(v) {
      return function(v1) {
        return union1(v)(v1);
      };
    };
  };
  var toList2 = function(v) {
    return keys(v);
  };
  var toUnfoldable4 = function(dictUnfoldable) {
    var $127 = toUnfoldable(dictUnfoldable);
    return function($128) {
      return $127(toList2($128));
    };
  };
  var singleton10 = function(a2) {
    return singleton4(a2)(unit);
  };
  var isEmpty3 = function(v) {
    return isEmpty(v);
  };
  var insert7 = function(dictOrd) {
    var insert16 = insert(dictOrd);
    return function(a2) {
      return function(v) {
        return insert16(a2)(unit)(v);
      };
    };
  };
  var fromMap = $$Set;
  var foldableSet = {
    foldMap: function(dictMonoid) {
      var foldMap14 = foldMap4(dictMonoid);
      return function(f) {
        var $129 = foldMap14(f);
        return function($130) {
          return $129(toList2($130));
        };
      };
    },
    foldl: function(f) {
      return function(x) {
        var $131 = foldl4(f)(x);
        return function($132) {
          return $131(toList2($132));
        };
      };
    },
    foldr: function(f) {
      return function(x) {
        var $133 = foldr5(f)(x);
        return function($134) {
          return $133(toList2($134));
        };
      };
    }
  };
  var foldl12 = /* @__PURE__ */ foldl(foldableSet);
  var filter4 = function(dictOrd) {
    var filterWithKey2 = filterWithKey(dictOrd);
    return function(f) {
      return function(v) {
        return filterWithKey2(function(k) {
          return function(v1) {
            return f(k);
          };
        })(v);
      };
    };
  };
  var eqSet = function(dictEq) {
    var eq9 = eq(eqMap(dictEq)(eqUnit));
    return {
      eq: function(v) {
        return function(v1) {
          return eq9(v)(v1);
        };
      }
    };
  };
  var empty7 = empty2;
  var fromFoldable6 = function(dictFoldable) {
    var foldl23 = foldl(dictFoldable);
    return function(dictOrd) {
      var insert16 = insert7(dictOrd);
      return foldl23(function(m) {
        return function(a2) {
          return insert16(a2)(m);
        };
      })(empty7);
    };
  };
  var map31 = function(dictOrd) {
    var insert16 = insert7(dictOrd);
    return function(f) {
      return foldl12(function(m) {
        return function(a2) {
          return insert16(f(a2))(m);
        };
      })(empty7);
    };
  };
  var $$delete4 = function(dictOrd) {
    var delete1 = $$delete(dictOrd);
    return function(a2) {
      return function(v) {
        return delete1(a2)(v);
      };
    };
  };

  // output/Data.Argonaut.Decode.Decoders/index.js
  var map32 = /* @__PURE__ */ map(functorEither);
  var lmap2 = /* @__PURE__ */ lmap(bifunctorEither);
  var composeKleisliFlipped3 = /* @__PURE__ */ composeKleisliFlipped(bindEither);
  var bind10 = /* @__PURE__ */ bind(bindEither);
  var traverseWithIndex2 = /* @__PURE__ */ traverseWithIndex(traversableWithIndexArray)(applicativeEither);
  var decodeString = /* @__PURE__ */ function() {
    return caseJsonString(new Left(new TypeMismatch2("String")))(Right.create);
  }();
  var decodeNumber = /* @__PURE__ */ function() {
    return caseJsonNumber(new Left(new TypeMismatch2("Number")))(Right.create);
  }();
  var decodeJObject = /* @__PURE__ */ function() {
    var $50 = note(new TypeMismatch2("Object"));
    return function($51) {
      return $50(toObject($51));
    };
  }();
  var decodeJArray = /* @__PURE__ */ function() {
    var $52 = note(new TypeMismatch2("Array"));
    return function($53) {
      return $52(toArray($53));
    };
  }();
  var decodeInt = /* @__PURE__ */ composeKleisliFlipped3(/* @__PURE__ */ function() {
    var $84 = note(new TypeMismatch2("Integer"));
    return function($85) {
      return $84(fromNumber($85));
    };
  }())(decodeNumber);
  var decodeEither = function(decoderA) {
    return function(decoderB) {
      return function(json) {
        return lmap2(Named.create("Either"))(bind10(decodeJObject(json))(function(obj) {
          return bind10(note(new AtKey("tag", MissingValue.value))(lookup4("tag")(obj)))(function(tag) {
            return bind10(note(new AtKey("value", MissingValue.value))(lookup4("value")(obj)))(function(val) {
              var v = toString(tag);
              if (v instanceof Just && v.value0 === "Right") {
                return map32(Right.create)(decoderB(val));
              }
              ;
              if (v instanceof Just && v.value0 === "Left") {
                return map32(Left.create)(decoderA(val));
              }
              ;
              return new Left(new AtKey("tag", new UnexpectedValue(tag)));
            });
          });
        }));
      };
    };
  };
  var decodeArray = function(decoder) {
    return composeKleisliFlipped3(function() {
      var $89 = lmap2(Named.create("Array"));
      var $90 = traverseWithIndex2(function(i2) {
        var $92 = lmap2(AtIndex.create(i2));
        return function($93) {
          return $92(decoder($93));
        };
      });
      return function($91) {
        return $89($90($91));
      };
    }())(decodeJArray);
  };

  // output/Data.Argonaut.Decode.Class/index.js
  var decodeJsonString = {
    decodeJson: decodeString
  };
  var decodeJsonInt = {
    decodeJson: decodeInt
  };
  var decodeJson = function(dict) {
    return dict.decodeJson;
  };
  var decodeJsonEither = function(dictDecodeJson) {
    var decodeJson1 = decodeJson(dictDecodeJson);
    return function(dictDecodeJson1) {
      return {
        decodeJson: decodeEither(decodeJson1)(decodeJson(dictDecodeJson1))
      };
    };
  };
  var decodeArray2 = function(dictDecodeJson) {
    return {
      decodeJson: decodeArray(decodeJson(dictDecodeJson))
    };
  };

  // output/Data.Argonaut.Types.Generic/index.js
  var defaultEncoding = {
    tagKey: "tag",
    valuesKey: "values",
    unwrapSingleArguments: false
  };

  // output/Data.Argonaut.Decode.Generic/index.js
  var bind11 = /* @__PURE__ */ bind(bindEither);
  var discard5 = /* @__PURE__ */ discard(discardUnit)(bindEither);
  var when5 = /* @__PURE__ */ when(applicativeEither);
  var pure9 = /* @__PURE__ */ pure(applicativeEither);
  var map33 = /* @__PURE__ */ map(functorEither);
  var alt5 = /* @__PURE__ */ alt(altEither);
  var lmap3 = /* @__PURE__ */ lmap(bifunctorEither);
  var notEq1 = /* @__PURE__ */ notEq(/* @__PURE__ */ eqArray(eqJson));
  var withTag = function(e) {
    return function(j) {
      return function(name15) {
        var decodingErr = Named.create(name15);
        return bind11(note(decodingErr(new TypeMismatch2("Object")))(toObject(j)))(function(jObj) {
          return bind11(note(decodingErr(new AtKey(e.tagKey, MissingValue.value)))(lookup4(e.tagKey)(jObj)))(function(jTag) {
            return bind11(note(decodingErr(new AtKey(e.tagKey, new TypeMismatch2("String"))))(toString(jTag)))(function(tag) {
              return discard5(when5(tag !== name15)(new Left(decodingErr(new AtKey(e.tagKey, new UnexpectedValue(id3(tag)))))))(function() {
                return pure9({
                  tag,
                  decodingErr
                });
              });
            });
          });
        });
      };
    };
  };
  var withTagAndValues = function(e) {
    return function(j) {
      return function(name15) {
        return bind11(withTag(e)(j)(name15))(function(v) {
          return bind11(note(v.decodingErr(new TypeMismatch2("Object")))(toObject(j)))(function(jObj) {
            return bind11(note(v.decodingErr(new AtKey(e.valuesKey, MissingValue.value)))(lookup4(e.valuesKey)(jObj)))(function(values3) {
              return pure9({
                tag: v.tag,
                values: values3,
                decodingErr: v.decodingErr
              });
            });
          });
        });
      };
    };
  };
  var decodeRepWith = function(dict) {
    return dict.decodeRepWith;
  };
  var genericDecodeJsonWith = function(dictGeneric) {
    var to2 = to(dictGeneric);
    return function(dictDecodeRep) {
      var decodeRepWith1 = decodeRepWith(dictDecodeRep);
      return function(e) {
        var $101 = map33(to2);
        var $102 = decodeRepWith1(e);
        return function($103) {
          return $101($102($103));
        };
      };
    };
  };
  var genericDecodeJson = function(dictGeneric) {
    var genericDecodeJsonWith1 = genericDecodeJsonWith(dictGeneric);
    return function(dictDecodeRep) {
      return genericDecodeJsonWith1(dictDecodeRep)(defaultEncoding);
    };
  };
  var decodeRepSum = function(dictDecodeRep) {
    var decodeRepWith1 = decodeRepWith(dictDecodeRep);
    return function(dictDecodeRep1) {
      var decodeRepWith2 = decodeRepWith(dictDecodeRep1);
      return {
        decodeRepWith: function(e) {
          return function(j) {
            return alt5(map33(Inl.create)(decodeRepWith1(e)(j)))(map33(Inr.create)(decodeRepWith2(e)(j)));
          };
        }
      };
    };
  };
  var decodeRepArgsNoArguments = {
    decodeRepArgs: function(js) {
      return new Right({
        init: NoArguments.value,
        rest: js
      });
    }
  };
  var decodeRepArgsArgument = function(dictDecodeJson) {
    var decodeJson2 = decodeJson(dictDecodeJson);
    return {
      decodeRepArgs: function(js) {
        return bind11(note(new TypeMismatch2("NonEmptyArray"))(uncons2(js)))(function(v) {
          return map33(function($104) {
            return function(v1) {
              return {
                init: v1,
                rest: v.tail
              };
            }(Argument($104));
          })(decodeJson2(v.head));
        });
      }
    };
  };
  var decodeRepArgs = function(dict) {
    return dict.decodeRepArgs;
  };
  var decodeRepArgsProduct = function(dictDecodeRepArgs) {
    var decodeRepArgs1 = decodeRepArgs(dictDecodeRepArgs);
    return function(dictDecodeRepArgs1) {
      var decodeRepArgs2 = decodeRepArgs(dictDecodeRepArgs1);
      return {
        decodeRepArgs: function(js) {
          return bind11(decodeRepArgs1(js))(function(v) {
            return bind11(decodeRepArgs2(v.rest))(function(v1) {
              return pure9({
                init: new Product(v.init, v1.init),
                rest: v1.rest
              });
            });
          });
        }
      };
    };
  };
  var construct = function(dictDecodeRepArgs) {
    var decodeRepArgs1 = decodeRepArgs(dictDecodeRepArgs);
    return function(e) {
      return function(valuesArray) {
        return function(decodingErr) {
          return bind11(lmap3(decodingErr)(decodeRepArgs1(valuesArray)))(function(v) {
            return discard5(when5(notEq1(v.rest)([]))(new Left(decodingErr(new AtKey(e.valuesKey, new UnexpectedValue(id3(v.rest)))))))(function() {
              return pure9(v.init);
            });
          });
        };
      };
    };
  };
  var construct1 = /* @__PURE__ */ construct(decodeRepArgsNoArguments);
  var decodeRepConstructor = function(dictIsSymbol) {
    var reflectSymbol2 = reflectSymbol(dictIsSymbol);
    return function(dictDecodeRepArgs) {
      var construct2 = construct(dictDecodeRepArgs);
      return {
        decodeRepWith: function(e) {
          return function(j) {
            var name15 = reflectSymbol2($$Proxy.value);
            return bind11(withTagAndValues(e)(j)(name15))(function(v) {
              return bind11(note(v.decodingErr(new AtKey(e.valuesKey, new TypeMismatch2("Array"))))(toArray(v.values)))(function(valuesArray) {
                return construct2(e)(valuesArray)(v.decodingErr);
              });
            });
          };
        }
      };
    };
  };
  var decodeRepConstructorArg = function(dictIsSymbol) {
    var reflectSymbol2 = reflectSymbol(dictIsSymbol);
    return function(dictDecodeJson) {
      var construct2 = construct(decodeRepArgsArgument(dictDecodeJson));
      return {
        decodeRepWith: function(e) {
          return function(j) {
            var name15 = reflectSymbol2($$Proxy.value);
            return bind11(withTagAndValues(e)(j)(name15))(function(v) {
              if (e.unwrapSingleArguments) {
                return construct2(e)([v.values])(v.decodingErr);
              }
              ;
              return bind11(note(v.decodingErr(new AtKey(e.valuesKey, new TypeMismatch2("Array"))))(toArray(v.values)))(function(valuesArray) {
                return construct2(e)(valuesArray)(v.decodingErr);
              });
            });
          };
        }
      };
    };
  };
  var decodeRepConstructorNoArgs = function(dictIsSymbol) {
    var reflectSymbol2 = reflectSymbol(dictIsSymbol);
    return {
      decodeRepWith: function(e) {
        return function(j) {
          var name15 = reflectSymbol2($$Proxy.value);
          return bind11(withTag(e)(j)(name15))(function(v) {
            return construct1(e)([])(v.decodingErr);
          });
        };
      }
    };
  };

  // output/Data.Argonaut.Encode.Encoders/index.js
  var map34 = /* @__PURE__ */ map(functorArray);
  var fromFoldable7 = /* @__PURE__ */ fromFoldable4(foldableList);
  var encodeString = id3;
  var encodeInt = function($53) {
    return id3(toNumber($53));
  };
  var encodeEither = function(encoderA) {
    return function(encoderB) {
      var obj = function(encoder) {
        return function(tag) {
          return function(x) {
            return id3(fromFoldable7(new Cons(new Tuple("tag", id3(tag)), new Cons(new Tuple("value", encoder(x)), Nil.value))));
          };
        };
      };
      return either(obj(encoderA)("Left"))(obj(encoderB)("Right"));
    };
  };
  var encodeArray = function(encoder) {
    var $58 = map34(encoder);
    return function($59) {
      return id3($58($59));
    };
  };

  // output/Data.Argonaut.Encode.Class/index.js
  var encodeJsonJString = {
    encodeJson: encodeString
  };
  var encodeJsonInt = {
    encodeJson: encodeInt
  };
  var encodeJson = function(dict) {
    return dict.encodeJson;
  };
  var encodeJsonArray = function(dictEncodeJson) {
    return {
      encodeJson: encodeArray(encodeJson(dictEncodeJson))
    };
  };
  var encodeJsonEither = function(dictEncodeJson) {
    var encodeJson1 = encodeJson(dictEncodeJson);
    return function(dictEncodeJson1) {
      return {
        encodeJson: encodeEither(encodeJson1)(encodeJson(dictEncodeJson1))
      };
    };
  };

  // output/Data.Argonaut.Encode.Generic/index.js
  var append8 = /* @__PURE__ */ append(semigroupArray);
  var encodeRepWith = function(dict) {
    return dict.encodeRepWith;
  };
  var genericEncodeJsonWith = function(dictGeneric) {
    var from3 = from(dictGeneric);
    return function(dictEncodeRep) {
      var encodeRepWith1 = encodeRepWith(dictEncodeRep);
      return function(e) {
        var $73 = encodeRepWith1(e);
        return function($74) {
          return $73(from3($74));
        };
      };
    };
  };
  var genericEncodeJson = function(dictGeneric) {
    var genericEncodeJsonWith1 = genericEncodeJsonWith(dictGeneric);
    return function(dictEncodeRep) {
      return genericEncodeJsonWith1(dictEncodeRep)(defaultEncoding);
    };
  };
  var encodeRepSum = function(dictEncodeRep) {
    var encodeRepWith1 = encodeRepWith(dictEncodeRep);
    return function(dictEncodeRep1) {
      var encodeRepWith2 = encodeRepWith(dictEncodeRep1);
      return {
        encodeRepWith: function(v) {
          return function(v1) {
            if (v1 instanceof Inl) {
              return encodeRepWith1(v)(v1.value0);
            }
            ;
            if (v1 instanceof Inr) {
              return encodeRepWith2(v)(v1.value0);
            }
            ;
            throw new Error("Failed pattern match at Data.Argonaut.Encode.Generic (line 36, column 1 - line 38, column 50): " + [v.constructor.name, v1.constructor.name]);
          };
        }
      };
    };
  };
  var encodeRepArgsNoArguments = {
    encodeRepArgs: function(v) {
      return [];
    }
  };
  var encodeRepArgsArgument = function(dictEncodeJson) {
    var encodeJson3 = encodeJson(dictEncodeJson);
    return {
      encodeRepArgs: function(v) {
        return [encodeJson3(v)];
      }
    };
  };
  var encodeRepArgs = function(dict) {
    return dict.encodeRepArgs;
  };
  var encodeRepArgsProduct = function(dictEncodeRepArgs) {
    var encodeRepArgs1 = encodeRepArgs(dictEncodeRepArgs);
    return function(dictEncodeRepArgs1) {
      var encodeRepArgs2 = encodeRepArgs(dictEncodeRepArgs1);
      return {
        encodeRepArgs: function(v) {
          return append8(encodeRepArgs1(v.value0))(encodeRepArgs2(v.value1));
        }
      };
    };
  };
  var encodeRepConstructor = function(dictIsSymbol) {
    var reflectSymbol2 = reflectSymbol(dictIsSymbol);
    return function(dictEncodeRepArgs) {
      var encodeRepArgs1 = encodeRepArgs(dictEncodeRepArgs);
      return {
        encodeRepWith: function(e) {
          return function(v) {
            var values3 = function() {
              var vs = encodeRepArgs1(v);
              if (e.unwrapSingleArguments) {
                if (vs.length === 1) {
                  return vs[0];
                }
                ;
                return id3(vs);
              }
              ;
              return id3(vs);
            }();
            return id3(insert3(e.tagKey)(id3(reflectSymbol2($$Proxy.value)))(insert3(e.valuesKey)(values3)(empty4)));
          };
        }
      };
    };
  };

  // output/Data.Eq.Generic/index.js
  var genericEqNoArguments = {
    "genericEq'": function(v) {
      return function(v1) {
        return true;
      };
    }
  };
  var genericEqArgument = function(dictEq) {
    var eq9 = eq(dictEq);
    return {
      "genericEq'": function(v) {
        return function(v1) {
          return eq9(v)(v1);
        };
      }
    };
  };
  var genericEq$prime = function(dict) {
    return dict["genericEq'"];
  };
  var genericEqConstructor = function(dictGenericEq) {
    var genericEq$prime1 = genericEq$prime(dictGenericEq);
    return {
      "genericEq'": function(v) {
        return function(v1) {
          return genericEq$prime1(v)(v1);
        };
      }
    };
  };
  var genericEqProduct = function(dictGenericEq) {
    var genericEq$prime1 = genericEq$prime(dictGenericEq);
    return function(dictGenericEq1) {
      var genericEq$prime2 = genericEq$prime(dictGenericEq1);
      return {
        "genericEq'": function(v) {
          return function(v1) {
            return genericEq$prime1(v.value0)(v1.value0) && genericEq$prime2(v.value1)(v1.value1);
          };
        }
      };
    };
  };
  var genericEqSum = function(dictGenericEq) {
    var genericEq$prime1 = genericEq$prime(dictGenericEq);
    return function(dictGenericEq1) {
      var genericEq$prime2 = genericEq$prime(dictGenericEq1);
      return {
        "genericEq'": function(v) {
          return function(v1) {
            if (v instanceof Inl && v1 instanceof Inl) {
              return genericEq$prime1(v.value0)(v1.value0);
            }
            ;
            if (v instanceof Inr && v1 instanceof Inr) {
              return genericEq$prime2(v.value0)(v1.value0);
            }
            ;
            return false;
          };
        }
      };
    };
  };
  var genericEq = function(dictGeneric) {
    var from3 = from(dictGeneric);
    return function(dictGenericEq) {
      var genericEq$prime1 = genericEq$prime(dictGenericEq);
      return function(x) {
        return function(y) {
          return genericEq$prime1(from3(x))(from3(y));
        };
      };
    };
  };

  // output/Data.List.Rev/index.js
  var foldr6 = /* @__PURE__ */ foldr(foldableList);
  var foldl5 = /* @__PURE__ */ foldl(foldableList);
  var foldMap5 = /* @__PURE__ */ foldMap(foldableList);
  var traverse2 = /* @__PURE__ */ traverse(traversableList);
  var sequence2 = /* @__PURE__ */ sequence(traversableList);
  var Rev = function(x) {
    return x;
  };
  var showRevList = function(dictShow) {
    return showList(dictShow);
  };
  var ordRevList = function(dictOrd) {
    return ordList(dictOrd);
  };
  var monoidRevList = monoidList;
  var functorRevList = functorList;
  var eqRevList = function(dictEq) {
    return eqList(dictEq);
  };
  var wrap3 = Rev;
  var unwrap9 = function(v) {
    return v;
  };
  var unzip3 = /* @__PURE__ */ function() {
    var $67 = bimap(bifunctorTuple)(wrap3)(wrap3);
    return function($68) {
      return $67(unzip(unwrap9($68)));
    };
  }();
  var unreverse = function($71) {
    return reverse(unwrap9($71));
  };
  var foldableRevList = {
    foldr: function(f) {
      return function(b2) {
        var $72 = foldr6(f)(b2);
        return function($73) {
          return $72(unreverse($73));
        };
      };
    },
    foldl: function(f) {
      return function(b2) {
        var $74 = foldl5(f)(b2);
        return function($75) {
          return $74(unreverse($75));
        };
      };
    },
    foldMap: function(dictMonoid) {
      var foldMap14 = foldMap5(dictMonoid);
      return function(f) {
        var $76 = foldMap14(f);
        return function($77) {
          return $76(unreverse($77));
        };
      };
    }
  };
  var reverseArray = /* @__PURE__ */ function() {
    var $78 = fromFoldable(foldableArray);
    return function($79) {
      return Rev($78(reverse2($79)));
    };
  }();
  var reverse3 = function($80) {
    return Rev(reverse($80));
  };
  var traversableRevList = {
    traverse: function(dictApplicative) {
      var map69 = map(dictApplicative.Apply0().Functor0());
      var traverse13 = traverse2(dictApplicative);
      return function(f) {
        var $84 = map69(reverse3);
        var $85 = traverse13(f);
        return function($86) {
          return $84($85(unreverse($86)));
        };
      };
    },
    sequence: function(dictApplicative) {
      var $87 = map(dictApplicative.Apply0().Functor0())(reverse3);
      var $88 = sequence2(dictApplicative);
      return function($89) {
        return $87($88(unreverse($89)));
      };
    },
    Functor0: function() {
      return functorRevList;
    },
    Foldable1: function() {
      return foldableRevList;
    }
  };
  var over2 = function(f) {
    return function($90) {
      return wrap3(f(unwrap9($90)));
    };
  };
  var snoc5 = function(r_xs) {
    return function(x) {
      return over2(Cons.create(x))(r_xs);
    };
  };
  var length9 = function($92) {
    return length4(unwrap9($92));
  };

  // output/Data.Show.Generic/foreign.js
  var intercalate7 = function(separator) {
    return function(xs) {
      return xs.join(separator);
    };
  };

  // output/Data.Show.Generic/index.js
  var append9 = /* @__PURE__ */ append(semigroupArray);
  var genericShowArgsNoArguments = {
    genericShowArgs: function(v) {
      return [];
    }
  };
  var genericShowArgsArgument = function(dictShow) {
    var show19 = show(dictShow);
    return {
      genericShowArgs: function(v) {
        return [show19(v)];
      }
    };
  };
  var genericShowArgs = function(dict) {
    return dict.genericShowArgs;
  };
  var genericShowArgsProduct = function(dictGenericShowArgs) {
    var genericShowArgs1 = genericShowArgs(dictGenericShowArgs);
    return function(dictGenericShowArgs1) {
      var genericShowArgs2 = genericShowArgs(dictGenericShowArgs1);
      return {
        genericShowArgs: function(v) {
          return append9(genericShowArgs1(v.value0))(genericShowArgs2(v.value1));
        }
      };
    };
  };
  var genericShowConstructor = function(dictGenericShowArgs) {
    var genericShowArgs1 = genericShowArgs(dictGenericShowArgs);
    return function(dictIsSymbol) {
      var reflectSymbol2 = reflectSymbol(dictIsSymbol);
      return {
        "genericShow'": function(v) {
          var ctor = reflectSymbol2($$Proxy.value);
          var v1 = genericShowArgs1(v);
          if (v1.length === 0) {
            return ctor;
          }
          ;
          return "(" + (intercalate7(" ")(append9([ctor])(v1)) + ")");
        }
      };
    };
  };
  var genericShow$prime = function(dict) {
    return dict["genericShow'"];
  };
  var genericShowSum = function(dictGenericShow) {
    var genericShow$prime1 = genericShow$prime(dictGenericShow);
    return function(dictGenericShow1) {
      var genericShow$prime2 = genericShow$prime(dictGenericShow1);
      return {
        "genericShow'": function(v) {
          if (v instanceof Inl) {
            return genericShow$prime1(v.value0);
          }
          ;
          if (v instanceof Inr) {
            return genericShow$prime2(v.value0);
          }
          ;
          throw new Error("Failed pattern match at Data.Show.Generic (line 26, column 1 - line 28, column 40): " + [v.constructor.name]);
        }
      };
    };
  };
  var genericShow = function(dictGeneric) {
    var from3 = from(dictGeneric);
    return function(dictGenericShow) {
      var genericShow$prime1 = genericShow$prime(dictGenericShow);
      return function(x) {
        return genericShow$prime1(from3(x));
      };
    };
  };

  // output/Text.Pretty/index.js
  var intercalate8 = /* @__PURE__ */ intercalate3(monoidString);
  var map35 = /* @__PURE__ */ map(functorArray);
  var mapFlipped2 = /* @__PURE__ */ mapFlipped(functorArray);
  var toUnfoldable5 = /* @__PURE__ */ toUnfoldable2(unfoldableArray);
  var prettyString = {
    pretty: /* @__PURE__ */ identity(categoryFn)
  };
  var surround = function(left) {
    return function(right) {
      return function(str) {
        return left + (str + right);
      };
    };
  };
  var quotes = /* @__PURE__ */ surround("'")("'");
  var pretty = function(dict) {
    return dict.pretty;
  };
  var prettyArray = function(dictPretty) {
    var pretty13 = pretty(dictPretty);
    return {
      pretty: function(xs) {
        return "[" + (intercalate8(", ")(map35(pretty13)(xs)) + "]");
      }
    };
  };
  var prettyTuple = function(dictPretty) {
    var pretty13 = pretty(dictPretty);
    return function(dictPretty1) {
      var pretty23 = pretty(dictPretty1);
      return {
        pretty: function(v) {
          return pretty13(v.value0) + (", " + pretty23(v.value1));
        }
      };
    };
  };
  var parens = /* @__PURE__ */ surround("(")(")");
  var newlines = /* @__PURE__ */ intercalate8("\n");
  var indent = /* @__PURE__ */ function() {
    var $65 = intercalate8("\n");
    var $66 = map35(function(v) {
      return "  " + v;
    });
    var $67 = split("\n");
    return function($68) {
      return $65($66($67($68)));
    };
  }();
  var cursor = /* @__PURE__ */ surround("\u2336{")("}");
  var bullets = /* @__PURE__ */ function() {
    var $69 = foldMap2(monoidString)(function(v) {
      return "\n- " + v;
    });
    var $70 = map35(function() {
      var $72 = intercalate8("\n  ");
      var $73 = split("\n");
      return function($74) {
        return $72($73($74));
      };
    }());
    return function($71) {
      return indent($69($70($71)));
    };
  }();
  var prettyMap = function(dictPretty) {
    var pretty13 = pretty(dictPretty);
    return function(dictPretty1) {
      var pretty23 = pretty(dictPretty1);
      return {
        pretty: function(m) {
          return "map:" + indent(bullets(mapFlipped2(toUnfoldable5(m))(function(v) {
            return pretty13(v.value0) + (" \u21A6 " + pretty23(v.value1));
          })));
        }
      };
    };
  };
  var brackets = /* @__PURE__ */ surround("[")("]");
  var braces = /* @__PURE__ */ surround("{")("}");
  var appendSpaced = function(v) {
    return function(v1) {
      if ($$null2(v)) {
        return v1;
      }
      ;
      if ($$null2(v1)) {
        return v;
      }
      ;
      return v + (" " + v1);
    };
  };

  // output/Data.List.Zip/index.js
  var append13 = /* @__PURE__ */ append(semigroupList);
  var mempty2 = /* @__PURE__ */ mempty(monoidRevList);
  var showRecord2 = /* @__PURE__ */ showRecord()();
  var leftIsSymbol = {
    reflectSymbol: function() {
      return "left";
    }
  };
  var showRecordFieldsCons2 = /* @__PURE__ */ showRecordFieldsCons(leftIsSymbol);
  var rightIsSymbol = {
    reflectSymbol: function() {
      return "right";
    }
  };
  var showRecordFieldsConsNil2 = /* @__PURE__ */ showRecordFieldsConsNil(rightIsSymbol);
  var PathIsSymbol = {
    reflectSymbol: function() {
      return "Path";
    }
  };
  var map36 = /* @__PURE__ */ map(functorRevList);
  var map113 = /* @__PURE__ */ map(functorList);
  var foldl6 = /* @__PURE__ */ foldl(foldableList);
  var foldl13 = /* @__PURE__ */ foldl(foldableRevList);
  var foldr7 = /* @__PURE__ */ foldr(foldableRevList);
  var foldr12 = /* @__PURE__ */ foldr(foldableList);
  var foldMap6 = /* @__PURE__ */ foldMap(foldableRevList);
  var foldMap13 = /* @__PURE__ */ foldMap(foldableList);
  var traverse3 = /* @__PURE__ */ traverse(traversableRevList);
  var traverse12 = /* @__PURE__ */ traverse(traversableList);
  var identity16 = /* @__PURE__ */ identity(categoryFn);
  var genericPath_ = {
    to: function(x) {
      return x;
    },
    from: function(x) {
      return x;
    }
  };
  var genericShow1 = /* @__PURE__ */ genericShow(genericPath_);
  var showPath1 = function(dictShow) {
    var genericShow24 = genericShow1(genericShowConstructor(genericShowArgsArgument(showRecord2(showRecordFieldsCons2(showRecordFieldsConsNil2(showList(dictShow)))(showRevList(dictShow)))))(PathIsSymbol));
    return {
      show: function(x) {
        return genericShow24(x);
      }
    };
  };
  var functorPath = {
    map: function(f) {
      return function(m) {
        return {
          left: map36(f)(m.left),
          right: map113(f)(m.right)
        };
      };
    }
  };
  var foldablePath = {
    foldl: function(f) {
      return function(z) {
        return function(m) {
          return foldl6(f)(foldl13(f)(z)(m.left))(m.right);
        };
      };
    },
    foldr: function(f) {
      return function(z) {
        return function(m) {
          return foldr7(f)(foldr12(f)(z)(m.right))(m.left);
        };
      };
    },
    foldMap: function(dictMonoid) {
      var append27 = append(dictMonoid.Semigroup0());
      var foldMap22 = foldMap6(dictMonoid);
      var foldMap32 = foldMap13(dictMonoid);
      return function(f) {
        return function(m) {
          return append27(foldMap22(f)(m.left))(foldMap32(f)(m.right));
        };
      };
    }
  };
  var traversablePath = {
    traverse: function(dictApplicative) {
      var Apply0 = dictApplicative.Apply0();
      var apply6 = apply(Apply0);
      var map315 = map(Apply0.Functor0());
      var traverse32 = traverse3(dictApplicative);
      var traverse4 = traverse12(dictApplicative);
      return function(f) {
        return function(m) {
          return apply6(map315(function(v1) {
            return function(v2) {
              return {
                left: v1,
                right: v2
              };
            };
          })(traverse32(f)(m.left)))(traverse4(f)(m.right));
        };
      };
    },
    sequence: function(dictApplicative) {
      return function(v) {
        return traverse(traversablePath)(dictApplicative)(identity16)(v);
      };
    },
    Functor0: function() {
      return functorPath;
    },
    Foldable1: function() {
      return foldablePath;
    }
  };
  var eqPath = function(dictEq) {
    var eq9 = eq(eqRevList(dictEq));
    var eq15 = eq(eqList(dictEq));
    return {
      eq: function(x) {
        return function(y) {
          return eq9(x.left)(y.left) && eq15(x.right)(y.right);
        };
      }
    };
  };
  var ordPath = function(dictOrd) {
    var compare10 = compare(ordRevList(dictOrd));
    var compare15 = compare(ordList(dictOrd));
    var eqPath1 = eqPath(dictOrd.Eq0());
    return {
      compare: function(x) {
        return function(y) {
          var v = compare10(x.left)(y.left);
          if (v instanceof LT) {
            return LT.value;
          }
          ;
          if (v instanceof GT) {
            return GT.value;
          }
          ;
          return compare15(x.right)(y.right);
        };
      },
      Eq0: function() {
        return eqPath1;
      }
    };
  };
  var zipAt = /* @__PURE__ */ function() {
    var go2 = function($copy_v) {
      return function($copy_v1) {
        return function($copy_v2) {
          var $tco_var_v = $copy_v;
          var $tco_var_v1 = $copy_v1;
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(v, v1, v2) {
            if (v2 instanceof Nil) {
              $tco_done = true;
              return Nothing.value;
            }
            ;
            if (v1 === 0 && v2 instanceof Cons) {
              $tco_done = true;
              return new Just(new Tuple({
                left: v,
                right: v2.value1
              }, v2.value0));
            }
            ;
            if (v2 instanceof Cons) {
              $tco_var_v = snoc5(v)(v2.value0);
              $tco_var_v1 = v1 - 1 | 0;
              $copy_v2 = v2.value1;
              return;
            }
            ;
            throw new Error("Failed pattern match at Data.List.Zip (line 109, column 3 - line 109, column 23): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
          }
          ;
          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);
          }
          ;
          return $tco_result;
        };
      };
    };
    return go2(mempty2);
  }();
  var unpathAroundList = function(xs) {
    return function(v) {
      return append13(unreverse(v.left))(append13(xs)(v.right));
    };
  };
  var unpathAround = function(x) {
    return unpathAroundList(singleton3(x));
  };
  var unpath = function(v) {
    return append13(unreverse(v.left))(v.right);
  };
  var leftLength = function(v) {
    return length9(v.left);
  };

  // output/Data.Ord.Generic/index.js
  var genericOrdNoArguments = {
    "genericCompare'": function(v) {
      return function(v1) {
        return EQ.value;
      };
    }
  };
  var genericOrdArgument = function(dictOrd) {
    var compare10 = compare(dictOrd);
    return {
      "genericCompare'": function(v) {
        return function(v1) {
          return compare10(v)(v1);
        };
      }
    };
  };
  var genericCompare$prime = function(dict) {
    return dict["genericCompare'"];
  };
  var genericOrdConstructor = function(dictGenericOrd) {
    var genericCompare$prime1 = genericCompare$prime(dictGenericOrd);
    return {
      "genericCompare'": function(v) {
        return function(v1) {
          return genericCompare$prime1(v)(v1);
        };
      }
    };
  };
  var genericOrdProduct = function(dictGenericOrd) {
    var genericCompare$prime1 = genericCompare$prime(dictGenericOrd);
    return function(dictGenericOrd1) {
      var genericCompare$prime2 = genericCompare$prime(dictGenericOrd1);
      return {
        "genericCompare'": function(v) {
          return function(v1) {
            var v2 = genericCompare$prime1(v.value0)(v1.value0);
            if (v2 instanceof EQ) {
              return genericCompare$prime2(v.value1)(v1.value1);
            }
            ;
            return v2;
          };
        }
      };
    };
  };
  var genericOrdSum = function(dictGenericOrd) {
    var genericCompare$prime1 = genericCompare$prime(dictGenericOrd);
    return function(dictGenericOrd1) {
      var genericCompare$prime2 = genericCompare$prime(dictGenericOrd1);
      return {
        "genericCompare'": function(v) {
          return function(v1) {
            if (v instanceof Inl && v1 instanceof Inl) {
              return genericCompare$prime1(v.value0)(v1.value0);
            }
            ;
            if (v instanceof Inr && v1 instanceof Inr) {
              return genericCompare$prime2(v.value0)(v1.value0);
            }
            ;
            if (v instanceof Inl && v1 instanceof Inr) {
              return LT.value;
            }
            ;
            if (v instanceof Inr && v1 instanceof Inl) {
              return GT.value;
            }
            ;
            throw new Error("Failed pattern match at Data.Ord.Generic (line 19, column 1 - line 23, column 39): " + [v.constructor.name, v1.constructor.name]);
          };
        }
      };
    };
  };
  var genericCompare = function(dictGeneric) {
    var from3 = from(dictGeneric);
    return function(dictGenericOrd) {
      var genericCompare$prime1 = genericCompare$prime(dictGenericOrd);
      return function(x) {
        return function(y) {
          return genericCompare$prime1(from3(x))(from3(y));
        };
      };
    };
  };

  // output/Data.TotalMap/index.js
  var map37 = /* @__PURE__ */ map(functorMap);
  var fromJust5 = /* @__PURE__ */ fromJust();
  var mapFlipped3 = /* @__PURE__ */ mapFlipped(functorArray);
  var throwError3 = /* @__PURE__ */ throwError(monadThrowEither);
  var pure13 = /* @__PURE__ */ pure(applicativeEither);
  var functorTotalMap = {
    map: function(f) {
      return function(m) {
        return map37(f)(m);
      };
    }
  };
  var over3 = function(f) {
    var f1 = f();
    return function(v) {
      return f1(v);
    };
  };
  var makeTotalMap = function(dictEnum) {
    var enumFromTo2 = enumFromTo(dictEnum)(unfoldable1Array);
    return function(dictBounded) {
      var fromFoldable23 = fromFoldable2(dictBounded.Ord0())(foldableArray);
      var bottom3 = bottom(dictBounded);
      var top3 = top(dictBounded);
      return function(f) {
        return fromFoldable23(mapFlipped3(enumFromTo2(bottom3)(top3))(function(k) {
          return new Tuple(k, f(k));
        }));
      };
    };
  };
  var lookup10 = function(dictOrd) {
    var lookup111 = lookup2(dictOrd);
    return function(k) {
      return over3(function() {
        var $107 = lookup111(k);
        return function($108) {
          return fromJust5($107($108));
        };
      });
    };
  };
  var hasKey = function(dictOrd) {
    var lookup111 = lookup2(dictOrd);
    return function(dictShow) {
      var show19 = show(dictShow);
      return function(source3) {
        return function(k) {
          return function(m) {
            return {
              name: "hasKey",
              source: source3,
              result: function() {
                var v = lookup111(k)(m);
                if (v instanceof Nothing) {
                  return throwError3("Could not find key " + quotes(show19(k)));
                }
                ;
                if (v instanceof Just) {
                  return pure13(v.value0);
                }
                ;
                throw new Error("Failed pattern match at Data.TotalMap (line 41, column 13 - line 43, column 23): " + [v.constructor.name]);
              }()
            };
          };
        };
      };
    };
  };

  // output/Data.Variant.Internal/index.js
  var compare4 = /* @__PURE__ */ compare(ordString);
  var variantTagsNil = {
    variantTags: function(v) {
      return Nil.value;
    }
  };
  var variantTags = function(dict) {
    return dict.variantTags;
  };
  var variantTagsCons = function(dictVariantTags) {
    var variantTags1 = variantTags(dictVariantTags);
    return function(dictIsSymbol) {
      var reflectSymbol2 = reflectSymbol(dictIsSymbol);
      return {
        variantTags: function(v) {
          return new Cons(reflectSymbol2($$Proxy.value), variantTags1($$Proxy.value));
        }
      };
    };
  };
  var impossible = function(str) {
    return unsafeCrashWith("Data.Variant: impossible `" + (str + "`"));
  };
  var lookup11 = function(name15) {
    return function(tag) {
      var go2 = function($copy_v) {
        return function($copy_v1) {
          var $tco_var_v = $copy_v;
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(v, v1) {
            if (v instanceof Cons && v1 instanceof Cons) {
              if (v.value0 === tag) {
                $tco_done = true;
                return v1.value0;
              }
              ;
              if (otherwise) {
                $tco_var_v = v.value1;
                $copy_v1 = v1.value1;
                return;
              }
              ;
            }
            ;
            $tco_done = true;
            return impossible(name15);
          }
          ;
          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_v, $copy_v1);
          }
          ;
          return $tco_result;
        };
      };
      return go2;
    };
  };
  var lookupEq = function(tags) {
    return function(eqs) {
      return function(v) {
        return function(v1) {
          if (v.type === v1.type) {
            return lookup11("eq")(v.type)(tags)(eqs)(v.value)(v1.value);
          }
          ;
          if (otherwise) {
            return false;
          }
          ;
          throw new Error("Failed pattern match at Data.Variant.Internal (line 160, column 1 - line 165, column 12): " + [tags.constructor.name, eqs.constructor.name, v.constructor.name, v1.constructor.name]);
        };
      };
    };
  };
  var lookupOrd = function(tags) {
    return function(ords) {
      return function(v) {
        return function(v1) {
          var v3 = compare4(v.type)(v1.type);
          if (v3 instanceof EQ) {
            return lookup11("compare")(v.type)(tags)(ords)(v.value)(v1.value);
          }
          ;
          return v3;
        };
      };
    };
  };

  // output/Data.Variant/index.js
  var variantOrds = function(dict) {
    return dict.variantOrds;
  };
  var variantEqs = function(dict) {
    return dict.variantEqs;
  };
  var ordVariantNil = {
    variantOrds: function(v) {
      return Nil.value;
    }
  };
  var ordVariantCons = function(dictVariantOrds) {
    var variantOrds1 = variantOrds(dictVariantOrds);
    return function(dictOrd) {
      var compare10 = compare(dictOrd);
      return {
        variantOrds: function(v) {
          return new Cons(compare10, variantOrds1($$Proxy.value));
        }
      };
    };
  };
  var on2 = function() {
    return function(dictIsSymbol) {
      var reflectSymbol2 = reflectSymbol(dictIsSymbol);
      return function(p2) {
        return function(f) {
          return function(g) {
            return function(r) {
              if (r.type === reflectSymbol2(p2)) {
                return f(r.value);
              }
              ;
              return g(r);
            };
          };
        };
      };
    };
  };
  var inj = function() {
    return function(dictIsSymbol) {
      var reflectSymbol2 = reflectSymbol(dictIsSymbol);
      return function(p2) {
        return function(value14) {
          return {
            type: reflectSymbol2(p2),
            value: value14
          };
        };
      };
    };
  };
  var eqVariantNil = {
    variantEqs: function(v) {
      return Nil.value;
    }
  };
  var eqVariantCons = function(dictVariantEqs) {
    var variantEqs1 = variantEqs(dictVariantEqs);
    return function(dictEq) {
      var eq15 = eq(dictEq);
      return {
        variantEqs: function(v) {
          return new Cons(eq15, variantEqs1($$Proxy.value));
        }
      };
    };
  };
  var eqVariant = function() {
    return function(dictVariantTags) {
      var variantTags2 = variantTags(dictVariantTags);
      return function(dictVariantEqs) {
        var variantEqs1 = variantEqs(dictVariantEqs);
        return {
          eq: function(v1) {
            return function(v2) {
              var tags = variantTags2($$Proxy.value);
              var eqs = variantEqs1($$Proxy.value);
              return lookupEq(tags)(eqs)(v1)(v2);
            };
          }
        };
      };
    };
  };
  var eqVariant1 = /* @__PURE__ */ eqVariant();
  var ordVariant = function() {
    return function(dictVariantTags) {
      var variantTags2 = variantTags(dictVariantTags);
      var eqVariant2 = eqVariant1(dictVariantTags);
      return function(dictVariantEqs) {
        var eqVariant3 = eqVariant2(dictVariantEqs);
        return function(dictVariantOrds) {
          var variantOrds1 = variantOrds(dictVariantOrds);
          return {
            compare: function(v1) {
              return function(v2) {
                var tags = variantTags2($$Proxy.value);
                var ords = variantOrds1($$Proxy.value);
                return lookupOrd(tags)(ords)(v1)(v2);
              };
            },
            Eq0: function() {
              return eqVariant3;
            }
          };
        };
      };
    };
  };
  var $$default = function(a2) {
    return function(v) {
      return a2;
    };
  };
  var case_ = function(r) {
    return unsafeCrashWith("Data.Variant: pattern match failure [" + (r.type + "]"));
  };

  // output/Data.Zippable/index.js
  var map38 = /* @__PURE__ */ map(functorMaybe);
  var bind15 = /* @__PURE__ */ bind(bindMaybe);
  var zipUp$prime = function(dict) {
    return dict["zipUp'"];
  };
  var zipUp = function(dictZippable) {
    var $53 = map38(snd);
    var $54 = zipUp$prime(dictZippable);
    return function($55) {
      return $53($54($55));
    };
  };
  var zipDowns = function(dict) {
    return dict.zipDowns;
  };
  var zipLeft = function(dictZippable) {
    var zipUp$prime1 = zipUp$prime(dictZippable);
    var zipDowns12 = zipDowns(dictZippable);
    return function(a2) {
      return bind15(zipUp$prime1(a2))(function(v) {
        return index3(zipDowns12(v.value1))(v.value0 - 1 | 0);
      });
    };
  };
  var zipNext = function(dictZippable) {
    var zipDowns12 = zipDowns(dictZippable);
    var zipUp$prime1 = zipUp$prime(dictZippable);
    return function(i2) {
      return function(a2) {
        var downs = zipDowns12(a2);
        var v = index3(downs)(i2);
        if (v instanceof Just) {
          return new Just(v.value0);
        }
        ;
        if (v instanceof Nothing) {
          var v1 = zipUp$prime1(a2);
          if (v1 instanceof Nothing) {
            return Nothing.value;
          }
          ;
          if (v1 instanceof Just) {
            return zipNext(dictZippable)(v1.value0.value0 + 1 | 0)(v1.value0.value1);
          }
          ;
          throw new Error("Failed pattern match at Data.Zippable (line 36, column 16 - line 38, column 41): " + [v1.constructor.name]);
        }
        ;
        throw new Error("Failed pattern match at Data.Zippable (line 34, column 3 - line 38, column 41): " + [v.constructor.name]);
      };
    };
  };
  var zipRight = function(dictZippable) {
    var zipUp$prime1 = zipUp$prime(dictZippable);
    var zipDowns12 = zipDowns(dictZippable);
    return function(a2) {
      return bind15(zipUp$prime1(a2))(function(v) {
        return index3(zipDowns12(v.value1))(v.value0 + 1 | 0);
      });
    };
  };
  var zipDown = function(dictZippable) {
    var zipDowns12 = zipDowns(dictZippable);
    return function(i2) {
      return function(a2) {
        return index3(zipDowns12(a2))(i2);
      };
    };
  };
  var lastChild = function(dictZippable) {
    var zipDowns12 = zipDowns(dictZippable);
    return function(a2) {
      var v = last(zipDowns12(a2));
      if (v instanceof Nothing) {
        return a2;
      }
      ;
      if (v instanceof Just) {
        return lastChild(dictZippable)(v.value0);
      }
      ;
      throw new Error("Failed pattern match at Data.Zippable (line 51, column 15 - line 53, column 26): " + [v.constructor.name]);
    };
  };
  var zipPrev = function(dictZippable) {
    var zipUp$prime1 = zipUp$prime(dictZippable);
    var zipDowns12 = zipDowns(dictZippable);
    var lastChild1 = lastChild(dictZippable);
    return function(a2) {
      var v = zipUp$prime1(a2);
      if (v instanceof Nothing) {
        return Nothing.value;
      }
      ;
      if (v instanceof Just) {
        var downs = zipDowns12(v.value0.value1);
        var v1 = index3(downs)(v.value0.value0 - 1 | 0);
        if (v1 instanceof Nothing) {
          return new Just(v.value0.value1);
        }
        ;
        if (v1 instanceof Just) {
          return new Just(lastChild1(v1.value0));
        }
        ;
        throw new Error("Failed pattern match at Data.Zippable (line 46, column 7 - line 48, column 39): " + [v1.constructor.name]);
      }
      ;
      throw new Error("Failed pattern match at Data.Zippable (line 42, column 3 - line 48, column 39): " + [v.constructor.name]);
    };
  };

  // output/Type.Direction/index.js
  var inj2 = /* @__PURE__ */ inj();
  var pure10 = /* @__PURE__ */ pure(applicativeMaybe);
  var empty8 = /* @__PURE__ */ empty(plusMaybe);
  var _up = /* @__PURE__ */ function() {
    return $$Proxy.value;
  }();
  var upDir = /* @__PURE__ */ function() {
    return inj2({
      reflectSymbol: function() {
        return "up";
      }
    })(_up)($$Proxy.value);
  }();
  var _right = /* @__PURE__ */ function() {
    return $$Proxy.value;
  }();
  var rightDir = /* @__PURE__ */ function() {
    return inj2({
      reflectSymbol: function() {
        return "right";
      }
    })(_right)($$Proxy.value);
  }();
  var _prev = /* @__PURE__ */ function() {
    return $$Proxy.value;
  }();
  var prevDir = /* @__PURE__ */ function() {
    return inj2({
      reflectSymbol: function() {
        return "prev";
      }
    })(_prev)($$Proxy.value);
  }();
  var _next = /* @__PURE__ */ function() {
    return $$Proxy.value;
  }();
  var nextDir = /* @__PURE__ */ function() {
    return inj2({
      reflectSymbol: function() {
        return "next";
      }
    })(_next)($$Proxy.value);
  }();
  var _left = /* @__PURE__ */ function() {
    return $$Proxy.value;
  }();
  var leftDir = /* @__PURE__ */ function() {
    return inj2({
      reflectSymbol: function() {
        return "left";
      }
    })(_left)($$Proxy.value);
  }();
  var _down = /* @__PURE__ */ function() {
    return $$Proxy.value;
  }();
  var downDir = /* @__PURE__ */ function() {
    return inj2({
      reflectSymbol: function() {
        return "down";
      }
    })(_down)($$Proxy.value);
  }();
  var readMoveDir = function(v) {
    if (v === "ArrowLeft") {
      return pure10(prevDir);
    }
    ;
    if (v === "ArrowRight") {
      return pure10(nextDir);
    }
    ;
    if (v === "ArrowUp") {
      return pure10(upDir);
    }
    ;
    if (v === "ArrowDown") {
      return pure10(downDir);
    }
    ;
    return empty8;
  };
  var readVerticalDir = function(v) {
    if (v === "ArrowUp") {
      return pure10(upDir);
    }
    ;
    if (v === "ArrowDown") {
      return pure10(downDir);
    }
    ;
    return empty8;
  };

  // output/Debug/foreign.js
  var req = typeof module === "undefined" ? void 0 : module.require;
  var util = function() {
    try {
      return req === void 0 ? void 0 : req("util");
    } catch (e) {
      return void 0;
    }
  }();
  function _trace(x, k) {
    if (util !== void 0) {
      console.log(util.inspect(x, { depth: null, colors: true }));
    } else {
      console.log(x);
    }
    return k({});
  }
  var now = function() {
    var perf;
    if (typeof performance !== "undefined") {
      perf = performance;
    } else if (req) {
      try {
        perf = req("perf_hooks").performance;
      } catch (e) {
      }
    }
    return function() {
      return (perf || Date).now();
    };
  }();

  // output/Debug/index.js
  var discard6 = /* @__PURE__ */ discard(discardUnit);
  var trace = function() {
    return function(a2) {
      return function(k) {
        return _trace(a2, k);
      };
    };
  };
  var trace1 = /* @__PURE__ */ trace();
  var traceM = function() {
    return function(dictMonad) {
      var discard19 = discard6(dictMonad.Bind1());
      var pure38 = pure(dictMonad.Applicative0());
      return function(s) {
        return discard19(pure38(unit))(function() {
          return trace1(s)(function(v) {
            return pure38(unit);
          });
        });
      };
    };
  };

  // output/Hole/foreign.js
  var _hole = (a2) => {
    console.log("==[ HOLE ]=================================================================");
    console.log(a2);
    throw new Error("HOLE");
  };
  var realCatchException = (Left2) => (Right2) => (callback) => {
    try {
      var res = callback();
      return Right2(res);
    } catch (e) {
      return Left2("error");
    }
  };

  // output/Hole/index.js
  var hole = function() {
    return function(a2) {
      return _hole(a2);
    };
  };

  // output/Util/index.js
  var map39 = /* @__PURE__ */ map(functorMap);
  var identity17 = /* @__PURE__ */ identity(categoryFn);
  var unfoldr3 = /* @__PURE__ */ unfoldr(unfoldableArray);
  var bind16 = /* @__PURE__ */ bind(bindMaybe);
  var union$prime = function(dictOrd) {
    var unionWith2 = unionWith(dictOrd);
    return function(m1) {
      return function(m2) {
        return unionWith2(function(v) {
          return function(v1) {
            return bug("duplicate key in union'");
          };
        })(m1)(m2);
      };
    };
  };
  var threeCaseUnion = function(dictOrd) {
    var filterWithKey2 = filterWithKey(dictOrd);
    var member2 = member(dictOrd);
    var union$prime1 = union$prime(dictOrd);
    var mapMaybeWithKey2 = mapMaybeWithKey(dictOrd);
    var lookup20 = lookup2(dictOrd);
    return function(onlyLeft) {
      return function(onlyRight) {
        return function(both) {
          return function(m1) {
            return function(m2) {
              var mLeft = filterWithKey2(function(k) {
                return function(v) {
                  return !member2(k)(m2);
                };
              })(m1);
              var mRight = filterWithKey2(function(k) {
                return function(v) {
                  return !member2(k)(m1);
                };
              })(m2);
              return union$prime1(union$prime1(map39(onlyLeft)(mLeft))(map39(onlyRight)(mRight)))(mapMaybeWithKey2(function(k) {
                return function(v) {
                  return maybe(Nothing.value)(function(v2) {
                    return new Just(both(v)(v2));
                  })(lookup20(k)(m2));
                };
              })(m1));
            };
          };
        };
      };
    };
  };
  var stateful = function(t) {
    return unsafePerformEffect(function __do2() {
      var tref = $$new(t)();
      return {
        get: function(v) {
          return unsafePerformEffect(read(tref));
        },
        set: function(tNew) {
          return unsafePerformEffect(write(tNew)(tref));
        }
      };
    });
  };
  var lookup$prime = function(dictOrd) {
    var lookup20 = lookup2(dictOrd);
    return function(x) {
      return function(m) {
        var v = lookup20(x)(m);
        if (v instanceof Just) {
          return v.value0;
        }
        ;
        if (v instanceof Nothing) {
          return bug("lookup failed");
        }
        ;
        throw new Error("Failed pattern match at Util (line 36, column 15 - line 38, column 37): " + [v.constructor.name]);
      };
    };
  };
  var fromJust$prime = function(source3) {
    return function(mb) {
      return assert(just(source3)(mb))(function() {
        return identity17;
      });
    };
  };
  var fromJust6 = function(v) {
    if (v instanceof Just) {
      return v.value0;
    }
    ;
    if (v instanceof Nothing) {
      return bug("fromJust failed");
    }
    ;
    throw new Error("Failed pattern match at Util (line 45, column 1 - line 45, column 36): " + [v.constructor.name]);
  };
  var index$prime = function(a2) {
    return function(i2) {
      return fromJust6(index3(a2)(i2));
    };
  };
  var foldNonempty = function(dictFoldable) {
    var foldl11 = foldl(dictFoldable);
    return function(f) {
      return function(l) {
        var v = foldl11(function(acc) {
          return function(el) {
            if (acc instanceof Just) {
              return new Just(f(acc.value0)(el));
            }
            ;
            if (acc instanceof Nothing) {
              return new Just(el);
            }
            ;
            throw new Error("Failed pattern match at Util (line 133, column 9 - line 135, column 31): " + [acc.constructor.name]);
          };
        })(Nothing.value)(l);
        if (v instanceof Nothing) {
          return bug("assumption violated in foldNonempty: was empty");
        }
        ;
        if (v instanceof Just) {
          return v.value0;
        }
        ;
        throw new Error("Failed pattern match at Util (line 132, column 20 - line 138, column 20): " + [v.constructor.name]);
      };
    };
  };
  var findWithIndex = function(f) {
    return function(l) {
      var impl = function($copy_i) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(i2) {
          var v = index3(l)(i2);
          if (v instanceof Nothing) {
            $tco_done = true;
            return Nothing.value;
          }
          ;
          if (v instanceof Just) {
            var v1 = f(i2)(v.value0);
            if (v1 instanceof Nothing) {
              $copy_i = i2 + 1 | 0;
              return;
            }
            ;
            if (v1 instanceof Just) {
              $tco_done = true;
              return new Just(new Tuple(v1.value0, i2));
            }
            ;
            throw new Error("Failed pattern match at Util (line 120, column 23 - line 122, column 44): " + [v1.constructor.name]);
          }
          ;
          throw new Error("Failed pattern match at Util (line 118, column 18 - line 122, column 44): " + [v.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($copy_i);
        }
        ;
        return $tco_result;
      };
      return impl(0);
    };
  };
  var allPossible = function(dictEnum) {
    var succ2 = succ(dictEnum);
    return function(dictBounded) {
      var next2 = function(a2) {
        return new Just(new Tuple(a2, succ2(a2)));
      };
      return unfoldr3(function(b2) {
        return bind16(b2)(next2);
      })(new Just(bottom(dictBounded)));
    };
  };

  // output/Utility/index.js
  var stripSuffix2 = function(dictEq) {
    var eq9 = eq(eqList(dictEq));
    return function(v) {
      return function(v1) {
        if (v instanceof Nil) {
          return new Just(v1);
        }
        ;
        var go2 = function($copy_v2) {
          return function($copy_v3) {
            var $tco_var_v2 = $copy_v2;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v2, v3) {
              if (v3 instanceof Nil) {
                $tco_done = true;
                return Nothing.value;
              }
              ;
              if (v3 instanceof Cons) {
                if (eq9(v)(v3.value1)) {
                  $tco_done = true;
                  return new Just(reverse(new Cons(v3.value0, v2)));
                }
                ;
                if (otherwise) {
                  $tco_var_v2 = new Cons(v3.value0, v2);
                  $copy_v3 = v3.value1;
                  return;
                }
                ;
              }
              ;
              throw new Error("Failed pattern match at Utility (line 21, column 3 - line 21, column 21): " + [v2.constructor.name, v3.constructor.name]);
            }
            ;
            while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_v2, $copy_v3);
            }
            ;
            return $tco_result;
          };
        };
        return go2(Nil.value)(v1);
      };
    };
  };

  // output/Data.Expr/index.js
  var append10 = /* @__PURE__ */ append(semigroupList);
  var show5 = /* @__PURE__ */ show(showInt);
  var MetaVarIsSymbol = {
    reflectSymbol: function() {
      return "MetaVar";
    }
  };
  var RuleMetaVarIsSymbol = {
    reflectSymbol: function() {
      return "RuleMetaVar";
    }
  };
  var MVIsSymbol = {
    reflectSymbol: function() {
      return "MV";
    }
  };
  var MInjIsSymbol = {
    reflectSymbol: function() {
      return "MInj";
    }
  };
  var ExprIsSymbol = {
    reflectSymbol: function() {
      return "Expr";
    }
  };
  var ToothIsSymbol = {
    reflectSymbol: function() {
      return "Tooth";
    }
  };
  var PlusIsSymbol = {
    reflectSymbol: function() {
      return "Plus";
    }
  };
  var MinusIsSymbol = {
    reflectSymbol: function() {
      return "Minus";
    }
  };
  var CInjIsSymbol = {
    reflectSymbol: function() {
      return "CInj";
    }
  };
  var ReplaceIsSymbol = {
    reflectSymbol: function() {
      return "Replace";
    }
  };
  var map40 = /* @__PURE__ */ map(functorArray);
  var map114 = /* @__PURE__ */ map(functorPath);
  var map210 = /* @__PURE__ */ map(functorList);
  var identity18 = /* @__PURE__ */ identity(categoryFn);
  var foldl7 = /* @__PURE__ */ foldl(foldableArray);
  var foldl22 = /* @__PURE__ */ foldl(foldableList);
  var encodeRepConstructor1 = /* @__PURE__ */ encodeRepConstructor(ExprIsSymbol);
  var decodeRepConstructor2 = /* @__PURE__ */ decodeRepConstructor(ExprIsSymbol);
  var unwrap10 = /* @__PURE__ */ unwrap();
  var discard7 = /* @__PURE__ */ discard(discardUnit)(bindMaybe);
  var assertM_2 = /* @__PURE__ */ assertM_(applicativeMaybe);
  var strictlyOrdered2 = /* @__PURE__ */ strictlyOrdered(ordInt);
  var bind17 = /* @__PURE__ */ bind(bindMaybe);
  var pure11 = /* @__PURE__ */ pure(applicativeMaybe);
  var compare5 = /* @__PURE__ */ compare(ordInt);
  var fromFoldable8 = /* @__PURE__ */ fromFoldable3(foldableList);
  var mempty1 = /* @__PURE__ */ mempty(monoidRevList);
  var fromFoldable1 = /* @__PURE__ */ fromFoldable(foldableArray);
  var mapFlipped4 = /* @__PURE__ */ mapFlipped(functorMaybe);
  var mapFlipped1 = /* @__PURE__ */ mapFlipped(functorArray);
  var on3 = /* @__PURE__ */ on2();
  var on1 = /* @__PURE__ */ on3({
    reflectSymbol: function() {
      return "down";
    }
  });
  var on22 = /* @__PURE__ */ on3({
    reflectSymbol: function() {
      return "up";
    }
  });
  var map310 = /* @__PURE__ */ map(functorMaybe);
  var sequence3 = /* @__PURE__ */ sequence(traversableArray)(applicativeMaybe);
  var sequence12 = /* @__PURE__ */ sequence(traversableList)(applicativeMaybe);
  var append24 = /* @__PURE__ */ append(semigroupArray);
  var length10 = /* @__PURE__ */ length(foldableArray)(semiringInt);
  var pretty2 = /* @__PURE__ */ pretty(prettyString);
  var MetaVar = /* @__PURE__ */ function() {
    function MetaVar2(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    MetaVar2.create = function(value0) {
      return function(value14) {
        return new MetaVar2(value0, value14);
      };
    };
    return MetaVar2;
  }();
  var RuleMetaVar = /* @__PURE__ */ function() {
    function RuleMetaVar2(value0) {
      this.value0 = value0;
    }
    ;
    RuleMetaVar2.create = function(value0) {
      return new RuleMetaVar2(value0);
    };
    return RuleMetaVar2;
  }();
  var MV = /* @__PURE__ */ function() {
    function MV2(value0) {
      this.value0 = value0;
    }
    ;
    MV2.create = function(value0) {
      return new MV2(value0);
    };
    return MV2;
  }();
  var MInj = /* @__PURE__ */ function() {
    function MInj2(value0) {
      this.value0 = value0;
    }
    ;
    MInj2.create = function(value0) {
      return new MInj2(value0);
    };
    return MInj2;
  }();
  var InjectMatchLabel = /* @__PURE__ */ function() {
    function InjectMatchLabel2(value0) {
      this.value0 = value0;
    }
    ;
    InjectMatchLabel2.create = function(value0) {
      return new InjectMatchLabel2(value0);
    };
    return InjectMatchLabel2;
  }();
  var Match = /* @__PURE__ */ function() {
    function Match2() {
    }
    ;
    Match2.value = new Match2();
    return Match2;
  }();
  var Expr = /* @__PURE__ */ function() {
    function Expr2(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    Expr2.create = function(value0) {
      return function(value14) {
        return new Expr2(value0, value14);
      };
    };
    return Expr2;
  }();
  var Tooth = /* @__PURE__ */ function() {
    function Tooth2(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    Tooth2.create = function(value0) {
      return function(value14) {
        return new Tooth2(value0, value14);
      };
    };
    return Tooth2;
  }();
  var Zipper = /* @__PURE__ */ function() {
    function Zipper2(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    Zipper2.create = function(value0) {
      return function(value14) {
        return new Zipper2(value0, value14);
      };
    };
    return Zipper2;
  }();
  var Zipperp = /* @__PURE__ */ function() {
    function Zipperp2(value0, value14, value23) {
      this.value0 = value0;
      this.value1 = value14;
      this.value2 = value23;
    }
    ;
    Zipperp2.create = function(value0) {
      return function(value14) {
        return function(value23) {
          return new Zipperp2(value0, value14, value23);
        };
      };
    };
    return Zipperp2;
  }();
  var Plus = /* @__PURE__ */ function() {
    function Plus2(value0) {
      this.value0 = value0;
    }
    ;
    Plus2.create = function(value0) {
      return new Plus2(value0);
    };
    return Plus2;
  }();
  var Minus = /* @__PURE__ */ function() {
    function Minus2(value0) {
      this.value0 = value0;
    }
    ;
    Minus2.create = function(value0) {
      return new Minus2(value0);
    };
    return Minus2;
  }();
  var CInj = /* @__PURE__ */ function() {
    function CInj2(value0) {
      this.value0 = value0;
    }
    ;
    CInj2.create = function(value0) {
      return new CInj2(value0);
    };
    return CInj2;
  }();
  var Replace = /* @__PURE__ */ function() {
    function Replace2(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    Replace2.create = function(value0) {
      return function(value14) {
        return new Replace2(value0, value14);
      };
    };
    return Replace2;
  }();
  var semigroupPath = {
    append: function(v) {
      return function(v1) {
        return append10(v)(v1);
      };
    }
  };
  var append33 = /* @__PURE__ */ append(semigroupPath);
  var reflectPathDirUp = {
    reflectPathDir: function(v) {
      return downDir;
    },
    inSaneEnglishIsItDown: function(v) {
      return false;
    }
  };
  var reflectPathDirDown = {
    reflectPathDir: function(v) {
      return upDir;
    },
    inSaneEnglishIsItDown: function(v) {
      return true;
    }
  };
  var prettyMetaVar = {
    pretty: function(v) {
      if (v instanceof MetaVar && v.value0 instanceof Nothing) {
        return "?" + show5(v.value1);
      }
      ;
      if (v instanceof MetaVar && v.value0 instanceof Just) {
        return "?" + (v.value0.value0 + ("#" + show5(v.value1)));
      }
      ;
      if (v instanceof RuleMetaVar) {
        return "??" + v.value0;
      }
      ;
      throw new Error("Failed pattern match at Data.Expr (line 137, column 1 - line 140, column 41): " + [v.constructor.name]);
    }
  };
  var pretty1 = /* @__PURE__ */ pretty(prettyMetaVar);
  var prettyMeta = function(dictPretty) {
    var pretty23 = pretty(dictPretty);
    return {
      pretty: function(v) {
        if (v instanceof MV) {
          return pretty1(v.value0);
        }
        ;
        if (v instanceof MInj) {
          return pretty23(v.value0);
        }
        ;
        throw new Error("Failed pattern match at Data.Expr (line 176, column 9 - line 178, column 27): " + [v.constructor.name]);
      }
    };
  };
  var monoidPath = /* @__PURE__ */ function() {
    return {
      mempty: Nil.value,
      Semigroup0: function() {
        return semigroupPath;
      }
    };
  }();
  var mempty22 = /* @__PURE__ */ mempty(monoidPath);
  var genericTooth_ = {
    to: function(x) {
      return new Tooth(x.value0, x.value1);
    },
    from: function(x) {
      return new Product(x.value0, x.value1);
    }
  };
  var genericShow2 = /* @__PURE__ */ genericShow(genericTooth_);
  var genericEq2 = /* @__PURE__ */ genericEq(genericTooth_);
  var genericCompare2 = /* @__PURE__ */ genericCompare(genericTooth_);
  var genericMeta_ = {
    to: function(x) {
      if (x instanceof Inl) {
        return new MV(x.value0);
      }
      ;
      if (x instanceof Inr) {
        return new MInj(x.value0);
      }
      ;
      throw new Error("Failed pattern match at Data.Expr (line 165, column 1 - line 165, column 35): " + [x.constructor.name]);
    },
    from: function(x) {
      if (x instanceof MV) {
        return new Inl(x.value0);
      }
      ;
      if (x instanceof MInj) {
        return new Inr(x.value0);
      }
      ;
      throw new Error("Failed pattern match at Data.Expr (line 165, column 1 - line 165, column 35): " + [x.constructor.name]);
    }
  };
  var genericShow3 = /* @__PURE__ */ genericShow(genericMeta_);
  var genericEq1 = /* @__PURE__ */ genericEq(genericMeta_);
  var genericCompare1 = /* @__PURE__ */ genericCompare(genericMeta_);
  var genericMetaVar_ = {
    to: function(x) {
      if (x instanceof Inl) {
        return new MetaVar(x.value0.value0, x.value0.value1);
      }
      ;
      if (x instanceof Inr) {
        return new RuleMetaVar(x.value0);
      }
      ;
      throw new Error("Failed pattern match at Data.Expr (line 133, column 1 - line 133, column 34): " + [x.constructor.name]);
    },
    from: function(x) {
      if (x instanceof MetaVar) {
        return new Inl(new Product(x.value0, x.value1));
      }
      ;
      if (x instanceof RuleMetaVar) {
        return new Inr(x.value0);
      }
      ;
      throw new Error("Failed pattern match at Data.Expr (line 133, column 1 - line 133, column 34): " + [x.constructor.name]);
    }
  };
  var genericShow4 = /* @__PURE__ */ genericShow(genericMetaVar_)(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor(/* @__PURE__ */ genericShowArgsProduct(/* @__PURE__ */ genericShowArgsArgument(/* @__PURE__ */ showMaybe(showString)))(/* @__PURE__ */ genericShowArgsArgument(showInt)))(MetaVarIsSymbol))(/* @__PURE__ */ genericShowConstructor(/* @__PURE__ */ genericShowArgsArgument(showString))(RuleMetaVarIsSymbol)));
  var genericEq22 = /* @__PURE__ */ genericEq(genericMetaVar_)(/* @__PURE__ */ genericEqSum(/* @__PURE__ */ genericEqConstructor(/* @__PURE__ */ genericEqProduct(/* @__PURE__ */ genericEqArgument(/* @__PURE__ */ eqMaybe(eqString)))(/* @__PURE__ */ genericEqArgument(eqInt))))(/* @__PURE__ */ genericEqConstructor(/* @__PURE__ */ genericEqArgument(eqString))));
  var genericCompare22 = /* @__PURE__ */ genericCompare(genericMetaVar_)(/* @__PURE__ */ genericOrdSum(/* @__PURE__ */ genericOrdConstructor(/* @__PURE__ */ genericOrdProduct(/* @__PURE__ */ genericOrdArgument(/* @__PURE__ */ ordMaybe(ordString)))(/* @__PURE__ */ genericOrdArgument(ordInt))))(/* @__PURE__ */ genericOrdConstructor(/* @__PURE__ */ genericOrdArgument(ordString))));
  var showMetaVar = {
    show: function(x) {
      return genericShow4(x);
    }
  };
  var genericShowSum2 = /* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor(/* @__PURE__ */ genericShowArgsArgument(showMetaVar))(MVIsSymbol));
  var showMeta = function(dictShow) {
    var genericShow82 = genericShow3(genericShowSum2(genericShowConstructor(genericShowArgsArgument(dictShow))(MInjIsSymbol)));
    return {
      show: function(x) {
        return genericShow82(x);
      }
    };
  };
  var genericExpr_ = {
    to: function(x) {
      return new Expr(x.value0, x.value1);
    },
    from: function(x) {
      return new Product(x.value0, x.value1);
    }
  };
  var genericShow6 = /* @__PURE__ */ genericShow(genericExpr_);
  var genericEq3 = /* @__PURE__ */ genericEq(genericExpr_);
  var genericCompare3 = /* @__PURE__ */ genericCompare(genericExpr_);
  var genericEncodeJson4 = /* @__PURE__ */ genericEncodeJson(genericExpr_);
  var genericDecodeJson4 = /* @__PURE__ */ genericDecodeJson(genericExpr_);
  var showExpr = function(dictShow) {
    var genericShowArgsProduct3 = genericShowArgsProduct(genericShowArgsArgument(dictShow));
    return {
      show: function(x) {
        return genericShow6(genericShowConstructor(genericShowArgsProduct3(genericShowArgsArgument(showArray(showExpr(dictShow)))))(ExprIsSymbol))(x);
      }
    };
  };
  var showTooth1 = function(dictShow) {
    var genericShow82 = genericShow2(genericShowConstructor(genericShowArgsProduct(genericShowArgsArgument(dictShow))(genericShowArgsArgument(showPath1(showExpr(dictShow)))))(ToothIsSymbol));
    return {
      show: function(x) {
        return genericShow82(x);
      }
    };
  };
  var genericChangeLabel_ = {
    to: function(x) {
      if (x instanceof Inl) {
        return new Plus(x.value0);
      }
      ;
      if (x instanceof Inr && x.value0 instanceof Inl) {
        return new Minus(x.value0.value0);
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && x.value0.value0 instanceof Inl)) {
        return new CInj(x.value0.value0.value0);
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && x.value0.value0 instanceof Inr)) {
        return new Replace(x.value0.value0.value0.value0, x.value0.value0.value0.value1);
      }
      ;
      throw new Error("Failed pattern match at Data.Expr (line 557, column 1 - line 557, column 42): " + [x.constructor.name]);
    },
    from: function(x) {
      if (x instanceof Plus) {
        return new Inl(x.value0);
      }
      ;
      if (x instanceof Minus) {
        return new Inr(new Inl(x.value0));
      }
      ;
      if (x instanceof CInj) {
        return new Inr(new Inr(new Inl(x.value0)));
      }
      ;
      if (x instanceof Replace) {
        return new Inr(new Inr(new Inr(new Product(x.value0, x.value1))));
      }
      ;
      throw new Error("Failed pattern match at Data.Expr (line 557, column 1 - line 557, column 42): " + [x.constructor.name]);
    }
  };
  var genericShow7 = /* @__PURE__ */ genericShow(genericChangeLabel_);
  var showChangeLabel = function(dictShow) {
    var genericShowConstructor13 = genericShowConstructor(genericShowArgsArgument(showTooth1(dictShow)));
    var genericShowArgsArgument2 = genericShowArgsArgument(showExpr(dictShow));
    var genericShow82 = genericShow7(genericShowSum(genericShowConstructor13(PlusIsSymbol))(genericShowSum(genericShowConstructor13(MinusIsSymbol))(genericShowSum(genericShowConstructor(genericShowArgsArgument(dictShow))(CInjIsSymbol))(genericShowConstructor(genericShowArgsProduct(genericShowArgsArgument2)(genericShowArgsArgument2))(ReplaceIsSymbol)))));
    return {
      show: function(x) {
        return genericShow82(x);
      }
    };
  };
  var functorMeta = {
    map: function(f) {
      return function(m) {
        if (m instanceof MV) {
          return new MV(m.value0);
        }
        ;
        if (m instanceof MInj) {
          return new MInj(f(m.value0));
        }
        ;
        throw new Error("Failed pattern match at Data.Expr (line 0, column 0 - line 0, column 0): " + [m.constructor.name]);
      };
    }
  };
  var functorExpr = {
    map: function(f) {
      return function(m) {
        return new Expr(f(m.value0), map40(map(functorExpr)(f))(m.value1));
      };
    }
  };
  var map42 = /* @__PURE__ */ map(functorExpr);
  var functorTooth = {
    map: function(f) {
      return function(m) {
        return new Tooth(f(m.value0), map114(map42(f))(m.value1));
      };
    }
  };
  var map52 = /* @__PURE__ */ map(functorTooth);
  var functorPath2 = {
    map: function(f) {
      return function(m) {
        return map210(map52(f))(m);
      };
    }
  };
  var map62 = /* @__PURE__ */ map(functorPath2);
  var functorZipper = {
    map: function(f) {
      return function(m) {
        return new Zipper(map62(f)(m.value0), map42(f)(m.value1));
      };
    }
  };
  var eqMetaVar = {
    eq: function(x) {
      return function(y) {
        return genericEq22(x)(y);
      };
    }
  };
  var genericEqSum2 = /* @__PURE__ */ genericEqSum(/* @__PURE__ */ genericEqConstructor(/* @__PURE__ */ genericEqArgument(eqMetaVar)));
  var ordMetaVar = {
    compare: function(x) {
      return function(y) {
        return genericCompare22(x)(y);
      };
    },
    Eq0: function() {
      return eqMetaVar;
    }
  };
  var genericOrdSum2 = /* @__PURE__ */ genericOrdSum(/* @__PURE__ */ genericOrdConstructor(/* @__PURE__ */ genericOrdArgument(ordMetaVar)));
  var lookup13 = /* @__PURE__ */ lookup2(ordMetaVar);
  var hasKey2 = /* @__PURE__ */ hasKey(ordMetaVar)(showMetaVar);
  var eqMeta = function(dictEq) {
    var genericEq42 = genericEq1(genericEqSum2(genericEqConstructor(genericEqArgument(dictEq))));
    return {
      eq: function(x) {
        return function(y) {
          return genericEq42(x)(y);
        };
      }
    };
  };
  var ordMeta = function(dictOrd) {
    var genericCompare42 = genericCompare1(genericOrdSum2(genericOrdConstructor(genericOrdArgument(dictOrd))));
    var eqMeta1 = eqMeta(dictOrd.Eq0());
    return {
      compare: function(x) {
        return function(y) {
          return genericCompare42(x)(y);
        };
      },
      Eq0: function() {
        return eqMeta1;
      }
    };
  };
  var eqExpr = function(dictEq) {
    var genericEqProduct4 = genericEqProduct(genericEqArgument(dictEq));
    return {
      eq: function(x) {
        return function(y) {
          return genericEq3(genericEqConstructor(genericEqProduct4(genericEqArgument(eqArray(eqExpr(dictEq))))))(x)(y);
        };
      }
    };
  };
  var eqTooth = function(dictEq) {
    var genericEq42 = genericEq2(genericEqConstructor(genericEqProduct(genericEqArgument(dictEq))(genericEqArgument(eqPath(eqExpr(dictEq))))));
    return {
      eq: function(x) {
        return function(y) {
          return genericEq42(x)(y);
        };
      }
    };
  };
  var eqPath2 = function(dictEq) {
    return eqList(eqTooth(dictEq));
  };
  var ordExpr = function(dictOrd) {
    var genericOrdProduct4 = genericOrdProduct(genericOrdArgument(dictOrd));
    var eqExpr1 = eqExpr(dictOrd.Eq0());
    return {
      compare: function(x) {
        return function(y) {
          return genericCompare3(genericOrdConstructor(genericOrdProduct4(genericOrdArgument(ordArray(ordExpr(dictOrd))))))(x)(y);
        };
      },
      Eq0: function() {
        return eqExpr1;
      }
    };
  };
  var ordTooth = function(dictOrd) {
    var genericCompare42 = genericCompare2(genericOrdConstructor(genericOrdProduct(genericOrdArgument(dictOrd))(genericOrdArgument(ordPath(ordExpr(dictOrd))))));
    var eqTooth1 = eqTooth(dictOrd.Eq0());
    return {
      compare: function(x) {
        return function(y) {
          return genericCompare42(x)(y);
        };
      },
      Eq0: function() {
        return eqTooth1;
      }
    };
  };
  var eqChangeLabel = function(dictEq) {
    var eq15 = eq(eqTooth(dictEq));
    var eq24 = eq(dictEq);
    var eq34 = eq(eqExpr(dictEq));
    return {
      eq: function(x) {
        return function(y) {
          if (x instanceof Plus && y instanceof Plus) {
            return eq15(x.value0)(y.value0);
          }
          ;
          if (x instanceof Minus && y instanceof Minus) {
            return eq15(x.value0)(y.value0);
          }
          ;
          if (x instanceof CInj && y instanceof CInj) {
            return eq24(x.value0)(y.value0);
          }
          ;
          if (x instanceof Replace && y instanceof Replace) {
            return eq34(x.value0)(y.value0) && eq34(x.value1)(y.value1);
          }
          ;
          return false;
        };
      }
    };
  };
  var ordChangeLabel = function(dictOrd) {
    var compare15 = compare(ordTooth(dictOrd));
    var compare24 = compare(dictOrd);
    var compare33 = compare(ordExpr(dictOrd));
    var eqChangeLabel1 = eqChangeLabel(dictOrd.Eq0());
    return {
      compare: function(x) {
        return function(y) {
          if (x instanceof Plus && y instanceof Plus) {
            return compare15(x.value0)(y.value0);
          }
          ;
          if (x instanceof Plus) {
            return LT.value;
          }
          ;
          if (y instanceof Plus) {
            return GT.value;
          }
          ;
          if (x instanceof Minus && y instanceof Minus) {
            return compare15(x.value0)(y.value0);
          }
          ;
          if (x instanceof Minus) {
            return LT.value;
          }
          ;
          if (y instanceof Minus) {
            return GT.value;
          }
          ;
          if (x instanceof CInj && y instanceof CInj) {
            return compare24(x.value0)(y.value0);
          }
          ;
          if (x instanceof CInj) {
            return LT.value;
          }
          ;
          if (y instanceof CInj) {
            return GT.value;
          }
          ;
          if (x instanceof Replace && y instanceof Replace) {
            var v = compare33(x.value0)(y.value0);
            if (v instanceof LT) {
              return LT.value;
            }
            ;
            if (v instanceof GT) {
              return GT.value;
            }
            ;
            return compare33(x.value1)(y.value1);
          }
          ;
          throw new Error("Failed pattern match at Data.Expr (line 0, column 0 - line 0, column 0): " + [x.constructor.name, y.constructor.name]);
        };
      },
      Eq0: function() {
        return eqChangeLabel1;
      }
    };
  };
  var encodeJsonExpr = function(dictEncodeJson) {
    var encodeRepArgsProduct2 = encodeRepArgsProduct(encodeRepArgsArgument(dictEncodeJson));
    return {
      encodeJson: function(a2) {
        return genericEncodeJson4(encodeRepConstructor1(encodeRepArgsProduct2(encodeRepArgsArgument(encodeJsonArray(encodeJsonExpr(dictEncodeJson))))))(a2);
      }
    };
  };
  var decodeJsonExpr = function(dictDecodeJson) {
    var decodeRepArgsProduct2 = decodeRepArgsProduct(decodeRepArgsArgument(dictDecodeJson));
    return {
      decodeJson: function(a2) {
        return genericDecodeJson4(decodeRepConstructor2(decodeRepArgsProduct2(decodeRepArgsArgument(decodeArray2(decodeJsonExpr(dictDecodeJson))))))(a2);
      }
    };
  };
  var zipperpTopPath = function(v) {
    return v.value0;
  };
  var zipperToZipperp = function(v) {
    return new Zipperp(v.value0, new Left(Nil.value), v.value1);
  };
  var zipperPath = function(v) {
    return v.value0;
  };
  var zipperParent = function(v) {
    return index2(v.value0)(0);
  };
  var zipperExpr = function(v) {
    return v.value1;
  };
  var zipperFromDownTo = function(dictIsExprLabel) {
    var stripSuffix3 = stripSuffix2(eqTooth(dictIsExprLabel.Ord1().Eq0()));
    return function(begin) {
      return function(end) {
        var beginTooths = unwrap10(zipperPath(begin));
        var endTooths = unwrap10(zipperPath(end));
        return discard7(assertM_2(strictlyOrdered2("zipperFromDownTo")("`begin` should have a shorter path than `end`")(length4(beginTooths))(length4(endTooths))))(function() {
          return bind17(stripSuffix3(beginTooths)(endTooths))(function(selectionTooths) {
            return pure11(new Zipperp(zipperPath(begin), new Right(selectionTooths), zipperExpr(end)));
          });
        });
      };
    };
  };
  var zipperFromUpTo = function(dictIsExprLabel) {
    var stripPrefix3 = stripPrefix(eqTooth(dictIsExprLabel.Ord1().Eq0()));
    return function(begin) {
      return function(end) {
        var beginTooths = reverse(unwrap10(zipperPath(begin)));
        var endTooths = reverse(unwrap10(zipperPath(end)));
        return discard7(assertM_2(strictlyOrdered2("zipperFromUpTo")("`end` should have a shorter path than `begin`")(length4(endTooths))(length4(beginTooths))))(function() {
          return bind17(stripPrefix3(endTooths)(beginTooths))(function(selectionTooths) {
            return pure11(new Zipperp(zipperPath(end), new Left(selectionTooths), zipperExpr(begin)));
          });
        });
      };
    };
  };
  var zipperpFromTo = function(dictIsExprLabel) {
    var eq15 = eq(eqPath2(dictIsExprLabel.Ord1().Eq0()));
    var zipperFromDownTo1 = zipperFromDownTo(dictIsExprLabel);
    var zipperFromUpTo1 = zipperFromUpTo(dictIsExprLabel);
    return function(begin) {
      return function(end) {
        var beginPathLength = length4(unwrap10(zipperPath(begin)));
        var endPathLength = length4(unwrap10(zipperPath(end)));
        var v = compare5(beginPathLength)(endPathLength);
        if (v instanceof EQ) {
          var $1340 = eq15(zipperPath(begin))(zipperPath(end));
          if ($1340) {
            return new Just(zipperToZipperp(begin));
          }
          ;
          return Nothing.value;
        }
        ;
        if (v instanceof LT) {
          return zipperFromDownTo1(begin)(end);
        }
        ;
        if (v instanceof GT) {
          return zipperFromUpTo1(begin)(end);
        }
        ;
        throw new Error("Failed pattern match at Data.Expr (line 444, column 3 - line 449, column 35): " + [v.constructor.name]);
      };
    };
  };
  var varMaker = /* @__PURE__ */ stateful(0);
  var unstepPath = function(v) {
    if (v instanceof Nil) {
      return Nothing.value;
    }
    ;
    if (v instanceof Cons) {
      return new Just(new Tuple(v.value0, v.value1));
    }
    ;
    throw new Error("Failed pattern match at Data.Expr (line 288, column 1 - line 288, column 72): " + [v.constructor.name]);
  };
  var unTooth = function(v) {
    return function(g) {
      return new Expr(v.value0, fromFoldable8(unpathAround(g)(v.value1)));
    };
  };
  var zipUp2 = function(v) {
    if (v.value0 instanceof Nil) {
      return Nothing.value;
    }
    ;
    if (v.value0 instanceof Cons) {
      return new Just(new Tuple(v.value0.value0, new Zipper(v.value0.value1, unTooth(v.value0.value0)(v.value1))));
    }
    ;
    throw new Error("Failed pattern match at Data.Expr (line 384, column 28 - line 386, column 70): " + [v.value0.constructor.name]);
  };
  var unPath = function(dictIsExprLabel) {
    return function(v) {
      return function(expr0) {
        var go2 = function($copy_v1) {
          return function($copy_v2) {
            var $tco_var_v1 = $copy_v1;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v1, v2) {
              if (v1 instanceof Nil) {
                $tco_done = true;
                return v2;
              }
              ;
              if (v1 instanceof Cons) {
                $tco_var_v1 = v1.value1;
                $copy_v2 = unTooth(v1.value0)(v2);
                return;
              }
              ;
              throw new Error("Failed pattern match at Data.Expr (line 317, column 3 - line 317, column 21): " + [v1.constructor.name, v2.constructor.name]);
            }
            ;
            while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_v1, $copy_v2);
            }
            ;
            return $tco_result;
          };
        };
        return go2(v)(expr0);
      };
    };
  };
  var unzipper = function(dictIsExprLabel) {
    var unPath1 = unPath(dictIsExprLabel);
    return function(v) {
      return unPath1(v.value0)(v.value1);
    };
  };
  var toothPath = function(v) {
    return v.value1;
  };
  var subMetaExprPartially = function(dictIsExprLabel) {
    return function(sigma) {
      return function(v) {
        if (v.value0 instanceof MV) {
          var v1 = lookup13(v.value0.value0)(sigma);
          if (v1 instanceof Nothing) {
            return new Expr(new MV(v.value0.value0), []);
          }
          ;
          if (v1 instanceof Just) {
            return v1.value0;
          }
          ;
          throw new Error("Failed pattern match at Data.Expr (line 669, column 18 - line 671, column 26): " + [v1.constructor.name]);
        }
        ;
        if (v.value0 instanceof MInj) {
          return new Expr(new MInj(v.value0.value0), map40(subMetaExprPartially(dictIsExprLabel)(sigma))(v.value1));
        }
        ;
        throw new Error("Failed pattern match at Data.Expr (line 668, column 30 - line 672, column 70): " + [v.constructor.name]);
      };
    };
  };
  var stepPath = function(th2) {
    return function(v) {
      return new Cons(th2, v);
    };
  };
  var zipDowns2 = function(v) {
    var go2 = function($copy_v1) {
      return function($copy_v2) {
        return function($copy_v3) {
          var $tco_var_v1 = $copy_v1;
          var $tco_var_v2 = $copy_v2;
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(v12, v2, v3) {
            if (v2.value1.right instanceof Nil) {
              $tco_done = true;
              return reverse2(cons2(new Tuple(v2, new Zipper(stepPath(v2)(v.value0), v3)))(v12));
            }
            ;
            if (v2.value1.right instanceof Cons) {
              $tco_var_v1 = cons2(new Tuple(v2, new Zipper(stepPath(v2)(v.value0), v3)))(v12);
              $tco_var_v2 = new Tooth(v2.value0, {
                left: snoc5(v2.value1.left)(v3),
                right: v2.value1.right.value1
              });
              $copy_v3 = v2.value1.right.value0;
              return;
            }
            ;
            throw new Error("Failed pattern match at Data.Expr (line 413, column 3 - line 413, column 88): " + [v12.constructor.name, v2.constructor.name, v3.constructor.name]);
          }
          ;
          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_v1, $tco_var_v2, $copy_v3);
          }
          ;
          return $tco_result;
        };
      };
    };
    var v1 = uncons2(v.value1.value1);
    if (v1 instanceof Nothing) {
      return [];
    }
    ;
    if (v1 instanceof Just) {
      return go2([])(new Tooth(v.value1.value0, {
        left: mempty1,
        right: fromFoldable1(v1.value0.tail)
      }))(v1.value0.head);
    }
    ;
    throw new Error("Failed pattern match at Data.Expr (line 405, column 3 - line 411, column 13): " + [v1.constructor.name]);
  };
  var zipDownsTooth = function(dictIsExprLabel) {
    return function(zipper) {
      return function(v) {
        var ix = leftLength(v.value1);
        var zs = zipDowns2(zipper);
        var v1 = zipAt(ix)(fromFoldable1(zs));
        if (v1 instanceof Nothing) {
          return bug("[zipDownsTooth] bad index");
        }
        ;
        if (v1 instanceof Just) {
          return map114(snd)(v1.value0.value0);
        }
        ;
        throw new Error("Failed pattern match at Data.Expr (line 398, column 3 - line 400, column 51): " + [v1.constructor.name]);
      };
    };
  };
  var zippableZipper = {
    zipDowns: function(z) {
      return map40(snd)(zipDowns2(z));
    },
    "zipUp'": function(z) {
      return mapFlipped4(zipUp2(z))(function(v) {
        return new Tuple(leftLength(v.value0.value1), v.value1);
      });
    }
  };
  var zipDowns1 = /* @__PURE__ */ zipDowns(zippableZipper);
  var zippableZipperp = {
    zipDowns: function(v) {
      if (v.value1 instanceof Left) {
        var v1 = unstepPath(v.value1.value0);
        if (v1 instanceof Nothing) {
          return zipDowns(zippableZipperp)(new Zipperp(v.value0, new Right(mempty22), v.value2));
        }
        ;
        if (v1 instanceof Just) {
          return [new Zipperp(stepPath(v1.value0.value0)(v.value0), new Left(v1.value0.value1), v.value2)];
        }
        ;
        throw new Error("Failed pattern match at Data.Expr (line 496, column 45 - line 498, column 71): " + [v1.constructor.name]);
      }
      ;
      if (v.value1 instanceof Right) {
        var zs = zipDowns1(new Zipper(v.value1.value0, v.value2));
        return mapFlipped1(zs)(function(v12) {
          return new Zipperp(v.value0, new Right(v12.value0), v12.value1);
        });
      }
      ;
      throw new Error("Failed pattern match at Data.Expr (line 494, column 1 - line 511, column 113): " + [v.constructor.name]);
    },
    "zipUp'": function(v) {
      if (v.value1 instanceof Left) {
        var v1 = unstepPath(v.value0);
        if (v1 instanceof Nothing) {
          return Nothing.value;
        }
        ;
        if (v1 instanceof Just) {
          return new Just(new Tuple(0, new Zipperp(v1.value0.value1, new Left(stepPath(v1.value0.value0)(v.value1.value0)), v.value2)));
        }
        ;
        throw new Error("Failed pattern match at Data.Expr (line 505, column 43 - line 507, column 82): " + [v1.constructor.name]);
      }
      ;
      if (v.value1 instanceof Right) {
        var v1 = unstepPath(v.value1.value0);
        if (v1 instanceof Nothing) {
          return zipUp$prime(zippableZipperp)(new Zipperp(v.value0, new Left(mempty22), v.value2));
        }
        ;
        if (v1 instanceof Just) {
          return new Just(new Tuple(leftLength(toothPath(v1.value0.value0)), new Zipperp(v.value0, new Right(v1.value0.value1), unTooth(v1.value0.value0)(v.value2))));
        }
        ;
        throw new Error("Failed pattern match at Data.Expr (line 509, column 44 - line 511, column 113): " + [v1.constructor.name]);
      }
      ;
      throw new Error("Failed pattern match at Data.Expr (line 494, column 1 - line 511, column 113): " + [v.constructor.name]);
    }
  };
  var slot2 = /* @__PURE__ */ function() {
    return new Expr(Match.value, []);
  }();
  var reversePath = function() {
    return function(v) {
      return reverse(v);
    };
  };
  var reversePath1 = /* @__PURE__ */ reversePath();
  var unzipperp = function(dictIsExprLabel) {
    var unPath1 = unPath(dictIsExprLabel);
    return function(v) {
      if (v.value1 instanceof Left) {
        return new Zipper(append33(reversePath1(v.value1.value0))(v.value0), v.value2);
      }
      ;
      if (v.value1 instanceof Right) {
        return new Zipper(v.value0, unPath1(v.value1.value0)(v.value2));
      }
      ;
      throw new Error("Failed pattern match at Data.Expr (line 528, column 43 - line 530, column 51): " + [v.value1.constructor.name]);
    };
  };
  var zipperpBottomPath = function(v) {
    return append33(either(reversePath1)(identity18)(v.value1))(v.value0);
  };
  var zipperpToZipper = function(dictIsExprLabel) {
    var unPath1 = unPath(dictIsExprLabel);
    return function(atTop) {
      return function(v) {
        var upSelection = function() {
          if (v.value1 instanceof Left) {
            return reversePath1(v.value1.value0);
          }
          ;
          if (v.value1 instanceof Right) {
            return v.value1.value0;
          }
          ;
          throw new Error("Failed pattern match at Data.Expr (line 537, column 21 - line 539, column 31): " + [v.value1.constructor.name]);
        }();
        if (atTop) {
          return new Zipper(v.value0, unPath1(upSelection)(v.value2));
        }
        ;
        return new Zipper(append33(upSelection)(v.value0), v.value2);
      };
    };
  };
  var replaceChange = function(e1) {
    return function(e2) {
      return new Expr(new Replace(e1, e2), []);
    };
  };
  var reflectPathDir = function(dict) {
    return dict.reflectPathDir;
  };
  var toDownPath = function(dictReflectPathDir) {
    var reflectPathDir1 = reflectPathDir(dictReflectPathDir);
    return function(v) {
      return function(v1) {
        return v1(reflectPathDir1(v));
      }(on1(_down)(function(v1) {
        return v;
      })(on22(_up)(function(v1) {
        return reversePath1(v);
      })(case_)));
    };
  };
  var toUpPath = function(dictReflectPathDir) {
    var reflectPathDir1 = reflectPathDir(dictReflectPathDir);
    return function(v) {
      return function(v1) {
        return v1(reflectPathDir1(v));
      }(on1(_down)(function(v1) {
        return reversePath1(v);
      })(on22(_up)(function(v1) {
        return v;
      })(case_)));
    };
  };
  var pureMetaExpr = function(l) {
    return function(v) {
      return new Expr(new MInj(l), v);
    };
  };
  var prettyExprF$prime_unsafe = function(dict) {
    return dict["prettyExprF'_unsafe"];
  };
  var plusChange = function(l) {
    return function(leftKids) {
      return function(inside) {
        return function(rightKids) {
          return new Expr(new Plus(new Tooth(l, {
            left: reverseArray(leftKids),
            right: fromFoldable1(rightKids)
          })), [inside]);
        };
      };
    };
  };
  var nextInt = function(v) {
    var val = varMaker.get(unit);
    var v1 = varMaker.set(val + 1 | 0);
    return val;
  };
  var minusChange = function(l) {
    return function(leftKids) {
      return function(inside) {
        return function(rightKids) {
          return new Expr(new Minus(new Tooth(l, {
            left: reverseArray(leftKids),
            right: fromFoldable1(rightKids)
          })), [inside]);
        };
      };
    };
  };
  var metaVarName = function(v) {
    if (v instanceof RuleMetaVar) {
      return v.value0;
    }
    ;
    if (v instanceof MetaVar && v.value0 instanceof Just) {
      return v.value0.value0;
    }
    ;
    return "no_name";
  };
  var matchDiffExprs = function(v) {
    return function(v1) {
      return function(v2) {
        if (v2.value0 instanceof InjectMatchLabel && v(v1.value0)(v2.value0.value0)) {
          return map310(concat2)(sequence3(zipWith2(matchDiffExprs(v))(v1.value1)(v2.value1)));
        }
        ;
        if (v2.value0 instanceof Match && v2.value1.length === 0) {
          return new Just([v1]);
        }
        ;
        return Nothing.value;
      };
    };
  };
  var matchExprImpl = function(dictIsExprLabel) {
    return matchDiffExprs(eq(dictIsExprLabel.Ord1().Eq0()));
  };
  var matchExpr = function(dictIsExprLabel) {
    var matchExprImpl1 = matchExprImpl(dictIsExprLabel);
    return function(e) {
      return function(eMatch) {
        return function(f) {
          var f1 = f();
          return f1(fromJust$prime("in matchExpr, expressions didn't match")(matchExprImpl1(e)(eMatch)));
        };
      };
    };
  };
  var matchExpr2 = function(dictIsExprLabel) {
    var matchExprImpl1 = matchExprImpl(dictIsExprLabel);
    var matchExpr1 = matchExpr(dictIsExprLabel);
    return function(e) {
      return function(eMatch1) {
        return function(f1) {
          var f11 = f1();
          return function(eMatch2) {
            return function(f2) {
              var f21 = f2();
              var v = matchExprImpl1(e)(eMatch1);
              if (v instanceof Just) {
                return f11(v.value0);
              }
              ;
              if (v instanceof Nothing) {
                return matchExpr1(e)(eMatch2)(function() {
                  return f21;
                });
              }
              ;
              throw new Error("Failed pattern match at Data.Expr (line 820, column 7 - line 822, column 42): " + [v.constructor.name]);
            };
          };
        };
      };
    };
  };
  var matchTeeth = function(dictIsExprLabel) {
    var eq15 = eq(dictIsExprLabel.Ord1().Eq0());
    var matchExprImpl1 = matchExprImpl(dictIsExprLabel);
    return function(v) {
      return function(v1) {
        if (v1.value0 instanceof InjectMatchLabel) {
          var $1545 = !(eq15(v.value0)(v1.value0.value0) && length4(v.value1.right) === length4(v1.value1.right));
          if ($1545) {
            return Nothing.value;
          }
          ;
          return bind17(sequence12(zipWith(matchExprImpl1)(unreverse(v.value1.left))(unreverse(v1.value1.left))))(function(leftMatches) {
            return bind17(sequence12(zipWith(matchExprImpl1)(v.value1.right)(v1.value1.right)))(function(rightMatches) {
              var concatMatches = foldl22(append24)([]);
              return pure11(append24(concatMatches(leftMatches))(concatMatches(rightMatches)));
            });
          });
        }
        ;
        if (v1.value0 instanceof Match) {
          return bug("what even is this case? I guess it shouldn't happen since Match has zero children, and therefore can't be a tooth?");
        }
        ;
        throw new Error("Failed pattern match at Data.Expr (line 734, column 1 - line 736, column 30): " + [v.constructor.name, v1.constructor.name]);
      };
    };
  };
  var matchChange = function(dictIsExprLabel) {
    var eq15 = eq(dictIsExprLabel.Ord1().Eq0());
    var matchTeeth1 = matchTeeth(dictIsExprLabel);
    var matchExprImpl1 = matchExprImpl(dictIsExprLabel);
    return function(v) {
      return function(v1) {
        if (v1.value0 instanceof CInj && (v1.value0.value0 instanceof Match && v1.value1.length === 0)) {
          return new Just(new Tuple([], [v]));
        }
        ;
        if (v.value0 instanceof CInj && (v1.value0 instanceof CInj && (v1.value0.value0 instanceof InjectMatchLabel && eq15(v.value0.value0)(v1.value0.value0.value0)))) {
          return map310(foldl7(function(v2) {
            return function(v3) {
              return new Tuple(append24(v2.value0)(v3.value0), append24(v2.value1)(v3.value1));
            };
          })(new Tuple([], [])))(sequence3(zipWith2(matchChange(dictIsExprLabel))(v.value1)(v1.value1)));
        }
        ;
        if (v.value0 instanceof Plus && (v.value1.length === 1 && (v1.value0 instanceof Plus && v1.value1.length === 1))) {
          return bind17(matchTeeth1(v.value0.value0)(v1.value0.value0))(function(toothMatches) {
            return bind17(matchChange(dictIsExprLabel)(v["value1"][0])(v1["value1"][0]))(function(v2) {
              return pure11(new Tuple(append24(toothMatches)(v2.value0), v2.value1));
            });
          });
        }
        ;
        if (v.value0 instanceof Minus && (v.value1.length === 1 && (v1.value0 instanceof Minus && v1.value1.length === 1))) {
          return bind17(matchTeeth1(v.value0.value0)(v1.value0.value0))(function(toothMatches) {
            return bind17(matchChange(dictIsExprLabel)(v["value1"][0])(v1["value1"][0]))(function(v2) {
              return pure11(new Tuple(append24(toothMatches)(v2.value0), v2.value1));
            });
          });
        }
        ;
        if (v.value0 instanceof Replace && (v.value1.length === 0 && (v1.value0 instanceof Replace && v1.value1.length === 0))) {
          return bind17(matchExprImpl1(v.value0.value0)(v1.value0.value0))(function(matches1) {
            return bind17(matchExprImpl1(v.value0.value1)(v1.value0.value1))(function(matches2) {
              return pure11(new Tuple(append24(matches1)(matches2), []));
            });
          });
        }
        ;
        return Nothing.value;
      };
    };
  };
  var injectMatchExpr = function(l) {
    return function(kids) {
      return new Expr(new InjectMatchLabel(l), kids);
    };
  };
  var injectChange = function(l) {
    return function(chs) {
      return new Expr(new CInj(l), chs);
    };
  };
  var inSaneEnglishIsItDown = function(dict) {
    return dict.inSaneEnglishIsItDown;
  };
  var fromMetaVar = function(mx) {
    return new Expr(new MV(mx), []);
  };
  var freshMetaVar = function(str) {
    return new MetaVar(new Just(str), nextInt(unit));
  };
  var foldMapMPath$prime_up = function(nil2) {
    return function(cons4) {
      var go2 = function($copy_v) {
        return function($copy_v1) {
          var $tco_var_v = $copy_v;
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(v, v1) {
            if (v1 instanceof Nil) {
              $tco_done = true;
              return v;
            }
            ;
            if (v1 instanceof Cons) {
              $tco_var_v = cons4(v1.value0)(v);
              $copy_v1 = v1.value1;
              return;
            }
            ;
            throw new Error("Failed pattern match at Data.Expr (line 327, column 3 - line 327, column 23): " + [v.constructor.name, v1.constructor.name]);
          }
          ;
          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_v, $copy_v1);
          }
          ;
          return $tco_result;
        };
      };
      return go2(nil2);
    };
  };
  var foldMapMPath$prime_down = function(nil2) {
    return function(cons4) {
      var go2 = function(v) {
        if (v instanceof Nil) {
          return nil2;
        }
        ;
        if (v instanceof Cons) {
          return cons4(v.value0)(go2(v.value1));
        }
        ;
        throw new Error("Failed pattern match at Data.Expr (line 322, column 3 - line 322, column 15): " + [v.constructor.name]);
      };
      return go2;
    };
  };
  var foldMapMPath = function(dictReflectPathDir) {
    var reflectPathDir1 = reflectPathDir(dictReflectPathDir);
    return function(nil2) {
      return function(cons4) {
        return function(v) {
          return on1(_down)(function(v1) {
            return foldMapMPath$prime_down(nil2)(cons4)(v);
          })(on22(_up)(function(v1) {
            return foldMapMPath$prime_up(nil2)(cons4)(v);
          })(case_))(reflectPathDir1(v));
        };
      };
    };
  };
  var foldMapPath = function(dictReflectPathDir) {
    var foldMapMPath1 = foldMapMPath(dictReflectPathDir);
    return function(nil2) {
      return function(cons4) {
        var $1742 = foldMapMPath1(nil2)(function(th2) {
          return function(v) {
            return cons4(th2)(v);
          };
        });
        return function($1743) {
          return unwrap10($1742($1743));
        };
      };
    };
  };
  var foldMapPath1 = /* @__PURE__ */ foldMapPath(reflectPathDirDown);
  var exprLabel = function(v) {
    return v.value0;
  };
  var expectedKidsCount = function(dict) {
    return dict.expectedKidsCount;
  };
  var wellformedExprF = function(dictIsExprLabel) {
    var expectedKidsCount1 = expectedKidsCount(dictIsExprLabel);
    var show19 = show(dictIsExprLabel.Show2());
    return function(source3) {
      return function(showKid) {
        return function(v) {
          return {
            name: "wellformedExprF",
            source: source3,
            result: function() {
              var $1660 = expectedKidsCount1(v.value0) === length5(v.value1);
              if ($1660) {
                return new Right(unit);
              }
              ;
              return new Left("An expression with ExprLabel " + (quotes(show19(v.value0)) + (" is expected to have " + (show5(expectedKidsCount1(v.value0)) + (" kids, but an instance of it actually has " + (show5(length10(v.value1)) + (" kids:" + bullets(map40(showKid)(v.value1)))))))));
            }()
          };
        };
      };
    };
  };
  var prettyExprF = function(dictIsExprLabel) {
    var wellformedExprF1 = wellformedExprF(dictIsExprLabel);
    var prettyExprF$prime_unsafe1 = prettyExprF$prime_unsafe(dictIsExprLabel)();
    return function(v) {
      return assert(wellformedExprF1("prettyExprF")(identity18)(v))(function() {
        return function(v1) {
          return prettyExprF$prime_unsafe1(new Tuple(v.value0, map40(pretty2)(v.value1)));
        };
      });
    };
  };
  var prettyExpr = function(dictIsExprLabel) {
    var prettyExprF1 = prettyExprF(dictIsExprLabel);
    return {
      pretty: function(v) {
        return prettyExprF1(new Tuple(v.value0, map40(pretty(prettyExpr(dictIsExprLabel)))(v.value1)));
      }
    };
  };
  var prettyTooth = function(dictIsExprLabel) {
    var prettyExprF1 = prettyExprF(dictIsExprLabel);
    var pretty23 = pretty(prettyExpr(dictIsExprLabel));
    return function(v) {
      return function(str) {
        return prettyExprF1(new Tuple(v.value0, fromFoldable8(unpathAround(str)(map114(pretty23)(v.value1)))));
      };
    };
  };
  var prettyPath = function(dictReflectPathDir) {
    var toDownPath1 = toDownPath(dictReflectPathDir);
    return function(dictIsExprLabel) {
      var prettyTooth2 = prettyTooth(dictIsExprLabel);
      return function(path) {
        return function(str) {
          return foldMapPath1(str)(prettyTooth2)(toDownPath1(path));
        };
      };
    };
  };
  var prettyPath1 = /* @__PURE__ */ prettyPath(reflectPathDirUp);
  var prettyPath2 = /* @__PURE__ */ prettyPath(reflectPathDirDown);
  var prettyPath3 = function(dictReflectPathDir) {
    var inSaneEnglishIsItDown1 = inSaneEnglishIsItDown(dictReflectPathDir);
    var toUpPath1 = toUpPath(dictReflectPathDir);
    var prettyPath42 = prettyPath(dictReflectPathDir);
    return function(dictIsExprLabel) {
      var prettyPath5 = prettyPath1(dictIsExprLabel);
      var prettyPath6 = prettyPath42(dictIsExprLabel);
      return {
        pretty: function(path) {
          var $1673 = inSaneEnglishIsItDown1(path);
          if ($1673) {
            return prettyPath5(toUpPath1(path))("\u2336");
          }
          ;
          return prettyPath6(path)("\u2336");
        }
      };
    };
  };
  var prettyChangeLabel = function(dictIsExprLabel) {
    var prettyTooth2 = prettyTooth(dictIsExprLabel);
    var pretty23 = pretty(dictIsExprLabel.Pretty3());
    var pretty33 = pretty(prettyExpr(dictIsExprLabel));
    return {
      pretty: function(v) {
        if (v instanceof Plus) {
          return "(+ " + (prettyTooth2(v.value0)("\u2336") + ")");
        }
        ;
        if (v instanceof Minus) {
          return "(- " + (prettyTooth2(v.value0)("\u2336") + ")");
        }
        ;
        if (v instanceof CInj) {
          return pretty23(v.value0);
        }
        ;
        if (v instanceof Replace) {
          return "(" + (pretty33(v.value0) + (") ~~> (" + (pretty33(v.value1) + ")")));
        }
        ;
        throw new Error("Failed pattern match at Data.Expr (line 562, column 1 - line 566, column 77): " + [v.constructor.name]);
      }
    };
  };
  var prettyZipper = function(dictIsExprLabel) {
    var prettyPath42 = prettyPath1(dictIsExprLabel);
    var pretty23 = pretty(prettyExpr(dictIsExprLabel));
    return {
      pretty: function(v) {
        return prettyPath42(v.value0)(cursor(pretty23(v.value1)));
      }
    };
  };
  var prettyZipperp = function(dictIsExprLabel) {
    var prettyPath42 = prettyPath1(dictIsExprLabel);
    var prettyPath5 = prettyPath2(dictIsExprLabel);
    var pretty23 = pretty(prettyExpr(dictIsExprLabel));
    return {
      pretty: function(v) {
        return prettyPath42(v.value0)(cursor(either(prettyPath5)(prettyPath42)(v.value1)(cursor(pretty23(v.value2)))));
      }
    };
  };
  var wellformedExpr = function(dictIsExprLabel) {
    var wellformedExprF1 = wellformedExprF(dictIsExprLabel);
    var pretty23 = pretty(prettyExpr(dictIsExprLabel));
    return function(source3) {
      return function(v) {
        return wellformedExprF1(source3)(pretty23)(new Tuple(v.value0, v.value1));
      };
    };
  };
  var isExprLabelChangeLabel = function(dictIsExprLabel) {
    var prettyTooth2 = prettyTooth(dictIsExprLabel);
    var prettyExprF1 = prettyExprF(dictIsExprLabel);
    var pretty23 = pretty(prettyExpr(dictIsExprLabel));
    var expectedKidsCount1 = expectedKidsCount(dictIsExprLabel);
    var Ord1 = dictIsExprLabel.Ord1();
    var eqChangeLabel1 = eqChangeLabel(Ord1.Eq0());
    var ordChangeLabel1 = ordChangeLabel(Ord1);
    var showChangeLabel1 = showChangeLabel(dictIsExprLabel.Show2());
    var prettyChangeLabel1 = prettyChangeLabel(dictIsExprLabel);
    return {
      "prettyExprF'_unsafe": function() {
        return function(v) {
          if (v.value0 instanceof Plus && v.value1.length === 1) {
            return parens("+" + prettyTooth2(v.value0.value0)("[" + (v["value1"][0] + "]")));
          }
          ;
          if (v.value0 instanceof Minus && v.value1.length === 1) {
            return parens("-" + prettyTooth2(v.value0.value0)("[" + (v["value1"][0] + "]")));
          }
          ;
          if (v.value0 instanceof CInj) {
            return prettyExprF1(new Tuple(v.value0.value0, v.value1));
          }
          ;
          if (v.value0 instanceof Replace && v.value1.length === 0) {
            return parens(pretty23(v.value0.value0)) + (" ~~> " + parens(pretty23(v.value0.value1)));
          }
          ;
          throw new Error("Failed pattern match at Data.Expr (line 597, column 1 - line 606, column 38): " + [v.constructor.name]);
        };
      },
      expectedKidsCount: function(v) {
        if (v instanceof Plus) {
          return 1;
        }
        ;
        if (v instanceof Minus) {
          return 1;
        }
        ;
        if (v instanceof CInj) {
          return expectedKidsCount1(v.value0);
        }
        ;
        if (v instanceof Replace) {
          return 0;
        }
        ;
        throw new Error("Failed pattern match at Data.Expr (line 597, column 1 - line 606, column 38): " + [v.constructor.name]);
      },
      Eq0: function() {
        return eqChangeLabel1;
      },
      Ord1: function() {
        return ordChangeLabel1;
      },
      Show2: function() {
        return showChangeLabel1;
      },
      Pretty3: function() {
        return prettyChangeLabel1;
      }
    };
  };
  var isExprLabelMeta = function(dictIsExprLabel) {
    var prettyExprF1 = prettyExprF(dictIsExprLabel);
    var expectedKidsCount1 = expectedKidsCount(dictIsExprLabel);
    var Ord1 = dictIsExprLabel.Ord1();
    var eqMeta1 = eqMeta(Ord1.Eq0());
    var ordMeta1 = ordMeta(Ord1);
    var showMeta1 = showMeta(dictIsExprLabel.Show2());
    var prettyMeta1 = prettyMeta(dictIsExprLabel.Pretty3());
    return {
      "prettyExprF'_unsafe": function() {
        return function(v) {
          if (v.value0 instanceof MV) {
            return pretty1(v.value0.value0);
          }
          ;
          if (v.value0 instanceof MInj) {
            return prettyExprF1(new Tuple(v.value0.value0, v.value1));
          }
          ;
          throw new Error("Failed pattern match at Data.Expr (line 180, column 1 - line 185, column 51): " + [v.constructor.name]);
        };
      },
      expectedKidsCount: function(v) {
        if (v instanceof MV) {
          return 0;
        }
        ;
        if (v instanceof MInj) {
          return expectedKidsCount1(v.value0);
        }
        ;
        throw new Error("Failed pattern match at Data.Expr (line 180, column 1 - line 185, column 51): " + [v.constructor.name]);
      },
      Eq0: function() {
        return eqMeta1;
      },
      Ord1: function() {
        return ordMeta1;
      },
      Show2: function() {
        return showMeta1;
      },
      Pretty3: function() {
        return prettyMeta1;
      }
    };
  };
  var subMetaExpr = function(dictIsExprLabel) {
    var wellformedExpr1 = wellformedExpr(isExprLabelMeta(dictIsExprLabel));
    return function(sigma) {
      var go2 = function() {
        return function(v) {
          if (v.value0 instanceof MV && v.value1.length === 0) {
            return assert(hasKey2("subMetaExpr")(v.value0.value0)(sigma))(function() {
              return identity18;
            });
          }
          ;
          if (v.value0 instanceof MInj) {
            return new Expr(v.value0.value0, map40(go2())(v.value1));
          }
          ;
          throw new Error("Failed pattern match at Data.Expr (line 653, column 8 - line 655, column 39): " + [v.constructor.name]);
        };
      };
      var go1 = go2();
      return assertInput_(wellformedExpr1("subMetaExpr"))(function() {
        return go1;
      });
    };
  };

  // output/Halogen.Hooks.Hook/index.js
  var bind18 = /* @__PURE__ */ bind(freeBind);
  var Hook = function(x) {
    return x;
  };
  var unsafeToHook = function($16) {
    return Hook(liftF($16));
  };
  var unsafeFromHook = function(v) {
    return v;
  };
  var pure14 = /* @__PURE__ */ function() {
    var $17 = pure(freeApplicative);
    return function($18) {
      return Hook($17($18));
    };
  }();
  var bind19 = function(v) {
    return function(f) {
      return bind18(v)(function(a2) {
        var v1 = f(a2);
        return v1;
      });
    };
  };
  var discard8 = bind19;

  // output/Effect.Exception.Unsafe/index.js
  var unsafeThrowException = function($1) {
    return unsafePerformEffect(throwException($1));
  };
  var unsafeThrow = function($2) {
    return unsafeThrowException(error($2));
  };

  // output/Halogen.Hooks.Internal.Types/index.js
  var toStateValue = unsafeCoerce2;
  var toRefValue = unsafeCoerce2;
  var toQueryValue = unsafeCoerce2;
  var toOutputValue = unsafeCoerce2;
  var fromStateValue = unsafeCoerce2;
  var fromRefValue = unsafeCoerce2;
  var fromQueryValue = unsafeCoerce2;
  var fromMemoValues = unsafeCoerce2;
  var fromMemoValue = unsafeCoerce2;

  // output/Halogen.Hooks.HookM/index.js
  var identity19 = /* @__PURE__ */ identity(categoryFn);
  var lookup14 = /* @__PURE__ */ lookup3();
  var bindFlipped8 = /* @__PURE__ */ bindFlipped(bindMaybe);
  var HookM = function(x) {
    return x;
  };
  var Modify = /* @__PURE__ */ function() {
    function Modify2(value0, value14, value23) {
      this.value0 = value0;
      this.value1 = value14;
      this.value2 = value23;
    }
    ;
    Modify2.create = function(value0) {
      return function(value14) {
        return function(value23) {
          return new Modify2(value0, value14, value23);
        };
      };
    };
    return Modify2;
  }();
  var Subscribe2 = /* @__PURE__ */ function() {
    function Subscribe3(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    Subscribe3.create = function(value0) {
      return function(value14) {
        return new Subscribe3(value0, value14);
      };
    };
    return Subscribe3;
  }();
  var Unsubscribe2 = /* @__PURE__ */ function() {
    function Unsubscribe3(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    Unsubscribe3.create = function(value0) {
      return function(value14) {
        return new Unsubscribe3(value0, value14);
      };
    };
    return Unsubscribe3;
  }();
  var Lift3 = /* @__PURE__ */ function() {
    function Lift4(value0) {
      this.value0 = value0;
    }
    ;
    Lift4.create = function(value0) {
      return new Lift4(value0);
    };
    return Lift4;
  }();
  var ChildQuery3 = /* @__PURE__ */ function() {
    function ChildQuery4(value0) {
      this.value0 = value0;
    }
    ;
    ChildQuery4.create = function(value0) {
      return new ChildQuery4(value0);
    };
    return ChildQuery4;
  }();
  var Raise2 = /* @__PURE__ */ function() {
    function Raise3(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    Raise3.create = function(value0) {
      return function(value14) {
        return new Raise3(value0, value14);
      };
    };
    return Raise3;
  }();
  var Par2 = /* @__PURE__ */ function() {
    function Par3(value0) {
      this.value0 = value0;
    }
    ;
    Par3.create = function(value0) {
      return new Par3(value0);
    };
    return Par3;
  }();
  var Fork2 = /* @__PURE__ */ function() {
    function Fork3(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    Fork3.create = function(value0) {
      return function(value14) {
        return new Fork3(value0, value14);
      };
    };
    return Fork3;
  }();
  var Kill2 = /* @__PURE__ */ function() {
    function Kill3(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    Kill3.create = function(value0) {
      return function(value14) {
        return new Kill3(value0, value14);
      };
    };
    return Kill3;
  }();
  var GetRef2 = /* @__PURE__ */ function() {
    function GetRef3(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    GetRef3.create = function(value0) {
      return function(value14) {
        return new GetRef3(value0, value14);
      };
    };
    return GetRef3;
  }();
  var monadHookM = freeMonad;
  var monadEffectHookM = function(dictMonadEffect) {
    return {
      liftEffect: function() {
        var $134 = liftEffect(dictMonadEffect);
        return function($135) {
          return HookM(liftF(Lift3.create($134($135))));
        };
      }(),
      Monad0: function() {
        return monadHookM;
      }
    };
  };
  var monadAffHookM = function(dictMonadAff) {
    var monadEffectHookM1 = monadEffectHookM(dictMonadAff.MonadEffect0());
    return {
      liftAff: function() {
        var $136 = liftAff(dictMonadAff);
        return function($137) {
          return HookM(liftF(Lift3.create($136($137))));
        };
      }(),
      MonadEffect0: function() {
        return monadEffectHookM1;
      }
    };
  };
  var functorHookM = freeFunctor;
  var $$void10 = /* @__PURE__ */ $$void(functorHookM);
  var map211 = /* @__PURE__ */ map(functorHookM);
  var bindHookM = freeBind;
  var applyHookM = freeApply;
  var applicativeHookM = freeApplicative;
  var unsubscribe4 = function(sid) {
    return liftF(new Unsubscribe2(sid, unit));
  };
  var subscribe3 = function(es) {
    return liftF(new Subscribe2(function(v) {
      return es;
    }, identity19));
  };
  var raise2 = function(v) {
    return function(o) {
      return liftF(new Raise2(toOutputValue(o), unit));
    };
  };
  var query3 = function() {
    return function(dictIsSymbol) {
      var lookup111 = lookup14(dictIsSymbol);
      return function(dictOrd) {
        var lookup23 = lookup111(dictOrd);
        return function(v) {
          return function(label5) {
            return function(p2) {
              return function(q2) {
                return liftF(new ChildQuery3(mkChildQueryBox(new ChildQuery(function(dictApplicative) {
                  var pure117 = pure(dictApplicative);
                  return function(k) {
                    var $144 = maybe(pure117(Nothing.value))(k);
                    var $145 = lookup23(label5)(p2);
                    return function($146) {
                      return $144($145($146));
                    };
                  };
                }, q2, identity19))));
              };
            };
          };
        };
      };
    };
  };
  var query1 = /* @__PURE__ */ query3();
  var tell3 = function() {
    return function(dictIsSymbol) {
      var query22 = query1(dictIsSymbol);
      return function(dictOrd) {
        var query32 = query22(dictOrd);
        return function(slotToken) {
          return function(label5) {
            return function(slot4) {
              return function(req2) {
                return $$void10(query32(slotToken)(label5)(slot4)(mkTell(req2)));
              };
            };
          };
        };
      };
    };
  };
  var modify5 = function(identifier) {
    return function(f) {
      var f$prime = function($147) {
        return toStateValue(f(fromStateValue($147)));
      };
      return liftF(new Modify(identifier, f$prime, fromStateValue));
    };
  };
  var modify_3 = function(identifier) {
    var $148 = map211($$const(unit));
    var $149 = modify5(identifier);
    return function($150) {
      return $148($149($150));
    };
  };
  var put2 = function(identifier) {
    return function(state3) {
      return modify_3(identifier)($$const(state3));
    };
  };
  var getRef2 = function(p2) {
    return liftF(new GetRef2(p2, identity19));
  };
  var getHTMLElementRef2 = /* @__PURE__ */ function() {
    var $151 = map211(function(v) {
      return bindFlipped8(fromElement)(v);
    });
    return function($152) {
      return $151(getRef2($152));
    };
  }();
  var get3 = function(identifier) {
    return modify5(identifier)(identity19);
  };

  // output/Halogen.Hooks.Internal.Eval.Types/index.js
  var Initialize2 = /* @__PURE__ */ function() {
    function Initialize3() {
    }
    ;
    Initialize3.value = new Initialize3();
    return Initialize3;
  }();
  var Queued = /* @__PURE__ */ function() {
    function Queued2() {
    }
    ;
    Queued2.value = new Queued2();
    return Queued2;
  }();
  var Step3 = /* @__PURE__ */ function() {
    function Step4() {
    }
    ;
    Step4.value = new Step4();
    return Step4;
  }();
  var Finalize2 = /* @__PURE__ */ function() {
    function Finalize3() {
    }
    ;
    Finalize3.value = new Finalize3();
    return Finalize3;
  }();
  var HookState = function(x) {
    return x;
  };
  var eqInterpretHookReason = {
    eq: function(x) {
      return function(y) {
        if (x instanceof Initialize2 && y instanceof Initialize2) {
          return true;
        }
        ;
        if (x instanceof Queued && y instanceof Queued) {
          return true;
        }
        ;
        if (x instanceof Step3 && y instanceof Step3) {
          return true;
        }
        ;
        if (x instanceof Finalize2 && y instanceof Finalize2) {
          return true;
        }
        ;
        return false;
      };
    }
  };
  var toQueryFn = unsafeCoerce2;
  var toHalogenM = function(v) {
    return function(v1) {
      return function(hm) {
        return hm;
      };
    };
  };
  var fromQueryFn = unsafeCoerce2;

  // output/Halogen.Hooks.Internal.UseHookF/index.js
  var UseState = /* @__PURE__ */ function() {
    function UseState2(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    UseState2.create = function(value0) {
      return function(value14) {
        return new UseState2(value0, value14);
      };
    };
    return UseState2;
  }();
  var UseEffect = /* @__PURE__ */ function() {
    function UseEffect2(value0, value14, value23) {
      this.value0 = value0;
      this.value1 = value14;
      this.value2 = value23;
    }
    ;
    UseEffect2.create = function(value0) {
      return function(value14) {
        return function(value23) {
          return new UseEffect2(value0, value14, value23);
        };
      };
    };
    return UseEffect2;
  }();
  var UseQuery = /* @__PURE__ */ function() {
    function UseQuery2(value0, value14, value23) {
      this.value0 = value0;
      this.value1 = value14;
      this.value2 = value23;
    }
    ;
    UseQuery2.create = function(value0) {
      return function(value14) {
        return function(value23) {
          return new UseQuery2(value0, value14, value23);
        };
      };
    };
    return UseQuery2;
  }();
  var UseMemo = /* @__PURE__ */ function() {
    function UseMemo2(value0, value14, value23) {
      this.value0 = value0;
      this.value1 = value14;
      this.value2 = value23;
    }
    ;
    UseMemo2.create = function(value0) {
      return function(value14) {
        return function(value23) {
          return new UseMemo2(value0, value14, value23);
        };
      };
    };
    return UseMemo2;
  }();
  var UseRef = /* @__PURE__ */ function() {
    function UseRef2(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    UseRef2.create = function(value0) {
      return function(value14) {
        return new UseRef2(value0, value14);
      };
    };
    return UseRef2;
  }();

  // output/Halogen.Hooks.Internal.Eval/index.js
  var fromJust7 = /* @__PURE__ */ fromJust();
  var unsafeIndex2 = /* @__PURE__ */ unsafeIndex();
  var bind20 = /* @__PURE__ */ bind(bindHalogenM);
  var discard9 = /* @__PURE__ */ discard(discardUnit);
  var discard12 = /* @__PURE__ */ discard9(bindHalogenM);
  var when6 = /* @__PURE__ */ when(applicativeHalogenM);
  var sequence_2 = /* @__PURE__ */ sequence_(applicativeHalogenM)(foldableArray);
  var eq4 = /* @__PURE__ */ eq(eqInterpretHookReason);
  var $$void11 = /* @__PURE__ */ $$void(functorHalogenM);
  var gets2 = /* @__PURE__ */ gets(monadStateHalogenM);
  var unwrap11 = /* @__PURE__ */ unwrap();
  var get4 = /* @__PURE__ */ get(monadStateHalogenM);
  var pure15 = /* @__PURE__ */ pure(applicativeHalogenM);
  var map41 = /* @__PURE__ */ map(functorHookM);
  var unless2 = /* @__PURE__ */ unless(applicativeHalogenM);
  var bind110 = /* @__PURE__ */ bind(freeBind);
  var discard32 = /* @__PURE__ */ discard9(freeBind);
  var pure23 = /* @__PURE__ */ pure(freeApplicative);
  var void1 = /* @__PURE__ */ $$void(freeFunctor);
  var retractFreeAp3 = /* @__PURE__ */ retractFreeAp(applicativeHalogenAp);
  var pure32 = /* @__PURE__ */ pure(applicativeHookM);
  var not1 = /* @__PURE__ */ not(/* @__PURE__ */ heytingAlgebraFunction(/* @__PURE__ */ heytingAlgebraFunction(heytingAlgebraBoolean)));
  var applySecond2 = /* @__PURE__ */ applySecond(applyHookM);
  var bimap3 = /* @__PURE__ */ bimap(bifunctorTuple);
  var unsafeSetCell = function(index5) {
    return function(a2) {
      return function(array) {
        return fromJust7(modifyAt(index5)($$const(a2))(array));
      };
    };
  };
  var unsafeGetCell = function(index5) {
    return function(array) {
      return unsafeIndex2(array)(index5);
    };
  };
  var stepIndex = function(index5) {
    return function(array) {
      var $88 = (index5 + 1 | 0) < length5(array);
      if ($88) {
        return index5 + 1 | 0;
      }
      ;
      return 0;
    };
  };
  var mkEval2 = function(inputEq) {
    return function(_evalHookM) {
      return function(_evalHook) {
        var executeHooksAndEffects = function(stateRef) {
          return function(reason) {
            return bind20(_evalHook(reason))(function() {
              var v = unsafePerformEffect(read(stateRef));
              return discard12(when6(!$$null3(v.evalQueue))(function() {
                var runQueue = unsafePerformEffect(function __do2() {
                  modify_(function(v1) {
                    return {
                      componentRef: v1.componentRef,
                      effectCells: v1.effectCells,
                      input: v1.input,
                      memoCells: v1.memoCells,
                      queryFn: v1.queryFn,
                      refCells: v1.refCells,
                      stateCells: v1.stateCells,
                      evalQueue: [],
                      stateDirty: false
                    };
                  })(stateRef)();
                  return sequence_2(v.evalQueue);
                });
                return discard12(runQueue)(function() {
                  var v1 = unsafePerformEffect(read(stateRef));
                  var initializeOrStepReason = eq4(reason)(Initialize2.value) || eq4(reason)(Step3.value);
                  return when6(v1.stateDirty && initializeOrStepReason)($$void11(executeHooksAndEffects(stateRef)(Step3.value)));
                });
              }()))(function() {
                return gets2(function($217) {
                  return function(v1) {
                    return v1.result;
                  }(unwrap11($217));
                });
              });
            });
          };
        };
        return function(v) {
          if (v instanceof Initialize) {
            return bind20(get4)(function(v1) {
              return bind20(executeHooksAndEffects(v1.stateRef)(Initialize2.value))(function() {
                return pure15(v.value0);
              });
            });
          }
          ;
          if (v instanceof Query) {
            return bind20(get4)(function(v1) {
              var v2 = unsafePerformEffect(read(v1.stateRef));
              if (v2.queryFn instanceof Nothing) {
                return pure15(v.value1(unit));
              }
              ;
              if (v2.queryFn instanceof Just) {
                return _evalHookM(executeHooksAndEffects(v1.stateRef)(Step3.value))(unCoyoneda(function(g) {
                  var $218 = map41(maybe(v.value1(unit))(g));
                  var $219 = fromQueryFn(v2.queryFn.value0);
                  return function($220) {
                    return $218($219($220));
                  };
                })(v.value0));
              }
              ;
              throw new Error("Failed pattern match at Halogen.Hooks.Internal.Eval (line 46, column 5 - line 51, column 81): " + [v2.queryFn.constructor.name]);
            });
          }
          ;
          if (v instanceof Action2) {
            return bind20(get4)(function(v1) {
              return discard12(_evalHookM(executeHooksAndEffects(v1.stateRef)(Step3.value))(v.value0))(function() {
                return pure15(v.value1);
              });
            });
          }
          ;
          if (v instanceof Receive) {
            return bind20(get4)(function(v1) {
              var v2 = unsafePerformEffect(read(v1.stateRef));
              return discard12(unless2(inputEq(v2.input)(v.value0))(function() {
                var execute = unsafePerformEffect(function __do2() {
                  modify_(function(v3) {
                    return {
                      componentRef: v3.componentRef,
                      effectCells: v3.effectCells,
                      evalQueue: v3.evalQueue,
                      memoCells: v3.memoCells,
                      queryFn: v3.queryFn,
                      refCells: v3.refCells,
                      stateCells: v3.stateCells,
                      stateDirty: v3.stateDirty,
                      input: v.value0
                    };
                  })(v1.stateRef)();
                  return executeHooksAndEffects(v1.stateRef)(Step3.value);
                });
                return $$void11(execute);
              }()))(function() {
                return pure15(v.value1);
              });
            });
          }
          ;
          if (v instanceof Finalize) {
            return bind20(get4)(function(v1) {
              return bind20(executeHooksAndEffects(v1.stateRef)(Finalize2.value))(function() {
                return pure15(v.value0);
              });
            });
          }
          ;
          throw new Error("Failed pattern match at Halogen.Hooks.Internal.Eval (line 37, column 39 - line 74, column 11): " + [v.constructor.name]);
        };
      };
    };
  };
  var evalHookM = function(v) {
    return function(v1) {
      var interpretHalogenHook = function(v2) {
        if (v2 instanceof Modify) {
          return bind110(liftF(new State(function(state3) {
            return new Tuple(state3, state3);
          })))(function(v3) {
            var v4 = unsafePerformEffect(read(v3.stateRef));
            return discard32(function() {
              var v5 = unsafeRefEq(v4.componentRef)(v2.value0.value0);
              if (v5) {
                return pure23(unit);
              }
              ;
              return unsafeThrow("Attempted to use state-modifying `HookM` code outside the component where it was defined.");
            }())(function() {
              var current = unsafeGetCell(v2.value0.value1)(v4.stateCells.queue);
              var next2 = v2.value1(current);
              return discard32(function() {
                var v5 = unsafeRefEq(current)(next2);
                if (v5) {
                  return pure23(unit);
                }
                ;
                var newQueue = unsafeSetCell(v2.value0.value1)(next2);
                var runHooks$prime = unsafePerformEffect(function __do2() {
                  modify_(function(s) {
                    return {
                      componentRef: s.componentRef,
                      effectCells: s.effectCells,
                      evalQueue: s.evalQueue,
                      input: s.input,
                      memoCells: s.memoCells,
                      queryFn: s.queryFn,
                      refCells: s.refCells,
                      stateCells: {
                        index: s.stateCells.index,
                        queue: newQueue(s.stateCells.queue)
                      },
                      stateDirty: true
                    };
                  })(v3.stateRef)();
                  return v;
                });
                return void1(runHooks$prime);
              }())(function() {
                return pure23(v2.value2(next2));
              });
            });
          });
        }
        ;
        if (v2 instanceof Subscribe2) {
          return liftF(new Subscribe(v2.value0, v2.value1));
        }
        ;
        if (v2 instanceof Unsubscribe2) {
          return liftF(new Unsubscribe(v2.value0, v2.value1));
        }
        ;
        if (v2 instanceof Lift3) {
          return liftF(new Lift2(v2.value0));
        }
        ;
        if (v2 instanceof ChildQuery3) {
          return liftF(new ChildQuery2(v2.value0));
        }
        ;
        if (v2 instanceof Raise2) {
          return liftF(new Raise(v2.value0, v2.value1));
        }
        ;
        if (v2 instanceof Par2) {
          return liftF(new Par(retractFreeAp3(hoistFreeAp(function() {
            var $221 = evalHookM(v);
            return function($222) {
              return HalogenAp(liftFreeAp($221($222)));
            };
          }())(v2.value0))));
        }
        ;
        if (v2 instanceof Fork2) {
          return liftF(new Fork(evalHookM(v)(v2.value0), v2.value1));
        }
        ;
        if (v2 instanceof Kill2) {
          return liftF(new Kill(v2.value0, v2.value1));
        }
        ;
        if (v2 instanceof GetRef2) {
          return liftF(new GetRef(v2.value0, v2.value1));
        }
        ;
        throw new Error("Failed pattern match at Halogen.Hooks.Internal.Eval (line 237, column 26 - line 302, column 31): " + [v2.constructor.name]);
      };
      return substFree(interpretHalogenHook)(v1);
    };
  };
  var evalHook = function(_evalHookM) {
    return function(_evalHook) {
      return function(reason) {
        return function(stateRef) {
          return function(v) {
            if (v instanceof UseState) {
              if (reason instanceof Initialize2) {
                var identifier = unsafePerformEffect(function __do2() {
                  var v12 = modify(function(s) {
                    return {
                      componentRef: s.componentRef,
                      effectCells: s.effectCells,
                      evalQueue: s.evalQueue,
                      input: s.input,
                      memoCells: s.memoCells,
                      queryFn: s.queryFn,
                      refCells: s.refCells,
                      stateDirty: s.stateDirty,
                      stateCells: {
                        index: s.stateCells.index,
                        queue: snoc(s.stateCells.queue)(v.value0)
                      }
                    };
                  })(stateRef)();
                  return new Tuple(v12.componentRef, length5(v12.stateCells.queue) - 1 | 0);
                });
                return pure23(v.value1(new Tuple(v.value0, identifier)));
              }
              ;
              var v1 = unsafePerformEffect(function __do2() {
                var v2 = read(stateRef)();
                modify_(function(v3) {
                  return {
                    componentRef: v3.componentRef,
                    effectCells: v3.effectCells,
                    evalQueue: v3.evalQueue,
                    input: v3.input,
                    memoCells: v3.memoCells,
                    queryFn: v3.queryFn,
                    refCells: v3.refCells,
                    stateDirty: v3.stateDirty,
                    stateCells: {
                      queue: v3.stateCells.queue,
                      index: stepIndex(v2.stateCells.index)(v2.stateCells.queue)
                    }
                  };
                })(stateRef)();
                return {
                  value: unsafeGetCell(v2.stateCells.index)(v2.stateCells.queue),
                  identifier: new Tuple(v2.componentRef, v2.stateCells.index)
                };
              });
              return pure23(v.value1(new Tuple(v1.value, v1.identifier)));
            }
            ;
            if (v instanceof UseQuery) {
              var handler$prime = function($223) {
                return v.value1(toQueryValue($223));
              };
              return pure23(unsafePerformEffect(function __do2() {
                modify_(function(v12) {
                  return {
                    componentRef: v12.componentRef,
                    effectCells: v12.effectCells,
                    evalQueue: v12.evalQueue,
                    input: v12.input,
                    memoCells: v12.memoCells,
                    refCells: v12.refCells,
                    stateCells: v12.stateCells,
                    stateDirty: v12.stateDirty,
                    queryFn: new Just(toQueryFn(handler$prime))
                  };
                })(stateRef)();
                return v.value2;
              }));
            }
            ;
            if (v instanceof UseEffect) {
              if (reason instanceof Initialize2) {
                return pure23(unsafePerformEffect(function() {
                  var $$eval2 = function(index5) {
                    return bind20(_evalHookM(_evalHook(Queued.value))(v.value1))(function(mbFinalizer) {
                      var finalizer = fromMaybe(pure32(unit))(mbFinalizer);
                      var updateQueue = function(st) {
                        return unsafeSetCell(index5)(new Tuple(v.value0, finalizer))(st);
                      };
                      return pure15(unsafePerformEffect(modify_(function(s) {
                        return {
                          componentRef: s.componentRef,
                          evalQueue: s.evalQueue,
                          input: s.input,
                          memoCells: s.memoCells,
                          queryFn: s.queryFn,
                          refCells: s.refCells,
                          stateCells: s.stateCells,
                          stateDirty: s.stateDirty,
                          effectCells: {
                            index: s.effectCells.index,
                            queue: updateQueue(s.effectCells.queue)
                          }
                        };
                      })(stateRef)));
                    });
                  };
                  var initializeState = function(st) {
                    return {
                      input: st.input,
                      componentRef: st.componentRef,
                      queryFn: st.queryFn,
                      stateCells: st.stateCells,
                      memoCells: st.memoCells,
                      refCells: st.refCells,
                      stateDirty: st.stateDirty,
                      evalQueue: snoc(st.evalQueue)($$eval2(length5(st.effectCells.queue))),
                      effectCells: {
                        index: st.effectCells.index,
                        queue: snoc(st.effectCells.queue)(new Tuple(v.value0, pure32(unit)))
                      }
                    };
                  };
                  return function __do2() {
                    modify_(initializeState)(stateRef)();
                    return v.value2;
                  };
                }()));
              }
              ;
              if (reason instanceof Queued) {
                return pure23(v.value2);
              }
              ;
              if (reason instanceof Step3) {
                return pure23(unsafePerformEffect(function __do2() {
                  var v12 = read(stateRef)();
                  var nextIndex = stepIndex(v12.effectCells.index)(v12.effectCells.queue);
                  var v2 = unsafeGetCell(v12.effectCells.index)(v12.effectCells.queue);
                  if (v.value0 instanceof Just && v2.value0 instanceof Just) {
                    var memos$prime = {
                      old: fromMemoValues(v2.value0.value0),
                      "new": fromMemoValues(v.value0.value0)
                    };
                    var $171 = isEmpty2(memos$prime["new"].memos) || not1(memos$prime["new"].eq)(memos$prime.old.memos)(memos$prime["new"].memos);
                    if ($171) {
                      var $$eval2 = bind20(_evalHookM(_evalHook(Queued.value))(applySecond2(v2.value1)(v.value1)))(function(mbFinalizer) {
                        var v3 = unsafePerformEffect(read(stateRef));
                        var newFinalizer = fromMaybe(pure32(unit))(mbFinalizer);
                        var newValue = new Tuple(v.value0, newFinalizer);
                        var newQueue = unsafeSetCell(v12.effectCells.index)(newValue)(v3.effectCells.queue);
                        return pure15(unsafePerformEffect(modify_(function(v4) {
                          return {
                            componentRef: v4.componentRef,
                            evalQueue: v4.evalQueue,
                            input: v4.input,
                            memoCells: v4.memoCells,
                            queryFn: v4.queryFn,
                            refCells: v4.refCells,
                            stateCells: v4.stateCells,
                            stateDirty: v4.stateDirty,
                            effectCells: {
                              index: v4.effectCells.index,
                              queue: newQueue
                            }
                          };
                        })(stateRef)));
                      });
                      modify_(function(s) {
                        return {
                          componentRef: s.componentRef,
                          input: s.input,
                          memoCells: s.memoCells,
                          queryFn: s.queryFn,
                          refCells: s.refCells,
                          stateCells: s.stateCells,
                          stateDirty: s.stateDirty,
                          evalQueue: snoc(s.evalQueue)($$eval2),
                          effectCells: {
                            queue: s.effectCells.queue,
                            index: nextIndex
                          }
                        };
                      })(stateRef)();
                      return v.value2;
                    }
                    ;
                    modify_(function(v3) {
                      return {
                        componentRef: v3.componentRef,
                        evalQueue: v3.evalQueue,
                        input: v3.input,
                        memoCells: v3.memoCells,
                        queryFn: v3.queryFn,
                        refCells: v3.refCells,
                        stateCells: v3.stateCells,
                        stateDirty: v3.stateDirty,
                        effectCells: {
                          queue: v3.effectCells.queue,
                          index: nextIndex
                        }
                      };
                    })(stateRef)();
                    return v.value2;
                  }
                  ;
                  modify_(function(v3) {
                    return {
                      componentRef: v3.componentRef,
                      evalQueue: v3.evalQueue,
                      input: v3.input,
                      memoCells: v3.memoCells,
                      queryFn: v3.queryFn,
                      refCells: v3.refCells,
                      stateCells: v3.stateCells,
                      stateDirty: v3.stateDirty,
                      effectCells: {
                        queue: v3.effectCells.queue,
                        index: nextIndex
                      }
                    };
                  })(stateRef)();
                  return v.value2;
                }));
              }
              ;
              if (reason instanceof Finalize2) {
                return pure23(unsafePerformEffect(function __do2() {
                  var v12 = read(stateRef)();
                  var v2 = unsafeGetCell(v12.effectCells.index)(v12.effectCells.queue);
                  var finalizeHook = _evalHookM(_evalHook(Queued.value))(v2.value1);
                  modify_(function(s) {
                    return {
                      componentRef: s.componentRef,
                      input: s.input,
                      memoCells: s.memoCells,
                      queryFn: s.queryFn,
                      refCells: s.refCells,
                      stateCells: s.stateCells,
                      stateDirty: s.stateDirty,
                      evalQueue: snoc(s.evalQueue)(finalizeHook),
                      effectCells: {
                        queue: s.effectCells.queue,
                        index: stepIndex(v12.effectCells.index)(v12.effectCells.queue)
                      }
                    };
                  })(stateRef)();
                  return v.value2;
                }));
              }
              ;
              throw new Error("Failed pattern match at Halogen.Hooks.Internal.Eval (line 131, column 5 - line 190, column 15): " + [reason.constructor.name]);
            }
            ;
            if (v instanceof UseMemo) {
              if (reason instanceof Initialize2) {
                return pure23(unsafePerformEffect(function __do2() {
                  var v12 = read(stateRef)();
                  var newValue = v.value1(unit);
                  modify_(function(v2) {
                    return {
                      componentRef: v2.componentRef,
                      effectCells: v2.effectCells,
                      evalQueue: v2.evalQueue,
                      input: v2.input,
                      queryFn: v2.queryFn,
                      refCells: v2.refCells,
                      stateCells: v2.stateCells,
                      stateDirty: v2.stateDirty,
                      memoCells: {
                        index: v2.memoCells.index,
                        queue: snoc(v12.memoCells.queue)(new Tuple(v.value0, newValue))
                      }
                    };
                  })(stateRef)();
                  return v.value2(newValue);
                }));
              }
              ;
              return pure23(unsafePerformEffect(function __do2() {
                var v12 = read(stateRef)();
                var v2 = bimap3(fromMemoValues)(fromMemoValue)(unsafeGetCell(v12.memoCells.index)(v12.memoCells.queue));
                var newMemos = fromMemoValues(v.value0);
                var m = {
                  eq: newMemos.eq,
                  old: v2.value0.memos,
                  "new": newMemos.memos,
                  value: v2.value1
                };
                var nextIndex = stepIndex(v12.memoCells.index)(v12.memoCells.queue);
                var $198 = isEmpty2(m["new"]) || !m.eq(m["new"])(m.old);
                if ($198) {
                  var newValue = v.value1(unit);
                  var newQueue = unsafeSetCell(v12.memoCells.index)(new Tuple(v.value0, newValue))(v12.memoCells.queue);
                  modify_(function(v3) {
                    return {
                      componentRef: v3.componentRef,
                      effectCells: v3.effectCells,
                      evalQueue: v3.evalQueue,
                      input: v3.input,
                      queryFn: v3.queryFn,
                      refCells: v3.refCells,
                      stateCells: v3.stateCells,
                      stateDirty: v3.stateDirty,
                      memoCells: {
                        index: nextIndex,
                        queue: newQueue
                      }
                    };
                  })(stateRef)();
                  return v.value2(newValue);
                }
                ;
                modify_(function(v3) {
                  return {
                    componentRef: v3.componentRef,
                    effectCells: v3.effectCells,
                    evalQueue: v3.evalQueue,
                    input: v3.input,
                    queryFn: v3.queryFn,
                    refCells: v3.refCells,
                    stateCells: v3.stateCells,
                    stateDirty: v3.stateDirty,
                    memoCells: {
                      queue: v3.memoCells.queue,
                      index: nextIndex
                    }
                  };
                })(stateRef)();
                return v.value2(m.value);
              }));
            }
            ;
            if (v instanceof UseRef) {
              if (reason instanceof Initialize2) {
                return pure23(unsafePerformEffect(function __do2() {
                  var v12 = read(stateRef)();
                  var ref3 = $$new(v.value0)();
                  modify_(function(v2) {
                    return {
                      componentRef: v2.componentRef,
                      effectCells: v2.effectCells,
                      evalQueue: v2.evalQueue,
                      input: v2.input,
                      memoCells: v2.memoCells,
                      queryFn: v2.queryFn,
                      stateCells: v2.stateCells,
                      stateDirty: v2.stateDirty,
                      refCells: {
                        index: v2.refCells.index,
                        queue: snoc(v12.refCells.queue)(ref3)
                      }
                    };
                  })(stateRef)();
                  return v.value1(new Tuple(v.value0, ref3));
                }));
              }
              ;
              return pure23(unsafePerformEffect(function __do2() {
                var v12 = read(stateRef)();
                var ref3 = unsafeGetCell(v12.refCells.index)(v12.refCells.queue);
                var value14 = read(ref3)();
                modify_(function(v2) {
                  return {
                    componentRef: v2.componentRef,
                    effectCells: v2.effectCells,
                    evalQueue: v2.evalQueue,
                    input: v2.input,
                    memoCells: v2.memoCells,
                    queryFn: v2.queryFn,
                    stateCells: v2.stateCells,
                    stateDirty: v2.stateDirty,
                    refCells: {
                      queue: v2.refCells.queue,
                      index: stepIndex(v12.refCells.index)(v12.refCells.queue)
                    }
                  };
                })(stateRef)();
                return v.value1(new Tuple(value14, ref3));
              }));
            }
            ;
            throw new Error("Failed pattern match at Halogen.Hooks.Internal.Eval (line 103, column 49 - line 230, column 39): " + [v.constructor.name]);
          };
        };
      };
    };
  };

  // output/Halogen.Hooks.Component/index.js
  var bind21 = /* @__PURE__ */ bind(bindHalogenM);
  var get5 = /* @__PURE__ */ get(monadStateHalogenM);
  var discard10 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var modify_4 = /* @__PURE__ */ modify_2(monadStateHalogenM);
  var over4 = /* @__PURE__ */ over()();
  var pure16 = /* @__PURE__ */ pure(applicativeHalogenM);
  var memoComponent = function(eqInput) {
    return function(inputHookFn) {
      var initialState = function(input3) {
        return {
          result: text5(""),
          stateRef: unsafePerformEffect($$new({
            input: input3,
            componentRef: {},
            queryFn: Nothing.value,
            stateCells: {
              queue: [],
              index: 0
            },
            effectCells: {
              queue: [],
              index: 0
            },
            memoCells: {
              queue: [],
              index: 0
            },
            refCells: {
              queue: [],
              index: 0
            },
            evalQueue: [],
            stateDirty: false
          }))
        };
      };
      var slotToken = {};
      var queryToken = {};
      var outputToken = {};
      var hookFn = inputHookFn({
        queryToken,
        slotToken,
        outputToken
      });
      var evalHook2 = function(reason) {
        return bind21(get5)(function(v) {
          var $$eval2 = evalHook(evalHookM)(evalHook2)(reason)(v.stateRef);
          var v1 = unsafePerformEffect(read(v.stateRef));
          var hookF = unsafeFromHook(hookFn(v1.input));
          return bind21(substFree($$eval2)(hookF))(function(a2) {
            return discard10(modify_4(over4(HookState)(function(v2) {
              return {
                stateRef: v2.stateRef,
                result: a2
              };
            })))(function() {
              return pure16(a2);
            });
          });
        });
      };
      return mkComponent({
        initialState,
        render: function(v) {
          return v.result;
        },
        "eval": function() {
          var $21 = toHalogenM(slotToken)(outputToken);
          var $22 = mkEval2(eqInput)(evalHookM)(evalHook2);
          return function($23) {
            return $21($22($23));
          };
        }()
      });
    };
  };
  var component = /* @__PURE__ */ memoComponent(function(v) {
    return function(v1) {
      return false;
    };
  });

  // output/Halogen.Hooks/index.js
  var useState = function(initialState) {
    var $$interface = function(v) {
      return new Tuple(fromStateValue(v.value0), v.value1);
    };
    var initialState$prime = toStateValue(initialState);
    return unsafeToHook(new UseState(initialState$prime, $$interface));
  };
  var useRef = function(initialValue2) {
    var $$interface = function(v) {
      return new Tuple(fromRefValue(v.value0), v.value1);
    };
    var initialValue$prime = toRefValue(initialValue2);
    return unsafeToHook(new UseRef(initialValue$prime, $$interface));
  };
  var useQuery = function(token) {
    return function(handler3) {
      var handler$prime = function($11) {
        return handler3(fromQueryValue($11));
      };
      return unsafeToHook(new UseQuery(token, handler$prime, unit));
    };
  };
  var useLifecycleEffect = function(fn) {
    return unsafeToHook(new UseEffect(Nothing.value, fn, unit));
  };

  // output/Halogen.Query.Event/index.js
  var traverse_7 = /* @__PURE__ */ traverse_(applicativeEffect)(foldableMaybe);
  var eventListener2 = function(eventType) {
    return function(target6) {
      return function(f) {
        return makeEmitter(function(push2) {
          return function __do2() {
            var listener = eventListener(function(ev) {
              return traverse_7(push2)(f(ev));
            })();
            addEventListener(eventType)(listener)(false)(target6)();
            return removeEventListener(eventType)(listener)(false)(target6);
          };
        });
      };
    };
  };

  // output/Halogen.Utilities/foreign.js
  var fromInputEventToTargetValue = (event) => () => event.target.value;
  var get_url_search_param = (name15) => () => {
    var _a;
    const urlParams = new URLSearchParams(window.location.search);
    return (_a = urlParams.get(name15)) != null ? _a : "";
  };
  var encode_uri_string = (str) => encodeURIComponent(str);
  var navigator_clipboard_text_ = () => __async(void 0, null, function* () {
    return navigator.clipboard.readText();
  });

  // output/Control.Promise/foreign.js
  function thenImpl(promise2) {
    return function(errCB) {
      return function(succCB) {
        return function() {
          promise2.then(succCB, errCB);
        };
      };
    };
  }

  // output/Control.Promise/index.js
  var voidRight2 = /* @__PURE__ */ voidRight(functorEffect);
  var mempty3 = /* @__PURE__ */ mempty(monoidCanceler);
  var identity20 = /* @__PURE__ */ identity(categoryFn);
  var alt6 = /* @__PURE__ */ alt(/* @__PURE__ */ altExceptT(semigroupNonEmptyList)(monadIdentity));
  var unsafeReadTagged2 = /* @__PURE__ */ unsafeReadTagged(monadIdentity);
  var map43 = /* @__PURE__ */ map(/* @__PURE__ */ functorExceptT(functorIdentity));
  var readString2 = /* @__PURE__ */ readString(monadIdentity);
  var bind22 = /* @__PURE__ */ bind(bindAff);
  var liftEffect7 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var toAff$prime = function(customCoerce) {
    return function(p2) {
      return makeAff(function(cb) {
        return voidRight2(mempty3)(thenImpl(p2)(function($14) {
          return cb(Left.create(customCoerce($14)))();
        })(function($15) {
          return cb(Right.create($15))();
        }));
      });
    };
  };
  var coerce4 = function(fn) {
    return either(function(v) {
      return error("Promise failed, couldn't extract JS Error or String");
    })(identity20)(runExcept(alt6(unsafeReadTagged2("Error")(fn))(map43(error)(readString2(fn)))));
  };
  var toAff = /* @__PURE__ */ toAff$prime(coerce4);
  var toAffE = function(f) {
    return bind22(liftEffect7(f))(toAff);
  };

  // output/Web.DOM.DOMTokenList/foreign.js
  function toggleForce(list) {
    return function(token) {
      return function(force2) {
        return function() {
          return list.toggle(token, force2);
        };
      };
    };
  }

  // output/Web.DOM.Document/foreign.js
  var getEffProp3 = function(name15) {
    return function(doc) {
      return function() {
        return doc[name15];
      };
    };
  };
  var url = getEffProp3("URL");
  var documentURI = getEffProp3("documentURI");
  var origin2 = getEffProp3("origin");
  var compatMode = getEffProp3("compatMode");
  var characterSet = getEffProp3("characterSet");
  var contentType = getEffProp3("contentType");
  var _documentElement2 = getEffProp3("documentElement");

  // output/Web.DOM.NonElementParentNode/foreign.js
  function _getElementById(id4) {
    return function(node) {
      return function() {
        return node.getElementById(id4);
      };
    };
  }

  // output/Web.DOM.NonElementParentNode/index.js
  var map44 = /* @__PURE__ */ map(functorEffect);
  var getElementById = function(eid) {
    var $2 = map44(toMaybe);
    var $3 = _getElementById(eid);
    return function($4) {
      return $2($3($4));
    };
  };

  // output/Halogen.Utilities/index.js
  var $$void12 = /* @__PURE__ */ $$void(functorEffect);
  var setClassName2 = function(dictMonadEffect) {
    var liftEffect10 = liftEffect(dictMonadEffect);
    return function(elem4) {
      return function(className2) {
        return function(classValue) {
          return liftEffect10(function __do2() {
            var classList2 = classList(elem4)();
            return $$void12(toggleForce(classList2)(className2)(classValue))();
          });
        };
      };
    };
  };
  var navigator_clipboard_text = /* @__PURE__ */ toAffE(navigator_clipboard_text_);
  var classNames = /* @__PURE__ */ function() {
    var $12 = map(functorArray)(ClassName);
    return function($13) {
      return classes($12($13));
    };
  }();

  // output/Control.Monad.State/index.js
  var unwrap12 = /* @__PURE__ */ unwrap();
  var runState = function(v) {
    return function($18) {
      return unwrap12(v($18));
    };
  };

  // output/Data.MultiMap/index.js
  var union4 = function(dictOrd) {
    var threeCaseUnion2 = threeCaseUnion(dictOrd);
    return function(dictOrd1) {
      var union1 = union3(dictOrd1);
      return function(m1) {
        return function(m2) {
          return threeCaseUnion2(function(s) {
            return s;
          })(function(s) {
            return s;
          })(union1)(m1)(m2);
        };
      };
    };
  };
  var insert9 = function(dictOrd) {
    var lookup20 = lookup2(dictOrd);
    var insert16 = insert(dictOrd);
    return function(dictOrd1) {
      var insert22 = insert7(dictOrd1);
      return function(k) {
        return function(v) {
          return function(m) {
            var v1 = lookup20(k)(m);
            if (v1 instanceof Nothing) {
              return insert16(k)(insert22(v)(empty7))(m);
            }
            ;
            if (v1 instanceof Just) {
              return insert16(k)(insert22(v)(v1.value0))(m);
            }
            ;
            throw new Error("Failed pattern match at Data.MultiMap (line 16, column 16 - line 18, column 46): " + [v1.constructor.name]);
          };
        };
      };
    };
  };
  var empty9 = empty2;

  // output/Language.Pantograph.Generic.Unification/index.js
  var eq5 = /* @__PURE__ */ eq(eqMetaVar);
  var lookup15 = /* @__PURE__ */ lookup2(ordMetaVar);
  var monadStateT2 = /* @__PURE__ */ monadStateT(monadIdentity);
  var bind23 = /* @__PURE__ */ bind(/* @__PURE__ */ bindExceptT(monadStateT2));
  var monadStateStateT2 = /* @__PURE__ */ monadStateStateT(monadIdentity);
  var get6 = /* @__PURE__ */ get(/* @__PURE__ */ monadStateExceptT(monadStateStateT2));
  var applicativeExceptT2 = /* @__PURE__ */ applicativeExceptT(monadStateT2);
  var pure17 = /* @__PURE__ */ pure(applicativeExceptT2);
  var lift4 = /* @__PURE__ */ lift(monadTransExceptT)(monadStateT2);
  var modify6 = /* @__PURE__ */ modify3(monadStateStateT2);
  var insert10 = /* @__PURE__ */ insert(ordMetaVar);
  var sequence4 = /* @__PURE__ */ sequence(traversableArray);
  var sequence13 = /* @__PURE__ */ sequence4(applicativeExceptT2);
  var throwError4 = /* @__PURE__ */ throwError(/* @__PURE__ */ monadThrowExceptT(monadStateT2));
  var insert13 = /* @__PURE__ */ insert9(ordMetaVar);
  var foldl9 = /* @__PURE__ */ foldl(foldableArray);
  var lift22 = /* @__PURE__ */ lift2(applyMaybe);
  var union5 = /* @__PURE__ */ union4(ordMetaVar);
  var bind111 = /* @__PURE__ */ bind(/* @__PURE__ */ bindStateT(monadIdentity));
  var get1 = /* @__PURE__ */ get(monadStateStateT2);
  var applicativeStateT2 = /* @__PURE__ */ applicativeStateT(monadIdentity);
  var pure18 = /* @__PURE__ */ pure(applicativeStateT2);
  var sequence22 = /* @__PURE__ */ sequence4(applicativeStateT2);
  var map311 = /* @__PURE__ */ map(functorArray);
  var sequence32 = /* @__PURE__ */ sequence(traversableList)(applicativeStateT2);
  var map45 = /* @__PURE__ */ map(functorList);
  var toUnfoldable6 = /* @__PURE__ */ toUnfoldable2(unfoldableList);
  var union$prime2 = /* @__PURE__ */ union$prime(ordMetaVar);
  var map53 = /* @__PURE__ */ map(functorMap);
  var bind24 = /* @__PURE__ */ bind(bindMaybe);
  var pure24 = /* @__PURE__ */ pure(applicativeMaybe);
  var fromFoldable9 = /* @__PURE__ */ fromFoldable(foldableArray);
  var fromFoldable12 = /* @__PURE__ */ fromFoldable3(foldableList);
  var occurs = function(dictIsExprLabel) {
    return function(x) {
      return function(e) {
        if (e.value0 instanceof MV && e.value1.length === 0) {
          return eq5(e.value0.value0)(x);
        }
        ;
        return any2(occurs(dictIsExprLabel)(x))(e.value1);
      };
    };
  };
  var recursiveOccurs = function(dictIsExprLabel) {
    var occurs1 = occurs(dictIsExprLabel);
    return function(sub3) {
      return function(x) {
        return function(e) {
          var v = function(v1) {
            if (e.value0 instanceof MV && e.value1.length === 0) {
              return eq5(e.value0.value0)(x);
            }
            ;
            return any2(occurs1(x))(e.value1);
          };
          if (e.value0 instanceof MV && e.value1.length === 0) {
            var $169 = lookup15(e.value0.value0)(sub3);
            if ($169 instanceof Just) {
              return recursiveOccurs(dictIsExprLabel)(sub3)(x)($169.value0);
            }
            ;
            return v(true);
          }
          ;
          return v(true);
        };
      };
    };
  };
  var unifyFImpl = function(dictIsExprLabel) {
    var recursiveOccurs1 = recursiveOccurs(dictIsExprLabel);
    var eq15 = eq(dictIsExprLabel.Ord1().Eq0());
    return function(v) {
      return function(v1) {
        return bind23(get6)(function(sub3) {
          var v2 = new Tuple(v.value0, v1.value0);
          var v3 = function(v4) {
            var v5 = function(v6) {
              if (v2.value0 instanceof MV && (v2.value1 instanceof MV && eq5(v2.value0.value0)(v2.value1.value0))) {
                return pure17(v);
              }
              ;
              if (v2.value0 instanceof MV && !recursiveOccurs1(sub3)(v2.value0.value0)(v1)) {
                return bind23(lift4(modify6(insert10(v2.value0.value0)(v1))))(function() {
                  return pure17(v1);
                });
              }
              ;
              if (v2.value1 instanceof MV) {
                return unifyFImpl(dictIsExprLabel)(v1)(v);
              }
              ;
              if (v2.value0 instanceof MInj && (v2.value1 instanceof MInj && eq15(v2.value0.value0)(v2.value1.value0))) {
                return bind23(sequence13(zipWith2(unifyFImpl(dictIsExprLabel))(v.value1)(v1.value1)))(function(kids$prime) {
                  return pure17(new Expr(new MInj(v2.value0.value0), kids$prime));
                });
              }
              ;
              return throwError4(unit);
            };
            if (v2.value1 instanceof MV) {
              var $194 = lookup15(v2.value1.value0)(sub3);
              if ($194 instanceof Just) {
                return unifyFImpl(dictIsExprLabel)(v)($194.value0);
              }
              ;
              return v5(true);
            }
            ;
            return v5(true);
          };
          if (v2.value0 instanceof MV) {
            var $200 = lookup15(v2.value0.value0)(sub3);
            if ($200 instanceof Just) {
              return unifyFImpl(dictIsExprLabel)($200.value0)(v1);
            }
            ;
            return v3(true);
          }
          ;
          return v3(true);
        });
      };
    };
  };
  var getMatches = function(dictIsExprLabel) {
    var Ord1 = dictIsExprLabel.Ord1();
    var ordExpr2 = ordExpr(Ord1);
    var insert22 = insert13(ordExpr2);
    var eq15 = eq(Ord1.Eq0());
    var union1 = union5(ordExpr2);
    return function(v) {
      return function(v1) {
        if (v.value0 instanceof MV) {
          return new Just(insert22(v.value0.value0)(v1)(empty9));
        }
        ;
        if (v.value0 instanceof MInj && eq15(v.value0.value0)(v1.value0)) {
          return foldl9(lift22(union1))(new Just(empty9))(zipWith2(getMatches(dictIsExprLabel))(v.value1)(v1.value1));
        }
        ;
        return Nothing.value;
      };
    };
  };
  var flattenHelperInsertVar = function(dictIsExprLabel) {
    return function(original) {
      return function(x) {
        return bind111(get1)(function(sub3) {
          var v = lookup15(x)(sub3);
          if (v instanceof Just) {
            return pure18(v.value0);
          }
          ;
          if (v instanceof Nothing) {
            return bind111(function() {
              var v1 = lookup15(x)(original);
              if (v1 instanceof Nothing) {
                return pure18(new Expr(new MV(x), []));
              }
              ;
              if (v1 instanceof Just) {
                return bind111(flattenHelper(dictIsExprLabel)(original)(v1.value0))(function(value14) {
                  return bind111(modify6(insert10(x)(value14)))(function() {
                    return pure18(value14);
                  });
                });
              }
              ;
              throw new Error("Failed pattern match at Language.Pantograph.Generic.Unification (line 159, column 22 - line 164, column 35): " + [v1.constructor.name]);
            }())(function(value14) {
              return pure18(value14);
            });
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Generic.Unification (line 156, column 5 - line 165, column 23): " + [v.constructor.name]);
        });
      };
    };
  };
  var flattenHelper = function(dictIsExprLabel) {
    return function(v) {
      return function(v1) {
        if (v1.value0 instanceof MV) {
          return flattenHelperInsertVar(dictIsExprLabel)(v)(v1.value0.value0);
        }
        ;
        return bind111(sequence22(map311(flattenHelper(dictIsExprLabel)(v))(v1.value1)))(function(kids$prime) {
          return pure18(new Expr(v1.value0, kids$prime));
        });
      };
    };
  };
  var flattenSubImpl = function(dictIsExprLabel) {
    var flattenHelperInsertVar1 = flattenHelperInsertVar(dictIsExprLabel);
    return function(original) {
      return bind111(sequence32(map45(function(v) {
        return flattenHelperInsertVar1(original)(v.value0);
      })(toUnfoldable6(original))))(function() {
        return pure18(unit);
      });
    };
  };
  var flattenSub = function(dictIsExprLabel) {
    var flattenSubImpl1 = flattenSubImpl(dictIsExprLabel);
    return function(sub3) {
      return snd(runState(flattenSubImpl1(sub3))(empty2));
    };
  };
  var runUnifyMonad = function(dictIsExprLabel) {
    var flattenSub1 = flattenSub(dictIsExprLabel);
    return function(m) {
      var v = runState(runExceptT(m))(empty2);
      if (v.value0 instanceof Left) {
        return Nothing.value;
      }
      ;
      if (v.value0 instanceof Right) {
        return new Just(new Tuple(flattenSub1(v.value1), v.value0.value0));
      }
      ;
      throw new Error("Failed pattern match at Language.Pantograph.Generic.Unification (line 224, column 5 - line 226, column 46): " + [v.value0.constructor.name]);
    };
  };
  var composeSub = function(dictIsExprLabel) {
    var subMetaExprPartially3 = subMetaExprPartially(dictIsExprLabel);
    return function(sub12) {
      return function(sub22) {
        return union$prime2(map53(subMetaExprPartially3(sub22))(sub12))(sub22);
      };
    };
  };
  var unifyLists = function(dictIsExprLabel) {
    var subMetaExprPartially3 = subMetaExprPartially(dictIsExprLabel);
    var composeSub1 = composeSub(dictIsExprLabel);
    return function(v) {
      return function(v1) {
        if (v instanceof Nil && v1 instanceof Nil) {
          return new Just(new Tuple(Nil.value, empty2));
        }
        ;
        if (v instanceof Cons && v1 instanceof Cons) {
          return bind24(unifyLists(dictIsExprLabel)(v.value1)(v1.value1))(function(v2) {
            var e1$prime = subMetaExprPartially3(v2.value1)(v.value0);
            var e2$prime = subMetaExprPartially3(v2.value1)(v1.value0);
            return bind24(unify(dictIsExprLabel)(e1$prime)(e2$prime))(function(v3) {
              return pure24(new Tuple(new Cons(v3.value0, v2.value0), composeSub1(v2.value1)(v3.value1)));
            });
          });
        }
        ;
        return bug("[unifyLists] shouldn't happen");
      };
    };
  };
  var unify = function(dictIsExprLabel) {
    var occurs1 = occurs(dictIsExprLabel);
    var eq15 = eq(dictIsExprLabel.Ord1().Eq0());
    return function(v) {
      return function(v1) {
        var v2 = new Tuple(v.value0, v1.value0);
        if (v2.value0 instanceof MV && (v2.value1 instanceof MV && eq5(v2.value0.value0)(v2.value1.value0))) {
          return new Just(new Tuple(v, empty2));
        }
        ;
        if (v2.value0 instanceof MV && !occurs1(v2.value0.value0)(v1)) {
          return new Just(new Tuple(v1, insert10(v2.value0.value0)(v1)(empty2)));
        }
        ;
        if (v2.value1 instanceof MV) {
          return unify(dictIsExprLabel)(v1)(v);
        }
        ;
        if (v2.value0 instanceof MInj && (v2.value1 instanceof MInj && eq15(v2.value0.value0)(v2.value1.value0))) {
          return bind24(unifyLists(dictIsExprLabel)(fromFoldable9(v.value1))(fromFoldable9(v1.value1)))(function(v3) {
            return pure24(new Tuple(new Expr(new MInj(v2.value0.value0), fromFoldable12(v3.value0)), v3.value1));
          });
        }
        ;
        return Nothing.value;
      };
    };
  };

  // output/Language.Pantograph.Generic.ChangeAlgebra/index.js
  var map46 = /* @__PURE__ */ map(functorRevList);
  var map115 = /* @__PURE__ */ map(functorList);
  var map212 = /* @__PURE__ */ map(functorExpr);
  var findMap3 = /* @__PURE__ */ findMap(foldableArray);
  var bind25 = /* @__PURE__ */ bind(bindMaybe);
  var fromFoldable10 = /* @__PURE__ */ fromFoldable(foldableArray);
  var map312 = /* @__PURE__ */ map(functorMaybe);
  var sequence5 = /* @__PURE__ */ sequence(traversableArray)(applicativeMaybe);
  var map47 = /* @__PURE__ */ map(functorArray);
  var pure19 = /* @__PURE__ */ pure(applicativeMaybe);
  var trace2 = /* @__PURE__ */ trace();
  var lookup16 = /* @__PURE__ */ lookup2(ordMetaVar);
  var append14 = /* @__PURE__ */ append(semigroupArray);
  var fromFoldable13 = /* @__PURE__ */ fromFoldable3(foldableList);
  var and2 = /* @__PURE__ */ and(foldableList)(heytingAlgebraBoolean);
  var map54 = /* @__PURE__ */ map(functorMap);
  var foldNonempty2 = /* @__PURE__ */ foldNonempty(foldableSet);
  var sequence14 = /* @__PURE__ */ sequence(traversableMap)(applicativeMaybe);
  var subSomeChangeLabel = function(dictIsExprLabel) {
    var subMetaExprPartially3 = subMetaExprPartially(dictIsExprLabel);
    return function(sub3) {
      var subExpr = subMetaExprPartially3(sub3);
      return function(v) {
        if (v instanceof Plus) {
          return new Plus(new Tooth(v.value0.value0, {
            left: map46(subExpr)(v.value0.value1.left),
            right: map115(subExpr)(v.value0.value1.right)
          }));
        }
        ;
        if (v instanceof Minus) {
          return new Minus(new Tooth(v.value0.value0, {
            left: map46(subExpr)(v.value0.value1.left),
            right: map115(subExpr)(v.value0.value1.right)
          }));
        }
        ;
        if (v instanceof CInj) {
          return new CInj(v.value0);
        }
        ;
        if (v instanceof Replace) {
          return new Replace(subExpr(v.value0), subExpr(v.value1));
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Generic.ChangeAlgebra (line 243, column 3 - line 247, column 57): " + [v.constructor.name]);
      };
    };
  };
  var isPostfix = function(dictEq) {
    var eq9 = eq(eqExpr(dictEq));
    return function(v) {
      return function(v1) {
        if (eq9(v)(v1)) {
          return new Just(map212(CInj.create)(v));
        }
        ;
        var splits = mapWithIndex3(function(index5) {
          return function(kid) {
            return new Tuple(take(index5)(v.value1), new Tuple(kid, drop(index5 + 1 | 0)(v.value1)));
          };
        })(v.value1);
        return findMap3(function(v2) {
          return bind25(isPostfix(dictEq)(v2.value1.value0)(v1))(function(innerCh) {
            return new Just(new Expr(new Minus(new Tooth(v.value0, {
              left: reverse3(fromFoldable10(v2.value0)),
              right: fromFoldable10(v2.value1.value1)
            })), [innerCh]));
          });
        })(splits);
      };
    };
  };
  var isMerelyASubstitution = function(dictIsExprLabel) {
    var eq9 = eq(eqExpr(eqMeta(dictIsExprLabel.Ord1().Eq0())));
    return function(v) {
      if (v.value0 instanceof CInj) {
        return all2(isMerelyASubstitution(dictIsExprLabel))(v.value1);
      }
      ;
      if (v.value0 instanceof Replace && (v.value0.value0.value0 instanceof MV && (v.value0.value0.value1.length === 0 && v.value1.length === 0))) {
        return true;
      }
      ;
      if (v.value0 instanceof Replace && (v.value1.length === 0 && eq9(v.value0.value0)(v.value0.value1))) {
        return true;
      }
      ;
      return false;
    };
  };
  var isId = function(dictIsExprLabel) {
    var eq9 = eq(eqExpr(dictIsExprLabel.Ord1().Eq0()));
    return function(v) {
      if (v.value0 instanceof CInj) {
        return all2(isId(dictIsExprLabel))(v.value1);
      }
      ;
      if (v.value0 instanceof Replace && v.value1.length === 0) {
        return eq9(v.value0.value0)(v.value0.value1);
      }
      ;
      return false;
    };
  };
  var lub = function(dictIsExprLabel) {
    var Eq0 = dictIsExprLabel.Ord1().Eq0();
    var eq9 = eq(Eq0);
    var isId1 = isId(dictIsExprLabel);
    var eq15 = eq(eqExpr(eqChangeLabel(Eq0)));
    var eq24 = eq(eqExpr(Eq0));
    var pretty7 = pretty(prettyExpr(isExprLabelChangeLabel(dictIsExprLabel)));
    return function(c1) {
      return function(c2) {
        var v = new Tuple(c1, c2);
        if (v.value0.value0 instanceof CInj && (v.value1.value0 instanceof CInj && eq9(v.value0.value0.value0)(v.value1.value0.value0))) {
          return map312(Expr.create(new CInj(v.value0.value0.value0)))(sequence5(zipWith2(lub(dictIsExprLabel))(v.value0.value1)(v.value1.value1)));
        }
        ;
        if (isId1(c1)) {
          return pure19(c2);
        }
        ;
        if (isId1(c2)) {
          return pure19(c1);
        }
        ;
        if (eq15(c1)(c2)) {
          return pure19(c1);
        }
        ;
        if (v.value0.value0 instanceof Replace && (v.value0.value1.length === 0 && (v.value1.value0 instanceof Replace && (v.value1.value1.length === 0 && eq24(v.value0.value0.value0)(v.value1.value0.value0))))) {
          return trace2("The hack to cut and paste things with metavariable links happened")(function(v1) {
            return pure19(c1);
          });
        }
        ;
        return trace2("WARNING: I think that this case probably shouldn't happen if I figured out the right way to code lub. It was: " + (pretty7(c1) + (" " + pretty7(c2))))(function(v1) {
          return Nothing.value;
        });
      };
    };
  };
  var invert = /* @__PURE__ */ map212(function(v) {
    if (v instanceof Plus) {
      return new Minus(v.value0);
    }
    ;
    if (v instanceof Minus) {
      return new Plus(v.value0);
    }
    ;
    if (v instanceof CInj) {
      return new CInj(v.value0);
    }
    ;
    if (v instanceof Replace) {
      return new Replace(v.value1, v.value0);
    }
    ;
    throw new Error("Failed pattern match at Language.Pantograph.Generic.ChangeAlgebra (line 42, column 14 - line 46, column 33): " + [v.constructor.name]);
  });
  var inject = /* @__PURE__ */ function() {
    return map212(CInj.create);
  }();
  var subSomeMetaChange = function(dictIsExprLabel) {
    var subSomeChangeLabel1 = subSomeChangeLabel(dictIsExprLabel);
    return function(sub3) {
      return function(v) {
        var v1 = function(v2) {
          return new Expr(subSomeChangeLabel1(sub3)(v.value0), map47(subSomeMetaChange(dictIsExprLabel)(sub3))(v.value1));
        };
        if (v.value0 instanceof CInj && v.value0.value0 instanceof MV) {
          var $219 = lookup16(v.value0.value0.value0)(sub3);
          if ($219 instanceof Just) {
            return inject($219.value0);
          }
          ;
          return v1(true);
        }
        ;
        return v1(true);
      };
    };
  };
  var endpoints = function(dictIsExprLabel) {
    return function(ch) {
      if (ch.value0 instanceof Plus && ch.value1.length === 1) {
        var v = endpoints(dictIsExprLabel)(ch["value1"][0]);
        return new Tuple(v.value0, unTooth(ch.value0.value0)(v.value1));
      }
      ;
      if (ch.value0 instanceof Minus && ch.value1.length === 1) {
        var v = endpoints(dictIsExprLabel)(ch["value1"][0]);
        return new Tuple(unTooth(ch.value0.value0)(v.value0), v.value1);
      }
      ;
      if (ch.value0 instanceof CInj) {
        var zippedKids = map47(endpoints(dictIsExprLabel))(ch.value1);
        var v = unzip2(zippedKids);
        return new Tuple(new Expr(ch.value0.value0, v.value0), new Expr(ch.value0.value0, v.value1));
      }
      ;
      if (ch.value0 instanceof Replace && ch.value1.length === 0) {
        return new Tuple(ch.value0.value0, ch.value0.value1);
      }
      ;
      return bug("invalid input to endpoints");
    };
  };
  var lEndpoint = function(dictIsExprLabel) {
    var $376 = endpoints(dictIsExprLabel);
    return function($377) {
      return fst($376($377));
    };
  };
  var rEndpoint = function(dictIsExprLabel) {
    var $378 = endpoints(dictIsExprLabel);
    return function($379) {
      return snd($378($379));
    };
  };
  var eliminateReplaces = function(dictIsExprLabel) {
    var eq9 = eq(dictIsExprLabel.Ord1().Eq0());
    return function(c) {
      if (c.value0 instanceof Replace && (c.value1.length === 0 && eq9(c.value0.value0.value0)(c.value0.value1.value0))) {
        return new Expr(new CInj(c.value0.value0.value0), zipWith2(function(s1) {
          return function(s2) {
            return eliminateReplaces(dictIsExprLabel)(new Expr(new Replace(s1, s2), []));
          };
        })(c.value0.value0.value1)(c.value0.value1.value1));
      }
      ;
      return new Expr(c.value0, map47(eliminateReplaces(dictIsExprLabel))(c.value1));
    };
  };
  var diff = function(dictEq) {
    var eq9 = eq(eqExpr(dictEq));
    var isPostfix1 = isPostfix(dictEq);
    var eq15 = eq(dictEq);
    return function(v) {
      return function(v1) {
        if (eq9(v)(v1)) {
          return map212(CInj.create)(v);
        }
        ;
        var v2 = isPostfix1(v)(v1);
        if (v2 instanceof Just) {
          return v2.value0;
        }
        ;
        if (v2 instanceof Nothing) {
          var v3 = isPostfix1(v1)(v);
          if (v3 instanceof Just) {
            return invert(v3.value0);
          }
          ;
          if (v3 instanceof Nothing) {
            var $273 = eq15(v.value0)(v1.value0);
            if ($273) {
              return new Expr(new CInj(v.value0), zipWith2(diff(dictEq))(v.value1)(v1.value1));
            }
            ;
            return new Expr(new Replace(v, v1), []);
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Generic.ChangeAlgebra (line 225, column 20 - line 227, column 129): " + [v3.constructor.name]);
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Generic.ChangeAlgebra (line 223, column 5 - line 227, column 129): " + [v2.constructor.name]);
      };
    };
  };
  var compose2 = function(dictIsExprLabel) {
    var Eq0 = dictIsExprLabel.Ord1().Eq0();
    var eq9 = eq(eqTooth(Eq0));
    var eq15 = eq(Eq0);
    var endpoints1 = endpoints(dictIsExprLabel);
    var eq24 = eq(eqExpr(eqChangeLabel(Eq0)));
    return function(c1) {
      return function(c2) {
        var v = new Tuple(c1, c2);
        if (v.value0.value0 instanceof Plus && (v.value0.value1.length === 1 && (v.value1.value0 instanceof Minus && (v.value1.value1.length === 1 && eq9(v.value0.value0.value0)(v.value1.value0.value0))))) {
          return compose2(dictIsExprLabel)(v["value0"]["value1"][0])(v["value1"]["value1"][0]);
        }
        ;
        if (v.value0.value0 instanceof Minus && (v.value0.value1.length === 1 && (v.value1.value0 instanceof Plus && (v.value1.value1.length === 1 && eq9(v.value0.value0.value0)(v.value1.value0.value0))))) {
          return new Expr(new CInj(v.value0.value0.value0.value0), append14(fromFoldable13(map115(map212(CInj.create))(unreverse(v.value0.value0.value0.value1.left))))(append14([compose2(dictIsExprLabel)(v["value0"]["value1"][0])(v["value1"]["value1"][0])])(fromFoldable13(map115(map212(CInj.create))(v.value0.value0.value0.value1.right)))));
        }
        ;
        if (v.value1.value0 instanceof Plus && v.value1.value1.length === 1) {
          return new Expr(new Plus(v.value1.value0.value0), [compose2(dictIsExprLabel)(c1)(v["value1"]["value1"][0])]);
        }
        ;
        if (v.value0.value0 instanceof Minus && v.value0.value1.length === 1) {
          return new Expr(new Minus(v.value0.value0.value0), [compose2(dictIsExprLabel)(v["value0"]["value1"][0])(c2)]);
        }
        ;
        var v1 = function(v2) {
          var v3 = function(v4) {
            if (v.value0.value0 instanceof CInj && (v.value1.value0 instanceof CInj && eq15(v.value0.value0.value0)(v.value1.value0.value0))) {
              return new Expr(new CInj(v.value0.value0.value0), zipWith2(compose2(dictIsExprLabel))(v.value0.value1)(v.value1.value1));
            }
            ;
            var v5 = endpoints1(c1);
            var v6 = endpoints1(c2);
            return new Expr(new Replace(v5.value0, v6.value1), []);
          };
          if (v.value0.value0 instanceof CInj && (v.value1.value0 instanceof Minus && v.value1.value1.length === 1)) {
            var $332 = eq15(v.value1.value0.value0.value0)(v.value0.value0.value0);
            if ($332) {
              var $333 = fromJust$prime("compose")(zipAt(leftLength(v.value1.value0.value0.value1))(fromFoldable10(v.value0.value1)));
              var $334 = and2(zipWith(function(e) {
                return function(c) {
                  return eq24(inject(e))(c);
                };
              })(unpath(v.value1.value0.value0.value1))(unpath($333.value0)));
              if ($334) {
                return new Expr(new Minus(v.value1.value0.value0), [compose2(dictIsExprLabel)($333.value1)(v["value1"]["value1"][0])]);
              }
              ;
              return v3(true);
            }
            ;
            return v3(true);
          }
          ;
          return v3(true);
        };
        if (v.value0.value0 instanceof Plus && (v.value0.value1.length === 1 && v.value1.value0 instanceof CInj)) {
          var $349 = eq15(v.value0.value0.value0.value0)(v.value1.value0.value0);
          if ($349) {
            var $350 = fromJust$prime("compose")(zipAt(leftLength(v.value0.value0.value0.value1))(fromFoldable10(v.value1.value1)));
            var $351 = and2(zipWith(function(e) {
              return function(c) {
                return eq24(inject(e))(c);
              };
            })(unpath(v.value0.value0.value0.value1))(unpath($350.value0)));
            if ($351) {
              return new Expr(new Plus(v.value0.value0.value0), [compose2(dictIsExprLabel)(v["value0"]["value1"][0])($350.value1)]);
            }
            ;
            return v1(true);
          }
          ;
          return v1(true);
        }
        ;
        return v1(true);
      };
    };
  };
  var doOperation = function(dictIsExprLabel) {
    var isExprLabelChangeLabel2 = isExprLabelChangeLabel(dictIsExprLabel);
    var getMatches2 = getMatches(isExprLabelChangeLabel2);
    var lub1 = lub(dictIsExprLabel);
    var map69 = map31(ordMaybe(ordExpr(ordChangeLabel(dictIsExprLabel.Ord1()))));
    var subMetaExpr2 = subMetaExpr(isExprLabelChangeLabel2);
    var compose22 = compose2(dictIsExprLabel);
    return function(c1) {
      return function(c2) {
        return bind25(getMatches2(c2)(c1))(function(matches2) {
          var sub3 = map54(foldNonempty2(function(c11) {
            return function(c21) {
              return bind25(c11)(function(x) {
                return bind25(c21)(function(y) {
                  return lub1(x)(y);
                });
              });
            };
          }))(map54(map69(Just.create))(matches2));
          return bind25(sequence14(sub3))(function(sub22) {
            var subc2 = subMetaExpr2(sub22)(c2);
            var result = new Tuple(sub22, compose22(invert(c1))(subc2));
            return pure19(result);
          });
        });
      };
    };
  };

  // output/Data.Argonaut.Parser/foreign.js
  function _jsonParser(fail2, succ2, s) {
    try {
      return succ2(JSON.parse(s));
    } catch (e) {
      return fail2(e.message);
    }
  }

  // output/Data.Argonaut.Parser/index.js
  var jsonParser = function(j) {
    return _jsonParser(Left.create, Right.create, j);
  };

  // output/Data.Map/index.js
  var keys3 = /* @__PURE__ */ function() {
    var $38 = $$void(functorMap);
    return function($39) {
      return fromMap($38($39));
    };
  }();

  // output/Language.Pantograph.Generic.Grammar/index.js
  var genericShowConstructor2 = /* @__PURE__ */ genericShowConstructor(genericShowArgsNoArguments);
  var SortStringIsSymbol = {
    reflectSymbol: function() {
      return "SortString";
    }
  };
  var SortIntIsSymbol = {
    reflectSymbol: function() {
      return "SortInt";
    }
  };
  var show6 = /* @__PURE__ */ show(showInt);
  var DataStringIsSymbol = {
    reflectSymbol: function() {
      return "DataString";
    }
  };
  var DataIntIsSymbol = {
    reflectSymbol: function() {
      return "DataInt";
    }
  };
  var SInjIsSymbol = {
    reflectSymbol: function() {
      return "SInj";
    }
  };
  var TypeOfLabelIsSymbol = {
    reflectSymbol: function() {
      return "TypeOfLabel";
    }
  };
  var DataLabelIsSymbol = {
    reflectSymbol: function() {
      return "DataLabel";
    }
  };
  var showMap2 = /* @__PURE__ */ showMap(showMetaVar);
  var DerivLabelIsSymbol = {
    reflectSymbol: function() {
      return "DerivLabel";
    }
  };
  var DerivLiteralIsSymbol = {
    reflectSymbol: function() {
      return "DerivLiteral";
    }
  };
  var map48 = /* @__PURE__ */ map(functorArray);
  var map116 = /* @__PURE__ */ map(functorExpr);
  var compare6 = /* @__PURE__ */ compare(ordString);
  var compare13 = /* @__PURE__ */ compare(ordInt);
  var intercalate9 = /* @__PURE__ */ intercalate(foldableList)(monoidString);
  var map49 = /* @__PURE__ */ map(functorList);
  var pretty3 = /* @__PURE__ */ pretty(prettyMetaVar);
  var toUnfoldable7 = /* @__PURE__ */ toUnfoldable2(unfoldableList);
  var eqMap2 = /* @__PURE__ */ eqMap(eqMetaVar);
  var ordMap2 = /* @__PURE__ */ ordMap(ordMetaVar);
  var map55 = /* @__PURE__ */ map(functorMap);
  var mapFlipped5 = /* @__PURE__ */ mapFlipped(functorList);
  var fromFoldable11 = /* @__PURE__ */ fromFoldable3(foldableList);
  var encodeJson2 = /* @__PURE__ */ encodeJson(/* @__PURE__ */ encodeJsonArray(encodeJsonInt));
  var show12 = /* @__PURE__ */ show(/* @__PURE__ */ showArray(showString));
  var fromFoldable14 = /* @__PURE__ */ fromFoldable6(foldableArray)(ordMetaVar);
  var fromFoldable22 = /* @__PURE__ */ fromFoldable2(ordMetaVar);
  var fromFoldable32 = /* @__PURE__ */ fromFoldable22(foldableSet);
  var ordTuple3 = /* @__PURE__ */ ordTuple(ordMetaVar);
  var fromFoldable42 = /* @__PURE__ */ fromFoldable22(foldableArray);
  var lmap4 = /* @__PURE__ */ lmap(bifunctorTuple);
  var equal2 = /* @__PURE__ */ equal(/* @__PURE__ */ eqSet(eqMetaVar));
  var prettyTuple2 = /* @__PURE__ */ prettyTuple(prettyString);
  var empty10 = /* @__PURE__ */ empty(plusMaybe);
  var pure20 = /* @__PURE__ */ pure(applicativeMaybe);
  var toUnfoldable12 = /* @__PURE__ */ toUnfoldable4(unfoldableArray);
  var map63 = /* @__PURE__ */ map31(/* @__PURE__ */ ordTuple3(ordMetaVar));
  var lookup$prime2 = /* @__PURE__ */ lookup$prime(ordMetaVar);
  var union6 = /* @__PURE__ */ union(ordMetaVar);
  var unions2 = /* @__PURE__ */ unions(ordMetaVar);
  var unions1 = /* @__PURE__ */ unions2(foldableArray);
  var map72 = /* @__PURE__ */ map(functorRevList);
  var unions22 = /* @__PURE__ */ unions2(foldableRevList);
  var unions3 = /* @__PURE__ */ unions2(foldableList);
  var show22 = /* @__PURE__ */ show(showJsonDecodeError);
  var fromFoldable52 = /* @__PURE__ */ fromFoldable(foldableArray);
  var reversePath2 = /* @__PURE__ */ reversePath();
  var toDownPath2 = /* @__PURE__ */ toDownPath(reflectPathDirUp);
  var monadStateT3 = /* @__PURE__ */ monadStateT(monadIdentity);
  var bind26 = /* @__PURE__ */ bind(/* @__PURE__ */ bindExceptT(monadStateT3));
  var applicativeExceptT3 = /* @__PURE__ */ applicativeExceptT(monadStateT3);
  var sequence6 = /* @__PURE__ */ sequence(traversableArray)(applicativeExceptT3);
  var pure110 = /* @__PURE__ */ pure(applicativeExceptT3);
  var map82 = /* @__PURE__ */ map(functorMaybe);
  var sequence15 = /* @__PURE__ */ sequence(traversableRevList)(applicativeExceptT3);
  var sequence23 = /* @__PURE__ */ sequence(traversableList)(applicativeExceptT3);
  var append15 = /* @__PURE__ */ append(semigroupList);
  var map102 = /* @__PURE__ */ map(functorPath2);
  var map117 = /* @__PURE__ */ map(functorTooth);
  var map122 = /* @__PURE__ */ map(functorZipper);
  var bind112 = /* @__PURE__ */ bind(bindMaybe);
  var fromFoldable62 = /* @__PURE__ */ fromFoldable(foldableList);
  var fromFoldable72 = /* @__PURE__ */ fromFoldable(foldableRevList);
  var SortString = /* @__PURE__ */ function() {
    function SortString2() {
    }
    ;
    SortString2.value = new SortString2();
    return SortString2;
  }();
  var SortInt = /* @__PURE__ */ function() {
    function SortInt2() {
    }
    ;
    SortInt2.value = new SortInt2();
    return SortInt2;
  }();
  var DataString = /* @__PURE__ */ function() {
    function DataString2(value0) {
      this.value0 = value0;
    }
    ;
    DataString2.create = function(value0) {
      return new DataString2(value0);
    };
    return DataString2;
  }();
  var DataInt = /* @__PURE__ */ function() {
    function DataInt2(value0) {
      this.value0 = value0;
    }
    ;
    DataInt2.create = function(value0) {
      return new DataInt2(value0);
    };
    return DataInt2;
  }();
  var SInj = /* @__PURE__ */ function() {
    function SInj2(value0) {
      this.value0 = value0;
    }
    ;
    SInj2.create = function(value0) {
      return new SInj2(value0);
    };
    return SInj2;
  }();
  var TypeOfLabel = /* @__PURE__ */ function() {
    function TypeOfLabel2(value0) {
      this.value0 = value0;
    }
    ;
    TypeOfLabel2.create = function(value0) {
      return new TypeOfLabel2(value0);
    };
    return TypeOfLabel2;
  }();
  var DataLabel = /* @__PURE__ */ function() {
    function DataLabel2(value0) {
      this.value0 = value0;
    }
    ;
    DataLabel2.create = function(value0) {
      return new DataLabel2(value0);
    };
    return DataLabel2;
  }();
  var Rule = /* @__PURE__ */ function() {
    function Rule2(value0, value14, value23) {
      this.value0 = value0;
      this.value1 = value14;
      this.value2 = value23;
    }
    ;
    Rule2.create = function(value0) {
      return function(value14) {
        return function(value23) {
          return new Rule2(value0, value14, value23);
        };
      };
    };
    return Rule2;
  }();
  var Yes = /* @__PURE__ */ function() {
    function Yes2(value0) {
      this.value0 = value0;
    }
    ;
    Yes2.create = function(value0) {
      return new Yes2(value0);
    };
    return Yes2;
  }();
  var No = /* @__PURE__ */ function() {
    function No2() {
    }
    ;
    No2.value = new No2();
    return No2;
  }();
  var DerivLabel = /* @__PURE__ */ function() {
    function DerivLabel2(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    DerivLabel2.create = function(value0) {
      return function(value14) {
        return new DerivLabel2(value0, value14);
      };
    };
    return DerivLabel2;
  }();
  var DerivLiteral = /* @__PURE__ */ function() {
    function DerivLiteral2(value0) {
      this.value0 = value0;
    }
    ;
    DerivLiteral2.create = function(value0) {
      return new DerivLiteral2(value0);
    };
    return DerivLiteral2;
  }();
  var showAsExprLabel = function(dictShow) {
    return dictShow;
  };
  var prettyAsExprLabel = function(dictPretty) {
    return dictPretty;
  };
  var ordAsExprLabel = function(dictOrd) {
    return dictOrd;
  };
  var genericSortType_ = {
    to: function(x) {
      if (x instanceof Inl) {
        return SortString.value;
      }
      ;
      if (x instanceof Inr) {
        return SortInt.value;
      }
      ;
      throw new Error("Failed pattern match at Language.Pantograph.Generic.Grammar (line 278, column 1 - line 278, column 35): " + [x.constructor.name]);
    },
    from: function(x) {
      if (x instanceof SortString) {
        return new Inl(NoArguments.value);
      }
      ;
      if (x instanceof SortInt) {
        return new Inr(NoArguments.value);
      }
      ;
      throw new Error("Failed pattern match at Language.Pantograph.Generic.Grammar (line 278, column 1 - line 278, column 35): " + [x.constructor.name]);
    }
  };
  var genericShow5 = /* @__PURE__ */ genericShow(genericSortType_)(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor2(SortStringIsSymbol))(/* @__PURE__ */ genericShowConstructor2(SortIntIsSymbol)));
  var showSortType = {
    show: function(x) {
      return genericShow5(x);
    }
  };
  var show32 = /* @__PURE__ */ show(showSortType);
  var prettySortLabel = function(dictPretty) {
    var pretty13 = pretty(dictPretty);
    return {
      pretty: function(v) {
        if (v instanceof SInj) {
          return pretty13(v.value0);
        }
        ;
        if (v instanceof TypeOfLabel) {
          return "TypeOfSort" + show32(v.value0);
        }
        ;
        if (v instanceof DataLabel && v.value0 instanceof DataString) {
          return v.value0.value0;
        }
        ;
        if (v instanceof DataLabel && v.value0 instanceof DataInt) {
          return show6(v.value0.value0);
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Generic.Grammar (line 337, column 1 - line 341, column 42): " + [v.constructor.name]);
      }
    };
  };
  var genericSortLabel_ = {
    to: function(x) {
      if (x instanceof Inl) {
        return new SInj(x.value0);
      }
      ;
      if (x instanceof Inr && x.value0 instanceof Inl) {
        return new TypeOfLabel(x.value0.value0);
      }
      ;
      if (x instanceof Inr && x.value0 instanceof Inr) {
        return new DataLabel(x.value0.value0);
      }
      ;
      throw new Error("Failed pattern match at Language.Pantograph.Generic.Grammar (line 303, column 1 - line 303, column 40): " + [x.constructor.name]);
    },
    from: function(x) {
      if (x instanceof SInj) {
        return new Inl(x.value0);
      }
      ;
      if (x instanceof TypeOfLabel) {
        return new Inr(new Inl(x.value0));
      }
      ;
      if (x instanceof DataLabel) {
        return new Inr(new Inr(x.value0));
      }
      ;
      throw new Error("Failed pattern match at Language.Pantograph.Generic.Grammar (line 303, column 1 - line 303, column 40): " + [x.constructor.name]);
    }
  };
  var genericShow12 = /* @__PURE__ */ genericShow(genericSortLabel_);
  var genericSortData_ = {
    to: function(x) {
      if (x instanceof Inl) {
        return new DataString(x.value0);
      }
      ;
      if (x instanceof Inr) {
        return new DataInt(x.value0);
      }
      ;
      throw new Error("Failed pattern match at Language.Pantograph.Generic.Grammar (line 286, column 1 - line 286, column 35): " + [x.constructor.name]);
    },
    from: function(x) {
      if (x instanceof DataString) {
        return new Inl(x.value0);
      }
      ;
      if (x instanceof DataInt) {
        return new Inr(x.value0);
      }
      ;
      throw new Error("Failed pattern match at Language.Pantograph.Generic.Grammar (line 286, column 1 - line 286, column 35): " + [x.constructor.name]);
    }
  };
  var genericShow22 = /* @__PURE__ */ genericShow(genericSortData_)(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor(/* @__PURE__ */ genericShowArgsArgument(showString))(DataStringIsSymbol))(/* @__PURE__ */ genericShowConstructor(/* @__PURE__ */ genericShowArgsArgument(showInt))(DataIntIsSymbol)));
  var genericEncodeJson2 = /* @__PURE__ */ genericEncodeJson(genericSortData_)(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(DataStringIsSymbol)(/* @__PURE__ */ encodeRepArgsArgument(encodeJsonJString)))(/* @__PURE__ */ encodeRepConstructor(DataIntIsSymbol)(/* @__PURE__ */ encodeRepArgsArgument(encodeJsonInt))));
  var genericDecodeJson2 = /* @__PURE__ */ genericDecodeJson(genericSortData_)(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorArg(DataStringIsSymbol)(decodeJsonString))(/* @__PURE__ */ decodeRepConstructorArg(DataIntIsSymbol)(decodeJsonInt)));
  var showSortData = {
    show: function(x) {
      return genericShow22(x);
    }
  };
  var genericShowConstructor1 = /* @__PURE__ */ genericShowConstructor(/* @__PURE__ */ genericShowArgsArgument(showSortData));
  var genericShowSum3 = /* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor(/* @__PURE__ */ genericShowArgsArgument(showSortType))(TypeOfLabelIsSymbol))(/* @__PURE__ */ genericShowConstructor1(DataLabelIsSymbol));
  var genericShowConstructor22 = /* @__PURE__ */ genericShowConstructor1(DerivLiteralIsSymbol);
  var showSortLabel = function(dictShow) {
    var genericShow43 = genericShow12(genericShowSum(genericShowConstructor(genericShowArgsArgument(dictShow))(SInjIsSymbol))(genericShowSum3));
    return {
      show: function(x) {
        return genericShow43(x);
      }
    };
  };
  var genericDerivLabel_ = {
    to: function(x) {
      if (x instanceof Inl) {
        return new DerivLabel(x.value0.value0, x.value0.value1);
      }
      ;
      if (x instanceof Inr) {
        return new DerivLiteral(x.value0);
      }
      ;
      throw new Error("Failed pattern match at Language.Pantograph.Generic.Grammar (line 188, column 1 - line 188, column 43): " + [x.constructor.name]);
    },
    from: function(x) {
      if (x instanceof DerivLabel) {
        return new Inl(new Product(x.value0, x.value1));
      }
      ;
      if (x instanceof DerivLiteral) {
        return new Inr(x.value0);
      }
      ;
      throw new Error("Failed pattern match at Language.Pantograph.Generic.Grammar (line 188, column 1 - line 188, column 43): " + [x.constructor.name]);
    }
  };
  var genericShow32 = /* @__PURE__ */ genericShow(genericDerivLabel_);
  var showDerivLabel = function(dictShow) {
    var genericShowArgsArgument2 = genericShowArgsArgument(showMap2(showExpr(showMeta(showSortLabel(dictShow)))));
    return function(dictShow1) {
      var genericShow43 = genericShow32(genericShowSum(genericShowConstructor(genericShowArgsProduct(genericShowArgsArgument(dictShow1))(genericShowArgsArgument2))(DerivLabelIsSymbol))(genericShowConstructor22));
      return {
        show: function(x) {
          return genericShow43(x);
        }
      };
    };
  };
  var eqSortType = {
    eq: function(x) {
      return function(y) {
        if (x instanceof SortString && y instanceof SortString) {
          return true;
        }
        ;
        if (x instanceof SortInt && y instanceof SortInt) {
          return true;
        }
        ;
        return false;
      };
    }
  };
  var eq22 = /* @__PURE__ */ eq(eqSortType);
  var ordSortType = {
    compare: function(x) {
      return function(y) {
        if (x instanceof SortString && y instanceof SortString) {
          return EQ.value;
        }
        ;
        if (x instanceof SortString) {
          return LT.value;
        }
        ;
        if (y instanceof SortString) {
          return GT.value;
        }
        ;
        if (x instanceof SortInt && y instanceof SortInt) {
          return EQ.value;
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Generic.Grammar (line 0, column 0 - line 0, column 0): " + [x.constructor.name, y.constructor.name]);
      };
    },
    Eq0: function() {
      return eqSortType;
    }
  };
  var compare22 = /* @__PURE__ */ compare(ordSortType);
  var eqSortData = {
    eq: function(x) {
      return function(y) {
        if (x instanceof DataString && y instanceof DataString) {
          return x.value0 === y.value0;
        }
        ;
        if (x instanceof DataInt && y instanceof DataInt) {
          return x.value0 === y.value0;
        }
        ;
        return false;
      };
    }
  };
  var eq32 = /* @__PURE__ */ eq(eqSortData);
  var eqSortLabel = function(dictEq) {
    var eq43 = eq(dictEq);
    return {
      eq: function(x) {
        return function(y) {
          if (x instanceof SInj && y instanceof SInj) {
            return eq43(x.value0)(y.value0);
          }
          ;
          if (x instanceof TypeOfLabel && y instanceof TypeOfLabel) {
            return eq22(x.value0)(y.value0);
          }
          ;
          if (x instanceof DataLabel && y instanceof DataLabel) {
            return eq32(x.value0)(y.value0);
          }
          ;
          return false;
        };
      }
    };
  };
  var ordSortData = {
    compare: function(x) {
      return function(y) {
        if (x instanceof DataString && y instanceof DataString) {
          return compare6(x.value0)(y.value0);
        }
        ;
        if (x instanceof DataString) {
          return LT.value;
        }
        ;
        if (y instanceof DataString) {
          return GT.value;
        }
        ;
        if (x instanceof DataInt && y instanceof DataInt) {
          return compare13(x.value0)(y.value0);
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Generic.Grammar (line 0, column 0 - line 0, column 0): " + [x.constructor.name, y.constructor.name]);
      };
    },
    Eq0: function() {
      return eqSortData;
    }
  };
  var compare32 = /* @__PURE__ */ compare(ordSortData);
  var ordSortLabel = function(dictOrd) {
    var compare42 = compare(dictOrd);
    var eqSortLabel1 = eqSortLabel(dictOrd.Eq0());
    return {
      compare: function(x) {
        return function(y) {
          if (x instanceof SInj && y instanceof SInj) {
            return compare42(x.value0)(y.value0);
          }
          ;
          if (x instanceof SInj) {
            return LT.value;
          }
          ;
          if (y instanceof SInj) {
            return GT.value;
          }
          ;
          if (x instanceof TypeOfLabel && y instanceof TypeOfLabel) {
            return compare22(x.value0)(y.value0);
          }
          ;
          if (x instanceof TypeOfLabel) {
            return LT.value;
          }
          ;
          if (y instanceof TypeOfLabel) {
            return GT.value;
          }
          ;
          if (x instanceof DataLabel && y instanceof DataLabel) {
            return compare32(x.value0)(y.value0);
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Generic.Grammar (line 0, column 0 - line 0, column 0): " + [x.constructor.name, y.constructor.name]);
        };
      },
      Eq0: function() {
        return eqSortLabel1;
      }
    };
  };
  var isExprLabelSortLabel = function(dictIsExprLabel) {
    var prettyExprF$prime_unsafe2 = prettyExprF$prime_unsafe(dictIsExprLabel)();
    var expectedKidsCount2 = expectedKidsCount(dictIsExprLabel);
    var Ord1 = dictIsExprLabel.Ord1();
    var eqSortLabel1 = eqSortLabel(Ord1.Eq0());
    var ordSortLabel1 = ordSortLabel(Ord1);
    var showSortLabel1 = showSortLabel(dictIsExprLabel.Show2());
    var prettySortLabel1 = prettySortLabel(dictIsExprLabel.Pretty3());
    return {
      "prettyExprF'_unsafe": function() {
        return function(v) {
          if (v.value0 instanceof SInj) {
            return prettyExprF$prime_unsafe2(new Tuple(v.value0.value0, v.value1));
          }
          ;
          if (v.value0 instanceof TypeOfLabel && v.value1.length === 1) {
            return show32(v.value0.value0) + ("(" + (v["value1"][0] + ")"));
          }
          ;
          if (v.value0 instanceof DataLabel && (v.value0.value0 instanceof DataString && v.value1.length === 0)) {
            return v.value0.value0.value0;
          }
          ;
          if (v.value0 instanceof DataLabel && (v.value0.value0 instanceof DataInt && v.value1.length === 0)) {
            return show6(v.value0.value0.value0);
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Generic.Grammar (line 344, column 25 - line 348, column 42): " + [v.constructor.name]);
        };
      },
      expectedKidsCount: function(v) {
        if (v instanceof SInj) {
          return expectedKidsCount2(v.value0);
        }
        ;
        if (v instanceof TypeOfLabel) {
          return 1;
        }
        ;
        if (v instanceof DataLabel) {
          return 0;
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Generic.Grammar (line 350, column 23 - line 353, column 21): " + [v.constructor.name]);
      },
      Eq0: function() {
        return eqSortLabel1;
      },
      Ord1: function() {
        return ordSortLabel1;
      },
      Show2: function() {
        return showSortLabel1;
      },
      Pretty3: function() {
        return prettySortLabel1;
      }
    };
  };
  var prettyDerivLabel = function(dictIsExprLabel) {
    var pretty13 = pretty(prettyExpr(isExprLabelMeta(isExprLabelSortLabel(dictIsExprLabel))));
    return function(dictPretty) {
      var pretty23 = pretty(dictPretty);
      return {
        pretty: function(v) {
          if (v instanceof DerivLabel) {
            return pretty23(v.value0) + ("(" + (intercalate9(", ")(map49(function(v1) {
              return pretty3(v1.value0) + (" : " + pretty13(v1.value1));
            })(toUnfoldable7(v.value1))) + ")"));
          }
          ;
          if (v instanceof DerivLiteral && v.value0 instanceof DataString) {
            return v.value0.value0;
          }
          ;
          if (v instanceof DerivLiteral && v.value0 instanceof DataInt) {
            return show6(v.value0.value0);
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Generic.Grammar (line 193, column 1 - line 197, column 45): " + [v.constructor.name]);
        }
      };
    };
  };
  var eqDerivLabel = function(dictEq) {
    var eq43 = eq(eqMap2(eqExpr(eqMeta(eqSortLabel(dictEq)))));
    return function(dictEq1) {
      var eq53 = eq(dictEq1);
      return {
        eq: function(x) {
          return function(y) {
            if (x instanceof DerivLabel && y instanceof DerivLabel) {
              return eq53(x.value0)(y.value0) && eq43(x.value1)(y.value1);
            }
            ;
            if (x instanceof DerivLiteral && y instanceof DerivLiteral) {
              return eq32(x.value0)(y.value0);
            }
            ;
            return false;
          };
        }
      };
    };
  };
  var ordDerivLabel = function(dictOrd) {
    var compare42 = compare(ordMap2(ordExpr(ordMeta(ordSortLabel(dictOrd)))));
    var eqDerivLabel1 = eqDerivLabel(dictOrd.Eq0());
    return function(dictOrd1) {
      var compare52 = compare(dictOrd1);
      var eqDerivLabel2 = eqDerivLabel1(dictOrd1.Eq0());
      return {
        compare: function(x) {
          return function(y) {
            if (x instanceof DerivLabel && y instanceof DerivLabel) {
              var v = compare52(x.value0)(y.value0);
              if (v instanceof LT) {
                return LT.value;
              }
              ;
              if (v instanceof GT) {
                return GT.value;
              }
              ;
              return compare42(x.value1)(y.value1);
            }
            ;
            if (x instanceof DerivLabel) {
              return LT.value;
            }
            ;
            if (y instanceof DerivLabel) {
              return GT.value;
            }
            ;
            if (x instanceof DerivLiteral && y instanceof DerivLiteral) {
              return compare32(x.value0)(y.value0);
            }
            ;
            throw new Error("Failed pattern match at Language.Pantograph.Generic.Grammar (line 0, column 0 - line 0, column 0): " + [x.constructor.name, y.constructor.name]);
          };
        },
        Eq0: function() {
          return eqDerivLabel2;
        }
      };
    };
  };
  var eqAsExprLabel = function(dictEq) {
    return dictEq;
  };
  var encodeJsonSortData = {
    encodeJson: function(a2) {
      return genericEncodeJson2(a2);
    }
  };
  var decodeJsonSortData = {
    decodeJson: function(a2) {
      return genericDecodeJson2(a2);
    }
  };
  var typeOfSortData = function(v) {
    if (v instanceof DataString) {
      return SortString.value;
    }
    ;
    if (v instanceof DataInt) {
      return SortInt.value;
    }
    ;
    throw new Error("Failed pattern match at Language.Pantograph.Generic.Grammar (line 294, column 18 - line 296, column 25): " + [v.constructor.name]);
  };
  var subDerivLabel = function(dictIsRuleLabel) {
    var subMetaExprPartially3 = subMetaExprPartially(isExprLabelSortLabel(dictIsRuleLabel.IsExprLabel0()));
    return function(v) {
      return function(v1) {
        if (v1 instanceof DerivLabel) {
          return new DerivLabel(v1.value0, map55(subMetaExprPartially3(v))(v1.value1));
        }
        ;
        return v1;
      };
    };
  };
  var sor = function(l) {
    return new MInj(new SInj(l));
  };
  var serializePath = function(dictIsRuleLabel) {
    return function(v) {
      var nums = mapFlipped5(v)(function(v1) {
        return leftLength(v1.value1);
      });
      var numsGoingDown = reverse2(fromFoldable11(nums));
      return stringify(encodeJson2(numsGoingDown));
    };
  };
  var prettyExprF$prime_unsafe_RuleLabel = function(dict) {
    return dict["prettyExprF'_unsafe_RuleLabel"];
  };
  var nonDuplicateArray = function(dictEq) {
    var eq43 = eq(eqArray(dictEq));
    return function(dictOrd) {
      var nub3 = nub2(dictOrd);
      return function(source3) {
        return function(message2) {
          return function(arr) {
            return makeAssertionBoolean({
              name: "nonDuplicateArray",
              source: source3,
              condition: eq43(nub3(arr))(arr),
              message: message2
            });
          };
        };
      };
    };
  };
  var nonDuplicateArray1 = /* @__PURE__ */ nonDuplicateArray(eqString)(ordString);
  var matchStringLabel = function(v) {
    if (v.value0 instanceof MInj && (v.value0.value0 instanceof DataLabel && (v.value0.value0.value0 instanceof DataString && v.value1.length === 0))) {
      return v.value0.value0.value0.value0;
    }
    ;
    return bug("wasn't stringlabel");
  };
  var makeRule$prime = /* @__PURE__ */ assertInput_(function(strs) {
    return nonDuplicateArray1("makeRule")("All metavar strings must be different among: " + show12(strs))(strs);
  })(function() {
    return function(strs) {
      return function(f) {
        var mxs = map48(RuleMetaVar.create)(strs);
        var es = map48(fromMetaVar)(mxs);
        var v = f(es);
        return new Rule(fromFoldable14(mxs), v.value0, v.value1);
      };
    };
  });
  var makeRule = function(strs) {
    return function(f) {
      var f1 = f();
      return makeRule$prime(strs)(f1);
    };
  };
  var language2 = function(dict) {
    return dict.language;
  };
  var makeFreshLabel = function(dictIsRuleLabel) {
    var lookup20 = lookup10(dictIsRuleLabel.Bounded3().Ord0());
    var language1 = language2(dictIsRuleLabel);
    var map142 = map31(ordTuple3(ordExpr(ordMeta(ordSortLabel(dictIsRuleLabel.IsExprLabel0().Ord1())))));
    return function(ruleLabel) {
      var v = lookup20(ruleLabel)(language1);
      var sigma = fromFoldable32(map142(function(mv) {
        return new Tuple(mv, fromMetaVar(freshMetaVar(metaVarName(mv))));
      })(v.value0));
      return new DerivLabel(ruleLabel, sigma);
    };
  };
  var makeLabel = function(dictIsRuleLabel) {
    var lookup20 = lookup10(dictIsRuleLabel.Bounded3().Ord0());
    var language1 = language2(dictIsRuleLabel);
    var pretty13 = pretty(dictIsRuleLabel.Pretty5());
    var pretty23 = pretty(prettyArray(prettyTuple2(prettyExpr(isExprLabelMeta(isExprLabelSortLabel(dictIsRuleLabel.IsExprLabel0()))))));
    return function(ruleLabel) {
      return function(values3) {
        var v = lookup20(ruleLabel)(language1);
        var sigma = fromFoldable42(map48(lmap4(RuleMetaVar.create))(values3));
        return assert(equal2("makeLabel")(function(v1) {
          return "Given substitution must have same vars as quantified in rule:" + bullets(["ruleLabel = " + pretty13(ruleLabel), "value keys = " + pretty23(values3)]);
        })(v.value0)(keys3(sigma)))(function() {
          return function(v1) {
            return new DerivLabel(ruleLabel, sigma);
          };
        });
      };
    };
  };
  var nonemptyPathInnerSort = function(dictIsRuleLabel) {
    var lookup20 = lookup10(dictIsRuleLabel.Bounded3().Ord0());
    var language1 = language2(dictIsRuleLabel);
    var subMetaExprPartially3 = subMetaExprPartially(isExprLabelSortLabel(dictIsRuleLabel.IsExprLabel0()));
    return function(v) {
      if (v instanceof Cons && v.value0.value0 instanceof DerivLabel) {
        var v1 = lookup20(v.value0.value0.value0)(language1);
        return subMetaExprPartially3(v.value0.value0.value1)(fromJust$prime("nepis")(index3(v1.value1)(leftLength(v.value0.value1))));
      }
      ;
      return bug("path waas empty oor otherwise");
    };
  };
  var kidSorts = function(dictIsExprLabel) {
    var subMetaExprPartially3 = subMetaExprPartially(isExprLabelSortLabel(dictIsExprLabel));
    return function(dictIsRuleLabel) {
      var lookup20 = lookup10(dictIsRuleLabel.Bounded3().Ord0());
      var language1 = language2(dictIsRuleLabel);
      return function(v) {
        if (v instanceof DerivLabel) {
          var v1 = lookup20(v.value0)(language1);
          return map48(subMetaExprPartially3(v.value1))(v1.value1);
        }
        ;
        if (v instanceof DerivLiteral) {
          return [];
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Generic.Grammar (line 171, column 1 - line 172, column 37): " + [v.constructor.name]);
      };
    };
  };
  var isHoleRuleTotalMap = function(dict) {
    return dict.isHoleRuleTotalMap;
  };
  var isHole = function(dictIsRuleLabel) {
    var lookup20 = lookup10(dictIsRuleLabel.Bounded3().Ord0());
    var isHoleRuleTotalMap1 = isHoleRuleTotalMap(dictIsRuleLabel);
    return function(v) {
      var v1 = function(v2) {
        return false;
      };
      if (v instanceof DerivLabel) {
        var $1080 = lookup20(v.value0)(isHoleRuleTotalMap1);
        if ($1080 instanceof Yes) {
          return true;
        }
        ;
        return v1(true);
      }
      ;
      return v1(true);
    };
  };
  var injectSortLabelDerivLabel = function(sortLabel) {
    return function(kids) {
      return pureMetaExpr(new SInj(sortLabel))(kids);
    };
  };
  var hasInnerHole = function(dictIsRuleLabel) {
    var lookup20 = lookup10(dictIsRuleLabel.Bounded3().Ord0());
    var isHoleRuleTotalMap1 = isHoleRuleTotalMap(dictIsRuleLabel);
    return function(r) {
      var v = lookup20(r)(isHoleRuleTotalMap1);
      if (v instanceof Yes && v.value0) {
        return true;
      }
      ;
      return false;
    };
  };
  var getSortFromSub = function(dictIsRuleLabel) {
    var lookup20 = lookup10(dictIsRuleLabel.Bounded3().Ord0());
    var language1 = language2(dictIsRuleLabel);
    var subMetaExprPartially3 = subMetaExprPartially(isExprLabelSortLabel(dictIsRuleLabel.IsExprLabel0()));
    return function(r) {
      return function(sub3) {
        var v = lookup20(r)(language1);
        return subMetaExprPartially3(sub3)(v.value2);
      };
    };
  };
  var isInnerHoleDerivLabel = function(dictIsRuleLabel) {
    var lookup20 = lookup10(dictIsRuleLabel.Bounded3().Ord0());
    var isHoleRuleTotalMap1 = isHoleRuleTotalMap(dictIsRuleLabel);
    var getSortFromSub1 = getSortFromSub(dictIsRuleLabel);
    return function(v) {
      var v1 = function(v2) {
        return empty10;
      };
      if (v instanceof DerivLabel) {
        var $1091 = lookup20(v.value0)(isHoleRuleTotalMap1);
        if ($1091 instanceof Yes && $1091.value0) {
          return pure20(getSortFromSub1(v.value0)(v.value1));
        }
        ;
        return v1(true);
      }
      ;
      return v1(true);
    };
  };
  var isInnerHoleDerivTerm = function(dictIsRuleLabel) {
    var isInnerHoleDerivLabel1 = isInnerHoleDerivLabel(dictIsRuleLabel);
    return function(v) {
      return isInnerHoleDerivLabel1(v.value0);
    };
  };
  var freshenRuleMetaVars = function(mvars) {
    return fromFoldable42(flip(map48)(toUnfoldable12(mvars))(function(v) {
      if (v instanceof RuleMetaVar) {
        return new Tuple(new RuleMetaVar(v.value0), fromMetaVar(freshMetaVar(v.value0)));
      }
      ;
      return bug("[freshenRuleMetaVars] Shouldn't use this on non-RuleMetaVars");
    }));
  };
  var freshMetaVarSort = function(name15) {
    return new Expr(new MV(freshMetaVar(name15)), []);
  };
  var forgetCollectDerivLabel = function(dictIsRuleLabel) {
    var lookup20 = lookup10(dictIsRuleLabel.Bounded3().Ord0());
    var language1 = language2(dictIsRuleLabel);
    var map142 = map31(ordTuple3(ordExpr(ordMeta(ordSortLabel(dictIsRuleLabel.IsExprLabel0().Ord1())))));
    return function(forgetSorts2) {
      return function(label5) {
        var v = new Tuple(forgetSorts2(label5), label5);
        if (v.value0 instanceof Nothing && v.value1 instanceof DerivLabel) {
          var v1 = lookup20(v.value1.value0)(language1);
          var freshVars = fromFoldable32(map63(function(mv) {
            return new Tuple(mv, freshMetaVar(metaVarName(mv)));
          })(v1.value0));
          var newSigma = map55(fromMetaVar)(freshVars);
          var collectedMap = fromFoldable32(map142(function(mv) {
            return new Tuple(lookup$prime2(mv)(freshVars), lookup$prime2(mv)(v.value1.value1));
          })(v1.value0));
          return new Tuple(new DerivLabel(v.value1.value0, newSigma), collectedMap);
        }
        ;
        return new Tuple(label5, empty2);
      };
    };
  };
  var forgetCollectDerivTerm = function(dictIsRuleLabel) {
    var forgetCollectDerivLabel1 = forgetCollectDerivLabel(dictIsRuleLabel);
    return function(forgetSorts2) {
      return function(v) {
        var v1 = forgetCollectDerivLabel1(forgetSorts2)(v.value0);
        var v2 = unzip2(map48(forgetCollectDerivTerm(dictIsRuleLabel)(forgetSorts2))(v.value1));
        var sub3 = union6(v1.value1)(unions1(v2.value1));
        return new Tuple(new Expr(v1.value0, v2.value0), sub3);
      };
    };
  };
  var forgetCollectDerivTooth = function(dictIsRuleLabel) {
    var forgetCollectDerivLabel1 = forgetCollectDerivLabel(dictIsRuleLabel);
    var forgetCollectDerivTerm1 = forgetCollectDerivTerm(dictIsRuleLabel);
    return function(forgetSorts2) {
      return function(v) {
        var v1 = forgetCollectDerivLabel1(forgetSorts2)(v.value0);
        var v2 = unzip3(map72(forgetCollectDerivTerm1(forgetSorts2))(v.value1.left));
        var v3 = unzip(map49(forgetCollectDerivTerm1(forgetSorts2))(v.value1.right));
        var sub3 = union6(v1.value1)(union6(unions22(v2.value1))(unions3(v3.value1)));
        return new Tuple(new Tooth(v1.value0, {
          left: v2.value0,
          right: v3.value0
        }), sub3);
      };
    };
  };
  var forgetCollectDerivPath = function(dictIsRuleLabel) {
    var forgetCollectDerivTooth1 = forgetCollectDerivTooth(dictIsRuleLabel);
    return function(forgetSorts2) {
      return function(v) {
        var v1 = unzip(map49(forgetCollectDerivTooth1(forgetSorts2))(v));
        return new Tuple(v1.value0, unions3(v1.value1));
      };
    };
  };
  var expectedHypsCount = function(dictIsRuleLabel) {
    var lookup20 = lookup10(dictIsRuleLabel.Bounded3().Ord0());
    var language1 = language2(dictIsRuleLabel);
    return function(r) {
      var v = lookup20(r)(language1);
      return length5(v.value1);
    };
  };
  var isExprLabelAsExprLabel = function(dictIsRuleLabel) {
    var prettyExprF$prime_unsafe_RuleLabel1 = prettyExprF$prime_unsafe_RuleLabel(dictIsRuleLabel)();
    var expectedHypsCount1 = expectedHypsCount(dictIsRuleLabel);
    var Ord0 = dictIsRuleLabel.Bounded3().Ord0();
    var eqAsExprLabel1 = eqAsExprLabel(Ord0.Eq0());
    var ordAsExprLabel1 = ordAsExprLabel(Ord0);
    var showAsExprLabel1 = showAsExprLabel(dictIsRuleLabel.Show4());
    var prettyAsExprLabel1 = prettyAsExprLabel(dictIsRuleLabel.Pretty5());
    return {
      "prettyExprF'_unsafe": function() {
        return function(v) {
          return prettyExprF$prime_unsafe_RuleLabel1(new Tuple(v.value0, v.value1));
        };
      },
      expectedKidsCount: function(v) {
        return expectedHypsCount1(v);
      },
      Eq0: function() {
        return eqAsExprLabel1;
      },
      Ord1: function() {
        return ordAsExprLabel1;
      },
      Show2: function() {
        return showAsExprLabel1;
      },
      Pretty3: function() {
        return prettyAsExprLabel1;
      }
    };
  };
  var isExprLabelDerivLabel = function(dictIsRuleLabel) {
    var isExprLabelAsExprLabel1 = isExprLabelAsExprLabel(dictIsRuleLabel);
    var prettyExprF2 = prettyExprF(isExprLabelAsExprLabel1);
    var expectedKidsCount2 = expectedKidsCount(isExprLabelAsExprLabel1);
    var IsExprLabel0 = dictIsRuleLabel.IsExprLabel0();
    var Ord1 = IsExprLabel0.Ord1();
    var Ord0 = dictIsRuleLabel.Bounded3().Ord0();
    var eqDerivLabel1 = eqDerivLabel(Ord1.Eq0())(Ord0.Eq0());
    var ordDerivLabel1 = ordDerivLabel(Ord1)(Ord0);
    var showDerivLabel1 = showDerivLabel(IsExprLabel0.Show2())(dictIsRuleLabel.Show4());
    var prettyDerivLabel1 = prettyDerivLabel(IsExprLabel0)(dictIsRuleLabel.Pretty5());
    return {
      "prettyExprF'_unsafe": function() {
        return function(v) {
          if (v.value0 instanceof DerivLabel) {
            return prettyExprF2(new Tuple(v.value0.value0, v.value1));
          }
          ;
          if (v.value0 instanceof DerivLiteral && (v.value0.value0 instanceof DataString && v.value1.length === 0)) {
            return v.value0.value0.value0;
          }
          ;
          if (v.value0 instanceof DerivLiteral && (v.value0.value0 instanceof DataInt && v.value1.length === 0)) {
            return show6(v.value0.value0.value0);
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Generic.Grammar (line 251, column 1 - line 259, column 43): " + [v.constructor.name]);
        };
      },
      expectedKidsCount: function(v) {
        if (v instanceof DerivLabel) {
          return expectedKidsCount2(v.value0);
        }
        ;
        if (v instanceof DerivLiteral) {
          return 0;
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Generic.Grammar (line 251, column 1 - line 259, column 43): " + [v.constructor.name]);
      },
      Eq0: function() {
        return eqDerivLabel1;
      },
      Ord1: function() {
        return ordDerivLabel1;
      },
      Show2: function() {
        return showDerivLabel1;
      },
      Pretty3: function() {
        return prettyDerivLabel1;
      }
    };
  };
  var printSerializedDerivZipper2 = function(dictIsRuleLabel) {
    var unzipper2 = unzipper(isExprLabelDerivLabel(dictIsRuleLabel));
    var encodeJson1 = encodeJson(encodeJsonExpr(encodeJsonEither(dictIsRuleLabel.EncodeJson7())(encodeJsonSortData)));
    return function(dzipper) {
      var simplifyDerivLabel = function(v) {
        if (v instanceof DerivLabel) {
          return new Left(v.value0);
        }
        ;
        if (v instanceof DerivLiteral) {
          return new Right(v.value0);
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Generic.Grammar (line 683, column 31 - line 685, column 40): " + [v.constructor.name]);
      };
      var justLabels = map116(simplifyDerivLabel)(unzipper2(dzipper));
      return stringify(encodeJson1(justLabels));
    };
  };
  var derivZipperLabel = function(v) {
    return v.value1.value0;
  };
  var derivToothSort = function(dictIsRuleLabel) {
    var getSortFromSub1 = getSortFromSub(dictIsRuleLabel);
    return function(v) {
      if (v.value0 instanceof DerivLabel) {
        return getSortFromSub1(v.value0.value0)(v.value0.value1);
      }
      ;
      return bug("derivToothSort");
    };
  };
  var nonemptyUpPathTopSort = function(dictIsRuleLabel) {
    var derivToothSort1 = derivToothSort(dictIsRuleLabel);
    return function(dpath) {
      var dpath$prime = reversePath2(dpath);
      if (dpath$prime instanceof Nil) {
        return bug("path was empty");
      }
      ;
      if (dpath$prime instanceof Cons) {
        return derivToothSort1(dpath$prime.value0);
      }
      ;
      throw new Error("Failed pattern match at Language.Pantograph.Generic.Grammar (line 406, column 3 - line 408, column 44): " + [dpath$prime.constructor.name]);
    };
  };
  var derivPathSort = function(dictIsRuleLabel) {
    var derivToothSort1 = derivToothSort(dictIsRuleLabel);
    return function(dpath) {
      return function(botSort) {
        var dpath$prime = toDownPath2(dpath);
        if (dpath$prime instanceof Nil) {
          return botSort;
        }
        ;
        if (dpath$prime instanceof Cons) {
          return derivPathSort(dictIsRuleLabel)(dpath$prime.value1)(derivToothSort1(dpath$prime.value0));
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Generic.Grammar (line 398, column 3 - line 400, column 78): " + [dpath$prime.constructor.name]);
      };
    };
  };
  var derivLabelSort = function(dictIsRuleLabel) {
    var getSortFromSub1 = getSortFromSub(dictIsRuleLabel);
    return function(v) {
      if (v instanceof DerivLabel) {
        return getSortFromSub1(v.value0)(v.value1);
      }
      ;
      if (v instanceof DerivLiteral) {
        return pureMetaExpr(new TypeOfLabel(typeOfSortData(v.value0)))([pureMetaExpr(new DataLabel(v.value0))([])]);
      }
      ;
      throw new Error("Failed pattern match at Language.Pantograph.Generic.Grammar (line 167, column 1 - line 167, column 74): " + [v.constructor.name]);
    };
  };
  var derivTermSort = function(dictIsRuleLabel) {
    var derivLabelSort1 = derivLabelSort(dictIsRuleLabel);
    return function(v) {
      return derivLabelSort1(v.value0);
    };
  };
  var derivZipperSort = function(dictIsRuleLabel) {
    var derivTermSort1 = derivTermSort(dictIsRuleLabel);
    return function(v) {
      return derivTermSort1(v.value1);
    };
  };
  var derivZipperTopSort = function(dictIsRuleLabel) {
    var derivPathSort1 = derivPathSort(dictIsRuleLabel);
    var derivTermSort1 = derivTermSort(dictIsRuleLabel);
    return function(v) {
      return derivPathSort1(v.value0)(derivTermSort1(v.value1));
    };
  };
  var derivZipperpSorts = function(dictIsRuleLabel) {
    var derivTermSort1 = derivTermSort(dictIsRuleLabel);
    var derivPathSort1 = derivPathSort(dictIsRuleLabel);
    return function(v) {
      var selection$prime = function() {
        if (v.value1 instanceof Left) {
          return reversePath2(v.value1.value0);
        }
        ;
        if (v.value1 instanceof Right) {
          return v.value1.value0;
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Generic.Grammar (line 428, column 22 - line 430, column 35): " + [v.value1.constructor.name]);
      }();
      var botSort = derivTermSort1(v.value2);
      return new Tuple(derivPathSort1(selection$prime)(botSort), botSort);
    };
  };
  var inferFImpl = function(dictIsExprLabel) {
    var unifyFImpl2 = unifyFImpl(isExprLabelSortLabel(dictIsExprLabel));
    var kidSorts1 = kidSorts(dictIsExprLabel);
    return function(dictIsRuleLabel) {
      var derivTermSort1 = derivTermSort(dictIsRuleLabel);
      var kidSorts2 = kidSorts1(dictIsRuleLabel);
      return function(v) {
        return bind26(sequence6(map48(inferFImpl(dictIsExprLabel)(dictIsRuleLabel))(v.value1)))(function() {
          return bind26(sequence6(zipWith2(function(parentBottom) {
            return function(kidTop) {
              return unifyFImpl2(parentBottom)(derivTermSort1(kidTop));
            };
          })(kidSorts2(v.value0))(v.value1)))(function() {
            return pure110(unit);
          });
        });
      };
    };
  };
  var inferF = function(dictIsRuleLabel) {
    var IsExprLabel0 = dictIsRuleLabel.IsExprLabel0();
    var runUnifyMonad2 = runUnifyMonad(isExprLabelSortLabel(IsExprLabel0));
    var inferFImpl1 = inferFImpl(IsExprLabel0)(dictIsRuleLabel);
    return function(term) {
      return map82(fst)(runUnifyMonad2(bind26(inferFImpl1(term))(function() {
        return pure110(unit);
      })));
    };
  };
  var inferPathFImpl = function(dictIsExprLabel) {
    var inferFImpl1 = inferFImpl(dictIsExprLabel);
    var kidSorts1 = kidSorts(dictIsExprLabel);
    var unifyFImpl2 = unifyFImpl(isExprLabelSortLabel(dictIsExprLabel));
    return function(dictIsRuleLabel) {
      var inferFImpl2 = inferFImpl1(dictIsRuleLabel);
      var derivTermSort1 = derivTermSort(dictIsRuleLabel);
      var kidSorts2 = kidSorts1(dictIsRuleLabel);
      var derivLabelSort1 = derivLabelSort(dictIsRuleLabel);
      return function(v) {
        return function(v1) {
          if (v1 instanceof Nil) {
            return pure110(unit);
          }
          ;
          if (v1 instanceof Cons) {
            return bind26(sequence15(map72(inferFImpl2)(v1.value0.value1.left)))(function() {
              return bind26(sequence23(map49(inferFImpl2)(v1.value0.value1.right)))(function() {
                var kidTopSorts = append15(map49(derivTermSort1)(unreverse(v1.value0.value1.left)))(new Cons(v, map49(derivTermSort1)(v1.value0.value1.right)));
                var parentBottomSorts = kidSorts2(v1.value0.value0);
                return bind26(sequence6(zipWith2(function(parentBottom) {
                  return function(kidTop) {
                    return unifyFImpl2(parentBottom)(kidTop);
                  };
                })(parentBottomSorts)(fromFoldable11(kidTopSorts))))(function() {
                  return bind26(inferPathFImpl(dictIsExprLabel)(dictIsRuleLabel)(derivLabelSort1(v1.value0.value0))(v1.value1))(function() {
                    return pure110(unit);
                  });
                });
              });
            });
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Generic.Grammar (line 577, column 1 - line 578, column 76): " + [v.constructor.name, v1.constructor.name]);
        };
      };
    };
  };
  var inferPathF = function(dictIsRuleLabel) {
    var IsExprLabel0 = dictIsRuleLabel.IsExprLabel0();
    var runUnifyMonad2 = runUnifyMonad(isExprLabelSortLabel(IsExprLabel0));
    var inferPathFImpl1 = inferPathFImpl(IsExprLabel0)(dictIsRuleLabel);
    return function(innerSort) {
      return function(path) {
        return map82(fst)(runUnifyMonad2(bind26(inferPathFImpl1(innerSort)(path))(function() {
          return pure110(unit);
        })));
      };
    };
  };
  var inferZipperFImpl = function(dictIsExprLabel) {
    var inferFImpl1 = inferFImpl(dictIsExprLabel);
    var inferPathFImpl1 = inferPathFImpl(dictIsExprLabel);
    return function(dictIsRuleLabel) {
      var inferFImpl2 = inferFImpl1(dictIsRuleLabel);
      var inferPathFImpl2 = inferPathFImpl1(dictIsRuleLabel);
      var derivTermSort1 = derivTermSort(dictIsRuleLabel);
      return function(v) {
        return bind26(inferFImpl2(v.value1))(function() {
          return bind26(inferPathFImpl2(derivTermSort1(v.value1))(v.value0))(function() {
            return pure110(unit);
          });
        });
      };
    };
  };
  var isHoleDerivLabel = function(dictIsRuleLabel) {
    var derivLabelSort1 = derivLabelSort(dictIsRuleLabel);
    var lookup20 = lookup10(dictIsRuleLabel.Bounded3().Ord0());
    var isHoleRuleTotalMap1 = isHoleRuleTotalMap(dictIsRuleLabel);
    return function(l) {
      var v = function(v1) {
        if (l instanceof DerivLiteral && (l.value0 instanceof DataString && l.value0.value0 === "")) {
          return pure20(derivLabelSort1(l));
        }
        ;
        return Nothing.value;
      };
      if (l instanceof DerivLabel) {
        var $1239 = lookup20(l.value0)(isHoleRuleTotalMap1);
        if ($1239 instanceof Yes) {
          return pure20(derivLabelSort1(l));
        }
        ;
        return v(true);
      }
      ;
      return v(true);
    };
  };
  var derivLabelRule = function(v) {
    if (v instanceof DerivLabel) {
      return new Just(v.value0);
    }
    ;
    if (v instanceof DerivLiteral) {
      return Nothing.value;
    }
    ;
    throw new Error("Failed pattern match at Language.Pantograph.Generic.Grammar (line 159, column 1 - line 159, column 56): " + [v.constructor.name]);
  };
  var forgetDerivLabelSorts = function(dictIsExprLabel) {
    return function(dictIsRuleLabel) {
      var makeFreshLabel1 = makeFreshLabel(dictIsRuleLabel);
      return function(f) {
        return function(label5) {
          var v = f(label5);
          if (v instanceof Just) {
            return v.value0;
          }
          ;
          if (v instanceof Nothing) {
            var v1 = derivLabelRule(label5);
            if (v1 instanceof Just) {
              return makeFreshLabel1(v1.value0);
            }
            ;
            if (v1 instanceof Nothing) {
              return label5;
            }
            ;
            throw new Error("Failed pattern match at Language.Pantograph.Generic.Grammar (line 560, column 24 - line 562, column 33): " + [v1.constructor.name]);
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Generic.Grammar (line 558, column 9 - line 562, column 33): " + [v.constructor.name]);
        };
      };
    };
  };
  var defaultDerivTerm$prime = function(dict) {
    return dict["defaultDerivTerm'"];
  };
  var defaultDerivTerm = function(dictIsRuleLabel) {
    var wellformedExpr2 = wellformedExpr(isExprLabelMeta(isExprLabelSortLabel(dictIsRuleLabel.IsExprLabel0())));
    var defaultDerivTerm$prime1 = defaultDerivTerm$prime(dictIsRuleLabel)();
    return function(v) {
      if (v.value0 instanceof MInj && (v.value0.value0 instanceof TypeOfLabel && v.value1.length === 1)) {
        if (v.value0.value0.value0 instanceof SortString) {
          return pure20(new Expr(new DerivLiteral(new DataString("")), []));
        }
        ;
        if (v.value0.value0.value0 instanceof SortInt) {
          return pure20(new Expr(new DerivLiteral(new DataInt(0)), []));
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Generic.Grammar (line 77, column 5 - line 79, column 56): " + [v.value0.value0.value0.constructor.name]);
      }
      ;
      return assert(wellformedExpr2("defaultDerivTerm")(v))(function() {
        return function(v1) {
          return defaultDerivTerm$prime1(v);
        };
      });
    };
  };
  var fillDefaultsDerivTerm = function(dictIsRuleLabel) {
    var isHoleDerivLabel1 = isHoleDerivLabel(dictIsRuleLabel);
    var defaultDerivTerm1 = defaultDerivTerm(dictIsRuleLabel);
    return function(v) {
      var v1 = isHoleDerivLabel1(v.value0);
      if (v1 instanceof Just) {
        return fromJust$prime("why does defaultDerivTerm return a Maybe anyway?")(defaultDerivTerm1(v1.value0));
      }
      ;
      if (v1 instanceof Nothing) {
        return new Expr(v.value0, map48(fillDefaultsDerivTerm(dictIsRuleLabel))(v.value1));
      }
      ;
      throw new Error("Failed pattern match at Language.Pantograph.Generic.Grammar (line 209, column 5 - line 211, column 68): " + [v1.constructor.name]);
    };
  };
  var fillDefaultsDerivTooth = function(dictIsRuleLabel) {
    var fillDefaultsDerivTerm1 = fillDefaultsDerivTerm(dictIsRuleLabel);
    return function(v) {
      return new Tooth(v.value0, {
        left: map72(fillDefaultsDerivTerm1)(v.value1.left),
        right: map49(fillDefaultsDerivTerm1)(v.value1.right)
      });
    };
  };
  var fillDefaultsDerivPath = function(dictIsRuleLabel) {
    var fillDefaultsDerivTooth1 = fillDefaultsDerivTooth(dictIsRuleLabel);
    return function(v) {
      return map49(fillDefaultsDerivTooth1)(v);
    };
  };
  var subDerivPath = function(dictIsRuleLabel) {
    var subDerivLabel1 = subDerivLabel(dictIsRuleLabel);
    var fillDefaultsDerivPath1 = fillDefaultsDerivPath(dictIsRuleLabel);
    return function(sub3) {
      var $1315 = map102(subDerivLabel1(sub3));
      return function($1316) {
        return fillDefaultsDerivPath1($1315($1316));
      };
    };
  };
  var subDerivTooth = function(dictIsRuleLabel) {
    var subDerivLabel1 = subDerivLabel(dictIsRuleLabel);
    var fillDefaultsDerivTooth1 = fillDefaultsDerivTooth(dictIsRuleLabel);
    return function(sub3) {
      var $1317 = map117(subDerivLabel1(sub3));
      return function($1318) {
        return fillDefaultsDerivTooth1($1317($1318));
      };
    };
  };
  var fillDefaultsDerivZipper = function(dictIsRuleLabel) {
    var fillDefaultsDerivPath1 = fillDefaultsDerivPath(dictIsRuleLabel);
    var fillDefaultsDerivTerm1 = fillDefaultsDerivTerm(dictIsRuleLabel);
    return function(v) {
      return new Zipper(fillDefaultsDerivPath1(v.value0), fillDefaultsDerivTerm1(v.value1));
    };
  };
  var subDerivZipper = function(dictIsRuleLabel) {
    var subDerivLabel1 = subDerivLabel(dictIsRuleLabel);
    var fillDefaultsDerivZipper1 = fillDefaultsDerivZipper(dictIsRuleLabel);
    return function(sub3) {
      var $1319 = map122(subDerivLabel1(sub3));
      return function($1320) {
        return fillDefaultsDerivZipper1($1319($1320));
      };
    };
  };
  var subDerivTerm = function(dictIsRuleLabel) {
    var subDerivLabel1 = subDerivLabel(dictIsRuleLabel);
    var fillDefaultsDerivTerm1 = fillDefaultsDerivTerm(dictIsRuleLabel);
    return function(sub3) {
      var $1321 = map116(subDerivLabel1(sub3));
      return function($1322) {
        return fillDefaultsDerivTerm1($1321($1322));
      };
    };
  };
  var inferTerms = function(dictIsExprLabel) {
    var composeSub3 = composeSub(isExprLabelSortLabel(dictIsExprLabel));
    return function(dictIsRuleLabel) {
      var subDerivTerm1 = subDerivTerm(dictIsRuleLabel);
      return function(v) {
        if (v instanceof Nil) {
          return new Just(empty2);
        }
        ;
        if (v instanceof Cons) {
          return bind112(infer(dictIsExprLabel)(dictIsRuleLabel)(v.value0))(function(sub12) {
            return bind112(inferTerms(dictIsExprLabel)(dictIsRuleLabel)(map49(subDerivTerm1(sub12))(v.value1)))(function(sub22) {
              return pure20(composeSub3(sub12)(sub22));
            });
          });
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Generic.Grammar (line 515, column 1 - line 516, column 46): " + [v.constructor.name]);
      };
    };
  };
  var infer = function(dictIsExprLabel) {
    var isExprLabelSortLabel1 = isExprLabelSortLabel(dictIsExprLabel);
    var subMetaExprPartially3 = subMetaExprPartially(isExprLabelSortLabel1);
    var kidSorts1 = kidSorts(dictIsExprLabel);
    var unifyLists2 = unifyLists(isExprLabelSortLabel1);
    var composeSub3 = composeSub(isExprLabelSortLabel1);
    return function(dictIsRuleLabel) {
      var derivTermSort1 = derivTermSort(dictIsRuleLabel);
      var kidSorts2 = kidSorts1(dictIsRuleLabel);
      return function(v) {
        return bind112(inferTerms(dictIsExprLabel)(dictIsRuleLabel)(fromFoldable52(v.value1)))(function(sub12) {
          var inferredKidSorts = map48(function() {
            var $1323 = subMetaExprPartially3(sub12);
            return function($1324) {
              return $1323(derivTermSort1($1324));
            };
          }())(v.value1);
          var expectedKidSorts = map48(subMetaExprPartially3(sub12))(kidSorts2(v.value0));
          return bind112(unifyLists2(fromFoldable52(inferredKidSorts))(fromFoldable52(expectedKidSorts)))(function(v1) {
            var allSubs = composeSub3(sub12)(v1.value1);
            return pure20(allSubs);
          });
        });
      };
    };
  };
  var inferPath = function(dictIsExprLabel) {
    var inferTerms1 = inferTerms(dictIsExprLabel);
    var isExprLabelSortLabel1 = isExprLabelSortLabel(dictIsExprLabel);
    var subMetaExprPartially3 = subMetaExprPartially(isExprLabelSortLabel1);
    var kidSorts1 = kidSorts(dictIsExprLabel);
    var unifyLists2 = unifyLists(isExprLabelSortLabel1);
    var composeSub3 = composeSub(isExprLabelSortLabel1);
    return function(dictIsRuleLabel) {
      var inferTerms2 = inferTerms1(dictIsRuleLabel);
      var derivTermSort1 = derivTermSort(dictIsRuleLabel);
      var kidSorts2 = kidSorts1(dictIsRuleLabel);
      var derivLabelSort1 = derivLabelSort(dictIsRuleLabel);
      var subDerivPath1 = subDerivPath(dictIsRuleLabel);
      return function(v) {
        return function(v1) {
          if (v1 instanceof Nil) {
            return new Just(empty2);
          }
          ;
          if (v1 instanceof Cons) {
            return bind112(inferTerms2(fromFoldable62(append15(fromFoldable72(v1.value0.value1.left))(v1.value0.value1.right))))(function(sub12) {
              var inferredKidSorts = map49(subMetaExprPartially3(sub12))(append15(map49(derivTermSort1)(unreverse(v1.value0.value1.left)))(new Cons(v, map49(derivTermSort1)(v1.value0.value1.right))));
              var expectedKidSorts = map48(subMetaExprPartially3(sub12))(kidSorts2(v1.value0.value0));
              return bind112(unifyLists2(fromFoldable62(inferredKidSorts))(fromFoldable52(expectedKidSorts)))(function(v2) {
                var sub122 = composeSub3(sub12)(v2.value1);
                return bind112(inferPath(dictIsExprLabel)(dictIsRuleLabel)(subMetaExprPartially3(sub122)(derivLabelSort1(v1.value0.value0)))(subDerivPath1(sub122)(v1.value1)))(function(sub3) {
                  return pure20(composeSub3(sub122)(sub3));
                });
              });
            });
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Generic.Grammar (line 534, column 1 - line 535, column 56): " + [v.constructor.name, v1.constructor.name]);
        };
      };
    };
  };
  var decodeSerializedZipper2 = function(dictIsRuleLabel) {
    var makeFreshLabel1 = makeFreshLabel(dictIsRuleLabel);
    var decodeJson1 = decodeJson(decodeJsonExpr(decodeJsonEither(dictIsRuleLabel.DecodeJson9())(decodeJsonSortData)));
    var inferF1 = inferF(dictIsRuleLabel);
    var derivTermSort1 = derivTermSort(dictIsRuleLabel);
    var isExprLabelSortLabel1 = isExprLabelSortLabel(dictIsRuleLabel.IsExprLabel0());
    var subMetaExprPartially3 = subMetaExprPartially(isExprLabelSortLabel1);
    var composeSub3 = composeSub(isExprLabelSortLabel1);
    var unify3 = unify(isExprLabelSortLabel1);
    var subDerivTerm1 = subDerivTerm(dictIsRuleLabel);
    return function(clipboardSort2) {
      return function(string) {
        var unsimplifyDerivLabel = function(v2) {
          if (v2 instanceof Left) {
            return makeFreshLabel1(v2.value0);
          }
          ;
          if (v2 instanceof Right) {
            return new DerivLiteral(v2.value0);
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Generic.Grammar (line 692, column 33 - line 694, column 40): " + [v2.constructor.name]);
        };
        var v = jsonParser(string);
        if (v instanceof Left) {
          return bug("jsonParser failed: " + v.value0);
        }
        ;
        if (v instanceof Right) {
          var simplifiedTree = decodeJson1(v.value0);
          if (simplifiedTree instanceof Left) {
            return bug("decodeJson failed:" + show22(simplifiedTree.value0));
          }
          ;
          if (simplifiedTree instanceof Right) {
            var preDerivTerm = map116(unsimplifyDerivLabel)(simplifiedTree.value0);
            var unifyingSub$prime = fromJust$prime("program didn't typecheck in deserialization")(inferF1(preDerivTerm));
            var forgottenFinalSort = derivTermSort1(preDerivTerm);
            var expectedProgSort = clipboardSort2(forgottenFinalSort);
            var forgottenTopSort = subMetaExprPartially3(unifyingSub$prime)(forgottenFinalSort);
            var unifyingSub = composeSub3(unifyingSub$prime)(snd(fromJust$prime("gacct shouldn't fail")(unify3(expectedProgSort)(forgottenTopSort))));
            var $$final = subDerivTerm1(unifyingSub)(preDerivTerm);
            return $$final;
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Generic.Grammar (line 700, column 13 - line 711, column 26): " + [simplifiedTree.constructor.name]);
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Generic.Grammar (line 696, column 5 - line 711, column 26): " + [v.constructor.name]);
      };
    };
  };
  var csor = function(l) {
    return new CInj(new MInj(new SInj(l)));
  };

  // output/Language.Pantograph.Generic.Edit/index.js
  var map50 = /* @__PURE__ */ map(functorArray);
  var fromFoldable15 = /* @__PURE__ */ fromFoldable(foldableArray);
  var sequence7 = /* @__PURE__ */ sequence(traversablePath)(applicativeMaybe);
  var map118 = /* @__PURE__ */ map(functorPath);
  var FillAction = /* @__PURE__ */ function() {
    function FillAction2(value0) {
      this.value0 = value0;
    }
    ;
    FillAction2.create = function(value0) {
      return new FillAction2(value0);
    };
    return FillAction2;
  }();
  var ReplaceAction = /* @__PURE__ */ function() {
    function ReplaceAction2(value0) {
      this.value0 = value0;
    }
    ;
    ReplaceAction2.create = function(value0) {
      return new ReplaceAction2(value0);
    };
    return ReplaceAction2;
  }();
  var WrapAction = /* @__PURE__ */ function() {
    function WrapAction2(value0) {
      this.value0 = value0;
    }
    ;
    WrapAction2.create = function(value0) {
      return new WrapAction2(value0);
    };
    return WrapAction2;
  }();
  var newToothFromRule = function(dictIsRuleLabel) {
    var lookup20 = lookup10(dictIsRuleLabel.Bounded3().Ord0());
    var language4 = language2(dictIsRuleLabel);
    var IsExprLabel0 = dictIsRuleLabel.IsExprLabel0();
    var subMetaExprPartially3 = subMetaExprPartially(isExprLabelSortLabel(IsExprLabel0));
    var defaultDerivTerm3 = defaultDerivTerm(dictIsRuleLabel);
    var inferPath2 = inferPath(IsExprLabel0)(dictIsRuleLabel);
    var subDerivTooth2 = subDerivTooth(dictIsRuleLabel);
    return function(r) {
      return function(kidIx) {
        var v = lookup20(r)(language4);
        var sigma = freshenRuleMetaVars(v.value0);
        var hyps = map50(subMetaExprPartially3(sigma))(v.value1);
        var v1 = assertI(just("newPathFromRule.hpySortPath")(zipAt(kidIx)(fromFoldable15(hyps))));
        var defaultHypDerivPath = assertI(just("newPathFromRule.defaultHypDerivPath")(sequence7(map118(defaultDerivTerm3)(v1.value0))));
        var tooth = new Tooth(new DerivLabel(r, sigma), defaultHypDerivPath);
        var path1 = singleton3(tooth);
        var sub3 = fromJust$prime("path didn't typecheck in newPathFromRule")(inferPath2(freshMetaVarSort("pathInside"))(path1));
        var toothSubbed = subDerivTooth2(sub3)(tooth);
        return new Tuple(toothSubbed, subMetaExprPartially3(sub3)(v1.value1));
      };
    };
  };
  var newTermFromRule = function(dictIsRuleLabel) {
    var lookup20 = lookup10(dictIsRuleLabel.Bounded3().Ord0());
    var language4 = language2(dictIsRuleLabel);
    var IsExprLabel0 = dictIsRuleLabel.IsExprLabel0();
    var subMetaExprPartially3 = subMetaExprPartially(isExprLabelSortLabel(IsExprLabel0));
    var defaultDerivTerm3 = defaultDerivTerm(dictIsRuleLabel);
    var infer2 = infer(IsExprLabel0)(dictIsRuleLabel);
    var subDerivTerm3 = subDerivTerm(dictIsRuleLabel);
    return function(r) {
      var v = lookup20(r)(language4);
      var sigma = freshenRuleMetaVars(v.value0);
      var hyps = map50(subMetaExprPartially3(sigma))(v.value1);
      var term1 = new Expr(new DerivLabel(r, sigma), map50(function() {
        var $50 = fromJust$prime("yes");
        return function($51) {
          return $50(defaultDerivTerm3($51));
        };
      }())(hyps));
      var sub3 = fromJust$prime("ntfr")(infer2(term1));
      return subDerivTerm3(sub3)(term1);
    };
  };
  var newPathFromRule = function(dictIsRuleLabel) {
    var newToothFromRule1 = newToothFromRule(dictIsRuleLabel);
    return function(r) {
      return function(kidIx) {
        var v = newToothFromRule1(r)(kidIx);
        return new Tuple(singleton3(v.value0), v.value1);
      };
    };
  };

  // output/Data.CodePoint.Unicode.Internal/index.js
  var unsafeIndex3 = /* @__PURE__ */ unsafeIndex();
  var elemIndex2 = /* @__PURE__ */ elemIndex(eqInt);
  var NUMCAT_LU = /* @__PURE__ */ function() {
    function NUMCAT_LU2() {
    }
    ;
    NUMCAT_LU2.value = new NUMCAT_LU2();
    return NUMCAT_LU2;
  }();
  var NUMCAT_LL = /* @__PURE__ */ function() {
    function NUMCAT_LL2() {
    }
    ;
    NUMCAT_LL2.value = new NUMCAT_LL2();
    return NUMCAT_LL2;
  }();
  var NUMCAT_LT = /* @__PURE__ */ function() {
    function NUMCAT_LT2() {
    }
    ;
    NUMCAT_LT2.value = new NUMCAT_LT2();
    return NUMCAT_LT2;
  }();
  var NUMCAT_LM = /* @__PURE__ */ function() {
    function NUMCAT_LM2() {
    }
    ;
    NUMCAT_LM2.value = new NUMCAT_LM2();
    return NUMCAT_LM2;
  }();
  var NUMCAT_LO = /* @__PURE__ */ function() {
    function NUMCAT_LO2() {
    }
    ;
    NUMCAT_LO2.value = new NUMCAT_LO2();
    return NUMCAT_LO2;
  }();
  var NUMCAT_MN = /* @__PURE__ */ function() {
    function NUMCAT_MN2() {
    }
    ;
    NUMCAT_MN2.value = new NUMCAT_MN2();
    return NUMCAT_MN2;
  }();
  var NUMCAT_MC = /* @__PURE__ */ function() {
    function NUMCAT_MC2() {
    }
    ;
    NUMCAT_MC2.value = new NUMCAT_MC2();
    return NUMCAT_MC2;
  }();
  var NUMCAT_ME = /* @__PURE__ */ function() {
    function NUMCAT_ME2() {
    }
    ;
    NUMCAT_ME2.value = new NUMCAT_ME2();
    return NUMCAT_ME2;
  }();
  var NUMCAT_ND = /* @__PURE__ */ function() {
    function NUMCAT_ND2() {
    }
    ;
    NUMCAT_ND2.value = new NUMCAT_ND2();
    return NUMCAT_ND2;
  }();
  var NUMCAT_NL = /* @__PURE__ */ function() {
    function NUMCAT_NL2() {
    }
    ;
    NUMCAT_NL2.value = new NUMCAT_NL2();
    return NUMCAT_NL2;
  }();
  var NUMCAT_NO = /* @__PURE__ */ function() {
    function NUMCAT_NO2() {
    }
    ;
    NUMCAT_NO2.value = new NUMCAT_NO2();
    return NUMCAT_NO2;
  }();
  var NUMCAT_PC = /* @__PURE__ */ function() {
    function NUMCAT_PC2() {
    }
    ;
    NUMCAT_PC2.value = new NUMCAT_PC2();
    return NUMCAT_PC2;
  }();
  var NUMCAT_PD = /* @__PURE__ */ function() {
    function NUMCAT_PD2() {
    }
    ;
    NUMCAT_PD2.value = new NUMCAT_PD2();
    return NUMCAT_PD2;
  }();
  var NUMCAT_PS = /* @__PURE__ */ function() {
    function NUMCAT_PS2() {
    }
    ;
    NUMCAT_PS2.value = new NUMCAT_PS2();
    return NUMCAT_PS2;
  }();
  var NUMCAT_PE = /* @__PURE__ */ function() {
    function NUMCAT_PE2() {
    }
    ;
    NUMCAT_PE2.value = new NUMCAT_PE2();
    return NUMCAT_PE2;
  }();
  var NUMCAT_PI = /* @__PURE__ */ function() {
    function NUMCAT_PI2() {
    }
    ;
    NUMCAT_PI2.value = new NUMCAT_PI2();
    return NUMCAT_PI2;
  }();
  var NUMCAT_PF = /* @__PURE__ */ function() {
    function NUMCAT_PF2() {
    }
    ;
    NUMCAT_PF2.value = new NUMCAT_PF2();
    return NUMCAT_PF2;
  }();
  var NUMCAT_PO = /* @__PURE__ */ function() {
    function NUMCAT_PO2() {
    }
    ;
    NUMCAT_PO2.value = new NUMCAT_PO2();
    return NUMCAT_PO2;
  }();
  var NUMCAT_SM = /* @__PURE__ */ function() {
    function NUMCAT_SM2() {
    }
    ;
    NUMCAT_SM2.value = new NUMCAT_SM2();
    return NUMCAT_SM2;
  }();
  var NUMCAT_SC = /* @__PURE__ */ function() {
    function NUMCAT_SC2() {
    }
    ;
    NUMCAT_SC2.value = new NUMCAT_SC2();
    return NUMCAT_SC2;
  }();
  var NUMCAT_SK = /* @__PURE__ */ function() {
    function NUMCAT_SK2() {
    }
    ;
    NUMCAT_SK2.value = new NUMCAT_SK2();
    return NUMCAT_SK2;
  }();
  var NUMCAT_SO = /* @__PURE__ */ function() {
    function NUMCAT_SO2() {
    }
    ;
    NUMCAT_SO2.value = new NUMCAT_SO2();
    return NUMCAT_SO2;
  }();
  var NUMCAT_ZS = /* @__PURE__ */ function() {
    function NUMCAT_ZS2() {
    }
    ;
    NUMCAT_ZS2.value = new NUMCAT_ZS2();
    return NUMCAT_ZS2;
  }();
  var NUMCAT_ZL = /* @__PURE__ */ function() {
    function NUMCAT_ZL2() {
    }
    ;
    NUMCAT_ZL2.value = new NUMCAT_ZL2();
    return NUMCAT_ZL2;
  }();
  var NUMCAT_ZP = /* @__PURE__ */ function() {
    function NUMCAT_ZP2() {
    }
    ;
    NUMCAT_ZP2.value = new NUMCAT_ZP2();
    return NUMCAT_ZP2;
  }();
  var NUMCAT_CC = /* @__PURE__ */ function() {
    function NUMCAT_CC2() {
    }
    ;
    NUMCAT_CC2.value = new NUMCAT_CC2();
    return NUMCAT_CC2;
  }();
  var NUMCAT_CF = /* @__PURE__ */ function() {
    function NUMCAT_CF2() {
    }
    ;
    NUMCAT_CF2.value = new NUMCAT_CF2();
    return NUMCAT_CF2;
  }();
  var NUMCAT_CS = /* @__PURE__ */ function() {
    function NUMCAT_CS2() {
    }
    ;
    NUMCAT_CS2.value = new NUMCAT_CS2();
    return NUMCAT_CS2;
  }();
  var NUMCAT_CO = /* @__PURE__ */ function() {
    function NUMCAT_CO2() {
    }
    ;
    NUMCAT_CO2.value = new NUMCAT_CO2();
    return NUMCAT_CO2;
  }();
  var NUMCAT_CN = /* @__PURE__ */ function() {
    function NUMCAT_CN2() {
    }
    ;
    NUMCAT_CN2.value = new NUMCAT_CN2();
    return NUMCAT_CN2;
  }();
  var numLat1Blocks = 63;
  var numBlocks = 3396;
  var gencatZS = 2;
  var rule1 = /* @__PURE__ */ function() {
    return {
      category: gencatZS,
      unicodeCat: NUMCAT_ZS.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatZP = 67108864;
  var rule162 = /* @__PURE__ */ function() {
    return {
      category: gencatZP,
      unicodeCat: NUMCAT_ZP.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatZL = 33554432;
  var rule161 = /* @__PURE__ */ function() {
    return {
      category: gencatZL,
      unicodeCat: NUMCAT_ZL.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatSO = 8192;
  var rule13 = /* @__PURE__ */ function() {
    return {
      category: gencatSO,
      unicodeCat: NUMCAT_SO.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var rule170 = /* @__PURE__ */ function() {
    return {
      category: gencatSO,
      unicodeCat: NUMCAT_SO.value,
      possible: 1,
      updist: 0,
      lowdist: 26,
      titledist: 0
    };
  }();
  var rule171 = /* @__PURE__ */ function() {
    return {
      category: gencatSO,
      unicodeCat: NUMCAT_SO.value,
      possible: 1,
      updist: -26 | 0,
      lowdist: 0,
      titledist: -26 | 0
    };
  }();
  var gencatSM = 64;
  var rule6 = /* @__PURE__ */ function() {
    return {
      category: gencatSM,
      unicodeCat: NUMCAT_SM.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatSK = 1024;
  var rule10 = /* @__PURE__ */ function() {
    return {
      category: gencatSK,
      unicodeCat: NUMCAT_SK.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatSC = 8;
  var rule3 = /* @__PURE__ */ function() {
    return {
      category: gencatSC,
      unicodeCat: NUMCAT_SC.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatPS = 16;
  var rule4 = /* @__PURE__ */ function() {
    return {
      category: gencatPS,
      unicodeCat: NUMCAT_PS.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatPO = 4;
  var rule2 = /* @__PURE__ */ function() {
    return {
      category: gencatPO,
      unicodeCat: NUMCAT_PO.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatPI = 32768;
  var rule15 = /* @__PURE__ */ function() {
    return {
      category: gencatPI,
      unicodeCat: NUMCAT_PI.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatPF = 262144;
  var rule19 = /* @__PURE__ */ function() {
    return {
      category: gencatPF,
      unicodeCat: NUMCAT_PF.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatPE = 32;
  var rule5 = /* @__PURE__ */ function() {
    return {
      category: gencatPE,
      unicodeCat: NUMCAT_PE.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatPD = 128;
  var rule7 = /* @__PURE__ */ function() {
    return {
      category: gencatPD,
      unicodeCat: NUMCAT_PD.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatPC = 2048;
  var rule11 = /* @__PURE__ */ function() {
    return {
      category: gencatPC,
      unicodeCat: NUMCAT_PC.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatNO = 131072;
  var rule17 = /* @__PURE__ */ function() {
    return {
      category: gencatNO,
      unicodeCat: NUMCAT_NO.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatNL = 16777216;
  var rule128 = /* @__PURE__ */ function() {
    return {
      category: gencatNL,
      unicodeCat: NUMCAT_NL.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var rule168 = /* @__PURE__ */ function() {
    return {
      category: gencatNL,
      unicodeCat: NUMCAT_NL.value,
      possible: 1,
      updist: 0,
      lowdist: 16,
      titledist: 0
    };
  }();
  var rule169 = /* @__PURE__ */ function() {
    return {
      category: gencatNL,
      unicodeCat: NUMCAT_NL.value,
      possible: 1,
      updist: -16 | 0,
      lowdist: 0,
      titledist: -16 | 0
    };
  }();
  var gencatND = 256;
  var rule8 = /* @__PURE__ */ function() {
    return {
      category: gencatND,
      unicodeCat: NUMCAT_ND.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatMN = 2097152;
  var rule92 = /* @__PURE__ */ function() {
    return {
      category: gencatMN,
      unicodeCat: NUMCAT_MN.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var rule93 = /* @__PURE__ */ function() {
    return {
      category: gencatMN,
      unicodeCat: NUMCAT_MN.value,
      possible: 1,
      updist: 84,
      lowdist: 0,
      titledist: 84
    };
  }();
  var gencatME = 4194304;
  var rule119 = /* @__PURE__ */ function() {
    return {
      category: gencatME,
      unicodeCat: NUMCAT_ME.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatMC = 8388608;
  var rule124 = /* @__PURE__ */ function() {
    return {
      category: gencatMC,
      unicodeCat: NUMCAT_MC.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatLU = 512;
  var nullrule = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_CN.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var rule104 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 8,
      titledist: 0
    };
  }();
  var rule107 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var rule115 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -60 | 0,
      titledist: 0
    };
  }();
  var rule117 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -7 | 0,
      titledist: 0
    };
  }();
  var rule118 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 80,
      titledist: 0
    };
  }();
  var rule120 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 15,
      titledist: 0
    };
  }();
  var rule122 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 48,
      titledist: 0
    };
  }();
  var rule125 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 7264,
      titledist: 0
    };
  }();
  var rule127 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 38864,
      titledist: 0
    };
  }();
  var rule137 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -3008 | 0,
      titledist: 0
    };
  }();
  var rule142 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -7615 | 0,
      titledist: 0
    };
  }();
  var rule144 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -8 | 0,
      titledist: 0
    };
  }();
  var rule153 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -74 | 0,
      titledist: 0
    };
  }();
  var rule156 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -86 | 0,
      titledist: 0
    };
  }();
  var rule157 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -100 | 0,
      titledist: 0
    };
  }();
  var rule158 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -112 | 0,
      titledist: 0
    };
  }();
  var rule159 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -128 | 0,
      titledist: 0
    };
  }();
  var rule160 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -126 | 0,
      titledist: 0
    };
  }();
  var rule163 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -7517 | 0,
      titledist: 0
    };
  }();
  var rule164 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -8383 | 0,
      titledist: 0
    };
  }();
  var rule165 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -8262 | 0,
      titledist: 0
    };
  }();
  var rule166 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 28,
      titledist: 0
    };
  }();
  var rule172 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -10743 | 0,
      titledist: 0
    };
  }();
  var rule173 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -3814 | 0,
      titledist: 0
    };
  }();
  var rule174 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -10727 | 0,
      titledist: 0
    };
  }();
  var rule177 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -10780 | 0,
      titledist: 0
    };
  }();
  var rule178 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -10749 | 0,
      titledist: 0
    };
  }();
  var rule179 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -10783 | 0,
      titledist: 0
    };
  }();
  var rule180 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -10782 | 0,
      titledist: 0
    };
  }();
  var rule181 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -10815 | 0,
      titledist: 0
    };
  }();
  var rule183 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -35332 | 0,
      titledist: 0
    };
  }();
  var rule184 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -42280 | 0,
      titledist: 0
    };
  }();
  var rule186 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -42308 | 0,
      titledist: 0
    };
  }();
  var rule187 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -42319 | 0,
      titledist: 0
    };
  }();
  var rule188 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -42315 | 0,
      titledist: 0
    };
  }();
  var rule189 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -42305 | 0,
      titledist: 0
    };
  }();
  var rule190 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -42258 | 0,
      titledist: 0
    };
  }();
  var rule191 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -42282 | 0,
      titledist: 0
    };
  }();
  var rule192 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -42261 | 0,
      titledist: 0
    };
  }();
  var rule193 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 928,
      titledist: 0
    };
  }();
  var rule194 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -48 | 0,
      titledist: 0
    };
  }();
  var rule195 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -42307 | 0,
      titledist: 0
    };
  }();
  var rule196 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -35384 | 0,
      titledist: 0
    };
  }();
  var rule201 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 40,
      titledist: 0
    };
  }();
  var rule203 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 34,
      titledist: 0
    };
  }();
  var rule22 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 1,
      titledist: 0
    };
  }();
  var rule24 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -199 | 0,
      titledist: 0
    };
  }();
  var rule26 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -121 | 0,
      titledist: 0
    };
  }();
  var rule29 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 210,
      titledist: 0
    };
  }();
  var rule30 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 206,
      titledist: 0
    };
  }();
  var rule31 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 205,
      titledist: 0
    };
  }();
  var rule32 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 79,
      titledist: 0
    };
  }();
  var rule33 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 202,
      titledist: 0
    };
  }();
  var rule34 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 203,
      titledist: 0
    };
  }();
  var rule35 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 207,
      titledist: 0
    };
  }();
  var rule37 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 211,
      titledist: 0
    };
  }();
  var rule38 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 209,
      titledist: 0
    };
  }();
  var rule40 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 213,
      titledist: 0
    };
  }();
  var rule42 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 214,
      titledist: 0
    };
  }();
  var rule43 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 218,
      titledist: 0
    };
  }();
  var rule44 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 217,
      titledist: 0
    };
  }();
  var rule45 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 219,
      titledist: 0
    };
  }();
  var rule47 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 2,
      titledist: 1
    };
  }();
  var rule51 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -97 | 0,
      titledist: 0
    };
  }();
  var rule52 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -56 | 0,
      titledist: 0
    };
  }();
  var rule53 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -130 | 0,
      titledist: 0
    };
  }();
  var rule54 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 10795,
      titledist: 0
    };
  }();
  var rule55 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -163 | 0,
      titledist: 0
    };
  }();
  var rule56 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 10792,
      titledist: 0
    };
  }();
  var rule58 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -195 | 0,
      titledist: 0
    };
  }();
  var rule59 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 69,
      titledist: 0
    };
  }();
  var rule60 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 71,
      titledist: 0
    };
  }();
  var rule9 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 32,
      titledist: 0
    };
  }();
  var rule94 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 116,
      titledist: 0
    };
  }();
  var rule95 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 38,
      titledist: 0
    };
  }();
  var rule96 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 37,
      titledist: 0
    };
  }();
  var rule97 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 64,
      titledist: 0
    };
  }();
  var rule98 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 63,
      titledist: 0
    };
  }();
  var gencatLT = 524288;
  var rule151 = /* @__PURE__ */ function() {
    return {
      category: gencatLT,
      unicodeCat: NUMCAT_LT.value,
      possible: 1,
      updist: 0,
      lowdist: -8 | 0,
      titledist: 0
    };
  }();
  var rule154 = /* @__PURE__ */ function() {
    return {
      category: gencatLT,
      unicodeCat: NUMCAT_LT.value,
      possible: 1,
      updist: 0,
      lowdist: -9 | 0,
      titledist: 0
    };
  }();
  var rule48 = /* @__PURE__ */ function() {
    return {
      category: gencatLT,
      unicodeCat: NUMCAT_LT.value,
      possible: 1,
      updist: -1 | 0,
      lowdist: 1,
      titledist: 0
    };
  }();
  var gencatLO = 16384;
  var rule14 = /* @__PURE__ */ function() {
    return {
      category: gencatLO,
      unicodeCat: NUMCAT_LO.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatLM = 1048576;
  var rule91 = /* @__PURE__ */ function() {
    return {
      category: gencatLM,
      unicodeCat: NUMCAT_LM.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatLL = 4096;
  var rule100 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -37 | 0,
      lowdist: 0,
      titledist: -37 | 0
    };
  }();
  var rule101 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -31 | 0,
      lowdist: 0,
      titledist: -31 | 0
    };
  }();
  var rule102 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -64 | 0,
      lowdist: 0,
      titledist: -64 | 0
    };
  }();
  var rule103 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -63 | 0,
      lowdist: 0,
      titledist: -63 | 0
    };
  }();
  var rule105 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -62 | 0,
      lowdist: 0,
      titledist: -62 | 0
    };
  }();
  var rule106 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -57 | 0,
      lowdist: 0,
      titledist: -57 | 0
    };
  }();
  var rule108 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -47 | 0,
      lowdist: 0,
      titledist: -47 | 0
    };
  }();
  var rule109 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -54 | 0,
      lowdist: 0,
      titledist: -54 | 0
    };
  }();
  var rule110 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -8 | 0,
      lowdist: 0,
      titledist: -8 | 0
    };
  }();
  var rule111 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -86 | 0,
      lowdist: 0,
      titledist: -86 | 0
    };
  }();
  var rule112 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -80 | 0,
      lowdist: 0,
      titledist: -80 | 0
    };
  }();
  var rule113 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 7,
      lowdist: 0,
      titledist: 7
    };
  }();
  var rule114 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -116 | 0,
      lowdist: 0,
      titledist: -116 | 0
    };
  }();
  var rule116 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -96 | 0,
      lowdist: 0,
      titledist: -96 | 0
    };
  }();
  var rule12 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -32 | 0,
      lowdist: 0,
      titledist: -32 | 0
    };
  }();
  var rule121 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -15 | 0,
      lowdist: 0,
      titledist: -15 | 0
    };
  }();
  var rule123 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -48 | 0,
      lowdist: 0,
      titledist: -48 | 0
    };
  }();
  var rule126 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 3008,
      lowdist: 0,
      titledist: 0
    };
  }();
  var rule129 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -6254 | 0,
      lowdist: 0,
      titledist: -6254 | 0
    };
  }();
  var rule130 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -6253 | 0,
      lowdist: 0,
      titledist: -6253 | 0
    };
  }();
  var rule131 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -6244 | 0,
      lowdist: 0,
      titledist: -6244 | 0
    };
  }();
  var rule132 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -6242 | 0,
      lowdist: 0,
      titledist: -6242 | 0
    };
  }();
  var rule133 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -6243 | 0,
      lowdist: 0,
      titledist: -6243 | 0
    };
  }();
  var rule134 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -6236 | 0,
      lowdist: 0,
      titledist: -6236 | 0
    };
  }();
  var rule135 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -6181 | 0,
      lowdist: 0,
      titledist: -6181 | 0
    };
  }();
  var rule136 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 35266,
      lowdist: 0,
      titledist: 35266
    };
  }();
  var rule138 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 35332,
      lowdist: 0,
      titledist: 35332
    };
  }();
  var rule139 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 3814,
      lowdist: 0,
      titledist: 3814
    };
  }();
  var rule140 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 35384,
      lowdist: 0,
      titledist: 35384
    };
  }();
  var rule141 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -59 | 0,
      lowdist: 0,
      titledist: -59 | 0
    };
  }();
  var rule143 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 8,
      lowdist: 0,
      titledist: 8
    };
  }();
  var rule145 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 74,
      lowdist: 0,
      titledist: 74
    };
  }();
  var rule146 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 86,
      lowdist: 0,
      titledist: 86
    };
  }();
  var rule147 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 100,
      lowdist: 0,
      titledist: 100
    };
  }();
  var rule148 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 128,
      lowdist: 0,
      titledist: 128
    };
  }();
  var rule149 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 112,
      lowdist: 0,
      titledist: 112
    };
  }();
  var rule150 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 126,
      lowdist: 0,
      titledist: 126
    };
  }();
  var rule152 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 9,
      lowdist: 0,
      titledist: 9
    };
  }();
  var rule155 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -7205 | 0,
      lowdist: 0,
      titledist: -7205 | 0
    };
  }();
  var rule167 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -28 | 0,
      lowdist: 0,
      titledist: -28 | 0
    };
  }();
  var rule175 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -10795 | 0,
      lowdist: 0,
      titledist: -10795 | 0
    };
  }();
  var rule176 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -10792 | 0,
      lowdist: 0,
      titledist: -10792 | 0
    };
  }();
  var rule18 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 743,
      lowdist: 0,
      titledist: 743
    };
  }();
  var rule182 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -7264 | 0,
      lowdist: 0,
      titledist: -7264 | 0
    };
  }();
  var rule185 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 48,
      lowdist: 0,
      titledist: 48
    };
  }();
  var rule197 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -928 | 0,
      lowdist: 0,
      titledist: -928 | 0
    };
  }();
  var rule198 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -38864 | 0,
      lowdist: 0,
      titledist: -38864 | 0
    };
  }();
  var rule20 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var rule202 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -40 | 0,
      lowdist: 0,
      titledist: -40 | 0
    };
  }();
  var rule204 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -34 | 0,
      lowdist: 0,
      titledist: -34 | 0
    };
  }();
  var rule21 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 121,
      lowdist: 0,
      titledist: 121
    };
  }();
  var rule23 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -1 | 0,
      lowdist: 0,
      titledist: -1 | 0
    };
  }();
  var rule25 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -232 | 0,
      lowdist: 0,
      titledist: -232 | 0
    };
  }();
  var rule27 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -300 | 0,
      lowdist: 0,
      titledist: -300 | 0
    };
  }();
  var rule28 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 195,
      lowdist: 0,
      titledist: 195
    };
  }();
  var rule36 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 97,
      lowdist: 0,
      titledist: 97
    };
  }();
  var rule39 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 163,
      lowdist: 0,
      titledist: 163
    };
  }();
  var rule41 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 130,
      lowdist: 0,
      titledist: 130
    };
  }();
  var rule46 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 56,
      lowdist: 0,
      titledist: 56
    };
  }();
  var rule49 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -2 | 0,
      lowdist: 0,
      titledist: -1 | 0
    };
  }();
  var rule50 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -79 | 0,
      lowdist: 0,
      titledist: -79 | 0
    };
  }();
  var rule57 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 10815,
      lowdist: 0,
      titledist: 10815
    };
  }();
  var rule61 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 10783,
      lowdist: 0,
      titledist: 10783
    };
  }();
  var rule62 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 10780,
      lowdist: 0,
      titledist: 10780
    };
  }();
  var rule63 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 10782,
      lowdist: 0,
      titledist: 10782
    };
  }();
  var rule64 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -210 | 0,
      lowdist: 0,
      titledist: -210 | 0
    };
  }();
  var rule65 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -206 | 0,
      lowdist: 0,
      titledist: -206 | 0
    };
  }();
  var rule66 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -205 | 0,
      lowdist: 0,
      titledist: -205 | 0
    };
  }();
  var rule67 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -202 | 0,
      lowdist: 0,
      titledist: -202 | 0
    };
  }();
  var rule68 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -203 | 0,
      lowdist: 0,
      titledist: -203 | 0
    };
  }();
  var rule69 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 42319,
      lowdist: 0,
      titledist: 42319
    };
  }();
  var rule70 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 42315,
      lowdist: 0,
      titledist: 42315
    };
  }();
  var rule71 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -207 | 0,
      lowdist: 0,
      titledist: -207 | 0
    };
  }();
  var rule72 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 42280,
      lowdist: 0,
      titledist: 42280
    };
  }();
  var rule73 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 42308,
      lowdist: 0,
      titledist: 42308
    };
  }();
  var rule74 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -209 | 0,
      lowdist: 0,
      titledist: -209 | 0
    };
  }();
  var rule75 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -211 | 0,
      lowdist: 0,
      titledist: -211 | 0
    };
  }();
  var rule76 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 10743,
      lowdist: 0,
      titledist: 10743
    };
  }();
  var rule77 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 42305,
      lowdist: 0,
      titledist: 42305
    };
  }();
  var rule78 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 10749,
      lowdist: 0,
      titledist: 10749
    };
  }();
  var rule79 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -213 | 0,
      lowdist: 0,
      titledist: -213 | 0
    };
  }();
  var rule80 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -214 | 0,
      lowdist: 0,
      titledist: -214 | 0
    };
  }();
  var rule81 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 10727,
      lowdist: 0,
      titledist: 10727
    };
  }();
  var rule82 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -218 | 0,
      lowdist: 0,
      titledist: -218 | 0
    };
  }();
  var rule83 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 42307,
      lowdist: 0,
      titledist: 42307
    };
  }();
  var rule84 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 42282,
      lowdist: 0,
      titledist: 42282
    };
  }();
  var rule85 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -69 | 0,
      lowdist: 0,
      titledist: -69 | 0
    };
  }();
  var rule86 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -217 | 0,
      lowdist: 0,
      titledist: -217 | 0
    };
  }();
  var rule87 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -71 | 0,
      lowdist: 0,
      titledist: -71 | 0
    };
  }();
  var rule88 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -219 | 0,
      lowdist: 0,
      titledist: -219 | 0
    };
  }();
  var rule89 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 42261,
      lowdist: 0,
      titledist: 42261
    };
  }();
  var rule90 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 42258,
      lowdist: 0,
      titledist: 42258
    };
  }();
  var rule99 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -38 | 0,
      lowdist: 0,
      titledist: -38 | 0
    };
  }();
  var gencatCS = 134217728;
  var rule199 = /* @__PURE__ */ function() {
    return {
      category: gencatCS,
      unicodeCat: NUMCAT_CS.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatCO = 268435456;
  var rule200 = /* @__PURE__ */ function() {
    return {
      category: gencatCO,
      unicodeCat: NUMCAT_CO.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatCF = 65536;
  var rule16 = /* @__PURE__ */ function() {
    return {
      category: gencatCF,
      unicodeCat: NUMCAT_CF.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatCC = 1;
  var rule0 = /* @__PURE__ */ function() {
    return {
      category: gencatCC,
      unicodeCat: NUMCAT_CC.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var bsearch = function(a2) {
    return function(array) {
      return function(size5) {
        return function(compare10) {
          var go2 = function($copy_i) {
            return function($copy_k) {
              var $tco_var_i = $copy_i;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(i2, k) {
                if (i2 > k || i2 >= length5(array)) {
                  $tco_done = true;
                  return Nothing.value;
                }
                ;
                if (otherwise) {
                  var j = floor2(toNumber(i2 + k | 0) / 2);
                  var b2 = unsafeIndex3(array)(j);
                  var v = compare10(a2)(b2);
                  if (v instanceof EQ) {
                    $tco_done = true;
                    return new Just(b2);
                  }
                  ;
                  if (v instanceof GT) {
                    $tco_var_i = j + 1 | 0;
                    $copy_k = k;
                    return;
                  }
                  ;
                  $tco_var_i = i2;
                  $copy_k = j - 1 | 0;
                  return;
                }
                ;
                throw new Error("Failed pattern match at Data.CodePoint.Unicode.Internal (line 5622, column 3 - line 5632, column 30): " + [i2.constructor.name, k.constructor.name]);
              }
              ;
              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_i, $copy_k);
              }
              ;
              return $tco_result;
            };
          };
          return go2(0)(size5);
        };
      };
    };
  };
  var blkCmp = function(v) {
    return function(v1) {
      if (v.start >= v1.start && v.start < (v1.start + v1.length | 0)) {
        return EQ.value;
      }
      ;
      if (v.start > v1.start) {
        return GT.value;
      }
      ;
      if (otherwise) {
        return LT.value;
      }
      ;
      throw new Error("Failed pattern match at Data.CodePoint.Unicode.Internal (line 5598, column 1 - line 5598, column 45): " + [v.constructor.name, v1.constructor.name]);
    };
  };
  var getRule = function(blocks) {
    return function(unichar) {
      return function(size5) {
        var key6 = {
          start: unichar,
          length: 1,
          convRule: nullrule
        };
        var maybeCharBlock = bsearch(key6)(blocks)(size5)(blkCmp);
        if (maybeCharBlock instanceof Nothing) {
          return Nothing.value;
        }
        ;
        if (maybeCharBlock instanceof Just) {
          return new Just(maybeCharBlock.value0.convRule);
        }
        ;
        throw new Error("Failed pattern match at Data.CodePoint.Unicode.Internal (line 5612, column 5 - line 5614, column 60): " + [maybeCharBlock.constructor.name]);
      };
    };
  };
  var allchars = [{
    start: 0,
    length: 32,
    convRule: rule0
  }, {
    start: 32,
    length: 1,
    convRule: rule1
  }, {
    start: 33,
    length: 3,
    convRule: rule2
  }, {
    start: 36,
    length: 1,
    convRule: rule3
  }, {
    start: 37,
    length: 3,
    convRule: rule2
  }, {
    start: 40,
    length: 1,
    convRule: rule4
  }, {
    start: 41,
    length: 1,
    convRule: rule5
  }, {
    start: 42,
    length: 1,
    convRule: rule2
  }, {
    start: 43,
    length: 1,
    convRule: rule6
  }, {
    start: 44,
    length: 1,
    convRule: rule2
  }, {
    start: 45,
    length: 1,
    convRule: rule7
  }, {
    start: 46,
    length: 2,
    convRule: rule2
  }, {
    start: 48,
    length: 10,
    convRule: rule8
  }, {
    start: 58,
    length: 2,
    convRule: rule2
  }, {
    start: 60,
    length: 3,
    convRule: rule6
  }, {
    start: 63,
    length: 2,
    convRule: rule2
  }, {
    start: 65,
    length: 26,
    convRule: rule9
  }, {
    start: 91,
    length: 1,
    convRule: rule4
  }, {
    start: 92,
    length: 1,
    convRule: rule2
  }, {
    start: 93,
    length: 1,
    convRule: rule5
  }, {
    start: 94,
    length: 1,
    convRule: rule10
  }, {
    start: 95,
    length: 1,
    convRule: rule11
  }, {
    start: 96,
    length: 1,
    convRule: rule10
  }, {
    start: 97,
    length: 26,
    convRule: rule12
  }, {
    start: 123,
    length: 1,
    convRule: rule4
  }, {
    start: 124,
    length: 1,
    convRule: rule6
  }, {
    start: 125,
    length: 1,
    convRule: rule5
  }, {
    start: 126,
    length: 1,
    convRule: rule6
  }, {
    start: 127,
    length: 33,
    convRule: rule0
  }, {
    start: 160,
    length: 1,
    convRule: rule1
  }, {
    start: 161,
    length: 1,
    convRule: rule2
  }, {
    start: 162,
    length: 4,
    convRule: rule3
  }, {
    start: 166,
    length: 1,
    convRule: rule13
  }, {
    start: 167,
    length: 1,
    convRule: rule2
  }, {
    start: 168,
    length: 1,
    convRule: rule10
  }, {
    start: 169,
    length: 1,
    convRule: rule13
  }, {
    start: 170,
    length: 1,
    convRule: rule14
  }, {
    start: 171,
    length: 1,
    convRule: rule15
  }, {
    start: 172,
    length: 1,
    convRule: rule6
  }, {
    start: 173,
    length: 1,
    convRule: rule16
  }, {
    start: 174,
    length: 1,
    convRule: rule13
  }, {
    start: 175,
    length: 1,
    convRule: rule10
  }, {
    start: 176,
    length: 1,
    convRule: rule13
  }, {
    start: 177,
    length: 1,
    convRule: rule6
  }, {
    start: 178,
    length: 2,
    convRule: rule17
  }, {
    start: 180,
    length: 1,
    convRule: rule10
  }, {
    start: 181,
    length: 1,
    convRule: rule18
  }, {
    start: 182,
    length: 2,
    convRule: rule2
  }, {
    start: 184,
    length: 1,
    convRule: rule10
  }, {
    start: 185,
    length: 1,
    convRule: rule17
  }, {
    start: 186,
    length: 1,
    convRule: rule14
  }, {
    start: 187,
    length: 1,
    convRule: rule19
  }, {
    start: 188,
    length: 3,
    convRule: rule17
  }, {
    start: 191,
    length: 1,
    convRule: rule2
  }, {
    start: 192,
    length: 23,
    convRule: rule9
  }, {
    start: 215,
    length: 1,
    convRule: rule6
  }, {
    start: 216,
    length: 7,
    convRule: rule9
  }, {
    start: 223,
    length: 1,
    convRule: rule20
  }, {
    start: 224,
    length: 23,
    convRule: rule12
  }, {
    start: 247,
    length: 1,
    convRule: rule6
  }, {
    start: 248,
    length: 7,
    convRule: rule12
  }, {
    start: 255,
    length: 1,
    convRule: rule21
  }, {
    start: 256,
    length: 1,
    convRule: rule22
  }, {
    start: 257,
    length: 1,
    convRule: rule23
  }, {
    start: 258,
    length: 1,
    convRule: rule22
  }, {
    start: 259,
    length: 1,
    convRule: rule23
  }, {
    start: 260,
    length: 1,
    convRule: rule22
  }, {
    start: 261,
    length: 1,
    convRule: rule23
  }, {
    start: 262,
    length: 1,
    convRule: rule22
  }, {
    start: 263,
    length: 1,
    convRule: rule23
  }, {
    start: 264,
    length: 1,
    convRule: rule22
  }, {
    start: 265,
    length: 1,
    convRule: rule23
  }, {
    start: 266,
    length: 1,
    convRule: rule22
  }, {
    start: 267,
    length: 1,
    convRule: rule23
  }, {
    start: 268,
    length: 1,
    convRule: rule22
  }, {
    start: 269,
    length: 1,
    convRule: rule23
  }, {
    start: 270,
    length: 1,
    convRule: rule22
  }, {
    start: 271,
    length: 1,
    convRule: rule23
  }, {
    start: 272,
    length: 1,
    convRule: rule22
  }, {
    start: 273,
    length: 1,
    convRule: rule23
  }, {
    start: 274,
    length: 1,
    convRule: rule22
  }, {
    start: 275,
    length: 1,
    convRule: rule23
  }, {
    start: 276,
    length: 1,
    convRule: rule22
  }, {
    start: 277,
    length: 1,
    convRule: rule23
  }, {
    start: 278,
    length: 1,
    convRule: rule22
  }, {
    start: 279,
    length: 1,
    convRule: rule23
  }, {
    start: 280,
    length: 1,
    convRule: rule22
  }, {
    start: 281,
    length: 1,
    convRule: rule23
  }, {
    start: 282,
    length: 1,
    convRule: rule22
  }, {
    start: 283,
    length: 1,
    convRule: rule23
  }, {
    start: 284,
    length: 1,
    convRule: rule22
  }, {
    start: 285,
    length: 1,
    convRule: rule23
  }, {
    start: 286,
    length: 1,
    convRule: rule22
  }, {
    start: 287,
    length: 1,
    convRule: rule23
  }, {
    start: 288,
    length: 1,
    convRule: rule22
  }, {
    start: 289,
    length: 1,
    convRule: rule23
  }, {
    start: 290,
    length: 1,
    convRule: rule22
  }, {
    start: 291,
    length: 1,
    convRule: rule23
  }, {
    start: 292,
    length: 1,
    convRule: rule22
  }, {
    start: 293,
    length: 1,
    convRule: rule23
  }, {
    start: 294,
    length: 1,
    convRule: rule22
  }, {
    start: 295,
    length: 1,
    convRule: rule23
  }, {
    start: 296,
    length: 1,
    convRule: rule22
  }, {
    start: 297,
    length: 1,
    convRule: rule23
  }, {
    start: 298,
    length: 1,
    convRule: rule22
  }, {
    start: 299,
    length: 1,
    convRule: rule23
  }, {
    start: 300,
    length: 1,
    convRule: rule22
  }, {
    start: 301,
    length: 1,
    convRule: rule23
  }, {
    start: 302,
    length: 1,
    convRule: rule22
  }, {
    start: 303,
    length: 1,
    convRule: rule23
  }, {
    start: 304,
    length: 1,
    convRule: rule24
  }, {
    start: 305,
    length: 1,
    convRule: rule25
  }, {
    start: 306,
    length: 1,
    convRule: rule22
  }, {
    start: 307,
    length: 1,
    convRule: rule23
  }, {
    start: 308,
    length: 1,
    convRule: rule22
  }, {
    start: 309,
    length: 1,
    convRule: rule23
  }, {
    start: 310,
    length: 1,
    convRule: rule22
  }, {
    start: 311,
    length: 1,
    convRule: rule23
  }, {
    start: 312,
    length: 1,
    convRule: rule20
  }, {
    start: 313,
    length: 1,
    convRule: rule22
  }, {
    start: 314,
    length: 1,
    convRule: rule23
  }, {
    start: 315,
    length: 1,
    convRule: rule22
  }, {
    start: 316,
    length: 1,
    convRule: rule23
  }, {
    start: 317,
    length: 1,
    convRule: rule22
  }, {
    start: 318,
    length: 1,
    convRule: rule23
  }, {
    start: 319,
    length: 1,
    convRule: rule22
  }, {
    start: 320,
    length: 1,
    convRule: rule23
  }, {
    start: 321,
    length: 1,
    convRule: rule22
  }, {
    start: 322,
    length: 1,
    convRule: rule23
  }, {
    start: 323,
    length: 1,
    convRule: rule22
  }, {
    start: 324,
    length: 1,
    convRule: rule23
  }, {
    start: 325,
    length: 1,
    convRule: rule22
  }, {
    start: 326,
    length: 1,
    convRule: rule23
  }, {
    start: 327,
    length: 1,
    convRule: rule22
  }, {
    start: 328,
    length: 1,
    convRule: rule23
  }, {
    start: 329,
    length: 1,
    convRule: rule20
  }, {
    start: 330,
    length: 1,
    convRule: rule22
  }, {
    start: 331,
    length: 1,
    convRule: rule23
  }, {
    start: 332,
    length: 1,
    convRule: rule22
  }, {
    start: 333,
    length: 1,
    convRule: rule23
  }, {
    start: 334,
    length: 1,
    convRule: rule22
  }, {
    start: 335,
    length: 1,
    convRule: rule23
  }, {
    start: 336,
    length: 1,
    convRule: rule22
  }, {
    start: 337,
    length: 1,
    convRule: rule23
  }, {
    start: 338,
    length: 1,
    convRule: rule22
  }, {
    start: 339,
    length: 1,
    convRule: rule23
  }, {
    start: 340,
    length: 1,
    convRule: rule22
  }, {
    start: 341,
    length: 1,
    convRule: rule23
  }, {
    start: 342,
    length: 1,
    convRule: rule22
  }, {
    start: 343,
    length: 1,
    convRule: rule23
  }, {
    start: 344,
    length: 1,
    convRule: rule22
  }, {
    start: 345,
    length: 1,
    convRule: rule23
  }, {
    start: 346,
    length: 1,
    convRule: rule22
  }, {
    start: 347,
    length: 1,
    convRule: rule23
  }, {
    start: 348,
    length: 1,
    convRule: rule22
  }, {
    start: 349,
    length: 1,
    convRule: rule23
  }, {
    start: 350,
    length: 1,
    convRule: rule22
  }, {
    start: 351,
    length: 1,
    convRule: rule23
  }, {
    start: 352,
    length: 1,
    convRule: rule22
  }, {
    start: 353,
    length: 1,
    convRule: rule23
  }, {
    start: 354,
    length: 1,
    convRule: rule22
  }, {
    start: 355,
    length: 1,
    convRule: rule23
  }, {
    start: 356,
    length: 1,
    convRule: rule22
  }, {
    start: 357,
    length: 1,
    convRule: rule23
  }, {
    start: 358,
    length: 1,
    convRule: rule22
  }, {
    start: 359,
    length: 1,
    convRule: rule23
  }, {
    start: 360,
    length: 1,
    convRule: rule22
  }, {
    start: 361,
    length: 1,
    convRule: rule23
  }, {
    start: 362,
    length: 1,
    convRule: rule22
  }, {
    start: 363,
    length: 1,
    convRule: rule23
  }, {
    start: 364,
    length: 1,
    convRule: rule22
  }, {
    start: 365,
    length: 1,
    convRule: rule23
  }, {
    start: 366,
    length: 1,
    convRule: rule22
  }, {
    start: 367,
    length: 1,
    convRule: rule23
  }, {
    start: 368,
    length: 1,
    convRule: rule22
  }, {
    start: 369,
    length: 1,
    convRule: rule23
  }, {
    start: 370,
    length: 1,
    convRule: rule22
  }, {
    start: 371,
    length: 1,
    convRule: rule23
  }, {
    start: 372,
    length: 1,
    convRule: rule22
  }, {
    start: 373,
    length: 1,
    convRule: rule23
  }, {
    start: 374,
    length: 1,
    convRule: rule22
  }, {
    start: 375,
    length: 1,
    convRule: rule23
  }, {
    start: 376,
    length: 1,
    convRule: rule26
  }, {
    start: 377,
    length: 1,
    convRule: rule22
  }, {
    start: 378,
    length: 1,
    convRule: rule23
  }, {
    start: 379,
    length: 1,
    convRule: rule22
  }, {
    start: 380,
    length: 1,
    convRule: rule23
  }, {
    start: 381,
    length: 1,
    convRule: rule22
  }, {
    start: 382,
    length: 1,
    convRule: rule23
  }, {
    start: 383,
    length: 1,
    convRule: rule27
  }, {
    start: 384,
    length: 1,
    convRule: rule28
  }, {
    start: 385,
    length: 1,
    convRule: rule29
  }, {
    start: 386,
    length: 1,
    convRule: rule22
  }, {
    start: 387,
    length: 1,
    convRule: rule23
  }, {
    start: 388,
    length: 1,
    convRule: rule22
  }, {
    start: 389,
    length: 1,
    convRule: rule23
  }, {
    start: 390,
    length: 1,
    convRule: rule30
  }, {
    start: 391,
    length: 1,
    convRule: rule22
  }, {
    start: 392,
    length: 1,
    convRule: rule23
  }, {
    start: 393,
    length: 2,
    convRule: rule31
  }, {
    start: 395,
    length: 1,
    convRule: rule22
  }, {
    start: 396,
    length: 1,
    convRule: rule23
  }, {
    start: 397,
    length: 1,
    convRule: rule20
  }, {
    start: 398,
    length: 1,
    convRule: rule32
  }, {
    start: 399,
    length: 1,
    convRule: rule33
  }, {
    start: 400,
    length: 1,
    convRule: rule34
  }, {
    start: 401,
    length: 1,
    convRule: rule22
  }, {
    start: 402,
    length: 1,
    convRule: rule23
  }, {
    start: 403,
    length: 1,
    convRule: rule31
  }, {
    start: 404,
    length: 1,
    convRule: rule35
  }, {
    start: 405,
    length: 1,
    convRule: rule36
  }, {
    start: 406,
    length: 1,
    convRule: rule37
  }, {
    start: 407,
    length: 1,
    convRule: rule38
  }, {
    start: 408,
    length: 1,
    convRule: rule22
  }, {
    start: 409,
    length: 1,
    convRule: rule23
  }, {
    start: 410,
    length: 1,
    convRule: rule39
  }, {
    start: 411,
    length: 1,
    convRule: rule20
  }, {
    start: 412,
    length: 1,
    convRule: rule37
  }, {
    start: 413,
    length: 1,
    convRule: rule40
  }, {
    start: 414,
    length: 1,
    convRule: rule41
  }, {
    start: 415,
    length: 1,
    convRule: rule42
  }, {
    start: 416,
    length: 1,
    convRule: rule22
  }, {
    start: 417,
    length: 1,
    convRule: rule23
  }, {
    start: 418,
    length: 1,
    convRule: rule22
  }, {
    start: 419,
    length: 1,
    convRule: rule23
  }, {
    start: 420,
    length: 1,
    convRule: rule22
  }, {
    start: 421,
    length: 1,
    convRule: rule23
  }, {
    start: 422,
    length: 1,
    convRule: rule43
  }, {
    start: 423,
    length: 1,
    convRule: rule22
  }, {
    start: 424,
    length: 1,
    convRule: rule23
  }, {
    start: 425,
    length: 1,
    convRule: rule43
  }, {
    start: 426,
    length: 2,
    convRule: rule20
  }, {
    start: 428,
    length: 1,
    convRule: rule22
  }, {
    start: 429,
    length: 1,
    convRule: rule23
  }, {
    start: 430,
    length: 1,
    convRule: rule43
  }, {
    start: 431,
    length: 1,
    convRule: rule22
  }, {
    start: 432,
    length: 1,
    convRule: rule23
  }, {
    start: 433,
    length: 2,
    convRule: rule44
  }, {
    start: 435,
    length: 1,
    convRule: rule22
  }, {
    start: 436,
    length: 1,
    convRule: rule23
  }, {
    start: 437,
    length: 1,
    convRule: rule22
  }, {
    start: 438,
    length: 1,
    convRule: rule23
  }, {
    start: 439,
    length: 1,
    convRule: rule45
  }, {
    start: 440,
    length: 1,
    convRule: rule22
  }, {
    start: 441,
    length: 1,
    convRule: rule23
  }, {
    start: 442,
    length: 1,
    convRule: rule20
  }, {
    start: 443,
    length: 1,
    convRule: rule14
  }, {
    start: 444,
    length: 1,
    convRule: rule22
  }, {
    start: 445,
    length: 1,
    convRule: rule23
  }, {
    start: 446,
    length: 1,
    convRule: rule20
  }, {
    start: 447,
    length: 1,
    convRule: rule46
  }, {
    start: 448,
    length: 4,
    convRule: rule14
  }, {
    start: 452,
    length: 1,
    convRule: rule47
  }, {
    start: 453,
    length: 1,
    convRule: rule48
  }, {
    start: 454,
    length: 1,
    convRule: rule49
  }, {
    start: 455,
    length: 1,
    convRule: rule47
  }, {
    start: 456,
    length: 1,
    convRule: rule48
  }, {
    start: 457,
    length: 1,
    convRule: rule49
  }, {
    start: 458,
    length: 1,
    convRule: rule47
  }, {
    start: 459,
    length: 1,
    convRule: rule48
  }, {
    start: 460,
    length: 1,
    convRule: rule49
  }, {
    start: 461,
    length: 1,
    convRule: rule22
  }, {
    start: 462,
    length: 1,
    convRule: rule23
  }, {
    start: 463,
    length: 1,
    convRule: rule22
  }, {
    start: 464,
    length: 1,
    convRule: rule23
  }, {
    start: 465,
    length: 1,
    convRule: rule22
  }, {
    start: 466,
    length: 1,
    convRule: rule23
  }, {
    start: 467,
    length: 1,
    convRule: rule22
  }, {
    start: 468,
    length: 1,
    convRule: rule23
  }, {
    start: 469,
    length: 1,
    convRule: rule22
  }, {
    start: 470,
    length: 1,
    convRule: rule23
  }, {
    start: 471,
    length: 1,
    convRule: rule22
  }, {
    start: 472,
    length: 1,
    convRule: rule23
  }, {
    start: 473,
    length: 1,
    convRule: rule22
  }, {
    start: 474,
    length: 1,
    convRule: rule23
  }, {
    start: 475,
    length: 1,
    convRule: rule22
  }, {
    start: 476,
    length: 1,
    convRule: rule23
  }, {
    start: 477,
    length: 1,
    convRule: rule50
  }, {
    start: 478,
    length: 1,
    convRule: rule22
  }, {
    start: 479,
    length: 1,
    convRule: rule23
  }, {
    start: 480,
    length: 1,
    convRule: rule22
  }, {
    start: 481,
    length: 1,
    convRule: rule23
  }, {
    start: 482,
    length: 1,
    convRule: rule22
  }, {
    start: 483,
    length: 1,
    convRule: rule23
  }, {
    start: 484,
    length: 1,
    convRule: rule22
  }, {
    start: 485,
    length: 1,
    convRule: rule23
  }, {
    start: 486,
    length: 1,
    convRule: rule22
  }, {
    start: 487,
    length: 1,
    convRule: rule23
  }, {
    start: 488,
    length: 1,
    convRule: rule22
  }, {
    start: 489,
    length: 1,
    convRule: rule23
  }, {
    start: 490,
    length: 1,
    convRule: rule22
  }, {
    start: 491,
    length: 1,
    convRule: rule23
  }, {
    start: 492,
    length: 1,
    convRule: rule22
  }, {
    start: 493,
    length: 1,
    convRule: rule23
  }, {
    start: 494,
    length: 1,
    convRule: rule22
  }, {
    start: 495,
    length: 1,
    convRule: rule23
  }, {
    start: 496,
    length: 1,
    convRule: rule20
  }, {
    start: 497,
    length: 1,
    convRule: rule47
  }, {
    start: 498,
    length: 1,
    convRule: rule48
  }, {
    start: 499,
    length: 1,
    convRule: rule49
  }, {
    start: 500,
    length: 1,
    convRule: rule22
  }, {
    start: 501,
    length: 1,
    convRule: rule23
  }, {
    start: 502,
    length: 1,
    convRule: rule51
  }, {
    start: 503,
    length: 1,
    convRule: rule52
  }, {
    start: 504,
    length: 1,
    convRule: rule22
  }, {
    start: 505,
    length: 1,
    convRule: rule23
  }, {
    start: 506,
    length: 1,
    convRule: rule22
  }, {
    start: 507,
    length: 1,
    convRule: rule23
  }, {
    start: 508,
    length: 1,
    convRule: rule22
  }, {
    start: 509,
    length: 1,
    convRule: rule23
  }, {
    start: 510,
    length: 1,
    convRule: rule22
  }, {
    start: 511,
    length: 1,
    convRule: rule23
  }, {
    start: 512,
    length: 1,
    convRule: rule22
  }, {
    start: 513,
    length: 1,
    convRule: rule23
  }, {
    start: 514,
    length: 1,
    convRule: rule22
  }, {
    start: 515,
    length: 1,
    convRule: rule23
  }, {
    start: 516,
    length: 1,
    convRule: rule22
  }, {
    start: 517,
    length: 1,
    convRule: rule23
  }, {
    start: 518,
    length: 1,
    convRule: rule22
  }, {
    start: 519,
    length: 1,
    convRule: rule23
  }, {
    start: 520,
    length: 1,
    convRule: rule22
  }, {
    start: 521,
    length: 1,
    convRule: rule23
  }, {
    start: 522,
    length: 1,
    convRule: rule22
  }, {
    start: 523,
    length: 1,
    convRule: rule23
  }, {
    start: 524,
    length: 1,
    convRule: rule22
  }, {
    start: 525,
    length: 1,
    convRule: rule23
  }, {
    start: 526,
    length: 1,
    convRule: rule22
  }, {
    start: 527,
    length: 1,
    convRule: rule23
  }, {
    start: 528,
    length: 1,
    convRule: rule22
  }, {
    start: 529,
    length: 1,
    convRule: rule23
  }, {
    start: 530,
    length: 1,
    convRule: rule22
  }, {
    start: 531,
    length: 1,
    convRule: rule23
  }, {
    start: 532,
    length: 1,
    convRule: rule22
  }, {
    start: 533,
    length: 1,
    convRule: rule23
  }, {
    start: 534,
    length: 1,
    convRule: rule22
  }, {
    start: 535,
    length: 1,
    convRule: rule23
  }, {
    start: 536,
    length: 1,
    convRule: rule22
  }, {
    start: 537,
    length: 1,
    convRule: rule23
  }, {
    start: 538,
    length: 1,
    convRule: rule22
  }, {
    start: 539,
    length: 1,
    convRule: rule23
  }, {
    start: 540,
    length: 1,
    convRule: rule22
  }, {
    start: 541,
    length: 1,
    convRule: rule23
  }, {
    start: 542,
    length: 1,
    convRule: rule22
  }, {
    start: 543,
    length: 1,
    convRule: rule23
  }, {
    start: 544,
    length: 1,
    convRule: rule53
  }, {
    start: 545,
    length: 1,
    convRule: rule20
  }, {
    start: 546,
    length: 1,
    convRule: rule22
  }, {
    start: 547,
    length: 1,
    convRule: rule23
  }, {
    start: 548,
    length: 1,
    convRule: rule22
  }, {
    start: 549,
    length: 1,
    convRule: rule23
  }, {
    start: 550,
    length: 1,
    convRule: rule22
  }, {
    start: 551,
    length: 1,
    convRule: rule23
  }, {
    start: 552,
    length: 1,
    convRule: rule22
  }, {
    start: 553,
    length: 1,
    convRule: rule23
  }, {
    start: 554,
    length: 1,
    convRule: rule22
  }, {
    start: 555,
    length: 1,
    convRule: rule23
  }, {
    start: 556,
    length: 1,
    convRule: rule22
  }, {
    start: 557,
    length: 1,
    convRule: rule23
  }, {
    start: 558,
    length: 1,
    convRule: rule22
  }, {
    start: 559,
    length: 1,
    convRule: rule23
  }, {
    start: 560,
    length: 1,
    convRule: rule22
  }, {
    start: 561,
    length: 1,
    convRule: rule23
  }, {
    start: 562,
    length: 1,
    convRule: rule22
  }, {
    start: 563,
    length: 1,
    convRule: rule23
  }, {
    start: 564,
    length: 6,
    convRule: rule20
  }, {
    start: 570,
    length: 1,
    convRule: rule54
  }, {
    start: 571,
    length: 1,
    convRule: rule22
  }, {
    start: 572,
    length: 1,
    convRule: rule23
  }, {
    start: 573,
    length: 1,
    convRule: rule55
  }, {
    start: 574,
    length: 1,
    convRule: rule56
  }, {
    start: 575,
    length: 2,
    convRule: rule57
  }, {
    start: 577,
    length: 1,
    convRule: rule22
  }, {
    start: 578,
    length: 1,
    convRule: rule23
  }, {
    start: 579,
    length: 1,
    convRule: rule58
  }, {
    start: 580,
    length: 1,
    convRule: rule59
  }, {
    start: 581,
    length: 1,
    convRule: rule60
  }, {
    start: 582,
    length: 1,
    convRule: rule22
  }, {
    start: 583,
    length: 1,
    convRule: rule23
  }, {
    start: 584,
    length: 1,
    convRule: rule22
  }, {
    start: 585,
    length: 1,
    convRule: rule23
  }, {
    start: 586,
    length: 1,
    convRule: rule22
  }, {
    start: 587,
    length: 1,
    convRule: rule23
  }, {
    start: 588,
    length: 1,
    convRule: rule22
  }, {
    start: 589,
    length: 1,
    convRule: rule23
  }, {
    start: 590,
    length: 1,
    convRule: rule22
  }, {
    start: 591,
    length: 1,
    convRule: rule23
  }, {
    start: 592,
    length: 1,
    convRule: rule61
  }, {
    start: 593,
    length: 1,
    convRule: rule62
  }, {
    start: 594,
    length: 1,
    convRule: rule63
  }, {
    start: 595,
    length: 1,
    convRule: rule64
  }, {
    start: 596,
    length: 1,
    convRule: rule65
  }, {
    start: 597,
    length: 1,
    convRule: rule20
  }, {
    start: 598,
    length: 2,
    convRule: rule66
  }, {
    start: 600,
    length: 1,
    convRule: rule20
  }, {
    start: 601,
    length: 1,
    convRule: rule67
  }, {
    start: 602,
    length: 1,
    convRule: rule20
  }, {
    start: 603,
    length: 1,
    convRule: rule68
  }, {
    start: 604,
    length: 1,
    convRule: rule69
  }, {
    start: 605,
    length: 3,
    convRule: rule20
  }, {
    start: 608,
    length: 1,
    convRule: rule66
  }, {
    start: 609,
    length: 1,
    convRule: rule70
  }, {
    start: 610,
    length: 1,
    convRule: rule20
  }, {
    start: 611,
    length: 1,
    convRule: rule71
  }, {
    start: 612,
    length: 1,
    convRule: rule20
  }, {
    start: 613,
    length: 1,
    convRule: rule72
  }, {
    start: 614,
    length: 1,
    convRule: rule73
  }, {
    start: 615,
    length: 1,
    convRule: rule20
  }, {
    start: 616,
    length: 1,
    convRule: rule74
  }, {
    start: 617,
    length: 1,
    convRule: rule75
  }, {
    start: 618,
    length: 1,
    convRule: rule73
  }, {
    start: 619,
    length: 1,
    convRule: rule76
  }, {
    start: 620,
    length: 1,
    convRule: rule77
  }, {
    start: 621,
    length: 2,
    convRule: rule20
  }, {
    start: 623,
    length: 1,
    convRule: rule75
  }, {
    start: 624,
    length: 1,
    convRule: rule20
  }, {
    start: 625,
    length: 1,
    convRule: rule78
  }, {
    start: 626,
    length: 1,
    convRule: rule79
  }, {
    start: 627,
    length: 2,
    convRule: rule20
  }, {
    start: 629,
    length: 1,
    convRule: rule80
  }, {
    start: 630,
    length: 7,
    convRule: rule20
  }, {
    start: 637,
    length: 1,
    convRule: rule81
  }, {
    start: 638,
    length: 2,
    convRule: rule20
  }, {
    start: 640,
    length: 1,
    convRule: rule82
  }, {
    start: 641,
    length: 1,
    convRule: rule20
  }, {
    start: 642,
    length: 1,
    convRule: rule83
  }, {
    start: 643,
    length: 1,
    convRule: rule82
  }, {
    start: 644,
    length: 3,
    convRule: rule20
  }, {
    start: 647,
    length: 1,
    convRule: rule84
  }, {
    start: 648,
    length: 1,
    convRule: rule82
  }, {
    start: 649,
    length: 1,
    convRule: rule85
  }, {
    start: 650,
    length: 2,
    convRule: rule86
  }, {
    start: 652,
    length: 1,
    convRule: rule87
  }, {
    start: 653,
    length: 5,
    convRule: rule20
  }, {
    start: 658,
    length: 1,
    convRule: rule88
  }, {
    start: 659,
    length: 1,
    convRule: rule20
  }, {
    start: 660,
    length: 1,
    convRule: rule14
  }, {
    start: 661,
    length: 8,
    convRule: rule20
  }, {
    start: 669,
    length: 1,
    convRule: rule89
  }, {
    start: 670,
    length: 1,
    convRule: rule90
  }, {
    start: 671,
    length: 17,
    convRule: rule20
  }, {
    start: 688,
    length: 18,
    convRule: rule91
  }, {
    start: 706,
    length: 4,
    convRule: rule10
  }, {
    start: 710,
    length: 12,
    convRule: rule91
  }, {
    start: 722,
    length: 14,
    convRule: rule10
  }, {
    start: 736,
    length: 5,
    convRule: rule91
  }, {
    start: 741,
    length: 7,
    convRule: rule10
  }, {
    start: 748,
    length: 1,
    convRule: rule91
  }, {
    start: 749,
    length: 1,
    convRule: rule10
  }, {
    start: 750,
    length: 1,
    convRule: rule91
  }, {
    start: 751,
    length: 17,
    convRule: rule10
  }, {
    start: 768,
    length: 69,
    convRule: rule92
  }, {
    start: 837,
    length: 1,
    convRule: rule93
  }, {
    start: 838,
    length: 42,
    convRule: rule92
  }, {
    start: 880,
    length: 1,
    convRule: rule22
  }, {
    start: 881,
    length: 1,
    convRule: rule23
  }, {
    start: 882,
    length: 1,
    convRule: rule22
  }, {
    start: 883,
    length: 1,
    convRule: rule23
  }, {
    start: 884,
    length: 1,
    convRule: rule91
  }, {
    start: 885,
    length: 1,
    convRule: rule10
  }, {
    start: 886,
    length: 1,
    convRule: rule22
  }, {
    start: 887,
    length: 1,
    convRule: rule23
  }, {
    start: 890,
    length: 1,
    convRule: rule91
  }, {
    start: 891,
    length: 3,
    convRule: rule41
  }, {
    start: 894,
    length: 1,
    convRule: rule2
  }, {
    start: 895,
    length: 1,
    convRule: rule94
  }, {
    start: 900,
    length: 2,
    convRule: rule10
  }, {
    start: 902,
    length: 1,
    convRule: rule95
  }, {
    start: 903,
    length: 1,
    convRule: rule2
  }, {
    start: 904,
    length: 3,
    convRule: rule96
  }, {
    start: 908,
    length: 1,
    convRule: rule97
  }, {
    start: 910,
    length: 2,
    convRule: rule98
  }, {
    start: 912,
    length: 1,
    convRule: rule20
  }, {
    start: 913,
    length: 17,
    convRule: rule9
  }, {
    start: 931,
    length: 9,
    convRule: rule9
  }, {
    start: 940,
    length: 1,
    convRule: rule99
  }, {
    start: 941,
    length: 3,
    convRule: rule100
  }, {
    start: 944,
    length: 1,
    convRule: rule20
  }, {
    start: 945,
    length: 17,
    convRule: rule12
  }, {
    start: 962,
    length: 1,
    convRule: rule101
  }, {
    start: 963,
    length: 9,
    convRule: rule12
  }, {
    start: 972,
    length: 1,
    convRule: rule102
  }, {
    start: 973,
    length: 2,
    convRule: rule103
  }, {
    start: 975,
    length: 1,
    convRule: rule104
  }, {
    start: 976,
    length: 1,
    convRule: rule105
  }, {
    start: 977,
    length: 1,
    convRule: rule106
  }, {
    start: 978,
    length: 3,
    convRule: rule107
  }, {
    start: 981,
    length: 1,
    convRule: rule108
  }, {
    start: 982,
    length: 1,
    convRule: rule109
  }, {
    start: 983,
    length: 1,
    convRule: rule110
  }, {
    start: 984,
    length: 1,
    convRule: rule22
  }, {
    start: 985,
    length: 1,
    convRule: rule23
  }, {
    start: 986,
    length: 1,
    convRule: rule22
  }, {
    start: 987,
    length: 1,
    convRule: rule23
  }, {
    start: 988,
    length: 1,
    convRule: rule22
  }, {
    start: 989,
    length: 1,
    convRule: rule23
  }, {
    start: 990,
    length: 1,
    convRule: rule22
  }, {
    start: 991,
    length: 1,
    convRule: rule23
  }, {
    start: 992,
    length: 1,
    convRule: rule22
  }, {
    start: 993,
    length: 1,
    convRule: rule23
  }, {
    start: 994,
    length: 1,
    convRule: rule22
  }, {
    start: 995,
    length: 1,
    convRule: rule23
  }, {
    start: 996,
    length: 1,
    convRule: rule22
  }, {
    start: 997,
    length: 1,
    convRule: rule23
  }, {
    start: 998,
    length: 1,
    convRule: rule22
  }, {
    start: 999,
    length: 1,
    convRule: rule23
  }, {
    start: 1e3,
    length: 1,
    convRule: rule22
  }, {
    start: 1001,
    length: 1,
    convRule: rule23
  }, {
    start: 1002,
    length: 1,
    convRule: rule22
  }, {
    start: 1003,
    length: 1,
    convRule: rule23
  }, {
    start: 1004,
    length: 1,
    convRule: rule22
  }, {
    start: 1005,
    length: 1,
    convRule: rule23
  }, {
    start: 1006,
    length: 1,
    convRule: rule22
  }, {
    start: 1007,
    length: 1,
    convRule: rule23
  }, {
    start: 1008,
    length: 1,
    convRule: rule111
  }, {
    start: 1009,
    length: 1,
    convRule: rule112
  }, {
    start: 1010,
    length: 1,
    convRule: rule113
  }, {
    start: 1011,
    length: 1,
    convRule: rule114
  }, {
    start: 1012,
    length: 1,
    convRule: rule115
  }, {
    start: 1013,
    length: 1,
    convRule: rule116
  }, {
    start: 1014,
    length: 1,
    convRule: rule6
  }, {
    start: 1015,
    length: 1,
    convRule: rule22
  }, {
    start: 1016,
    length: 1,
    convRule: rule23
  }, {
    start: 1017,
    length: 1,
    convRule: rule117
  }, {
    start: 1018,
    length: 1,
    convRule: rule22
  }, {
    start: 1019,
    length: 1,
    convRule: rule23
  }, {
    start: 1020,
    length: 1,
    convRule: rule20
  }, {
    start: 1021,
    length: 3,
    convRule: rule53
  }, {
    start: 1024,
    length: 16,
    convRule: rule118
  }, {
    start: 1040,
    length: 32,
    convRule: rule9
  }, {
    start: 1072,
    length: 32,
    convRule: rule12
  }, {
    start: 1104,
    length: 16,
    convRule: rule112
  }, {
    start: 1120,
    length: 1,
    convRule: rule22
  }, {
    start: 1121,
    length: 1,
    convRule: rule23
  }, {
    start: 1122,
    length: 1,
    convRule: rule22
  }, {
    start: 1123,
    length: 1,
    convRule: rule23
  }, {
    start: 1124,
    length: 1,
    convRule: rule22
  }, {
    start: 1125,
    length: 1,
    convRule: rule23
  }, {
    start: 1126,
    length: 1,
    convRule: rule22
  }, {
    start: 1127,
    length: 1,
    convRule: rule23
  }, {
    start: 1128,
    length: 1,
    convRule: rule22
  }, {
    start: 1129,
    length: 1,
    convRule: rule23
  }, {
    start: 1130,
    length: 1,
    convRule: rule22
  }, {
    start: 1131,
    length: 1,
    convRule: rule23
  }, {
    start: 1132,
    length: 1,
    convRule: rule22
  }, {
    start: 1133,
    length: 1,
    convRule: rule23
  }, {
    start: 1134,
    length: 1,
    convRule: rule22
  }, {
    start: 1135,
    length: 1,
    convRule: rule23
  }, {
    start: 1136,
    length: 1,
    convRule: rule22
  }, {
    start: 1137,
    length: 1,
    convRule: rule23
  }, {
    start: 1138,
    length: 1,
    convRule: rule22
  }, {
    start: 1139,
    length: 1,
    convRule: rule23
  }, {
    start: 1140,
    length: 1,
    convRule: rule22
  }, {
    start: 1141,
    length: 1,
    convRule: rule23
  }, {
    start: 1142,
    length: 1,
    convRule: rule22
  }, {
    start: 1143,
    length: 1,
    convRule: rule23
  }, {
    start: 1144,
    length: 1,
    convRule: rule22
  }, {
    start: 1145,
    length: 1,
    convRule: rule23
  }, {
    start: 1146,
    length: 1,
    convRule: rule22
  }, {
    start: 1147,
    length: 1,
    convRule: rule23
  }, {
    start: 1148,
    length: 1,
    convRule: rule22
  }, {
    start: 1149,
    length: 1,
    convRule: rule23
  }, {
    start: 1150,
    length: 1,
    convRule: rule22
  }, {
    start: 1151,
    length: 1,
    convRule: rule23
  }, {
    start: 1152,
    length: 1,
    convRule: rule22
  }, {
    start: 1153,
    length: 1,
    convRule: rule23
  }, {
    start: 1154,
    length: 1,
    convRule: rule13
  }, {
    start: 1155,
    length: 5,
    convRule: rule92
  }, {
    start: 1160,
    length: 2,
    convRule: rule119
  }, {
    start: 1162,
    length: 1,
    convRule: rule22
  }, {
    start: 1163,
    length: 1,
    convRule: rule23
  }, {
    start: 1164,
    length: 1,
    convRule: rule22
  }, {
    start: 1165,
    length: 1,
    convRule: rule23
  }, {
    start: 1166,
    length: 1,
    convRule: rule22
  }, {
    start: 1167,
    length: 1,
    convRule: rule23
  }, {
    start: 1168,
    length: 1,
    convRule: rule22
  }, {
    start: 1169,
    length: 1,
    convRule: rule23
  }, {
    start: 1170,
    length: 1,
    convRule: rule22
  }, {
    start: 1171,
    length: 1,
    convRule: rule23
  }, {
    start: 1172,
    length: 1,
    convRule: rule22
  }, {
    start: 1173,
    length: 1,
    convRule: rule23
  }, {
    start: 1174,
    length: 1,
    convRule: rule22
  }, {
    start: 1175,
    length: 1,
    convRule: rule23
  }, {
    start: 1176,
    length: 1,
    convRule: rule22
  }, {
    start: 1177,
    length: 1,
    convRule: rule23
  }, {
    start: 1178,
    length: 1,
    convRule: rule22
  }, {
    start: 1179,
    length: 1,
    convRule: rule23
  }, {
    start: 1180,
    length: 1,
    convRule: rule22
  }, {
    start: 1181,
    length: 1,
    convRule: rule23
  }, {
    start: 1182,
    length: 1,
    convRule: rule22
  }, {
    start: 1183,
    length: 1,
    convRule: rule23
  }, {
    start: 1184,
    length: 1,
    convRule: rule22
  }, {
    start: 1185,
    length: 1,
    convRule: rule23
  }, {
    start: 1186,
    length: 1,
    convRule: rule22
  }, {
    start: 1187,
    length: 1,
    convRule: rule23
  }, {
    start: 1188,
    length: 1,
    convRule: rule22
  }, {
    start: 1189,
    length: 1,
    convRule: rule23
  }, {
    start: 1190,
    length: 1,
    convRule: rule22
  }, {
    start: 1191,
    length: 1,
    convRule: rule23
  }, {
    start: 1192,
    length: 1,
    convRule: rule22
  }, {
    start: 1193,
    length: 1,
    convRule: rule23
  }, {
    start: 1194,
    length: 1,
    convRule: rule22
  }, {
    start: 1195,
    length: 1,
    convRule: rule23
  }, {
    start: 1196,
    length: 1,
    convRule: rule22
  }, {
    start: 1197,
    length: 1,
    convRule: rule23
  }, {
    start: 1198,
    length: 1,
    convRule: rule22
  }, {
    start: 1199,
    length: 1,
    convRule: rule23
  }, {
    start: 1200,
    length: 1,
    convRule: rule22
  }, {
    start: 1201,
    length: 1,
    convRule: rule23
  }, {
    start: 1202,
    length: 1,
    convRule: rule22
  }, {
    start: 1203,
    length: 1,
    convRule: rule23
  }, {
    start: 1204,
    length: 1,
    convRule: rule22
  }, {
    start: 1205,
    length: 1,
    convRule: rule23
  }, {
    start: 1206,
    length: 1,
    convRule: rule22
  }, {
    start: 1207,
    length: 1,
    convRule: rule23
  }, {
    start: 1208,
    length: 1,
    convRule: rule22
  }, {
    start: 1209,
    length: 1,
    convRule: rule23
  }, {
    start: 1210,
    length: 1,
    convRule: rule22
  }, {
    start: 1211,
    length: 1,
    convRule: rule23
  }, {
    start: 1212,
    length: 1,
    convRule: rule22
  }, {
    start: 1213,
    length: 1,
    convRule: rule23
  }, {
    start: 1214,
    length: 1,
    convRule: rule22
  }, {
    start: 1215,
    length: 1,
    convRule: rule23
  }, {
    start: 1216,
    length: 1,
    convRule: rule120
  }, {
    start: 1217,
    length: 1,
    convRule: rule22
  }, {
    start: 1218,
    length: 1,
    convRule: rule23
  }, {
    start: 1219,
    length: 1,
    convRule: rule22
  }, {
    start: 1220,
    length: 1,
    convRule: rule23
  }, {
    start: 1221,
    length: 1,
    convRule: rule22
  }, {
    start: 1222,
    length: 1,
    convRule: rule23
  }, {
    start: 1223,
    length: 1,
    convRule: rule22
  }, {
    start: 1224,
    length: 1,
    convRule: rule23
  }, {
    start: 1225,
    length: 1,
    convRule: rule22
  }, {
    start: 1226,
    length: 1,
    convRule: rule23
  }, {
    start: 1227,
    length: 1,
    convRule: rule22
  }, {
    start: 1228,
    length: 1,
    convRule: rule23
  }, {
    start: 1229,
    length: 1,
    convRule: rule22
  }, {
    start: 1230,
    length: 1,
    convRule: rule23
  }, {
    start: 1231,
    length: 1,
    convRule: rule121
  }, {
    start: 1232,
    length: 1,
    convRule: rule22
  }, {
    start: 1233,
    length: 1,
    convRule: rule23
  }, {
    start: 1234,
    length: 1,
    convRule: rule22
  }, {
    start: 1235,
    length: 1,
    convRule: rule23
  }, {
    start: 1236,
    length: 1,
    convRule: rule22
  }, {
    start: 1237,
    length: 1,
    convRule: rule23
  }, {
    start: 1238,
    length: 1,
    convRule: rule22
  }, {
    start: 1239,
    length: 1,
    convRule: rule23
  }, {
    start: 1240,
    length: 1,
    convRule: rule22
  }, {
    start: 1241,
    length: 1,
    convRule: rule23
  }, {
    start: 1242,
    length: 1,
    convRule: rule22
  }, {
    start: 1243,
    length: 1,
    convRule: rule23
  }, {
    start: 1244,
    length: 1,
    convRule: rule22
  }, {
    start: 1245,
    length: 1,
    convRule: rule23
  }, {
    start: 1246,
    length: 1,
    convRule: rule22
  }, {
    start: 1247,
    length: 1,
    convRule: rule23
  }, {
    start: 1248,
    length: 1,
    convRule: rule22
  }, {
    start: 1249,
    length: 1,
    convRule: rule23
  }, {
    start: 1250,
    length: 1,
    convRule: rule22
  }, {
    start: 1251,
    length: 1,
    convRule: rule23
  }, {
    start: 1252,
    length: 1,
    convRule: rule22
  }, {
    start: 1253,
    length: 1,
    convRule: rule23
  }, {
    start: 1254,
    length: 1,
    convRule: rule22
  }, {
    start: 1255,
    length: 1,
    convRule: rule23
  }, {
    start: 1256,
    length: 1,
    convRule: rule22
  }, {
    start: 1257,
    length: 1,
    convRule: rule23
  }, {
    start: 1258,
    length: 1,
    convRule: rule22
  }, {
    start: 1259,
    length: 1,
    convRule: rule23
  }, {
    start: 1260,
    length: 1,
    convRule: rule22
  }, {
    start: 1261,
    length: 1,
    convRule: rule23
  }, {
    start: 1262,
    length: 1,
    convRule: rule22
  }, {
    start: 1263,
    length: 1,
    convRule: rule23
  }, {
    start: 1264,
    length: 1,
    convRule: rule22
  }, {
    start: 1265,
    length: 1,
    convRule: rule23
  }, {
    start: 1266,
    length: 1,
    convRule: rule22
  }, {
    start: 1267,
    length: 1,
    convRule: rule23
  }, {
    start: 1268,
    length: 1,
    convRule: rule22
  }, {
    start: 1269,
    length: 1,
    convRule: rule23
  }, {
    start: 1270,
    length: 1,
    convRule: rule22
  }, {
    start: 1271,
    length: 1,
    convRule: rule23
  }, {
    start: 1272,
    length: 1,
    convRule: rule22
  }, {
    start: 1273,
    length: 1,
    convRule: rule23
  }, {
    start: 1274,
    length: 1,
    convRule: rule22
  }, {
    start: 1275,
    length: 1,
    convRule: rule23
  }, {
    start: 1276,
    length: 1,
    convRule: rule22
  }, {
    start: 1277,
    length: 1,
    convRule: rule23
  }, {
    start: 1278,
    length: 1,
    convRule: rule22
  }, {
    start: 1279,
    length: 1,
    convRule: rule23
  }, {
    start: 1280,
    length: 1,
    convRule: rule22
  }, {
    start: 1281,
    length: 1,
    convRule: rule23
  }, {
    start: 1282,
    length: 1,
    convRule: rule22
  }, {
    start: 1283,
    length: 1,
    convRule: rule23
  }, {
    start: 1284,
    length: 1,
    convRule: rule22
  }, {
    start: 1285,
    length: 1,
    convRule: rule23
  }, {
    start: 1286,
    length: 1,
    convRule: rule22
  }, {
    start: 1287,
    length: 1,
    convRule: rule23
  }, {
    start: 1288,
    length: 1,
    convRule: rule22
  }, {
    start: 1289,
    length: 1,
    convRule: rule23
  }, {
    start: 1290,
    length: 1,
    convRule: rule22
  }, {
    start: 1291,
    length: 1,
    convRule: rule23
  }, {
    start: 1292,
    length: 1,
    convRule: rule22
  }, {
    start: 1293,
    length: 1,
    convRule: rule23
  }, {
    start: 1294,
    length: 1,
    convRule: rule22
  }, {
    start: 1295,
    length: 1,
    convRule: rule23
  }, {
    start: 1296,
    length: 1,
    convRule: rule22
  }, {
    start: 1297,
    length: 1,
    convRule: rule23
  }, {
    start: 1298,
    length: 1,
    convRule: rule22
  }, {
    start: 1299,
    length: 1,
    convRule: rule23
  }, {
    start: 1300,
    length: 1,
    convRule: rule22
  }, {
    start: 1301,
    length: 1,
    convRule: rule23
  }, {
    start: 1302,
    length: 1,
    convRule: rule22
  }, {
    start: 1303,
    length: 1,
    convRule: rule23
  }, {
    start: 1304,
    length: 1,
    convRule: rule22
  }, {
    start: 1305,
    length: 1,
    convRule: rule23
  }, {
    start: 1306,
    length: 1,
    convRule: rule22
  }, {
    start: 1307,
    length: 1,
    convRule: rule23
  }, {
    start: 1308,
    length: 1,
    convRule: rule22
  }, {
    start: 1309,
    length: 1,
    convRule: rule23
  }, {
    start: 1310,
    length: 1,
    convRule: rule22
  }, {
    start: 1311,
    length: 1,
    convRule: rule23
  }, {
    start: 1312,
    length: 1,
    convRule: rule22
  }, {
    start: 1313,
    length: 1,
    convRule: rule23
  }, {
    start: 1314,
    length: 1,
    convRule: rule22
  }, {
    start: 1315,
    length: 1,
    convRule: rule23
  }, {
    start: 1316,
    length: 1,
    convRule: rule22
  }, {
    start: 1317,
    length: 1,
    convRule: rule23
  }, {
    start: 1318,
    length: 1,
    convRule: rule22
  }, {
    start: 1319,
    length: 1,
    convRule: rule23
  }, {
    start: 1320,
    length: 1,
    convRule: rule22
  }, {
    start: 1321,
    length: 1,
    convRule: rule23
  }, {
    start: 1322,
    length: 1,
    convRule: rule22
  }, {
    start: 1323,
    length: 1,
    convRule: rule23
  }, {
    start: 1324,
    length: 1,
    convRule: rule22
  }, {
    start: 1325,
    length: 1,
    convRule: rule23
  }, {
    start: 1326,
    length: 1,
    convRule: rule22
  }, {
    start: 1327,
    length: 1,
    convRule: rule23
  }, {
    start: 1329,
    length: 38,
    convRule: rule122
  }, {
    start: 1369,
    length: 1,
    convRule: rule91
  }, {
    start: 1370,
    length: 6,
    convRule: rule2
  }, {
    start: 1376,
    length: 1,
    convRule: rule20
  }, {
    start: 1377,
    length: 38,
    convRule: rule123
  }, {
    start: 1415,
    length: 2,
    convRule: rule20
  }, {
    start: 1417,
    length: 1,
    convRule: rule2
  }, {
    start: 1418,
    length: 1,
    convRule: rule7
  }, {
    start: 1421,
    length: 2,
    convRule: rule13
  }, {
    start: 1423,
    length: 1,
    convRule: rule3
  }, {
    start: 1425,
    length: 45,
    convRule: rule92
  }, {
    start: 1470,
    length: 1,
    convRule: rule7
  }, {
    start: 1471,
    length: 1,
    convRule: rule92
  }, {
    start: 1472,
    length: 1,
    convRule: rule2
  }, {
    start: 1473,
    length: 2,
    convRule: rule92
  }, {
    start: 1475,
    length: 1,
    convRule: rule2
  }, {
    start: 1476,
    length: 2,
    convRule: rule92
  }, {
    start: 1478,
    length: 1,
    convRule: rule2
  }, {
    start: 1479,
    length: 1,
    convRule: rule92
  }, {
    start: 1488,
    length: 27,
    convRule: rule14
  }, {
    start: 1519,
    length: 4,
    convRule: rule14
  }, {
    start: 1523,
    length: 2,
    convRule: rule2
  }, {
    start: 1536,
    length: 6,
    convRule: rule16
  }, {
    start: 1542,
    length: 3,
    convRule: rule6
  }, {
    start: 1545,
    length: 2,
    convRule: rule2
  }, {
    start: 1547,
    length: 1,
    convRule: rule3
  }, {
    start: 1548,
    length: 2,
    convRule: rule2
  }, {
    start: 1550,
    length: 2,
    convRule: rule13
  }, {
    start: 1552,
    length: 11,
    convRule: rule92
  }, {
    start: 1563,
    length: 1,
    convRule: rule2
  }, {
    start: 1564,
    length: 1,
    convRule: rule16
  }, {
    start: 1566,
    length: 2,
    convRule: rule2
  }, {
    start: 1568,
    length: 32,
    convRule: rule14
  }, {
    start: 1600,
    length: 1,
    convRule: rule91
  }, {
    start: 1601,
    length: 10,
    convRule: rule14
  }, {
    start: 1611,
    length: 21,
    convRule: rule92
  }, {
    start: 1632,
    length: 10,
    convRule: rule8
  }, {
    start: 1642,
    length: 4,
    convRule: rule2
  }, {
    start: 1646,
    length: 2,
    convRule: rule14
  }, {
    start: 1648,
    length: 1,
    convRule: rule92
  }, {
    start: 1649,
    length: 99,
    convRule: rule14
  }, {
    start: 1748,
    length: 1,
    convRule: rule2
  }, {
    start: 1749,
    length: 1,
    convRule: rule14
  }, {
    start: 1750,
    length: 7,
    convRule: rule92
  }, {
    start: 1757,
    length: 1,
    convRule: rule16
  }, {
    start: 1758,
    length: 1,
    convRule: rule13
  }, {
    start: 1759,
    length: 6,
    convRule: rule92
  }, {
    start: 1765,
    length: 2,
    convRule: rule91
  }, {
    start: 1767,
    length: 2,
    convRule: rule92
  }, {
    start: 1769,
    length: 1,
    convRule: rule13
  }, {
    start: 1770,
    length: 4,
    convRule: rule92
  }, {
    start: 1774,
    length: 2,
    convRule: rule14
  }, {
    start: 1776,
    length: 10,
    convRule: rule8
  }, {
    start: 1786,
    length: 3,
    convRule: rule14
  }, {
    start: 1789,
    length: 2,
    convRule: rule13
  }, {
    start: 1791,
    length: 1,
    convRule: rule14
  }, {
    start: 1792,
    length: 14,
    convRule: rule2
  }, {
    start: 1807,
    length: 1,
    convRule: rule16
  }, {
    start: 1808,
    length: 1,
    convRule: rule14
  }, {
    start: 1809,
    length: 1,
    convRule: rule92
  }, {
    start: 1810,
    length: 30,
    convRule: rule14
  }, {
    start: 1840,
    length: 27,
    convRule: rule92
  }, {
    start: 1869,
    length: 89,
    convRule: rule14
  }, {
    start: 1958,
    length: 11,
    convRule: rule92
  }, {
    start: 1969,
    length: 1,
    convRule: rule14
  }, {
    start: 1984,
    length: 10,
    convRule: rule8
  }, {
    start: 1994,
    length: 33,
    convRule: rule14
  }, {
    start: 2027,
    length: 9,
    convRule: rule92
  }, {
    start: 2036,
    length: 2,
    convRule: rule91
  }, {
    start: 2038,
    length: 1,
    convRule: rule13
  }, {
    start: 2039,
    length: 3,
    convRule: rule2
  }, {
    start: 2042,
    length: 1,
    convRule: rule91
  }, {
    start: 2045,
    length: 1,
    convRule: rule92
  }, {
    start: 2046,
    length: 2,
    convRule: rule3
  }, {
    start: 2048,
    length: 22,
    convRule: rule14
  }, {
    start: 2070,
    length: 4,
    convRule: rule92
  }, {
    start: 2074,
    length: 1,
    convRule: rule91
  }, {
    start: 2075,
    length: 9,
    convRule: rule92
  }, {
    start: 2084,
    length: 1,
    convRule: rule91
  }, {
    start: 2085,
    length: 3,
    convRule: rule92
  }, {
    start: 2088,
    length: 1,
    convRule: rule91
  }, {
    start: 2089,
    length: 5,
    convRule: rule92
  }, {
    start: 2096,
    length: 15,
    convRule: rule2
  }, {
    start: 2112,
    length: 25,
    convRule: rule14
  }, {
    start: 2137,
    length: 3,
    convRule: rule92
  }, {
    start: 2142,
    length: 1,
    convRule: rule2
  }, {
    start: 2144,
    length: 11,
    convRule: rule14
  }, {
    start: 2208,
    length: 21,
    convRule: rule14
  }, {
    start: 2230,
    length: 18,
    convRule: rule14
  }, {
    start: 2259,
    length: 15,
    convRule: rule92
  }, {
    start: 2274,
    length: 1,
    convRule: rule16
  }, {
    start: 2275,
    length: 32,
    convRule: rule92
  }, {
    start: 2307,
    length: 1,
    convRule: rule124
  }, {
    start: 2308,
    length: 54,
    convRule: rule14
  }, {
    start: 2362,
    length: 1,
    convRule: rule92
  }, {
    start: 2363,
    length: 1,
    convRule: rule124
  }, {
    start: 2364,
    length: 1,
    convRule: rule92
  }, {
    start: 2365,
    length: 1,
    convRule: rule14
  }, {
    start: 2366,
    length: 3,
    convRule: rule124
  }, {
    start: 2369,
    length: 8,
    convRule: rule92
  }, {
    start: 2377,
    length: 4,
    convRule: rule124
  }, {
    start: 2381,
    length: 1,
    convRule: rule92
  }, {
    start: 2382,
    length: 2,
    convRule: rule124
  }, {
    start: 2384,
    length: 1,
    convRule: rule14
  }, {
    start: 2385,
    length: 7,
    convRule: rule92
  }, {
    start: 2392,
    length: 10,
    convRule: rule14
  }, {
    start: 2402,
    length: 2,
    convRule: rule92
  }, {
    start: 2404,
    length: 2,
    convRule: rule2
  }, {
    start: 2406,
    length: 10,
    convRule: rule8
  }, {
    start: 2416,
    length: 1,
    convRule: rule2
  }, {
    start: 2417,
    length: 1,
    convRule: rule91
  }, {
    start: 2418,
    length: 15,
    convRule: rule14
  }, {
    start: 2433,
    length: 1,
    convRule: rule92
  }, {
    start: 2434,
    length: 2,
    convRule: rule124
  }, {
    start: 2437,
    length: 8,
    convRule: rule14
  }, {
    start: 2447,
    length: 2,
    convRule: rule14
  }, {
    start: 2451,
    length: 22,
    convRule: rule14
  }, {
    start: 2474,
    length: 7,
    convRule: rule14
  }, {
    start: 2482,
    length: 1,
    convRule: rule14
  }, {
    start: 2486,
    length: 4,
    convRule: rule14
  }, {
    start: 2492,
    length: 1,
    convRule: rule92
  }, {
    start: 2493,
    length: 1,
    convRule: rule14
  }, {
    start: 2494,
    length: 3,
    convRule: rule124
  }, {
    start: 2497,
    length: 4,
    convRule: rule92
  }, {
    start: 2503,
    length: 2,
    convRule: rule124
  }, {
    start: 2507,
    length: 2,
    convRule: rule124
  }, {
    start: 2509,
    length: 1,
    convRule: rule92
  }, {
    start: 2510,
    length: 1,
    convRule: rule14
  }, {
    start: 2519,
    length: 1,
    convRule: rule124
  }, {
    start: 2524,
    length: 2,
    convRule: rule14
  }, {
    start: 2527,
    length: 3,
    convRule: rule14
  }, {
    start: 2530,
    length: 2,
    convRule: rule92
  }, {
    start: 2534,
    length: 10,
    convRule: rule8
  }, {
    start: 2544,
    length: 2,
    convRule: rule14
  }, {
    start: 2546,
    length: 2,
    convRule: rule3
  }, {
    start: 2548,
    length: 6,
    convRule: rule17
  }, {
    start: 2554,
    length: 1,
    convRule: rule13
  }, {
    start: 2555,
    length: 1,
    convRule: rule3
  }, {
    start: 2556,
    length: 1,
    convRule: rule14
  }, {
    start: 2557,
    length: 1,
    convRule: rule2
  }, {
    start: 2558,
    length: 1,
    convRule: rule92
  }, {
    start: 2561,
    length: 2,
    convRule: rule92
  }, {
    start: 2563,
    length: 1,
    convRule: rule124
  }, {
    start: 2565,
    length: 6,
    convRule: rule14
  }, {
    start: 2575,
    length: 2,
    convRule: rule14
  }, {
    start: 2579,
    length: 22,
    convRule: rule14
  }, {
    start: 2602,
    length: 7,
    convRule: rule14
  }, {
    start: 2610,
    length: 2,
    convRule: rule14
  }, {
    start: 2613,
    length: 2,
    convRule: rule14
  }, {
    start: 2616,
    length: 2,
    convRule: rule14
  }, {
    start: 2620,
    length: 1,
    convRule: rule92
  }, {
    start: 2622,
    length: 3,
    convRule: rule124
  }, {
    start: 2625,
    length: 2,
    convRule: rule92
  }, {
    start: 2631,
    length: 2,
    convRule: rule92
  }, {
    start: 2635,
    length: 3,
    convRule: rule92
  }, {
    start: 2641,
    length: 1,
    convRule: rule92
  }, {
    start: 2649,
    length: 4,
    convRule: rule14
  }, {
    start: 2654,
    length: 1,
    convRule: rule14
  }, {
    start: 2662,
    length: 10,
    convRule: rule8
  }, {
    start: 2672,
    length: 2,
    convRule: rule92
  }, {
    start: 2674,
    length: 3,
    convRule: rule14
  }, {
    start: 2677,
    length: 1,
    convRule: rule92
  }, {
    start: 2678,
    length: 1,
    convRule: rule2
  }, {
    start: 2689,
    length: 2,
    convRule: rule92
  }, {
    start: 2691,
    length: 1,
    convRule: rule124
  }, {
    start: 2693,
    length: 9,
    convRule: rule14
  }, {
    start: 2703,
    length: 3,
    convRule: rule14
  }, {
    start: 2707,
    length: 22,
    convRule: rule14
  }, {
    start: 2730,
    length: 7,
    convRule: rule14
  }, {
    start: 2738,
    length: 2,
    convRule: rule14
  }, {
    start: 2741,
    length: 5,
    convRule: rule14
  }, {
    start: 2748,
    length: 1,
    convRule: rule92
  }, {
    start: 2749,
    length: 1,
    convRule: rule14
  }, {
    start: 2750,
    length: 3,
    convRule: rule124
  }, {
    start: 2753,
    length: 5,
    convRule: rule92
  }, {
    start: 2759,
    length: 2,
    convRule: rule92
  }, {
    start: 2761,
    length: 1,
    convRule: rule124
  }, {
    start: 2763,
    length: 2,
    convRule: rule124
  }, {
    start: 2765,
    length: 1,
    convRule: rule92
  }, {
    start: 2768,
    length: 1,
    convRule: rule14
  }, {
    start: 2784,
    length: 2,
    convRule: rule14
  }, {
    start: 2786,
    length: 2,
    convRule: rule92
  }, {
    start: 2790,
    length: 10,
    convRule: rule8
  }, {
    start: 2800,
    length: 1,
    convRule: rule2
  }, {
    start: 2801,
    length: 1,
    convRule: rule3
  }, {
    start: 2809,
    length: 1,
    convRule: rule14
  }, {
    start: 2810,
    length: 6,
    convRule: rule92
  }, {
    start: 2817,
    length: 1,
    convRule: rule92
  }, {
    start: 2818,
    length: 2,
    convRule: rule124
  }, {
    start: 2821,
    length: 8,
    convRule: rule14
  }, {
    start: 2831,
    length: 2,
    convRule: rule14
  }, {
    start: 2835,
    length: 22,
    convRule: rule14
  }, {
    start: 2858,
    length: 7,
    convRule: rule14
  }, {
    start: 2866,
    length: 2,
    convRule: rule14
  }, {
    start: 2869,
    length: 5,
    convRule: rule14
  }, {
    start: 2876,
    length: 1,
    convRule: rule92
  }, {
    start: 2877,
    length: 1,
    convRule: rule14
  }, {
    start: 2878,
    length: 1,
    convRule: rule124
  }, {
    start: 2879,
    length: 1,
    convRule: rule92
  }, {
    start: 2880,
    length: 1,
    convRule: rule124
  }, {
    start: 2881,
    length: 4,
    convRule: rule92
  }, {
    start: 2887,
    length: 2,
    convRule: rule124
  }, {
    start: 2891,
    length: 2,
    convRule: rule124
  }, {
    start: 2893,
    length: 1,
    convRule: rule92
  }, {
    start: 2901,
    length: 2,
    convRule: rule92
  }, {
    start: 2903,
    length: 1,
    convRule: rule124
  }, {
    start: 2908,
    length: 2,
    convRule: rule14
  }, {
    start: 2911,
    length: 3,
    convRule: rule14
  }, {
    start: 2914,
    length: 2,
    convRule: rule92
  }, {
    start: 2918,
    length: 10,
    convRule: rule8
  }, {
    start: 2928,
    length: 1,
    convRule: rule13
  }, {
    start: 2929,
    length: 1,
    convRule: rule14
  }, {
    start: 2930,
    length: 6,
    convRule: rule17
  }, {
    start: 2946,
    length: 1,
    convRule: rule92
  }, {
    start: 2947,
    length: 1,
    convRule: rule14
  }, {
    start: 2949,
    length: 6,
    convRule: rule14
  }, {
    start: 2958,
    length: 3,
    convRule: rule14
  }, {
    start: 2962,
    length: 4,
    convRule: rule14
  }, {
    start: 2969,
    length: 2,
    convRule: rule14
  }, {
    start: 2972,
    length: 1,
    convRule: rule14
  }, {
    start: 2974,
    length: 2,
    convRule: rule14
  }, {
    start: 2979,
    length: 2,
    convRule: rule14
  }, {
    start: 2984,
    length: 3,
    convRule: rule14
  }, {
    start: 2990,
    length: 12,
    convRule: rule14
  }, {
    start: 3006,
    length: 2,
    convRule: rule124
  }, {
    start: 3008,
    length: 1,
    convRule: rule92
  }, {
    start: 3009,
    length: 2,
    convRule: rule124
  }, {
    start: 3014,
    length: 3,
    convRule: rule124
  }, {
    start: 3018,
    length: 3,
    convRule: rule124
  }, {
    start: 3021,
    length: 1,
    convRule: rule92
  }, {
    start: 3024,
    length: 1,
    convRule: rule14
  }, {
    start: 3031,
    length: 1,
    convRule: rule124
  }, {
    start: 3046,
    length: 10,
    convRule: rule8
  }, {
    start: 3056,
    length: 3,
    convRule: rule17
  }, {
    start: 3059,
    length: 6,
    convRule: rule13
  }, {
    start: 3065,
    length: 1,
    convRule: rule3
  }, {
    start: 3066,
    length: 1,
    convRule: rule13
  }, {
    start: 3072,
    length: 1,
    convRule: rule92
  }, {
    start: 3073,
    length: 3,
    convRule: rule124
  }, {
    start: 3076,
    length: 1,
    convRule: rule92
  }, {
    start: 3077,
    length: 8,
    convRule: rule14
  }, {
    start: 3086,
    length: 3,
    convRule: rule14
  }, {
    start: 3090,
    length: 23,
    convRule: rule14
  }, {
    start: 3114,
    length: 16,
    convRule: rule14
  }, {
    start: 3133,
    length: 1,
    convRule: rule14
  }, {
    start: 3134,
    length: 3,
    convRule: rule92
  }, {
    start: 3137,
    length: 4,
    convRule: rule124
  }, {
    start: 3142,
    length: 3,
    convRule: rule92
  }, {
    start: 3146,
    length: 4,
    convRule: rule92
  }, {
    start: 3157,
    length: 2,
    convRule: rule92
  }, {
    start: 3160,
    length: 3,
    convRule: rule14
  }, {
    start: 3168,
    length: 2,
    convRule: rule14
  }, {
    start: 3170,
    length: 2,
    convRule: rule92
  }, {
    start: 3174,
    length: 10,
    convRule: rule8
  }, {
    start: 3191,
    length: 1,
    convRule: rule2
  }, {
    start: 3192,
    length: 7,
    convRule: rule17
  }, {
    start: 3199,
    length: 1,
    convRule: rule13
  }, {
    start: 3200,
    length: 1,
    convRule: rule14
  }, {
    start: 3201,
    length: 1,
    convRule: rule92
  }, {
    start: 3202,
    length: 2,
    convRule: rule124
  }, {
    start: 3204,
    length: 1,
    convRule: rule2
  }, {
    start: 3205,
    length: 8,
    convRule: rule14
  }, {
    start: 3214,
    length: 3,
    convRule: rule14
  }, {
    start: 3218,
    length: 23,
    convRule: rule14
  }, {
    start: 3242,
    length: 10,
    convRule: rule14
  }, {
    start: 3253,
    length: 5,
    convRule: rule14
  }, {
    start: 3260,
    length: 1,
    convRule: rule92
  }, {
    start: 3261,
    length: 1,
    convRule: rule14
  }, {
    start: 3262,
    length: 1,
    convRule: rule124
  }, {
    start: 3263,
    length: 1,
    convRule: rule92
  }, {
    start: 3264,
    length: 5,
    convRule: rule124
  }, {
    start: 3270,
    length: 1,
    convRule: rule92
  }, {
    start: 3271,
    length: 2,
    convRule: rule124
  }, {
    start: 3274,
    length: 2,
    convRule: rule124
  }, {
    start: 3276,
    length: 2,
    convRule: rule92
  }, {
    start: 3285,
    length: 2,
    convRule: rule124
  }, {
    start: 3294,
    length: 1,
    convRule: rule14
  }, {
    start: 3296,
    length: 2,
    convRule: rule14
  }, {
    start: 3298,
    length: 2,
    convRule: rule92
  }, {
    start: 3302,
    length: 10,
    convRule: rule8
  }, {
    start: 3313,
    length: 2,
    convRule: rule14
  }, {
    start: 3328,
    length: 2,
    convRule: rule92
  }, {
    start: 3330,
    length: 2,
    convRule: rule124
  }, {
    start: 3332,
    length: 9,
    convRule: rule14
  }, {
    start: 3342,
    length: 3,
    convRule: rule14
  }, {
    start: 3346,
    length: 41,
    convRule: rule14
  }, {
    start: 3387,
    length: 2,
    convRule: rule92
  }, {
    start: 3389,
    length: 1,
    convRule: rule14
  }, {
    start: 3390,
    length: 3,
    convRule: rule124
  }, {
    start: 3393,
    length: 4,
    convRule: rule92
  }, {
    start: 3398,
    length: 3,
    convRule: rule124
  }, {
    start: 3402,
    length: 3,
    convRule: rule124
  }, {
    start: 3405,
    length: 1,
    convRule: rule92
  }, {
    start: 3406,
    length: 1,
    convRule: rule14
  }, {
    start: 3407,
    length: 1,
    convRule: rule13
  }, {
    start: 3412,
    length: 3,
    convRule: rule14
  }, {
    start: 3415,
    length: 1,
    convRule: rule124
  }, {
    start: 3416,
    length: 7,
    convRule: rule17
  }, {
    start: 3423,
    length: 3,
    convRule: rule14
  }, {
    start: 3426,
    length: 2,
    convRule: rule92
  }, {
    start: 3430,
    length: 10,
    convRule: rule8
  }, {
    start: 3440,
    length: 9,
    convRule: rule17
  }, {
    start: 3449,
    length: 1,
    convRule: rule13
  }, {
    start: 3450,
    length: 6,
    convRule: rule14
  }, {
    start: 3457,
    length: 1,
    convRule: rule92
  }, {
    start: 3458,
    length: 2,
    convRule: rule124
  }, {
    start: 3461,
    length: 18,
    convRule: rule14
  }, {
    start: 3482,
    length: 24,
    convRule: rule14
  }, {
    start: 3507,
    length: 9,
    convRule: rule14
  }, {
    start: 3517,
    length: 1,
    convRule: rule14
  }, {
    start: 3520,
    length: 7,
    convRule: rule14
  }, {
    start: 3530,
    length: 1,
    convRule: rule92
  }, {
    start: 3535,
    length: 3,
    convRule: rule124
  }, {
    start: 3538,
    length: 3,
    convRule: rule92
  }, {
    start: 3542,
    length: 1,
    convRule: rule92
  }, {
    start: 3544,
    length: 8,
    convRule: rule124
  }, {
    start: 3558,
    length: 10,
    convRule: rule8
  }, {
    start: 3570,
    length: 2,
    convRule: rule124
  }, {
    start: 3572,
    length: 1,
    convRule: rule2
  }, {
    start: 3585,
    length: 48,
    convRule: rule14
  }, {
    start: 3633,
    length: 1,
    convRule: rule92
  }, {
    start: 3634,
    length: 2,
    convRule: rule14
  }, {
    start: 3636,
    length: 7,
    convRule: rule92
  }, {
    start: 3647,
    length: 1,
    convRule: rule3
  }, {
    start: 3648,
    length: 6,
    convRule: rule14
  }, {
    start: 3654,
    length: 1,
    convRule: rule91
  }, {
    start: 3655,
    length: 8,
    convRule: rule92
  }, {
    start: 3663,
    length: 1,
    convRule: rule2
  }, {
    start: 3664,
    length: 10,
    convRule: rule8
  }, {
    start: 3674,
    length: 2,
    convRule: rule2
  }, {
    start: 3713,
    length: 2,
    convRule: rule14
  }, {
    start: 3716,
    length: 1,
    convRule: rule14
  }, {
    start: 3718,
    length: 5,
    convRule: rule14
  }, {
    start: 3724,
    length: 24,
    convRule: rule14
  }, {
    start: 3749,
    length: 1,
    convRule: rule14
  }, {
    start: 3751,
    length: 10,
    convRule: rule14
  }, {
    start: 3761,
    length: 1,
    convRule: rule92
  }, {
    start: 3762,
    length: 2,
    convRule: rule14
  }, {
    start: 3764,
    length: 9,
    convRule: rule92
  }, {
    start: 3773,
    length: 1,
    convRule: rule14
  }, {
    start: 3776,
    length: 5,
    convRule: rule14
  }, {
    start: 3782,
    length: 1,
    convRule: rule91
  }, {
    start: 3784,
    length: 6,
    convRule: rule92
  }, {
    start: 3792,
    length: 10,
    convRule: rule8
  }, {
    start: 3804,
    length: 4,
    convRule: rule14
  }, {
    start: 3840,
    length: 1,
    convRule: rule14
  }, {
    start: 3841,
    length: 3,
    convRule: rule13
  }, {
    start: 3844,
    length: 15,
    convRule: rule2
  }, {
    start: 3859,
    length: 1,
    convRule: rule13
  }, {
    start: 3860,
    length: 1,
    convRule: rule2
  }, {
    start: 3861,
    length: 3,
    convRule: rule13
  }, {
    start: 3864,
    length: 2,
    convRule: rule92
  }, {
    start: 3866,
    length: 6,
    convRule: rule13
  }, {
    start: 3872,
    length: 10,
    convRule: rule8
  }, {
    start: 3882,
    length: 10,
    convRule: rule17
  }, {
    start: 3892,
    length: 1,
    convRule: rule13
  }, {
    start: 3893,
    length: 1,
    convRule: rule92
  }, {
    start: 3894,
    length: 1,
    convRule: rule13
  }, {
    start: 3895,
    length: 1,
    convRule: rule92
  }, {
    start: 3896,
    length: 1,
    convRule: rule13
  }, {
    start: 3897,
    length: 1,
    convRule: rule92
  }, {
    start: 3898,
    length: 1,
    convRule: rule4
  }, {
    start: 3899,
    length: 1,
    convRule: rule5
  }, {
    start: 3900,
    length: 1,
    convRule: rule4
  }, {
    start: 3901,
    length: 1,
    convRule: rule5
  }, {
    start: 3902,
    length: 2,
    convRule: rule124
  }, {
    start: 3904,
    length: 8,
    convRule: rule14
  }, {
    start: 3913,
    length: 36,
    convRule: rule14
  }, {
    start: 3953,
    length: 14,
    convRule: rule92
  }, {
    start: 3967,
    length: 1,
    convRule: rule124
  }, {
    start: 3968,
    length: 5,
    convRule: rule92
  }, {
    start: 3973,
    length: 1,
    convRule: rule2
  }, {
    start: 3974,
    length: 2,
    convRule: rule92
  }, {
    start: 3976,
    length: 5,
    convRule: rule14
  }, {
    start: 3981,
    length: 11,
    convRule: rule92
  }, {
    start: 3993,
    length: 36,
    convRule: rule92
  }, {
    start: 4030,
    length: 8,
    convRule: rule13
  }, {
    start: 4038,
    length: 1,
    convRule: rule92
  }, {
    start: 4039,
    length: 6,
    convRule: rule13
  }, {
    start: 4046,
    length: 2,
    convRule: rule13
  }, {
    start: 4048,
    length: 5,
    convRule: rule2
  }, {
    start: 4053,
    length: 4,
    convRule: rule13
  }, {
    start: 4057,
    length: 2,
    convRule: rule2
  }, {
    start: 4096,
    length: 43,
    convRule: rule14
  }, {
    start: 4139,
    length: 2,
    convRule: rule124
  }, {
    start: 4141,
    length: 4,
    convRule: rule92
  }, {
    start: 4145,
    length: 1,
    convRule: rule124
  }, {
    start: 4146,
    length: 6,
    convRule: rule92
  }, {
    start: 4152,
    length: 1,
    convRule: rule124
  }, {
    start: 4153,
    length: 2,
    convRule: rule92
  }, {
    start: 4155,
    length: 2,
    convRule: rule124
  }, {
    start: 4157,
    length: 2,
    convRule: rule92
  }, {
    start: 4159,
    length: 1,
    convRule: rule14
  }, {
    start: 4160,
    length: 10,
    convRule: rule8
  }, {
    start: 4170,
    length: 6,
    convRule: rule2
  }, {
    start: 4176,
    length: 6,
    convRule: rule14
  }, {
    start: 4182,
    length: 2,
    convRule: rule124
  }, {
    start: 4184,
    length: 2,
    convRule: rule92
  }, {
    start: 4186,
    length: 4,
    convRule: rule14
  }, {
    start: 4190,
    length: 3,
    convRule: rule92
  }, {
    start: 4193,
    length: 1,
    convRule: rule14
  }, {
    start: 4194,
    length: 3,
    convRule: rule124
  }, {
    start: 4197,
    length: 2,
    convRule: rule14
  }, {
    start: 4199,
    length: 7,
    convRule: rule124
  }, {
    start: 4206,
    length: 3,
    convRule: rule14
  }, {
    start: 4209,
    length: 4,
    convRule: rule92
  }, {
    start: 4213,
    length: 13,
    convRule: rule14
  }, {
    start: 4226,
    length: 1,
    convRule: rule92
  }, {
    start: 4227,
    length: 2,
    convRule: rule124
  }, {
    start: 4229,
    length: 2,
    convRule: rule92
  }, {
    start: 4231,
    length: 6,
    convRule: rule124
  }, {
    start: 4237,
    length: 1,
    convRule: rule92
  }, {
    start: 4238,
    length: 1,
    convRule: rule14
  }, {
    start: 4239,
    length: 1,
    convRule: rule124
  }, {
    start: 4240,
    length: 10,
    convRule: rule8
  }, {
    start: 4250,
    length: 3,
    convRule: rule124
  }, {
    start: 4253,
    length: 1,
    convRule: rule92
  }, {
    start: 4254,
    length: 2,
    convRule: rule13
  }, {
    start: 4256,
    length: 38,
    convRule: rule125
  }, {
    start: 4295,
    length: 1,
    convRule: rule125
  }, {
    start: 4301,
    length: 1,
    convRule: rule125
  }, {
    start: 4304,
    length: 43,
    convRule: rule126
  }, {
    start: 4347,
    length: 1,
    convRule: rule2
  }, {
    start: 4348,
    length: 1,
    convRule: rule91
  }, {
    start: 4349,
    length: 3,
    convRule: rule126
  }, {
    start: 4352,
    length: 329,
    convRule: rule14
  }, {
    start: 4682,
    length: 4,
    convRule: rule14
  }, {
    start: 4688,
    length: 7,
    convRule: rule14
  }, {
    start: 4696,
    length: 1,
    convRule: rule14
  }, {
    start: 4698,
    length: 4,
    convRule: rule14
  }, {
    start: 4704,
    length: 41,
    convRule: rule14
  }, {
    start: 4746,
    length: 4,
    convRule: rule14
  }, {
    start: 4752,
    length: 33,
    convRule: rule14
  }, {
    start: 4786,
    length: 4,
    convRule: rule14
  }, {
    start: 4792,
    length: 7,
    convRule: rule14
  }, {
    start: 4800,
    length: 1,
    convRule: rule14
  }, {
    start: 4802,
    length: 4,
    convRule: rule14
  }, {
    start: 4808,
    length: 15,
    convRule: rule14
  }, {
    start: 4824,
    length: 57,
    convRule: rule14
  }, {
    start: 4882,
    length: 4,
    convRule: rule14
  }, {
    start: 4888,
    length: 67,
    convRule: rule14
  }, {
    start: 4957,
    length: 3,
    convRule: rule92
  }, {
    start: 4960,
    length: 9,
    convRule: rule2
  }, {
    start: 4969,
    length: 20,
    convRule: rule17
  }, {
    start: 4992,
    length: 16,
    convRule: rule14
  }, {
    start: 5008,
    length: 10,
    convRule: rule13
  }, {
    start: 5024,
    length: 80,
    convRule: rule127
  }, {
    start: 5104,
    length: 6,
    convRule: rule104
  }, {
    start: 5112,
    length: 6,
    convRule: rule110
  }, {
    start: 5120,
    length: 1,
    convRule: rule7
  }, {
    start: 5121,
    length: 620,
    convRule: rule14
  }, {
    start: 5741,
    length: 1,
    convRule: rule13
  }, {
    start: 5742,
    length: 1,
    convRule: rule2
  }, {
    start: 5743,
    length: 17,
    convRule: rule14
  }, {
    start: 5760,
    length: 1,
    convRule: rule1
  }, {
    start: 5761,
    length: 26,
    convRule: rule14
  }, {
    start: 5787,
    length: 1,
    convRule: rule4
  }, {
    start: 5788,
    length: 1,
    convRule: rule5
  }, {
    start: 5792,
    length: 75,
    convRule: rule14
  }, {
    start: 5867,
    length: 3,
    convRule: rule2
  }, {
    start: 5870,
    length: 3,
    convRule: rule128
  }, {
    start: 5873,
    length: 8,
    convRule: rule14
  }, {
    start: 5888,
    length: 13,
    convRule: rule14
  }, {
    start: 5902,
    length: 4,
    convRule: rule14
  }, {
    start: 5906,
    length: 3,
    convRule: rule92
  }, {
    start: 5920,
    length: 18,
    convRule: rule14
  }, {
    start: 5938,
    length: 3,
    convRule: rule92
  }, {
    start: 5941,
    length: 2,
    convRule: rule2
  }, {
    start: 5952,
    length: 18,
    convRule: rule14
  }, {
    start: 5970,
    length: 2,
    convRule: rule92
  }, {
    start: 5984,
    length: 13,
    convRule: rule14
  }, {
    start: 5998,
    length: 3,
    convRule: rule14
  }, {
    start: 6002,
    length: 2,
    convRule: rule92
  }, {
    start: 6016,
    length: 52,
    convRule: rule14
  }, {
    start: 6068,
    length: 2,
    convRule: rule92
  }, {
    start: 6070,
    length: 1,
    convRule: rule124
  }, {
    start: 6071,
    length: 7,
    convRule: rule92
  }, {
    start: 6078,
    length: 8,
    convRule: rule124
  }, {
    start: 6086,
    length: 1,
    convRule: rule92
  }, {
    start: 6087,
    length: 2,
    convRule: rule124
  }, {
    start: 6089,
    length: 11,
    convRule: rule92
  }, {
    start: 6100,
    length: 3,
    convRule: rule2
  }, {
    start: 6103,
    length: 1,
    convRule: rule91
  }, {
    start: 6104,
    length: 3,
    convRule: rule2
  }, {
    start: 6107,
    length: 1,
    convRule: rule3
  }, {
    start: 6108,
    length: 1,
    convRule: rule14
  }, {
    start: 6109,
    length: 1,
    convRule: rule92
  }, {
    start: 6112,
    length: 10,
    convRule: rule8
  }, {
    start: 6128,
    length: 10,
    convRule: rule17
  }, {
    start: 6144,
    length: 6,
    convRule: rule2
  }, {
    start: 6150,
    length: 1,
    convRule: rule7
  }, {
    start: 6151,
    length: 4,
    convRule: rule2
  }, {
    start: 6155,
    length: 3,
    convRule: rule92
  }, {
    start: 6158,
    length: 1,
    convRule: rule16
  }, {
    start: 6160,
    length: 10,
    convRule: rule8
  }, {
    start: 6176,
    length: 35,
    convRule: rule14
  }, {
    start: 6211,
    length: 1,
    convRule: rule91
  }, {
    start: 6212,
    length: 53,
    convRule: rule14
  }, {
    start: 6272,
    length: 5,
    convRule: rule14
  }, {
    start: 6277,
    length: 2,
    convRule: rule92
  }, {
    start: 6279,
    length: 34,
    convRule: rule14
  }, {
    start: 6313,
    length: 1,
    convRule: rule92
  }, {
    start: 6314,
    length: 1,
    convRule: rule14
  }, {
    start: 6320,
    length: 70,
    convRule: rule14
  }, {
    start: 6400,
    length: 31,
    convRule: rule14
  }, {
    start: 6432,
    length: 3,
    convRule: rule92
  }, {
    start: 6435,
    length: 4,
    convRule: rule124
  }, {
    start: 6439,
    length: 2,
    convRule: rule92
  }, {
    start: 6441,
    length: 3,
    convRule: rule124
  }, {
    start: 6448,
    length: 2,
    convRule: rule124
  }, {
    start: 6450,
    length: 1,
    convRule: rule92
  }, {
    start: 6451,
    length: 6,
    convRule: rule124
  }, {
    start: 6457,
    length: 3,
    convRule: rule92
  }, {
    start: 6464,
    length: 1,
    convRule: rule13
  }, {
    start: 6468,
    length: 2,
    convRule: rule2
  }, {
    start: 6470,
    length: 10,
    convRule: rule8
  }, {
    start: 6480,
    length: 30,
    convRule: rule14
  }, {
    start: 6512,
    length: 5,
    convRule: rule14
  }, {
    start: 6528,
    length: 44,
    convRule: rule14
  }, {
    start: 6576,
    length: 26,
    convRule: rule14
  }, {
    start: 6608,
    length: 10,
    convRule: rule8
  }, {
    start: 6618,
    length: 1,
    convRule: rule17
  }, {
    start: 6622,
    length: 34,
    convRule: rule13
  }, {
    start: 6656,
    length: 23,
    convRule: rule14
  }, {
    start: 6679,
    length: 2,
    convRule: rule92
  }, {
    start: 6681,
    length: 2,
    convRule: rule124
  }, {
    start: 6683,
    length: 1,
    convRule: rule92
  }, {
    start: 6686,
    length: 2,
    convRule: rule2
  }, {
    start: 6688,
    length: 53,
    convRule: rule14
  }, {
    start: 6741,
    length: 1,
    convRule: rule124
  }, {
    start: 6742,
    length: 1,
    convRule: rule92
  }, {
    start: 6743,
    length: 1,
    convRule: rule124
  }, {
    start: 6744,
    length: 7,
    convRule: rule92
  }, {
    start: 6752,
    length: 1,
    convRule: rule92
  }, {
    start: 6753,
    length: 1,
    convRule: rule124
  }, {
    start: 6754,
    length: 1,
    convRule: rule92
  }, {
    start: 6755,
    length: 2,
    convRule: rule124
  }, {
    start: 6757,
    length: 8,
    convRule: rule92
  }, {
    start: 6765,
    length: 6,
    convRule: rule124
  }, {
    start: 6771,
    length: 10,
    convRule: rule92
  }, {
    start: 6783,
    length: 1,
    convRule: rule92
  }, {
    start: 6784,
    length: 10,
    convRule: rule8
  }, {
    start: 6800,
    length: 10,
    convRule: rule8
  }, {
    start: 6816,
    length: 7,
    convRule: rule2
  }, {
    start: 6823,
    length: 1,
    convRule: rule91
  }, {
    start: 6824,
    length: 6,
    convRule: rule2
  }, {
    start: 6832,
    length: 14,
    convRule: rule92
  }, {
    start: 6846,
    length: 1,
    convRule: rule119
  }, {
    start: 6847,
    length: 2,
    convRule: rule92
  }, {
    start: 6912,
    length: 4,
    convRule: rule92
  }, {
    start: 6916,
    length: 1,
    convRule: rule124
  }, {
    start: 6917,
    length: 47,
    convRule: rule14
  }, {
    start: 6964,
    length: 1,
    convRule: rule92
  }, {
    start: 6965,
    length: 1,
    convRule: rule124
  }, {
    start: 6966,
    length: 5,
    convRule: rule92
  }, {
    start: 6971,
    length: 1,
    convRule: rule124
  }, {
    start: 6972,
    length: 1,
    convRule: rule92
  }, {
    start: 6973,
    length: 5,
    convRule: rule124
  }, {
    start: 6978,
    length: 1,
    convRule: rule92
  }, {
    start: 6979,
    length: 2,
    convRule: rule124
  }, {
    start: 6981,
    length: 7,
    convRule: rule14
  }, {
    start: 6992,
    length: 10,
    convRule: rule8
  }, {
    start: 7002,
    length: 7,
    convRule: rule2
  }, {
    start: 7009,
    length: 10,
    convRule: rule13
  }, {
    start: 7019,
    length: 9,
    convRule: rule92
  }, {
    start: 7028,
    length: 9,
    convRule: rule13
  }, {
    start: 7040,
    length: 2,
    convRule: rule92
  }, {
    start: 7042,
    length: 1,
    convRule: rule124
  }, {
    start: 7043,
    length: 30,
    convRule: rule14
  }, {
    start: 7073,
    length: 1,
    convRule: rule124
  }, {
    start: 7074,
    length: 4,
    convRule: rule92
  }, {
    start: 7078,
    length: 2,
    convRule: rule124
  }, {
    start: 7080,
    length: 2,
    convRule: rule92
  }, {
    start: 7082,
    length: 1,
    convRule: rule124
  }, {
    start: 7083,
    length: 3,
    convRule: rule92
  }, {
    start: 7086,
    length: 2,
    convRule: rule14
  }, {
    start: 7088,
    length: 10,
    convRule: rule8
  }, {
    start: 7098,
    length: 44,
    convRule: rule14
  }, {
    start: 7142,
    length: 1,
    convRule: rule92
  }, {
    start: 7143,
    length: 1,
    convRule: rule124
  }, {
    start: 7144,
    length: 2,
    convRule: rule92
  }, {
    start: 7146,
    length: 3,
    convRule: rule124
  }, {
    start: 7149,
    length: 1,
    convRule: rule92
  }, {
    start: 7150,
    length: 1,
    convRule: rule124
  }, {
    start: 7151,
    length: 3,
    convRule: rule92
  }, {
    start: 7154,
    length: 2,
    convRule: rule124
  }, {
    start: 7164,
    length: 4,
    convRule: rule2
  }, {
    start: 7168,
    length: 36,
    convRule: rule14
  }, {
    start: 7204,
    length: 8,
    convRule: rule124
  }, {
    start: 7212,
    length: 8,
    convRule: rule92
  }, {
    start: 7220,
    length: 2,
    convRule: rule124
  }, {
    start: 7222,
    length: 2,
    convRule: rule92
  }, {
    start: 7227,
    length: 5,
    convRule: rule2
  }, {
    start: 7232,
    length: 10,
    convRule: rule8
  }, {
    start: 7245,
    length: 3,
    convRule: rule14
  }, {
    start: 7248,
    length: 10,
    convRule: rule8
  }, {
    start: 7258,
    length: 30,
    convRule: rule14
  }, {
    start: 7288,
    length: 6,
    convRule: rule91
  }, {
    start: 7294,
    length: 2,
    convRule: rule2
  }, {
    start: 7296,
    length: 1,
    convRule: rule129
  }, {
    start: 7297,
    length: 1,
    convRule: rule130
  }, {
    start: 7298,
    length: 1,
    convRule: rule131
  }, {
    start: 7299,
    length: 2,
    convRule: rule132
  }, {
    start: 7301,
    length: 1,
    convRule: rule133
  }, {
    start: 7302,
    length: 1,
    convRule: rule134
  }, {
    start: 7303,
    length: 1,
    convRule: rule135
  }, {
    start: 7304,
    length: 1,
    convRule: rule136
  }, {
    start: 7312,
    length: 43,
    convRule: rule137
  }, {
    start: 7357,
    length: 3,
    convRule: rule137
  }, {
    start: 7360,
    length: 8,
    convRule: rule2
  }, {
    start: 7376,
    length: 3,
    convRule: rule92
  }, {
    start: 7379,
    length: 1,
    convRule: rule2
  }, {
    start: 7380,
    length: 13,
    convRule: rule92
  }, {
    start: 7393,
    length: 1,
    convRule: rule124
  }, {
    start: 7394,
    length: 7,
    convRule: rule92
  }, {
    start: 7401,
    length: 4,
    convRule: rule14
  }, {
    start: 7405,
    length: 1,
    convRule: rule92
  }, {
    start: 7406,
    length: 6,
    convRule: rule14
  }, {
    start: 7412,
    length: 1,
    convRule: rule92
  }, {
    start: 7413,
    length: 2,
    convRule: rule14
  }, {
    start: 7415,
    length: 1,
    convRule: rule124
  }, {
    start: 7416,
    length: 2,
    convRule: rule92
  }, {
    start: 7418,
    length: 1,
    convRule: rule14
  }, {
    start: 7424,
    length: 44,
    convRule: rule20
  }, {
    start: 7468,
    length: 63,
    convRule: rule91
  }, {
    start: 7531,
    length: 13,
    convRule: rule20
  }, {
    start: 7544,
    length: 1,
    convRule: rule91
  }, {
    start: 7545,
    length: 1,
    convRule: rule138
  }, {
    start: 7546,
    length: 3,
    convRule: rule20
  }, {
    start: 7549,
    length: 1,
    convRule: rule139
  }, {
    start: 7550,
    length: 16,
    convRule: rule20
  }, {
    start: 7566,
    length: 1,
    convRule: rule140
  }, {
    start: 7567,
    length: 12,
    convRule: rule20
  }, {
    start: 7579,
    length: 37,
    convRule: rule91
  }, {
    start: 7616,
    length: 58,
    convRule: rule92
  }, {
    start: 7675,
    length: 5,
    convRule: rule92
  }, {
    start: 7680,
    length: 1,
    convRule: rule22
  }, {
    start: 7681,
    length: 1,
    convRule: rule23
  }, {
    start: 7682,
    length: 1,
    convRule: rule22
  }, {
    start: 7683,
    length: 1,
    convRule: rule23
  }, {
    start: 7684,
    length: 1,
    convRule: rule22
  }, {
    start: 7685,
    length: 1,
    convRule: rule23
  }, {
    start: 7686,
    length: 1,
    convRule: rule22
  }, {
    start: 7687,
    length: 1,
    convRule: rule23
  }, {
    start: 7688,
    length: 1,
    convRule: rule22
  }, {
    start: 7689,
    length: 1,
    convRule: rule23
  }, {
    start: 7690,
    length: 1,
    convRule: rule22
  }, {
    start: 7691,
    length: 1,
    convRule: rule23
  }, {
    start: 7692,
    length: 1,
    convRule: rule22
  }, {
    start: 7693,
    length: 1,
    convRule: rule23
  }, {
    start: 7694,
    length: 1,
    convRule: rule22
  }, {
    start: 7695,
    length: 1,
    convRule: rule23
  }, {
    start: 7696,
    length: 1,
    convRule: rule22
  }, {
    start: 7697,
    length: 1,
    convRule: rule23
  }, {
    start: 7698,
    length: 1,
    convRule: rule22
  }, {
    start: 7699,
    length: 1,
    convRule: rule23
  }, {
    start: 7700,
    length: 1,
    convRule: rule22
  }, {
    start: 7701,
    length: 1,
    convRule: rule23
  }, {
    start: 7702,
    length: 1,
    convRule: rule22
  }, {
    start: 7703,
    length: 1,
    convRule: rule23
  }, {
    start: 7704,
    length: 1,
    convRule: rule22
  }, {
    start: 7705,
    length: 1,
    convRule: rule23
  }, {
    start: 7706,
    length: 1,
    convRule: rule22
  }, {
    start: 7707,
    length: 1,
    convRule: rule23
  }, {
    start: 7708,
    length: 1,
    convRule: rule22
  }, {
    start: 7709,
    length: 1,
    convRule: rule23
  }, {
    start: 7710,
    length: 1,
    convRule: rule22
  }, {
    start: 7711,
    length: 1,
    convRule: rule23
  }, {
    start: 7712,
    length: 1,
    convRule: rule22
  }, {
    start: 7713,
    length: 1,
    convRule: rule23
  }, {
    start: 7714,
    length: 1,
    convRule: rule22
  }, {
    start: 7715,
    length: 1,
    convRule: rule23
  }, {
    start: 7716,
    length: 1,
    convRule: rule22
  }, {
    start: 7717,
    length: 1,
    convRule: rule23
  }, {
    start: 7718,
    length: 1,
    convRule: rule22
  }, {
    start: 7719,
    length: 1,
    convRule: rule23
  }, {
    start: 7720,
    length: 1,
    convRule: rule22
  }, {
    start: 7721,
    length: 1,
    convRule: rule23
  }, {
    start: 7722,
    length: 1,
    convRule: rule22
  }, {
    start: 7723,
    length: 1,
    convRule: rule23
  }, {
    start: 7724,
    length: 1,
    convRule: rule22
  }, {
    start: 7725,
    length: 1,
    convRule: rule23
  }, {
    start: 7726,
    length: 1,
    convRule: rule22
  }, {
    start: 7727,
    length: 1,
    convRule: rule23
  }, {
    start: 7728,
    length: 1,
    convRule: rule22
  }, {
    start: 7729,
    length: 1,
    convRule: rule23
  }, {
    start: 7730,
    length: 1,
    convRule: rule22
  }, {
    start: 7731,
    length: 1,
    convRule: rule23
  }, {
    start: 7732,
    length: 1,
    convRule: rule22
  }, {
    start: 7733,
    length: 1,
    convRule: rule23
  }, {
    start: 7734,
    length: 1,
    convRule: rule22
  }, {
    start: 7735,
    length: 1,
    convRule: rule23
  }, {
    start: 7736,
    length: 1,
    convRule: rule22
  }, {
    start: 7737,
    length: 1,
    convRule: rule23
  }, {
    start: 7738,
    length: 1,
    convRule: rule22
  }, {
    start: 7739,
    length: 1,
    convRule: rule23
  }, {
    start: 7740,
    length: 1,
    convRule: rule22
  }, {
    start: 7741,
    length: 1,
    convRule: rule23
  }, {
    start: 7742,
    length: 1,
    convRule: rule22
  }, {
    start: 7743,
    length: 1,
    convRule: rule23
  }, {
    start: 7744,
    length: 1,
    convRule: rule22
  }, {
    start: 7745,
    length: 1,
    convRule: rule23
  }, {
    start: 7746,
    length: 1,
    convRule: rule22
  }, {
    start: 7747,
    length: 1,
    convRule: rule23
  }, {
    start: 7748,
    length: 1,
    convRule: rule22
  }, {
    start: 7749,
    length: 1,
    convRule: rule23
  }, {
    start: 7750,
    length: 1,
    convRule: rule22
  }, {
    start: 7751,
    length: 1,
    convRule: rule23
  }, {
    start: 7752,
    length: 1,
    convRule: rule22
  }, {
    start: 7753,
    length: 1,
    convRule: rule23
  }, {
    start: 7754,
    length: 1,
    convRule: rule22
  }, {
    start: 7755,
    length: 1,
    convRule: rule23
  }, {
    start: 7756,
    length: 1,
    convRule: rule22
  }, {
    start: 7757,
    length: 1,
    convRule: rule23
  }, {
    start: 7758,
    length: 1,
    convRule: rule22
  }, {
    start: 7759,
    length: 1,
    convRule: rule23
  }, {
    start: 7760,
    length: 1,
    convRule: rule22
  }, {
    start: 7761,
    length: 1,
    convRule: rule23
  }, {
    start: 7762,
    length: 1,
    convRule: rule22
  }, {
    start: 7763,
    length: 1,
    convRule: rule23
  }, {
    start: 7764,
    length: 1,
    convRule: rule22
  }, {
    start: 7765,
    length: 1,
    convRule: rule23
  }, {
    start: 7766,
    length: 1,
    convRule: rule22
  }, {
    start: 7767,
    length: 1,
    convRule: rule23
  }, {
    start: 7768,
    length: 1,
    convRule: rule22
  }, {
    start: 7769,
    length: 1,
    convRule: rule23
  }, {
    start: 7770,
    length: 1,
    convRule: rule22
  }, {
    start: 7771,
    length: 1,
    convRule: rule23
  }, {
    start: 7772,
    length: 1,
    convRule: rule22
  }, {
    start: 7773,
    length: 1,
    convRule: rule23
  }, {
    start: 7774,
    length: 1,
    convRule: rule22
  }, {
    start: 7775,
    length: 1,
    convRule: rule23
  }, {
    start: 7776,
    length: 1,
    convRule: rule22
  }, {
    start: 7777,
    length: 1,
    convRule: rule23
  }, {
    start: 7778,
    length: 1,
    convRule: rule22
  }, {
    start: 7779,
    length: 1,
    convRule: rule23
  }, {
    start: 7780,
    length: 1,
    convRule: rule22
  }, {
    start: 7781,
    length: 1,
    convRule: rule23
  }, {
    start: 7782,
    length: 1,
    convRule: rule22
  }, {
    start: 7783,
    length: 1,
    convRule: rule23
  }, {
    start: 7784,
    length: 1,
    convRule: rule22
  }, {
    start: 7785,
    length: 1,
    convRule: rule23
  }, {
    start: 7786,
    length: 1,
    convRule: rule22
  }, {
    start: 7787,
    length: 1,
    convRule: rule23
  }, {
    start: 7788,
    length: 1,
    convRule: rule22
  }, {
    start: 7789,
    length: 1,
    convRule: rule23
  }, {
    start: 7790,
    length: 1,
    convRule: rule22
  }, {
    start: 7791,
    length: 1,
    convRule: rule23
  }, {
    start: 7792,
    length: 1,
    convRule: rule22
  }, {
    start: 7793,
    length: 1,
    convRule: rule23
  }, {
    start: 7794,
    length: 1,
    convRule: rule22
  }, {
    start: 7795,
    length: 1,
    convRule: rule23
  }, {
    start: 7796,
    length: 1,
    convRule: rule22
  }, {
    start: 7797,
    length: 1,
    convRule: rule23
  }, {
    start: 7798,
    length: 1,
    convRule: rule22
  }, {
    start: 7799,
    length: 1,
    convRule: rule23
  }, {
    start: 7800,
    length: 1,
    convRule: rule22
  }, {
    start: 7801,
    length: 1,
    convRule: rule23
  }, {
    start: 7802,
    length: 1,
    convRule: rule22
  }, {
    start: 7803,
    length: 1,
    convRule: rule23
  }, {
    start: 7804,
    length: 1,
    convRule: rule22
  }, {
    start: 7805,
    length: 1,
    convRule: rule23
  }, {
    start: 7806,
    length: 1,
    convRule: rule22
  }, {
    start: 7807,
    length: 1,
    convRule: rule23
  }, {
    start: 7808,
    length: 1,
    convRule: rule22
  }, {
    start: 7809,
    length: 1,
    convRule: rule23
  }, {
    start: 7810,
    length: 1,
    convRule: rule22
  }, {
    start: 7811,
    length: 1,
    convRule: rule23
  }, {
    start: 7812,
    length: 1,
    convRule: rule22
  }, {
    start: 7813,
    length: 1,
    convRule: rule23
  }, {
    start: 7814,
    length: 1,
    convRule: rule22
  }, {
    start: 7815,
    length: 1,
    convRule: rule23
  }, {
    start: 7816,
    length: 1,
    convRule: rule22
  }, {
    start: 7817,
    length: 1,
    convRule: rule23
  }, {
    start: 7818,
    length: 1,
    convRule: rule22
  }, {
    start: 7819,
    length: 1,
    convRule: rule23
  }, {
    start: 7820,
    length: 1,
    convRule: rule22
  }, {
    start: 7821,
    length: 1,
    convRule: rule23
  }, {
    start: 7822,
    length: 1,
    convRule: rule22
  }, {
    start: 7823,
    length: 1,
    convRule: rule23
  }, {
    start: 7824,
    length: 1,
    convRule: rule22
  }, {
    start: 7825,
    length: 1,
    convRule: rule23
  }, {
    start: 7826,
    length: 1,
    convRule: rule22
  }, {
    start: 7827,
    length: 1,
    convRule: rule23
  }, {
    start: 7828,
    length: 1,
    convRule: rule22
  }, {
    start: 7829,
    length: 1,
    convRule: rule23
  }, {
    start: 7830,
    length: 5,
    convRule: rule20
  }, {
    start: 7835,
    length: 1,
    convRule: rule141
  }, {
    start: 7836,
    length: 2,
    convRule: rule20
  }, {
    start: 7838,
    length: 1,
    convRule: rule142
  }, {
    start: 7839,
    length: 1,
    convRule: rule20
  }, {
    start: 7840,
    length: 1,
    convRule: rule22
  }, {
    start: 7841,
    length: 1,
    convRule: rule23
  }, {
    start: 7842,
    length: 1,
    convRule: rule22
  }, {
    start: 7843,
    length: 1,
    convRule: rule23
  }, {
    start: 7844,
    length: 1,
    convRule: rule22
  }, {
    start: 7845,
    length: 1,
    convRule: rule23
  }, {
    start: 7846,
    length: 1,
    convRule: rule22
  }, {
    start: 7847,
    length: 1,
    convRule: rule23
  }, {
    start: 7848,
    length: 1,
    convRule: rule22
  }, {
    start: 7849,
    length: 1,
    convRule: rule23
  }, {
    start: 7850,
    length: 1,
    convRule: rule22
  }, {
    start: 7851,
    length: 1,
    convRule: rule23
  }, {
    start: 7852,
    length: 1,
    convRule: rule22
  }, {
    start: 7853,
    length: 1,
    convRule: rule23
  }, {
    start: 7854,
    length: 1,
    convRule: rule22
  }, {
    start: 7855,
    length: 1,
    convRule: rule23
  }, {
    start: 7856,
    length: 1,
    convRule: rule22
  }, {
    start: 7857,
    length: 1,
    convRule: rule23
  }, {
    start: 7858,
    length: 1,
    convRule: rule22
  }, {
    start: 7859,
    length: 1,
    convRule: rule23
  }, {
    start: 7860,
    length: 1,
    convRule: rule22
  }, {
    start: 7861,
    length: 1,
    convRule: rule23
  }, {
    start: 7862,
    length: 1,
    convRule: rule22
  }, {
    start: 7863,
    length: 1,
    convRule: rule23
  }, {
    start: 7864,
    length: 1,
    convRule: rule22
  }, {
    start: 7865,
    length: 1,
    convRule: rule23
  }, {
    start: 7866,
    length: 1,
    convRule: rule22
  }, {
    start: 7867,
    length: 1,
    convRule: rule23
  }, {
    start: 7868,
    length: 1,
    convRule: rule22
  }, {
    start: 7869,
    length: 1,
    convRule: rule23
  }, {
    start: 7870,
    length: 1,
    convRule: rule22
  }, {
    start: 7871,
    length: 1,
    convRule: rule23
  }, {
    start: 7872,
    length: 1,
    convRule: rule22
  }, {
    start: 7873,
    length: 1,
    convRule: rule23
  }, {
    start: 7874,
    length: 1,
    convRule: rule22
  }, {
    start: 7875,
    length: 1,
    convRule: rule23
  }, {
    start: 7876,
    length: 1,
    convRule: rule22
  }, {
    start: 7877,
    length: 1,
    convRule: rule23
  }, {
    start: 7878,
    length: 1,
    convRule: rule22
  }, {
    start: 7879,
    length: 1,
    convRule: rule23
  }, {
    start: 7880,
    length: 1,
    convRule: rule22
  }, {
    start: 7881,
    length: 1,
    convRule: rule23
  }, {
    start: 7882,
    length: 1,
    convRule: rule22
  }, {
    start: 7883,
    length: 1,
    convRule: rule23
  }, {
    start: 7884,
    length: 1,
    convRule: rule22
  }, {
    start: 7885,
    length: 1,
    convRule: rule23
  }, {
    start: 7886,
    length: 1,
    convRule: rule22
  }, {
    start: 7887,
    length: 1,
    convRule: rule23
  }, {
    start: 7888,
    length: 1,
    convRule: rule22
  }, {
    start: 7889,
    length: 1,
    convRule: rule23
  }, {
    start: 7890,
    length: 1,
    convRule: rule22
  }, {
    start: 7891,
    length: 1,
    convRule: rule23
  }, {
    start: 7892,
    length: 1,
    convRule: rule22
  }, {
    start: 7893,
    length: 1,
    convRule: rule23
  }, {
    start: 7894,
    length: 1,
    convRule: rule22
  }, {
    start: 7895,
    length: 1,
    convRule: rule23
  }, {
    start: 7896,
    length: 1,
    convRule: rule22
  }, {
    start: 7897,
    length: 1,
    convRule: rule23
  }, {
    start: 7898,
    length: 1,
    convRule: rule22
  }, {
    start: 7899,
    length: 1,
    convRule: rule23
  }, {
    start: 7900,
    length: 1,
    convRule: rule22
  }, {
    start: 7901,
    length: 1,
    convRule: rule23
  }, {
    start: 7902,
    length: 1,
    convRule: rule22
  }, {
    start: 7903,
    length: 1,
    convRule: rule23
  }, {
    start: 7904,
    length: 1,
    convRule: rule22
  }, {
    start: 7905,
    length: 1,
    convRule: rule23
  }, {
    start: 7906,
    length: 1,
    convRule: rule22
  }, {
    start: 7907,
    length: 1,
    convRule: rule23
  }, {
    start: 7908,
    length: 1,
    convRule: rule22
  }, {
    start: 7909,
    length: 1,
    convRule: rule23
  }, {
    start: 7910,
    length: 1,
    convRule: rule22
  }, {
    start: 7911,
    length: 1,
    convRule: rule23
  }, {
    start: 7912,
    length: 1,
    convRule: rule22
  }, {
    start: 7913,
    length: 1,
    convRule: rule23
  }, {
    start: 7914,
    length: 1,
    convRule: rule22
  }, {
    start: 7915,
    length: 1,
    convRule: rule23
  }, {
    start: 7916,
    length: 1,
    convRule: rule22
  }, {
    start: 7917,
    length: 1,
    convRule: rule23
  }, {
    start: 7918,
    length: 1,
    convRule: rule22
  }, {
    start: 7919,
    length: 1,
    convRule: rule23
  }, {
    start: 7920,
    length: 1,
    convRule: rule22
  }, {
    start: 7921,
    length: 1,
    convRule: rule23
  }, {
    start: 7922,
    length: 1,
    convRule: rule22
  }, {
    start: 7923,
    length: 1,
    convRule: rule23
  }, {
    start: 7924,
    length: 1,
    convRule: rule22
  }, {
    start: 7925,
    length: 1,
    convRule: rule23
  }, {
    start: 7926,
    length: 1,
    convRule: rule22
  }, {
    start: 7927,
    length: 1,
    convRule: rule23
  }, {
    start: 7928,
    length: 1,
    convRule: rule22
  }, {
    start: 7929,
    length: 1,
    convRule: rule23
  }, {
    start: 7930,
    length: 1,
    convRule: rule22
  }, {
    start: 7931,
    length: 1,
    convRule: rule23
  }, {
    start: 7932,
    length: 1,
    convRule: rule22
  }, {
    start: 7933,
    length: 1,
    convRule: rule23
  }, {
    start: 7934,
    length: 1,
    convRule: rule22
  }, {
    start: 7935,
    length: 1,
    convRule: rule23
  }, {
    start: 7936,
    length: 8,
    convRule: rule143
  }, {
    start: 7944,
    length: 8,
    convRule: rule144
  }, {
    start: 7952,
    length: 6,
    convRule: rule143
  }, {
    start: 7960,
    length: 6,
    convRule: rule144
  }, {
    start: 7968,
    length: 8,
    convRule: rule143
  }, {
    start: 7976,
    length: 8,
    convRule: rule144
  }, {
    start: 7984,
    length: 8,
    convRule: rule143
  }, {
    start: 7992,
    length: 8,
    convRule: rule144
  }, {
    start: 8e3,
    length: 6,
    convRule: rule143
  }, {
    start: 8008,
    length: 6,
    convRule: rule144
  }, {
    start: 8016,
    length: 1,
    convRule: rule20
  }, {
    start: 8017,
    length: 1,
    convRule: rule143
  }, {
    start: 8018,
    length: 1,
    convRule: rule20
  }, {
    start: 8019,
    length: 1,
    convRule: rule143
  }, {
    start: 8020,
    length: 1,
    convRule: rule20
  }, {
    start: 8021,
    length: 1,
    convRule: rule143
  }, {
    start: 8022,
    length: 1,
    convRule: rule20
  }, {
    start: 8023,
    length: 1,
    convRule: rule143
  }, {
    start: 8025,
    length: 1,
    convRule: rule144
  }, {
    start: 8027,
    length: 1,
    convRule: rule144
  }, {
    start: 8029,
    length: 1,
    convRule: rule144
  }, {
    start: 8031,
    length: 1,
    convRule: rule144
  }, {
    start: 8032,
    length: 8,
    convRule: rule143
  }, {
    start: 8040,
    length: 8,
    convRule: rule144
  }, {
    start: 8048,
    length: 2,
    convRule: rule145
  }, {
    start: 8050,
    length: 4,
    convRule: rule146
  }, {
    start: 8054,
    length: 2,
    convRule: rule147
  }, {
    start: 8056,
    length: 2,
    convRule: rule148
  }, {
    start: 8058,
    length: 2,
    convRule: rule149
  }, {
    start: 8060,
    length: 2,
    convRule: rule150
  }, {
    start: 8064,
    length: 8,
    convRule: rule143
  }, {
    start: 8072,
    length: 8,
    convRule: rule151
  }, {
    start: 8080,
    length: 8,
    convRule: rule143
  }, {
    start: 8088,
    length: 8,
    convRule: rule151
  }, {
    start: 8096,
    length: 8,
    convRule: rule143
  }, {
    start: 8104,
    length: 8,
    convRule: rule151
  }, {
    start: 8112,
    length: 2,
    convRule: rule143
  }, {
    start: 8114,
    length: 1,
    convRule: rule20
  }, {
    start: 8115,
    length: 1,
    convRule: rule152
  }, {
    start: 8116,
    length: 1,
    convRule: rule20
  }, {
    start: 8118,
    length: 2,
    convRule: rule20
  }, {
    start: 8120,
    length: 2,
    convRule: rule144
  }, {
    start: 8122,
    length: 2,
    convRule: rule153
  }, {
    start: 8124,
    length: 1,
    convRule: rule154
  }, {
    start: 8125,
    length: 1,
    convRule: rule10
  }, {
    start: 8126,
    length: 1,
    convRule: rule155
  }, {
    start: 8127,
    length: 3,
    convRule: rule10
  }, {
    start: 8130,
    length: 1,
    convRule: rule20
  }, {
    start: 8131,
    length: 1,
    convRule: rule152
  }, {
    start: 8132,
    length: 1,
    convRule: rule20
  }, {
    start: 8134,
    length: 2,
    convRule: rule20
  }, {
    start: 8136,
    length: 4,
    convRule: rule156
  }, {
    start: 8140,
    length: 1,
    convRule: rule154
  }, {
    start: 8141,
    length: 3,
    convRule: rule10
  }, {
    start: 8144,
    length: 2,
    convRule: rule143
  }, {
    start: 8146,
    length: 2,
    convRule: rule20
  }, {
    start: 8150,
    length: 2,
    convRule: rule20
  }, {
    start: 8152,
    length: 2,
    convRule: rule144
  }, {
    start: 8154,
    length: 2,
    convRule: rule157
  }, {
    start: 8157,
    length: 3,
    convRule: rule10
  }, {
    start: 8160,
    length: 2,
    convRule: rule143
  }, {
    start: 8162,
    length: 3,
    convRule: rule20
  }, {
    start: 8165,
    length: 1,
    convRule: rule113
  }, {
    start: 8166,
    length: 2,
    convRule: rule20
  }, {
    start: 8168,
    length: 2,
    convRule: rule144
  }, {
    start: 8170,
    length: 2,
    convRule: rule158
  }, {
    start: 8172,
    length: 1,
    convRule: rule117
  }, {
    start: 8173,
    length: 3,
    convRule: rule10
  }, {
    start: 8178,
    length: 1,
    convRule: rule20
  }, {
    start: 8179,
    length: 1,
    convRule: rule152
  }, {
    start: 8180,
    length: 1,
    convRule: rule20
  }, {
    start: 8182,
    length: 2,
    convRule: rule20
  }, {
    start: 8184,
    length: 2,
    convRule: rule159
  }, {
    start: 8186,
    length: 2,
    convRule: rule160
  }, {
    start: 8188,
    length: 1,
    convRule: rule154
  }, {
    start: 8189,
    length: 2,
    convRule: rule10
  }, {
    start: 8192,
    length: 11,
    convRule: rule1
  }, {
    start: 8203,
    length: 5,
    convRule: rule16
  }, {
    start: 8208,
    length: 6,
    convRule: rule7
  }, {
    start: 8214,
    length: 2,
    convRule: rule2
  }, {
    start: 8216,
    length: 1,
    convRule: rule15
  }, {
    start: 8217,
    length: 1,
    convRule: rule19
  }, {
    start: 8218,
    length: 1,
    convRule: rule4
  }, {
    start: 8219,
    length: 2,
    convRule: rule15
  }, {
    start: 8221,
    length: 1,
    convRule: rule19
  }, {
    start: 8222,
    length: 1,
    convRule: rule4
  }, {
    start: 8223,
    length: 1,
    convRule: rule15
  }, {
    start: 8224,
    length: 8,
    convRule: rule2
  }, {
    start: 8232,
    length: 1,
    convRule: rule161
  }, {
    start: 8233,
    length: 1,
    convRule: rule162
  }, {
    start: 8234,
    length: 5,
    convRule: rule16
  }, {
    start: 8239,
    length: 1,
    convRule: rule1
  }, {
    start: 8240,
    length: 9,
    convRule: rule2
  }, {
    start: 8249,
    length: 1,
    convRule: rule15
  }, {
    start: 8250,
    length: 1,
    convRule: rule19
  }, {
    start: 8251,
    length: 4,
    convRule: rule2
  }, {
    start: 8255,
    length: 2,
    convRule: rule11
  }, {
    start: 8257,
    length: 3,
    convRule: rule2
  }, {
    start: 8260,
    length: 1,
    convRule: rule6
  }, {
    start: 8261,
    length: 1,
    convRule: rule4
  }, {
    start: 8262,
    length: 1,
    convRule: rule5
  }, {
    start: 8263,
    length: 11,
    convRule: rule2
  }, {
    start: 8274,
    length: 1,
    convRule: rule6
  }, {
    start: 8275,
    length: 1,
    convRule: rule2
  }, {
    start: 8276,
    length: 1,
    convRule: rule11
  }, {
    start: 8277,
    length: 10,
    convRule: rule2
  }, {
    start: 8287,
    length: 1,
    convRule: rule1
  }, {
    start: 8288,
    length: 5,
    convRule: rule16
  }, {
    start: 8294,
    length: 10,
    convRule: rule16
  }, {
    start: 8304,
    length: 1,
    convRule: rule17
  }, {
    start: 8305,
    length: 1,
    convRule: rule91
  }, {
    start: 8308,
    length: 6,
    convRule: rule17
  }, {
    start: 8314,
    length: 3,
    convRule: rule6
  }, {
    start: 8317,
    length: 1,
    convRule: rule4
  }, {
    start: 8318,
    length: 1,
    convRule: rule5
  }, {
    start: 8319,
    length: 1,
    convRule: rule91
  }, {
    start: 8320,
    length: 10,
    convRule: rule17
  }, {
    start: 8330,
    length: 3,
    convRule: rule6
  }, {
    start: 8333,
    length: 1,
    convRule: rule4
  }, {
    start: 8334,
    length: 1,
    convRule: rule5
  }, {
    start: 8336,
    length: 13,
    convRule: rule91
  }, {
    start: 8352,
    length: 32,
    convRule: rule3
  }, {
    start: 8400,
    length: 13,
    convRule: rule92
  }, {
    start: 8413,
    length: 4,
    convRule: rule119
  }, {
    start: 8417,
    length: 1,
    convRule: rule92
  }, {
    start: 8418,
    length: 3,
    convRule: rule119
  }, {
    start: 8421,
    length: 12,
    convRule: rule92
  }, {
    start: 8448,
    length: 2,
    convRule: rule13
  }, {
    start: 8450,
    length: 1,
    convRule: rule107
  }, {
    start: 8451,
    length: 4,
    convRule: rule13
  }, {
    start: 8455,
    length: 1,
    convRule: rule107
  }, {
    start: 8456,
    length: 2,
    convRule: rule13
  }, {
    start: 8458,
    length: 1,
    convRule: rule20
  }, {
    start: 8459,
    length: 3,
    convRule: rule107
  }, {
    start: 8462,
    length: 2,
    convRule: rule20
  }, {
    start: 8464,
    length: 3,
    convRule: rule107
  }, {
    start: 8467,
    length: 1,
    convRule: rule20
  }, {
    start: 8468,
    length: 1,
    convRule: rule13
  }, {
    start: 8469,
    length: 1,
    convRule: rule107
  }, {
    start: 8470,
    length: 2,
    convRule: rule13
  }, {
    start: 8472,
    length: 1,
    convRule: rule6
  }, {
    start: 8473,
    length: 5,
    convRule: rule107
  }, {
    start: 8478,
    length: 6,
    convRule: rule13
  }, {
    start: 8484,
    length: 1,
    convRule: rule107
  }, {
    start: 8485,
    length: 1,
    convRule: rule13
  }, {
    start: 8486,
    length: 1,
    convRule: rule163
  }, {
    start: 8487,
    length: 1,
    convRule: rule13
  }, {
    start: 8488,
    length: 1,
    convRule: rule107
  }, {
    start: 8489,
    length: 1,
    convRule: rule13
  }, {
    start: 8490,
    length: 1,
    convRule: rule164
  }, {
    start: 8491,
    length: 1,
    convRule: rule165
  }, {
    start: 8492,
    length: 2,
    convRule: rule107
  }, {
    start: 8494,
    length: 1,
    convRule: rule13
  }, {
    start: 8495,
    length: 1,
    convRule: rule20
  }, {
    start: 8496,
    length: 2,
    convRule: rule107
  }, {
    start: 8498,
    length: 1,
    convRule: rule166
  }, {
    start: 8499,
    length: 1,
    convRule: rule107
  }, {
    start: 8500,
    length: 1,
    convRule: rule20
  }, {
    start: 8501,
    length: 4,
    convRule: rule14
  }, {
    start: 8505,
    length: 1,
    convRule: rule20
  }, {
    start: 8506,
    length: 2,
    convRule: rule13
  }, {
    start: 8508,
    length: 2,
    convRule: rule20
  }, {
    start: 8510,
    length: 2,
    convRule: rule107
  }, {
    start: 8512,
    length: 5,
    convRule: rule6
  }, {
    start: 8517,
    length: 1,
    convRule: rule107
  }, {
    start: 8518,
    length: 4,
    convRule: rule20
  }, {
    start: 8522,
    length: 1,
    convRule: rule13
  }, {
    start: 8523,
    length: 1,
    convRule: rule6
  }, {
    start: 8524,
    length: 2,
    convRule: rule13
  }, {
    start: 8526,
    length: 1,
    convRule: rule167
  }, {
    start: 8527,
    length: 1,
    convRule: rule13
  }, {
    start: 8528,
    length: 16,
    convRule: rule17
  }, {
    start: 8544,
    length: 16,
    convRule: rule168
  }, {
    start: 8560,
    length: 16,
    convRule: rule169
  }, {
    start: 8576,
    length: 3,
    convRule: rule128
  }, {
    start: 8579,
    length: 1,
    convRule: rule22
  }, {
    start: 8580,
    length: 1,
    convRule: rule23
  }, {
    start: 8581,
    length: 4,
    convRule: rule128
  }, {
    start: 8585,
    length: 1,
    convRule: rule17
  }, {
    start: 8586,
    length: 2,
    convRule: rule13
  }, {
    start: 8592,
    length: 5,
    convRule: rule6
  }, {
    start: 8597,
    length: 5,
    convRule: rule13
  }, {
    start: 8602,
    length: 2,
    convRule: rule6
  }, {
    start: 8604,
    length: 4,
    convRule: rule13
  }, {
    start: 8608,
    length: 1,
    convRule: rule6
  }, {
    start: 8609,
    length: 2,
    convRule: rule13
  }, {
    start: 8611,
    length: 1,
    convRule: rule6
  }, {
    start: 8612,
    length: 2,
    convRule: rule13
  }, {
    start: 8614,
    length: 1,
    convRule: rule6
  }, {
    start: 8615,
    length: 7,
    convRule: rule13
  }, {
    start: 8622,
    length: 1,
    convRule: rule6
  }, {
    start: 8623,
    length: 31,
    convRule: rule13
  }, {
    start: 8654,
    length: 2,
    convRule: rule6
  }, {
    start: 8656,
    length: 2,
    convRule: rule13
  }, {
    start: 8658,
    length: 1,
    convRule: rule6
  }, {
    start: 8659,
    length: 1,
    convRule: rule13
  }, {
    start: 8660,
    length: 1,
    convRule: rule6
  }, {
    start: 8661,
    length: 31,
    convRule: rule13
  }, {
    start: 8692,
    length: 268,
    convRule: rule6
  }, {
    start: 8960,
    length: 8,
    convRule: rule13
  }, {
    start: 8968,
    length: 1,
    convRule: rule4
  }, {
    start: 8969,
    length: 1,
    convRule: rule5
  }, {
    start: 8970,
    length: 1,
    convRule: rule4
  }, {
    start: 8971,
    length: 1,
    convRule: rule5
  }, {
    start: 8972,
    length: 20,
    convRule: rule13
  }, {
    start: 8992,
    length: 2,
    convRule: rule6
  }, {
    start: 8994,
    length: 7,
    convRule: rule13
  }, {
    start: 9001,
    length: 1,
    convRule: rule4
  }, {
    start: 9002,
    length: 1,
    convRule: rule5
  }, {
    start: 9003,
    length: 81,
    convRule: rule13
  }, {
    start: 9084,
    length: 1,
    convRule: rule6
  }, {
    start: 9085,
    length: 30,
    convRule: rule13
  }, {
    start: 9115,
    length: 25,
    convRule: rule6
  }, {
    start: 9140,
    length: 40,
    convRule: rule13
  }, {
    start: 9180,
    length: 6,
    convRule: rule6
  }, {
    start: 9186,
    length: 69,
    convRule: rule13
  }, {
    start: 9280,
    length: 11,
    convRule: rule13
  }, {
    start: 9312,
    length: 60,
    convRule: rule17
  }, {
    start: 9372,
    length: 26,
    convRule: rule13
  }, {
    start: 9398,
    length: 26,
    convRule: rule170
  }, {
    start: 9424,
    length: 26,
    convRule: rule171
  }, {
    start: 9450,
    length: 22,
    convRule: rule17
  }, {
    start: 9472,
    length: 183,
    convRule: rule13
  }, {
    start: 9655,
    length: 1,
    convRule: rule6
  }, {
    start: 9656,
    length: 9,
    convRule: rule13
  }, {
    start: 9665,
    length: 1,
    convRule: rule6
  }, {
    start: 9666,
    length: 54,
    convRule: rule13
  }, {
    start: 9720,
    length: 8,
    convRule: rule6
  }, {
    start: 9728,
    length: 111,
    convRule: rule13
  }, {
    start: 9839,
    length: 1,
    convRule: rule6
  }, {
    start: 9840,
    length: 248,
    convRule: rule13
  }, {
    start: 10088,
    length: 1,
    convRule: rule4
  }, {
    start: 10089,
    length: 1,
    convRule: rule5
  }, {
    start: 10090,
    length: 1,
    convRule: rule4
  }, {
    start: 10091,
    length: 1,
    convRule: rule5
  }, {
    start: 10092,
    length: 1,
    convRule: rule4
  }, {
    start: 10093,
    length: 1,
    convRule: rule5
  }, {
    start: 10094,
    length: 1,
    convRule: rule4
  }, {
    start: 10095,
    length: 1,
    convRule: rule5
  }, {
    start: 10096,
    length: 1,
    convRule: rule4
  }, {
    start: 10097,
    length: 1,
    convRule: rule5
  }, {
    start: 10098,
    length: 1,
    convRule: rule4
  }, {
    start: 10099,
    length: 1,
    convRule: rule5
  }, {
    start: 10100,
    length: 1,
    convRule: rule4
  }, {
    start: 10101,
    length: 1,
    convRule: rule5
  }, {
    start: 10102,
    length: 30,
    convRule: rule17
  }, {
    start: 10132,
    length: 44,
    convRule: rule13
  }, {
    start: 10176,
    length: 5,
    convRule: rule6
  }, {
    start: 10181,
    length: 1,
    convRule: rule4
  }, {
    start: 10182,
    length: 1,
    convRule: rule5
  }, {
    start: 10183,
    length: 31,
    convRule: rule6
  }, {
    start: 10214,
    length: 1,
    convRule: rule4
  }, {
    start: 10215,
    length: 1,
    convRule: rule5
  }, {
    start: 10216,
    length: 1,
    convRule: rule4
  }, {
    start: 10217,
    length: 1,
    convRule: rule5
  }, {
    start: 10218,
    length: 1,
    convRule: rule4
  }, {
    start: 10219,
    length: 1,
    convRule: rule5
  }, {
    start: 10220,
    length: 1,
    convRule: rule4
  }, {
    start: 10221,
    length: 1,
    convRule: rule5
  }, {
    start: 10222,
    length: 1,
    convRule: rule4
  }, {
    start: 10223,
    length: 1,
    convRule: rule5
  }, {
    start: 10224,
    length: 16,
    convRule: rule6
  }, {
    start: 10240,
    length: 256,
    convRule: rule13
  }, {
    start: 10496,
    length: 131,
    convRule: rule6
  }, {
    start: 10627,
    length: 1,
    convRule: rule4
  }, {
    start: 10628,
    length: 1,
    convRule: rule5
  }, {
    start: 10629,
    length: 1,
    convRule: rule4
  }, {
    start: 10630,
    length: 1,
    convRule: rule5
  }, {
    start: 10631,
    length: 1,
    convRule: rule4
  }, {
    start: 10632,
    length: 1,
    convRule: rule5
  }, {
    start: 10633,
    length: 1,
    convRule: rule4
  }, {
    start: 10634,
    length: 1,
    convRule: rule5
  }, {
    start: 10635,
    length: 1,
    convRule: rule4
  }, {
    start: 10636,
    length: 1,
    convRule: rule5
  }, {
    start: 10637,
    length: 1,
    convRule: rule4
  }, {
    start: 10638,
    length: 1,
    convRule: rule5
  }, {
    start: 10639,
    length: 1,
    convRule: rule4
  }, {
    start: 10640,
    length: 1,
    convRule: rule5
  }, {
    start: 10641,
    length: 1,
    convRule: rule4
  }, {
    start: 10642,
    length: 1,
    convRule: rule5
  }, {
    start: 10643,
    length: 1,
    convRule: rule4
  }, {
    start: 10644,
    length: 1,
    convRule: rule5
  }, {
    start: 10645,
    length: 1,
    convRule: rule4
  }, {
    start: 10646,
    length: 1,
    convRule: rule5
  }, {
    start: 10647,
    length: 1,
    convRule: rule4
  }, {
    start: 10648,
    length: 1,
    convRule: rule5
  }, {
    start: 10649,
    length: 63,
    convRule: rule6
  }, {
    start: 10712,
    length: 1,
    convRule: rule4
  }, {
    start: 10713,
    length: 1,
    convRule: rule5
  }, {
    start: 10714,
    length: 1,
    convRule: rule4
  }, {
    start: 10715,
    length: 1,
    convRule: rule5
  }, {
    start: 10716,
    length: 32,
    convRule: rule6
  }, {
    start: 10748,
    length: 1,
    convRule: rule4
  }, {
    start: 10749,
    length: 1,
    convRule: rule5
  }, {
    start: 10750,
    length: 258,
    convRule: rule6
  }, {
    start: 11008,
    length: 48,
    convRule: rule13
  }, {
    start: 11056,
    length: 21,
    convRule: rule6
  }, {
    start: 11077,
    length: 2,
    convRule: rule13
  }, {
    start: 11079,
    length: 6,
    convRule: rule6
  }, {
    start: 11085,
    length: 39,
    convRule: rule13
  }, {
    start: 11126,
    length: 32,
    convRule: rule13
  }, {
    start: 11159,
    length: 105,
    convRule: rule13
  }, {
    start: 11264,
    length: 47,
    convRule: rule122
  }, {
    start: 11312,
    length: 47,
    convRule: rule123
  }, {
    start: 11360,
    length: 1,
    convRule: rule22
  }, {
    start: 11361,
    length: 1,
    convRule: rule23
  }, {
    start: 11362,
    length: 1,
    convRule: rule172
  }, {
    start: 11363,
    length: 1,
    convRule: rule173
  }, {
    start: 11364,
    length: 1,
    convRule: rule174
  }, {
    start: 11365,
    length: 1,
    convRule: rule175
  }, {
    start: 11366,
    length: 1,
    convRule: rule176
  }, {
    start: 11367,
    length: 1,
    convRule: rule22
  }, {
    start: 11368,
    length: 1,
    convRule: rule23
  }, {
    start: 11369,
    length: 1,
    convRule: rule22
  }, {
    start: 11370,
    length: 1,
    convRule: rule23
  }, {
    start: 11371,
    length: 1,
    convRule: rule22
  }, {
    start: 11372,
    length: 1,
    convRule: rule23
  }, {
    start: 11373,
    length: 1,
    convRule: rule177
  }, {
    start: 11374,
    length: 1,
    convRule: rule178
  }, {
    start: 11375,
    length: 1,
    convRule: rule179
  }, {
    start: 11376,
    length: 1,
    convRule: rule180
  }, {
    start: 11377,
    length: 1,
    convRule: rule20
  }, {
    start: 11378,
    length: 1,
    convRule: rule22
  }, {
    start: 11379,
    length: 1,
    convRule: rule23
  }, {
    start: 11380,
    length: 1,
    convRule: rule20
  }, {
    start: 11381,
    length: 1,
    convRule: rule22
  }, {
    start: 11382,
    length: 1,
    convRule: rule23
  }, {
    start: 11383,
    length: 5,
    convRule: rule20
  }, {
    start: 11388,
    length: 2,
    convRule: rule91
  }, {
    start: 11390,
    length: 2,
    convRule: rule181
  }, {
    start: 11392,
    length: 1,
    convRule: rule22
  }, {
    start: 11393,
    length: 1,
    convRule: rule23
  }, {
    start: 11394,
    length: 1,
    convRule: rule22
  }, {
    start: 11395,
    length: 1,
    convRule: rule23
  }, {
    start: 11396,
    length: 1,
    convRule: rule22
  }, {
    start: 11397,
    length: 1,
    convRule: rule23
  }, {
    start: 11398,
    length: 1,
    convRule: rule22
  }, {
    start: 11399,
    length: 1,
    convRule: rule23
  }, {
    start: 11400,
    length: 1,
    convRule: rule22
  }, {
    start: 11401,
    length: 1,
    convRule: rule23
  }, {
    start: 11402,
    length: 1,
    convRule: rule22
  }, {
    start: 11403,
    length: 1,
    convRule: rule23
  }, {
    start: 11404,
    length: 1,
    convRule: rule22
  }, {
    start: 11405,
    length: 1,
    convRule: rule23
  }, {
    start: 11406,
    length: 1,
    convRule: rule22
  }, {
    start: 11407,
    length: 1,
    convRule: rule23
  }, {
    start: 11408,
    length: 1,
    convRule: rule22
  }, {
    start: 11409,
    length: 1,
    convRule: rule23
  }, {
    start: 11410,
    length: 1,
    convRule: rule22
  }, {
    start: 11411,
    length: 1,
    convRule: rule23
  }, {
    start: 11412,
    length: 1,
    convRule: rule22
  }, {
    start: 11413,
    length: 1,
    convRule: rule23
  }, {
    start: 11414,
    length: 1,
    convRule: rule22
  }, {
    start: 11415,
    length: 1,
    convRule: rule23
  }, {
    start: 11416,
    length: 1,
    convRule: rule22
  }, {
    start: 11417,
    length: 1,
    convRule: rule23
  }, {
    start: 11418,
    length: 1,
    convRule: rule22
  }, {
    start: 11419,
    length: 1,
    convRule: rule23
  }, {
    start: 11420,
    length: 1,
    convRule: rule22
  }, {
    start: 11421,
    length: 1,
    convRule: rule23
  }, {
    start: 11422,
    length: 1,
    convRule: rule22
  }, {
    start: 11423,
    length: 1,
    convRule: rule23
  }, {
    start: 11424,
    length: 1,
    convRule: rule22
  }, {
    start: 11425,
    length: 1,
    convRule: rule23
  }, {
    start: 11426,
    length: 1,
    convRule: rule22
  }, {
    start: 11427,
    length: 1,
    convRule: rule23
  }, {
    start: 11428,
    length: 1,
    convRule: rule22
  }, {
    start: 11429,
    length: 1,
    convRule: rule23
  }, {
    start: 11430,
    length: 1,
    convRule: rule22
  }, {
    start: 11431,
    length: 1,
    convRule: rule23
  }, {
    start: 11432,
    length: 1,
    convRule: rule22
  }, {
    start: 11433,
    length: 1,
    convRule: rule23
  }, {
    start: 11434,
    length: 1,
    convRule: rule22
  }, {
    start: 11435,
    length: 1,
    convRule: rule23
  }, {
    start: 11436,
    length: 1,
    convRule: rule22
  }, {
    start: 11437,
    length: 1,
    convRule: rule23
  }, {
    start: 11438,
    length: 1,
    convRule: rule22
  }, {
    start: 11439,
    length: 1,
    convRule: rule23
  }, {
    start: 11440,
    length: 1,
    convRule: rule22
  }, {
    start: 11441,
    length: 1,
    convRule: rule23
  }, {
    start: 11442,
    length: 1,
    convRule: rule22
  }, {
    start: 11443,
    length: 1,
    convRule: rule23
  }, {
    start: 11444,
    length: 1,
    convRule: rule22
  }, {
    start: 11445,
    length: 1,
    convRule: rule23
  }, {
    start: 11446,
    length: 1,
    convRule: rule22
  }, {
    start: 11447,
    length: 1,
    convRule: rule23
  }, {
    start: 11448,
    length: 1,
    convRule: rule22
  }, {
    start: 11449,
    length: 1,
    convRule: rule23
  }, {
    start: 11450,
    length: 1,
    convRule: rule22
  }, {
    start: 11451,
    length: 1,
    convRule: rule23
  }, {
    start: 11452,
    length: 1,
    convRule: rule22
  }, {
    start: 11453,
    length: 1,
    convRule: rule23
  }, {
    start: 11454,
    length: 1,
    convRule: rule22
  }, {
    start: 11455,
    length: 1,
    convRule: rule23
  }, {
    start: 11456,
    length: 1,
    convRule: rule22
  }, {
    start: 11457,
    length: 1,
    convRule: rule23
  }, {
    start: 11458,
    length: 1,
    convRule: rule22
  }, {
    start: 11459,
    length: 1,
    convRule: rule23
  }, {
    start: 11460,
    length: 1,
    convRule: rule22
  }, {
    start: 11461,
    length: 1,
    convRule: rule23
  }, {
    start: 11462,
    length: 1,
    convRule: rule22
  }, {
    start: 11463,
    length: 1,
    convRule: rule23
  }, {
    start: 11464,
    length: 1,
    convRule: rule22
  }, {
    start: 11465,
    length: 1,
    convRule: rule23
  }, {
    start: 11466,
    length: 1,
    convRule: rule22
  }, {
    start: 11467,
    length: 1,
    convRule: rule23
  }, {
    start: 11468,
    length: 1,
    convRule: rule22
  }, {
    start: 11469,
    length: 1,
    convRule: rule23
  }, {
    start: 11470,
    length: 1,
    convRule: rule22
  }, {
    start: 11471,
    length: 1,
    convRule: rule23
  }, {
    start: 11472,
    length: 1,
    convRule: rule22
  }, {
    start: 11473,
    length: 1,
    convRule: rule23
  }, {
    start: 11474,
    length: 1,
    convRule: rule22
  }, {
    start: 11475,
    length: 1,
    convRule: rule23
  }, {
    start: 11476,
    length: 1,
    convRule: rule22
  }, {
    start: 11477,
    length: 1,
    convRule: rule23
  }, {
    start: 11478,
    length: 1,
    convRule: rule22
  }, {
    start: 11479,
    length: 1,
    convRule: rule23
  }, {
    start: 11480,
    length: 1,
    convRule: rule22
  }, {
    start: 11481,
    length: 1,
    convRule: rule23
  }, {
    start: 11482,
    length: 1,
    convRule: rule22
  }, {
    start: 11483,
    length: 1,
    convRule: rule23
  }, {
    start: 11484,
    length: 1,
    convRule: rule22
  }, {
    start: 11485,
    length: 1,
    convRule: rule23
  }, {
    start: 11486,
    length: 1,
    convRule: rule22
  }, {
    start: 11487,
    length: 1,
    convRule: rule23
  }, {
    start: 11488,
    length: 1,
    convRule: rule22
  }, {
    start: 11489,
    length: 1,
    convRule: rule23
  }, {
    start: 11490,
    length: 1,
    convRule: rule22
  }, {
    start: 11491,
    length: 1,
    convRule: rule23
  }, {
    start: 11492,
    length: 1,
    convRule: rule20
  }, {
    start: 11493,
    length: 6,
    convRule: rule13
  }, {
    start: 11499,
    length: 1,
    convRule: rule22
  }, {
    start: 11500,
    length: 1,
    convRule: rule23
  }, {
    start: 11501,
    length: 1,
    convRule: rule22
  }, {
    start: 11502,
    length: 1,
    convRule: rule23
  }, {
    start: 11503,
    length: 3,
    convRule: rule92
  }, {
    start: 11506,
    length: 1,
    convRule: rule22
  }, {
    start: 11507,
    length: 1,
    convRule: rule23
  }, {
    start: 11513,
    length: 4,
    convRule: rule2
  }, {
    start: 11517,
    length: 1,
    convRule: rule17
  }, {
    start: 11518,
    length: 2,
    convRule: rule2
  }, {
    start: 11520,
    length: 38,
    convRule: rule182
  }, {
    start: 11559,
    length: 1,
    convRule: rule182
  }, {
    start: 11565,
    length: 1,
    convRule: rule182
  }, {
    start: 11568,
    length: 56,
    convRule: rule14
  }, {
    start: 11631,
    length: 1,
    convRule: rule91
  }, {
    start: 11632,
    length: 1,
    convRule: rule2
  }, {
    start: 11647,
    length: 1,
    convRule: rule92
  }, {
    start: 11648,
    length: 23,
    convRule: rule14
  }, {
    start: 11680,
    length: 7,
    convRule: rule14
  }, {
    start: 11688,
    length: 7,
    convRule: rule14
  }, {
    start: 11696,
    length: 7,
    convRule: rule14
  }, {
    start: 11704,
    length: 7,
    convRule: rule14
  }, {
    start: 11712,
    length: 7,
    convRule: rule14
  }, {
    start: 11720,
    length: 7,
    convRule: rule14
  }, {
    start: 11728,
    length: 7,
    convRule: rule14
  }, {
    start: 11736,
    length: 7,
    convRule: rule14
  }, {
    start: 11744,
    length: 32,
    convRule: rule92
  }, {
    start: 11776,
    length: 2,
    convRule: rule2
  }, {
    start: 11778,
    length: 1,
    convRule: rule15
  }, {
    start: 11779,
    length: 1,
    convRule: rule19
  }, {
    start: 11780,
    length: 1,
    convRule: rule15
  }, {
    start: 11781,
    length: 1,
    convRule: rule19
  }, {
    start: 11782,
    length: 3,
    convRule: rule2
  }, {
    start: 11785,
    length: 1,
    convRule: rule15
  }, {
    start: 11786,
    length: 1,
    convRule: rule19
  }, {
    start: 11787,
    length: 1,
    convRule: rule2
  }, {
    start: 11788,
    length: 1,
    convRule: rule15
  }, {
    start: 11789,
    length: 1,
    convRule: rule19
  }, {
    start: 11790,
    length: 9,
    convRule: rule2
  }, {
    start: 11799,
    length: 1,
    convRule: rule7
  }, {
    start: 11800,
    length: 2,
    convRule: rule2
  }, {
    start: 11802,
    length: 1,
    convRule: rule7
  }, {
    start: 11803,
    length: 1,
    convRule: rule2
  }, {
    start: 11804,
    length: 1,
    convRule: rule15
  }, {
    start: 11805,
    length: 1,
    convRule: rule19
  }, {
    start: 11806,
    length: 2,
    convRule: rule2
  }, {
    start: 11808,
    length: 1,
    convRule: rule15
  }, {
    start: 11809,
    length: 1,
    convRule: rule19
  }, {
    start: 11810,
    length: 1,
    convRule: rule4
  }, {
    start: 11811,
    length: 1,
    convRule: rule5
  }, {
    start: 11812,
    length: 1,
    convRule: rule4
  }, {
    start: 11813,
    length: 1,
    convRule: rule5
  }, {
    start: 11814,
    length: 1,
    convRule: rule4
  }, {
    start: 11815,
    length: 1,
    convRule: rule5
  }, {
    start: 11816,
    length: 1,
    convRule: rule4
  }, {
    start: 11817,
    length: 1,
    convRule: rule5
  }, {
    start: 11818,
    length: 5,
    convRule: rule2
  }, {
    start: 11823,
    length: 1,
    convRule: rule91
  }, {
    start: 11824,
    length: 10,
    convRule: rule2
  }, {
    start: 11834,
    length: 2,
    convRule: rule7
  }, {
    start: 11836,
    length: 4,
    convRule: rule2
  }, {
    start: 11840,
    length: 1,
    convRule: rule7
  }, {
    start: 11841,
    length: 1,
    convRule: rule2
  }, {
    start: 11842,
    length: 1,
    convRule: rule4
  }, {
    start: 11843,
    length: 13,
    convRule: rule2
  }, {
    start: 11856,
    length: 2,
    convRule: rule13
  }, {
    start: 11858,
    length: 1,
    convRule: rule2
  }, {
    start: 11904,
    length: 26,
    convRule: rule13
  }, {
    start: 11931,
    length: 89,
    convRule: rule13
  }, {
    start: 12032,
    length: 214,
    convRule: rule13
  }, {
    start: 12272,
    length: 12,
    convRule: rule13
  }, {
    start: 12288,
    length: 1,
    convRule: rule1
  }, {
    start: 12289,
    length: 3,
    convRule: rule2
  }, {
    start: 12292,
    length: 1,
    convRule: rule13
  }, {
    start: 12293,
    length: 1,
    convRule: rule91
  }, {
    start: 12294,
    length: 1,
    convRule: rule14
  }, {
    start: 12295,
    length: 1,
    convRule: rule128
  }, {
    start: 12296,
    length: 1,
    convRule: rule4
  }, {
    start: 12297,
    length: 1,
    convRule: rule5
  }, {
    start: 12298,
    length: 1,
    convRule: rule4
  }, {
    start: 12299,
    length: 1,
    convRule: rule5
  }, {
    start: 12300,
    length: 1,
    convRule: rule4
  }, {
    start: 12301,
    length: 1,
    convRule: rule5
  }, {
    start: 12302,
    length: 1,
    convRule: rule4
  }, {
    start: 12303,
    length: 1,
    convRule: rule5
  }, {
    start: 12304,
    length: 1,
    convRule: rule4
  }, {
    start: 12305,
    length: 1,
    convRule: rule5
  }, {
    start: 12306,
    length: 2,
    convRule: rule13
  }, {
    start: 12308,
    length: 1,
    convRule: rule4
  }, {
    start: 12309,
    length: 1,
    convRule: rule5
  }, {
    start: 12310,
    length: 1,
    convRule: rule4
  }, {
    start: 12311,
    length: 1,
    convRule: rule5
  }, {
    start: 12312,
    length: 1,
    convRule: rule4
  }, {
    start: 12313,
    length: 1,
    convRule: rule5
  }, {
    start: 12314,
    length: 1,
    convRule: rule4
  }, {
    start: 12315,
    length: 1,
    convRule: rule5
  }, {
    start: 12316,
    length: 1,
    convRule: rule7
  }, {
    start: 12317,
    length: 1,
    convRule: rule4
  }, {
    start: 12318,
    length: 2,
    convRule: rule5
  }, {
    start: 12320,
    length: 1,
    convRule: rule13
  }, {
    start: 12321,
    length: 9,
    convRule: rule128
  }, {
    start: 12330,
    length: 4,
    convRule: rule92
  }, {
    start: 12334,
    length: 2,
    convRule: rule124
  }, {
    start: 12336,
    length: 1,
    convRule: rule7
  }, {
    start: 12337,
    length: 5,
    convRule: rule91
  }, {
    start: 12342,
    length: 2,
    convRule: rule13
  }, {
    start: 12344,
    length: 3,
    convRule: rule128
  }, {
    start: 12347,
    length: 1,
    convRule: rule91
  }, {
    start: 12348,
    length: 1,
    convRule: rule14
  }, {
    start: 12349,
    length: 1,
    convRule: rule2
  }, {
    start: 12350,
    length: 2,
    convRule: rule13
  }, {
    start: 12353,
    length: 86,
    convRule: rule14
  }, {
    start: 12441,
    length: 2,
    convRule: rule92
  }, {
    start: 12443,
    length: 2,
    convRule: rule10
  }, {
    start: 12445,
    length: 2,
    convRule: rule91
  }, {
    start: 12447,
    length: 1,
    convRule: rule14
  }, {
    start: 12448,
    length: 1,
    convRule: rule7
  }, {
    start: 12449,
    length: 90,
    convRule: rule14
  }, {
    start: 12539,
    length: 1,
    convRule: rule2
  }, {
    start: 12540,
    length: 3,
    convRule: rule91
  }, {
    start: 12543,
    length: 1,
    convRule: rule14
  }, {
    start: 12549,
    length: 43,
    convRule: rule14
  }, {
    start: 12593,
    length: 94,
    convRule: rule14
  }, {
    start: 12688,
    length: 2,
    convRule: rule13
  }, {
    start: 12690,
    length: 4,
    convRule: rule17
  }, {
    start: 12694,
    length: 10,
    convRule: rule13
  }, {
    start: 12704,
    length: 32,
    convRule: rule14
  }, {
    start: 12736,
    length: 36,
    convRule: rule13
  }, {
    start: 12784,
    length: 16,
    convRule: rule14
  }, {
    start: 12800,
    length: 31,
    convRule: rule13
  }, {
    start: 12832,
    length: 10,
    convRule: rule17
  }, {
    start: 12842,
    length: 30,
    convRule: rule13
  }, {
    start: 12872,
    length: 8,
    convRule: rule17
  }, {
    start: 12880,
    length: 1,
    convRule: rule13
  }, {
    start: 12881,
    length: 15,
    convRule: rule17
  }, {
    start: 12896,
    length: 32,
    convRule: rule13
  }, {
    start: 12928,
    length: 10,
    convRule: rule17
  }, {
    start: 12938,
    length: 39,
    convRule: rule13
  }, {
    start: 12977,
    length: 15,
    convRule: rule17
  }, {
    start: 12992,
    length: 320,
    convRule: rule13
  }, {
    start: 13312,
    length: 6592,
    convRule: rule14
  }, {
    start: 19904,
    length: 64,
    convRule: rule13
  }, {
    start: 19968,
    length: 20989,
    convRule: rule14
  }, {
    start: 40960,
    length: 21,
    convRule: rule14
  }, {
    start: 40981,
    length: 1,
    convRule: rule91
  }, {
    start: 40982,
    length: 1143,
    convRule: rule14
  }, {
    start: 42128,
    length: 55,
    convRule: rule13
  }, {
    start: 42192,
    length: 40,
    convRule: rule14
  }, {
    start: 42232,
    length: 6,
    convRule: rule91
  }, {
    start: 42238,
    length: 2,
    convRule: rule2
  }, {
    start: 42240,
    length: 268,
    convRule: rule14
  }, {
    start: 42508,
    length: 1,
    convRule: rule91
  }, {
    start: 42509,
    length: 3,
    convRule: rule2
  }, {
    start: 42512,
    length: 16,
    convRule: rule14
  }, {
    start: 42528,
    length: 10,
    convRule: rule8
  }, {
    start: 42538,
    length: 2,
    convRule: rule14
  }, {
    start: 42560,
    length: 1,
    convRule: rule22
  }, {
    start: 42561,
    length: 1,
    convRule: rule23
  }, {
    start: 42562,
    length: 1,
    convRule: rule22
  }, {
    start: 42563,
    length: 1,
    convRule: rule23
  }, {
    start: 42564,
    length: 1,
    convRule: rule22
  }, {
    start: 42565,
    length: 1,
    convRule: rule23
  }, {
    start: 42566,
    length: 1,
    convRule: rule22
  }, {
    start: 42567,
    length: 1,
    convRule: rule23
  }, {
    start: 42568,
    length: 1,
    convRule: rule22
  }, {
    start: 42569,
    length: 1,
    convRule: rule23
  }, {
    start: 42570,
    length: 1,
    convRule: rule22
  }, {
    start: 42571,
    length: 1,
    convRule: rule23
  }, {
    start: 42572,
    length: 1,
    convRule: rule22
  }, {
    start: 42573,
    length: 1,
    convRule: rule23
  }, {
    start: 42574,
    length: 1,
    convRule: rule22
  }, {
    start: 42575,
    length: 1,
    convRule: rule23
  }, {
    start: 42576,
    length: 1,
    convRule: rule22
  }, {
    start: 42577,
    length: 1,
    convRule: rule23
  }, {
    start: 42578,
    length: 1,
    convRule: rule22
  }, {
    start: 42579,
    length: 1,
    convRule: rule23
  }, {
    start: 42580,
    length: 1,
    convRule: rule22
  }, {
    start: 42581,
    length: 1,
    convRule: rule23
  }, {
    start: 42582,
    length: 1,
    convRule: rule22
  }, {
    start: 42583,
    length: 1,
    convRule: rule23
  }, {
    start: 42584,
    length: 1,
    convRule: rule22
  }, {
    start: 42585,
    length: 1,
    convRule: rule23
  }, {
    start: 42586,
    length: 1,
    convRule: rule22
  }, {
    start: 42587,
    length: 1,
    convRule: rule23
  }, {
    start: 42588,
    length: 1,
    convRule: rule22
  }, {
    start: 42589,
    length: 1,
    convRule: rule23
  }, {
    start: 42590,
    length: 1,
    convRule: rule22
  }, {
    start: 42591,
    length: 1,
    convRule: rule23
  }, {
    start: 42592,
    length: 1,
    convRule: rule22
  }, {
    start: 42593,
    length: 1,
    convRule: rule23
  }, {
    start: 42594,
    length: 1,
    convRule: rule22
  }, {
    start: 42595,
    length: 1,
    convRule: rule23
  }, {
    start: 42596,
    length: 1,
    convRule: rule22
  }, {
    start: 42597,
    length: 1,
    convRule: rule23
  }, {
    start: 42598,
    length: 1,
    convRule: rule22
  }, {
    start: 42599,
    length: 1,
    convRule: rule23
  }, {
    start: 42600,
    length: 1,
    convRule: rule22
  }, {
    start: 42601,
    length: 1,
    convRule: rule23
  }, {
    start: 42602,
    length: 1,
    convRule: rule22
  }, {
    start: 42603,
    length: 1,
    convRule: rule23
  }, {
    start: 42604,
    length: 1,
    convRule: rule22
  }, {
    start: 42605,
    length: 1,
    convRule: rule23
  }, {
    start: 42606,
    length: 1,
    convRule: rule14
  }, {
    start: 42607,
    length: 1,
    convRule: rule92
  }, {
    start: 42608,
    length: 3,
    convRule: rule119
  }, {
    start: 42611,
    length: 1,
    convRule: rule2
  }, {
    start: 42612,
    length: 10,
    convRule: rule92
  }, {
    start: 42622,
    length: 1,
    convRule: rule2
  }, {
    start: 42623,
    length: 1,
    convRule: rule91
  }, {
    start: 42624,
    length: 1,
    convRule: rule22
  }, {
    start: 42625,
    length: 1,
    convRule: rule23
  }, {
    start: 42626,
    length: 1,
    convRule: rule22
  }, {
    start: 42627,
    length: 1,
    convRule: rule23
  }, {
    start: 42628,
    length: 1,
    convRule: rule22
  }, {
    start: 42629,
    length: 1,
    convRule: rule23
  }, {
    start: 42630,
    length: 1,
    convRule: rule22
  }, {
    start: 42631,
    length: 1,
    convRule: rule23
  }, {
    start: 42632,
    length: 1,
    convRule: rule22
  }, {
    start: 42633,
    length: 1,
    convRule: rule23
  }, {
    start: 42634,
    length: 1,
    convRule: rule22
  }, {
    start: 42635,
    length: 1,
    convRule: rule23
  }, {
    start: 42636,
    length: 1,
    convRule: rule22
  }, {
    start: 42637,
    length: 1,
    convRule: rule23
  }, {
    start: 42638,
    length: 1,
    convRule: rule22
  }, {
    start: 42639,
    length: 1,
    convRule: rule23
  }, {
    start: 42640,
    length: 1,
    convRule: rule22
  }, {
    start: 42641,
    length: 1,
    convRule: rule23
  }, {
    start: 42642,
    length: 1,
    convRule: rule22
  }, {
    start: 42643,
    length: 1,
    convRule: rule23
  }, {
    start: 42644,
    length: 1,
    convRule: rule22
  }, {
    start: 42645,
    length: 1,
    convRule: rule23
  }, {
    start: 42646,
    length: 1,
    convRule: rule22
  }, {
    start: 42647,
    length: 1,
    convRule: rule23
  }, {
    start: 42648,
    length: 1,
    convRule: rule22
  }, {
    start: 42649,
    length: 1,
    convRule: rule23
  }, {
    start: 42650,
    length: 1,
    convRule: rule22
  }, {
    start: 42651,
    length: 1,
    convRule: rule23
  }, {
    start: 42652,
    length: 2,
    convRule: rule91
  }, {
    start: 42654,
    length: 2,
    convRule: rule92
  }, {
    start: 42656,
    length: 70,
    convRule: rule14
  }, {
    start: 42726,
    length: 10,
    convRule: rule128
  }, {
    start: 42736,
    length: 2,
    convRule: rule92
  }, {
    start: 42738,
    length: 6,
    convRule: rule2
  }, {
    start: 42752,
    length: 23,
    convRule: rule10
  }, {
    start: 42775,
    length: 9,
    convRule: rule91
  }, {
    start: 42784,
    length: 2,
    convRule: rule10
  }, {
    start: 42786,
    length: 1,
    convRule: rule22
  }, {
    start: 42787,
    length: 1,
    convRule: rule23
  }, {
    start: 42788,
    length: 1,
    convRule: rule22
  }, {
    start: 42789,
    length: 1,
    convRule: rule23
  }, {
    start: 42790,
    length: 1,
    convRule: rule22
  }, {
    start: 42791,
    length: 1,
    convRule: rule23
  }, {
    start: 42792,
    length: 1,
    convRule: rule22
  }, {
    start: 42793,
    length: 1,
    convRule: rule23
  }, {
    start: 42794,
    length: 1,
    convRule: rule22
  }, {
    start: 42795,
    length: 1,
    convRule: rule23
  }, {
    start: 42796,
    length: 1,
    convRule: rule22
  }, {
    start: 42797,
    length: 1,
    convRule: rule23
  }, {
    start: 42798,
    length: 1,
    convRule: rule22
  }, {
    start: 42799,
    length: 1,
    convRule: rule23
  }, {
    start: 42800,
    length: 2,
    convRule: rule20
  }, {
    start: 42802,
    length: 1,
    convRule: rule22
  }, {
    start: 42803,
    length: 1,
    convRule: rule23
  }, {
    start: 42804,
    length: 1,
    convRule: rule22
  }, {
    start: 42805,
    length: 1,
    convRule: rule23
  }, {
    start: 42806,
    length: 1,
    convRule: rule22
  }, {
    start: 42807,
    length: 1,
    convRule: rule23
  }, {
    start: 42808,
    length: 1,
    convRule: rule22
  }, {
    start: 42809,
    length: 1,
    convRule: rule23
  }, {
    start: 42810,
    length: 1,
    convRule: rule22
  }, {
    start: 42811,
    length: 1,
    convRule: rule23
  }, {
    start: 42812,
    length: 1,
    convRule: rule22
  }, {
    start: 42813,
    length: 1,
    convRule: rule23
  }, {
    start: 42814,
    length: 1,
    convRule: rule22
  }, {
    start: 42815,
    length: 1,
    convRule: rule23
  }, {
    start: 42816,
    length: 1,
    convRule: rule22
  }, {
    start: 42817,
    length: 1,
    convRule: rule23
  }, {
    start: 42818,
    length: 1,
    convRule: rule22
  }, {
    start: 42819,
    length: 1,
    convRule: rule23
  }, {
    start: 42820,
    length: 1,
    convRule: rule22
  }, {
    start: 42821,
    length: 1,
    convRule: rule23
  }, {
    start: 42822,
    length: 1,
    convRule: rule22
  }, {
    start: 42823,
    length: 1,
    convRule: rule23
  }, {
    start: 42824,
    length: 1,
    convRule: rule22
  }, {
    start: 42825,
    length: 1,
    convRule: rule23
  }, {
    start: 42826,
    length: 1,
    convRule: rule22
  }, {
    start: 42827,
    length: 1,
    convRule: rule23
  }, {
    start: 42828,
    length: 1,
    convRule: rule22
  }, {
    start: 42829,
    length: 1,
    convRule: rule23
  }, {
    start: 42830,
    length: 1,
    convRule: rule22
  }, {
    start: 42831,
    length: 1,
    convRule: rule23
  }, {
    start: 42832,
    length: 1,
    convRule: rule22
  }, {
    start: 42833,
    length: 1,
    convRule: rule23
  }, {
    start: 42834,
    length: 1,
    convRule: rule22
  }, {
    start: 42835,
    length: 1,
    convRule: rule23
  }, {
    start: 42836,
    length: 1,
    convRule: rule22
  }, {
    start: 42837,
    length: 1,
    convRule: rule23
  }, {
    start: 42838,
    length: 1,
    convRule: rule22
  }, {
    start: 42839,
    length: 1,
    convRule: rule23
  }, {
    start: 42840,
    length: 1,
    convRule: rule22
  }, {
    start: 42841,
    length: 1,
    convRule: rule23
  }, {
    start: 42842,
    length: 1,
    convRule: rule22
  }, {
    start: 42843,
    length: 1,
    convRule: rule23
  }, {
    start: 42844,
    length: 1,
    convRule: rule22
  }, {
    start: 42845,
    length: 1,
    convRule: rule23
  }, {
    start: 42846,
    length: 1,
    convRule: rule22
  }, {
    start: 42847,
    length: 1,
    convRule: rule23
  }, {
    start: 42848,
    length: 1,
    convRule: rule22
  }, {
    start: 42849,
    length: 1,
    convRule: rule23
  }, {
    start: 42850,
    length: 1,
    convRule: rule22
  }, {
    start: 42851,
    length: 1,
    convRule: rule23
  }, {
    start: 42852,
    length: 1,
    convRule: rule22
  }, {
    start: 42853,
    length: 1,
    convRule: rule23
  }, {
    start: 42854,
    length: 1,
    convRule: rule22
  }, {
    start: 42855,
    length: 1,
    convRule: rule23
  }, {
    start: 42856,
    length: 1,
    convRule: rule22
  }, {
    start: 42857,
    length: 1,
    convRule: rule23
  }, {
    start: 42858,
    length: 1,
    convRule: rule22
  }, {
    start: 42859,
    length: 1,
    convRule: rule23
  }, {
    start: 42860,
    length: 1,
    convRule: rule22
  }, {
    start: 42861,
    length: 1,
    convRule: rule23
  }, {
    start: 42862,
    length: 1,
    convRule: rule22
  }, {
    start: 42863,
    length: 1,
    convRule: rule23
  }, {
    start: 42864,
    length: 1,
    convRule: rule91
  }, {
    start: 42865,
    length: 8,
    convRule: rule20
  }, {
    start: 42873,
    length: 1,
    convRule: rule22
  }, {
    start: 42874,
    length: 1,
    convRule: rule23
  }, {
    start: 42875,
    length: 1,
    convRule: rule22
  }, {
    start: 42876,
    length: 1,
    convRule: rule23
  }, {
    start: 42877,
    length: 1,
    convRule: rule183
  }, {
    start: 42878,
    length: 1,
    convRule: rule22
  }, {
    start: 42879,
    length: 1,
    convRule: rule23
  }, {
    start: 42880,
    length: 1,
    convRule: rule22
  }, {
    start: 42881,
    length: 1,
    convRule: rule23
  }, {
    start: 42882,
    length: 1,
    convRule: rule22
  }, {
    start: 42883,
    length: 1,
    convRule: rule23
  }, {
    start: 42884,
    length: 1,
    convRule: rule22
  }, {
    start: 42885,
    length: 1,
    convRule: rule23
  }, {
    start: 42886,
    length: 1,
    convRule: rule22
  }, {
    start: 42887,
    length: 1,
    convRule: rule23
  }, {
    start: 42888,
    length: 1,
    convRule: rule91
  }, {
    start: 42889,
    length: 2,
    convRule: rule10
  }, {
    start: 42891,
    length: 1,
    convRule: rule22
  }, {
    start: 42892,
    length: 1,
    convRule: rule23
  }, {
    start: 42893,
    length: 1,
    convRule: rule184
  }, {
    start: 42894,
    length: 1,
    convRule: rule20
  }, {
    start: 42895,
    length: 1,
    convRule: rule14
  }, {
    start: 42896,
    length: 1,
    convRule: rule22
  }, {
    start: 42897,
    length: 1,
    convRule: rule23
  }, {
    start: 42898,
    length: 1,
    convRule: rule22
  }, {
    start: 42899,
    length: 1,
    convRule: rule23
  }, {
    start: 42900,
    length: 1,
    convRule: rule185
  }, {
    start: 42901,
    length: 1,
    convRule: rule20
  }, {
    start: 42902,
    length: 1,
    convRule: rule22
  }, {
    start: 42903,
    length: 1,
    convRule: rule23
  }, {
    start: 42904,
    length: 1,
    convRule: rule22
  }, {
    start: 42905,
    length: 1,
    convRule: rule23
  }, {
    start: 42906,
    length: 1,
    convRule: rule22
  }, {
    start: 42907,
    length: 1,
    convRule: rule23
  }, {
    start: 42908,
    length: 1,
    convRule: rule22
  }, {
    start: 42909,
    length: 1,
    convRule: rule23
  }, {
    start: 42910,
    length: 1,
    convRule: rule22
  }, {
    start: 42911,
    length: 1,
    convRule: rule23
  }, {
    start: 42912,
    length: 1,
    convRule: rule22
  }, {
    start: 42913,
    length: 1,
    convRule: rule23
  }, {
    start: 42914,
    length: 1,
    convRule: rule22
  }, {
    start: 42915,
    length: 1,
    convRule: rule23
  }, {
    start: 42916,
    length: 1,
    convRule: rule22
  }, {
    start: 42917,
    length: 1,
    convRule: rule23
  }, {
    start: 42918,
    length: 1,
    convRule: rule22
  }, {
    start: 42919,
    length: 1,
    convRule: rule23
  }, {
    start: 42920,
    length: 1,
    convRule: rule22
  }, {
    start: 42921,
    length: 1,
    convRule: rule23
  }, {
    start: 42922,
    length: 1,
    convRule: rule186
  }, {
    start: 42923,
    length: 1,
    convRule: rule187
  }, {
    start: 42924,
    length: 1,
    convRule: rule188
  }, {
    start: 42925,
    length: 1,
    convRule: rule189
  }, {
    start: 42926,
    length: 1,
    convRule: rule186
  }, {
    start: 42927,
    length: 1,
    convRule: rule20
  }, {
    start: 42928,
    length: 1,
    convRule: rule190
  }, {
    start: 42929,
    length: 1,
    convRule: rule191
  }, {
    start: 42930,
    length: 1,
    convRule: rule192
  }, {
    start: 42931,
    length: 1,
    convRule: rule193
  }, {
    start: 42932,
    length: 1,
    convRule: rule22
  }, {
    start: 42933,
    length: 1,
    convRule: rule23
  }, {
    start: 42934,
    length: 1,
    convRule: rule22
  }, {
    start: 42935,
    length: 1,
    convRule: rule23
  }, {
    start: 42936,
    length: 1,
    convRule: rule22
  }, {
    start: 42937,
    length: 1,
    convRule: rule23
  }, {
    start: 42938,
    length: 1,
    convRule: rule22
  }, {
    start: 42939,
    length: 1,
    convRule: rule23
  }, {
    start: 42940,
    length: 1,
    convRule: rule22
  }, {
    start: 42941,
    length: 1,
    convRule: rule23
  }, {
    start: 42942,
    length: 1,
    convRule: rule22
  }, {
    start: 42943,
    length: 1,
    convRule: rule23
  }, {
    start: 42946,
    length: 1,
    convRule: rule22
  }, {
    start: 42947,
    length: 1,
    convRule: rule23
  }, {
    start: 42948,
    length: 1,
    convRule: rule194
  }, {
    start: 42949,
    length: 1,
    convRule: rule195
  }, {
    start: 42950,
    length: 1,
    convRule: rule196
  }, {
    start: 42951,
    length: 1,
    convRule: rule22
  }, {
    start: 42952,
    length: 1,
    convRule: rule23
  }, {
    start: 42953,
    length: 1,
    convRule: rule22
  }, {
    start: 42954,
    length: 1,
    convRule: rule23
  }, {
    start: 42997,
    length: 1,
    convRule: rule22
  }, {
    start: 42998,
    length: 1,
    convRule: rule23
  }, {
    start: 42999,
    length: 1,
    convRule: rule14
  }, {
    start: 43e3,
    length: 2,
    convRule: rule91
  }, {
    start: 43002,
    length: 1,
    convRule: rule20
  }, {
    start: 43003,
    length: 7,
    convRule: rule14
  }, {
    start: 43010,
    length: 1,
    convRule: rule92
  }, {
    start: 43011,
    length: 3,
    convRule: rule14
  }, {
    start: 43014,
    length: 1,
    convRule: rule92
  }, {
    start: 43015,
    length: 4,
    convRule: rule14
  }, {
    start: 43019,
    length: 1,
    convRule: rule92
  }, {
    start: 43020,
    length: 23,
    convRule: rule14
  }, {
    start: 43043,
    length: 2,
    convRule: rule124
  }, {
    start: 43045,
    length: 2,
    convRule: rule92
  }, {
    start: 43047,
    length: 1,
    convRule: rule124
  }, {
    start: 43048,
    length: 4,
    convRule: rule13
  }, {
    start: 43052,
    length: 1,
    convRule: rule92
  }, {
    start: 43056,
    length: 6,
    convRule: rule17
  }, {
    start: 43062,
    length: 2,
    convRule: rule13
  }, {
    start: 43064,
    length: 1,
    convRule: rule3
  }, {
    start: 43065,
    length: 1,
    convRule: rule13
  }, {
    start: 43072,
    length: 52,
    convRule: rule14
  }, {
    start: 43124,
    length: 4,
    convRule: rule2
  }, {
    start: 43136,
    length: 2,
    convRule: rule124
  }, {
    start: 43138,
    length: 50,
    convRule: rule14
  }, {
    start: 43188,
    length: 16,
    convRule: rule124
  }, {
    start: 43204,
    length: 2,
    convRule: rule92
  }, {
    start: 43214,
    length: 2,
    convRule: rule2
  }, {
    start: 43216,
    length: 10,
    convRule: rule8
  }, {
    start: 43232,
    length: 18,
    convRule: rule92
  }, {
    start: 43250,
    length: 6,
    convRule: rule14
  }, {
    start: 43256,
    length: 3,
    convRule: rule2
  }, {
    start: 43259,
    length: 1,
    convRule: rule14
  }, {
    start: 43260,
    length: 1,
    convRule: rule2
  }, {
    start: 43261,
    length: 2,
    convRule: rule14
  }, {
    start: 43263,
    length: 1,
    convRule: rule92
  }, {
    start: 43264,
    length: 10,
    convRule: rule8
  }, {
    start: 43274,
    length: 28,
    convRule: rule14
  }, {
    start: 43302,
    length: 8,
    convRule: rule92
  }, {
    start: 43310,
    length: 2,
    convRule: rule2
  }, {
    start: 43312,
    length: 23,
    convRule: rule14
  }, {
    start: 43335,
    length: 11,
    convRule: rule92
  }, {
    start: 43346,
    length: 2,
    convRule: rule124
  }, {
    start: 43359,
    length: 1,
    convRule: rule2
  }, {
    start: 43360,
    length: 29,
    convRule: rule14
  }, {
    start: 43392,
    length: 3,
    convRule: rule92
  }, {
    start: 43395,
    length: 1,
    convRule: rule124
  }, {
    start: 43396,
    length: 47,
    convRule: rule14
  }, {
    start: 43443,
    length: 1,
    convRule: rule92
  }, {
    start: 43444,
    length: 2,
    convRule: rule124
  }, {
    start: 43446,
    length: 4,
    convRule: rule92
  }, {
    start: 43450,
    length: 2,
    convRule: rule124
  }, {
    start: 43452,
    length: 2,
    convRule: rule92
  }, {
    start: 43454,
    length: 3,
    convRule: rule124
  }, {
    start: 43457,
    length: 13,
    convRule: rule2
  }, {
    start: 43471,
    length: 1,
    convRule: rule91
  }, {
    start: 43472,
    length: 10,
    convRule: rule8
  }, {
    start: 43486,
    length: 2,
    convRule: rule2
  }, {
    start: 43488,
    length: 5,
    convRule: rule14
  }, {
    start: 43493,
    length: 1,
    convRule: rule92
  }, {
    start: 43494,
    length: 1,
    convRule: rule91
  }, {
    start: 43495,
    length: 9,
    convRule: rule14
  }, {
    start: 43504,
    length: 10,
    convRule: rule8
  }, {
    start: 43514,
    length: 5,
    convRule: rule14
  }, {
    start: 43520,
    length: 41,
    convRule: rule14
  }, {
    start: 43561,
    length: 6,
    convRule: rule92
  }, {
    start: 43567,
    length: 2,
    convRule: rule124
  }, {
    start: 43569,
    length: 2,
    convRule: rule92
  }, {
    start: 43571,
    length: 2,
    convRule: rule124
  }, {
    start: 43573,
    length: 2,
    convRule: rule92
  }, {
    start: 43584,
    length: 3,
    convRule: rule14
  }, {
    start: 43587,
    length: 1,
    convRule: rule92
  }, {
    start: 43588,
    length: 8,
    convRule: rule14
  }, {
    start: 43596,
    length: 1,
    convRule: rule92
  }, {
    start: 43597,
    length: 1,
    convRule: rule124
  }, {
    start: 43600,
    length: 10,
    convRule: rule8
  }, {
    start: 43612,
    length: 4,
    convRule: rule2
  }, {
    start: 43616,
    length: 16,
    convRule: rule14
  }, {
    start: 43632,
    length: 1,
    convRule: rule91
  }, {
    start: 43633,
    length: 6,
    convRule: rule14
  }, {
    start: 43639,
    length: 3,
    convRule: rule13
  }, {
    start: 43642,
    length: 1,
    convRule: rule14
  }, {
    start: 43643,
    length: 1,
    convRule: rule124
  }, {
    start: 43644,
    length: 1,
    convRule: rule92
  }, {
    start: 43645,
    length: 1,
    convRule: rule124
  }, {
    start: 43646,
    length: 50,
    convRule: rule14
  }, {
    start: 43696,
    length: 1,
    convRule: rule92
  }, {
    start: 43697,
    length: 1,
    convRule: rule14
  }, {
    start: 43698,
    length: 3,
    convRule: rule92
  }, {
    start: 43701,
    length: 2,
    convRule: rule14
  }, {
    start: 43703,
    length: 2,
    convRule: rule92
  }, {
    start: 43705,
    length: 5,
    convRule: rule14
  }, {
    start: 43710,
    length: 2,
    convRule: rule92
  }, {
    start: 43712,
    length: 1,
    convRule: rule14
  }, {
    start: 43713,
    length: 1,
    convRule: rule92
  }, {
    start: 43714,
    length: 1,
    convRule: rule14
  }, {
    start: 43739,
    length: 2,
    convRule: rule14
  }, {
    start: 43741,
    length: 1,
    convRule: rule91
  }, {
    start: 43742,
    length: 2,
    convRule: rule2
  }, {
    start: 43744,
    length: 11,
    convRule: rule14
  }, {
    start: 43755,
    length: 1,
    convRule: rule124
  }, {
    start: 43756,
    length: 2,
    convRule: rule92
  }, {
    start: 43758,
    length: 2,
    convRule: rule124
  }, {
    start: 43760,
    length: 2,
    convRule: rule2
  }, {
    start: 43762,
    length: 1,
    convRule: rule14
  }, {
    start: 43763,
    length: 2,
    convRule: rule91
  }, {
    start: 43765,
    length: 1,
    convRule: rule124
  }, {
    start: 43766,
    length: 1,
    convRule: rule92
  }, {
    start: 43777,
    length: 6,
    convRule: rule14
  }, {
    start: 43785,
    length: 6,
    convRule: rule14
  }, {
    start: 43793,
    length: 6,
    convRule: rule14
  }, {
    start: 43808,
    length: 7,
    convRule: rule14
  }, {
    start: 43816,
    length: 7,
    convRule: rule14
  }, {
    start: 43824,
    length: 35,
    convRule: rule20
  }, {
    start: 43859,
    length: 1,
    convRule: rule197
  }, {
    start: 43860,
    length: 7,
    convRule: rule20
  }, {
    start: 43867,
    length: 1,
    convRule: rule10
  }, {
    start: 43868,
    length: 4,
    convRule: rule91
  }, {
    start: 43872,
    length: 9,
    convRule: rule20
  }, {
    start: 43881,
    length: 1,
    convRule: rule91
  }, {
    start: 43882,
    length: 2,
    convRule: rule10
  }, {
    start: 43888,
    length: 80,
    convRule: rule198
  }, {
    start: 43968,
    length: 35,
    convRule: rule14
  }, {
    start: 44003,
    length: 2,
    convRule: rule124
  }, {
    start: 44005,
    length: 1,
    convRule: rule92
  }, {
    start: 44006,
    length: 2,
    convRule: rule124
  }, {
    start: 44008,
    length: 1,
    convRule: rule92
  }, {
    start: 44009,
    length: 2,
    convRule: rule124
  }, {
    start: 44011,
    length: 1,
    convRule: rule2
  }, {
    start: 44012,
    length: 1,
    convRule: rule124
  }, {
    start: 44013,
    length: 1,
    convRule: rule92
  }, {
    start: 44016,
    length: 10,
    convRule: rule8
  }, {
    start: 44032,
    length: 11172,
    convRule: rule14
  }, {
    start: 55216,
    length: 23,
    convRule: rule14
  }, {
    start: 55243,
    length: 49,
    convRule: rule14
  }, {
    start: 55296,
    length: 896,
    convRule: rule199
  }, {
    start: 56192,
    length: 128,
    convRule: rule199
  }, {
    start: 56320,
    length: 1024,
    convRule: rule199
  }, {
    start: 57344,
    length: 6400,
    convRule: rule200
  }, {
    start: 63744,
    length: 366,
    convRule: rule14
  }, {
    start: 64112,
    length: 106,
    convRule: rule14
  }, {
    start: 64256,
    length: 7,
    convRule: rule20
  }, {
    start: 64275,
    length: 5,
    convRule: rule20
  }, {
    start: 64285,
    length: 1,
    convRule: rule14
  }, {
    start: 64286,
    length: 1,
    convRule: rule92
  }, {
    start: 64287,
    length: 10,
    convRule: rule14
  }, {
    start: 64297,
    length: 1,
    convRule: rule6
  }, {
    start: 64298,
    length: 13,
    convRule: rule14
  }, {
    start: 64312,
    length: 5,
    convRule: rule14
  }, {
    start: 64318,
    length: 1,
    convRule: rule14
  }, {
    start: 64320,
    length: 2,
    convRule: rule14
  }, {
    start: 64323,
    length: 2,
    convRule: rule14
  }, {
    start: 64326,
    length: 108,
    convRule: rule14
  }, {
    start: 64434,
    length: 16,
    convRule: rule10
  }, {
    start: 64467,
    length: 363,
    convRule: rule14
  }, {
    start: 64830,
    length: 1,
    convRule: rule5
  }, {
    start: 64831,
    length: 1,
    convRule: rule4
  }, {
    start: 64848,
    length: 64,
    convRule: rule14
  }, {
    start: 64914,
    length: 54,
    convRule: rule14
  }, {
    start: 65008,
    length: 12,
    convRule: rule14
  }, {
    start: 65020,
    length: 1,
    convRule: rule3
  }, {
    start: 65021,
    length: 1,
    convRule: rule13
  }, {
    start: 65024,
    length: 16,
    convRule: rule92
  }, {
    start: 65040,
    length: 7,
    convRule: rule2
  }, {
    start: 65047,
    length: 1,
    convRule: rule4
  }, {
    start: 65048,
    length: 1,
    convRule: rule5
  }, {
    start: 65049,
    length: 1,
    convRule: rule2
  }, {
    start: 65056,
    length: 16,
    convRule: rule92
  }, {
    start: 65072,
    length: 1,
    convRule: rule2
  }, {
    start: 65073,
    length: 2,
    convRule: rule7
  }, {
    start: 65075,
    length: 2,
    convRule: rule11
  }, {
    start: 65077,
    length: 1,
    convRule: rule4
  }, {
    start: 65078,
    length: 1,
    convRule: rule5
  }, {
    start: 65079,
    length: 1,
    convRule: rule4
  }, {
    start: 65080,
    length: 1,
    convRule: rule5
  }, {
    start: 65081,
    length: 1,
    convRule: rule4
  }, {
    start: 65082,
    length: 1,
    convRule: rule5
  }, {
    start: 65083,
    length: 1,
    convRule: rule4
  }, {
    start: 65084,
    length: 1,
    convRule: rule5
  }, {
    start: 65085,
    length: 1,
    convRule: rule4
  }, {
    start: 65086,
    length: 1,
    convRule: rule5
  }, {
    start: 65087,
    length: 1,
    convRule: rule4
  }, {
    start: 65088,
    length: 1,
    convRule: rule5
  }, {
    start: 65089,
    length: 1,
    convRule: rule4
  }, {
    start: 65090,
    length: 1,
    convRule: rule5
  }, {
    start: 65091,
    length: 1,
    convRule: rule4
  }, {
    start: 65092,
    length: 1,
    convRule: rule5
  }, {
    start: 65093,
    length: 2,
    convRule: rule2
  }, {
    start: 65095,
    length: 1,
    convRule: rule4
  }, {
    start: 65096,
    length: 1,
    convRule: rule5
  }, {
    start: 65097,
    length: 4,
    convRule: rule2
  }, {
    start: 65101,
    length: 3,
    convRule: rule11
  }, {
    start: 65104,
    length: 3,
    convRule: rule2
  }, {
    start: 65108,
    length: 4,
    convRule: rule2
  }, {
    start: 65112,
    length: 1,
    convRule: rule7
  }, {
    start: 65113,
    length: 1,
    convRule: rule4
  }, {
    start: 65114,
    length: 1,
    convRule: rule5
  }, {
    start: 65115,
    length: 1,
    convRule: rule4
  }, {
    start: 65116,
    length: 1,
    convRule: rule5
  }, {
    start: 65117,
    length: 1,
    convRule: rule4
  }, {
    start: 65118,
    length: 1,
    convRule: rule5
  }, {
    start: 65119,
    length: 3,
    convRule: rule2
  }, {
    start: 65122,
    length: 1,
    convRule: rule6
  }, {
    start: 65123,
    length: 1,
    convRule: rule7
  }, {
    start: 65124,
    length: 3,
    convRule: rule6
  }, {
    start: 65128,
    length: 1,
    convRule: rule2
  }, {
    start: 65129,
    length: 1,
    convRule: rule3
  }, {
    start: 65130,
    length: 2,
    convRule: rule2
  }, {
    start: 65136,
    length: 5,
    convRule: rule14
  }, {
    start: 65142,
    length: 135,
    convRule: rule14
  }, {
    start: 65279,
    length: 1,
    convRule: rule16
  }, {
    start: 65281,
    length: 3,
    convRule: rule2
  }, {
    start: 65284,
    length: 1,
    convRule: rule3
  }, {
    start: 65285,
    length: 3,
    convRule: rule2
  }, {
    start: 65288,
    length: 1,
    convRule: rule4
  }, {
    start: 65289,
    length: 1,
    convRule: rule5
  }, {
    start: 65290,
    length: 1,
    convRule: rule2
  }, {
    start: 65291,
    length: 1,
    convRule: rule6
  }, {
    start: 65292,
    length: 1,
    convRule: rule2
  }, {
    start: 65293,
    length: 1,
    convRule: rule7
  }, {
    start: 65294,
    length: 2,
    convRule: rule2
  }, {
    start: 65296,
    length: 10,
    convRule: rule8
  }, {
    start: 65306,
    length: 2,
    convRule: rule2
  }, {
    start: 65308,
    length: 3,
    convRule: rule6
  }, {
    start: 65311,
    length: 2,
    convRule: rule2
  }, {
    start: 65313,
    length: 26,
    convRule: rule9
  }, {
    start: 65339,
    length: 1,
    convRule: rule4
  }, {
    start: 65340,
    length: 1,
    convRule: rule2
  }, {
    start: 65341,
    length: 1,
    convRule: rule5
  }, {
    start: 65342,
    length: 1,
    convRule: rule10
  }, {
    start: 65343,
    length: 1,
    convRule: rule11
  }, {
    start: 65344,
    length: 1,
    convRule: rule10
  }, {
    start: 65345,
    length: 26,
    convRule: rule12
  }, {
    start: 65371,
    length: 1,
    convRule: rule4
  }, {
    start: 65372,
    length: 1,
    convRule: rule6
  }, {
    start: 65373,
    length: 1,
    convRule: rule5
  }, {
    start: 65374,
    length: 1,
    convRule: rule6
  }, {
    start: 65375,
    length: 1,
    convRule: rule4
  }, {
    start: 65376,
    length: 1,
    convRule: rule5
  }, {
    start: 65377,
    length: 1,
    convRule: rule2
  }, {
    start: 65378,
    length: 1,
    convRule: rule4
  }, {
    start: 65379,
    length: 1,
    convRule: rule5
  }, {
    start: 65380,
    length: 2,
    convRule: rule2
  }, {
    start: 65382,
    length: 10,
    convRule: rule14
  }, {
    start: 65392,
    length: 1,
    convRule: rule91
  }, {
    start: 65393,
    length: 45,
    convRule: rule14
  }, {
    start: 65438,
    length: 2,
    convRule: rule91
  }, {
    start: 65440,
    length: 31,
    convRule: rule14
  }, {
    start: 65474,
    length: 6,
    convRule: rule14
  }, {
    start: 65482,
    length: 6,
    convRule: rule14
  }, {
    start: 65490,
    length: 6,
    convRule: rule14
  }, {
    start: 65498,
    length: 3,
    convRule: rule14
  }, {
    start: 65504,
    length: 2,
    convRule: rule3
  }, {
    start: 65506,
    length: 1,
    convRule: rule6
  }, {
    start: 65507,
    length: 1,
    convRule: rule10
  }, {
    start: 65508,
    length: 1,
    convRule: rule13
  }, {
    start: 65509,
    length: 2,
    convRule: rule3
  }, {
    start: 65512,
    length: 1,
    convRule: rule13
  }, {
    start: 65513,
    length: 4,
    convRule: rule6
  }, {
    start: 65517,
    length: 2,
    convRule: rule13
  }, {
    start: 65529,
    length: 3,
    convRule: rule16
  }, {
    start: 65532,
    length: 2,
    convRule: rule13
  }, {
    start: 65536,
    length: 12,
    convRule: rule14
  }, {
    start: 65549,
    length: 26,
    convRule: rule14
  }, {
    start: 65576,
    length: 19,
    convRule: rule14
  }, {
    start: 65596,
    length: 2,
    convRule: rule14
  }, {
    start: 65599,
    length: 15,
    convRule: rule14
  }, {
    start: 65616,
    length: 14,
    convRule: rule14
  }, {
    start: 65664,
    length: 123,
    convRule: rule14
  }, {
    start: 65792,
    length: 3,
    convRule: rule2
  }, {
    start: 65799,
    length: 45,
    convRule: rule17
  }, {
    start: 65847,
    length: 9,
    convRule: rule13
  }, {
    start: 65856,
    length: 53,
    convRule: rule128
  }, {
    start: 65909,
    length: 4,
    convRule: rule17
  }, {
    start: 65913,
    length: 17,
    convRule: rule13
  }, {
    start: 65930,
    length: 2,
    convRule: rule17
  }, {
    start: 65932,
    length: 3,
    convRule: rule13
  }, {
    start: 65936,
    length: 13,
    convRule: rule13
  }, {
    start: 65952,
    length: 1,
    convRule: rule13
  }, {
    start: 66e3,
    length: 45,
    convRule: rule13
  }, {
    start: 66045,
    length: 1,
    convRule: rule92
  }, {
    start: 66176,
    length: 29,
    convRule: rule14
  }, {
    start: 66208,
    length: 49,
    convRule: rule14
  }, {
    start: 66272,
    length: 1,
    convRule: rule92
  }, {
    start: 66273,
    length: 27,
    convRule: rule17
  }, {
    start: 66304,
    length: 32,
    convRule: rule14
  }, {
    start: 66336,
    length: 4,
    convRule: rule17
  }, {
    start: 66349,
    length: 20,
    convRule: rule14
  }, {
    start: 66369,
    length: 1,
    convRule: rule128
  }, {
    start: 66370,
    length: 8,
    convRule: rule14
  }, {
    start: 66378,
    length: 1,
    convRule: rule128
  }, {
    start: 66384,
    length: 38,
    convRule: rule14
  }, {
    start: 66422,
    length: 5,
    convRule: rule92
  }, {
    start: 66432,
    length: 30,
    convRule: rule14
  }, {
    start: 66463,
    length: 1,
    convRule: rule2
  }, {
    start: 66464,
    length: 36,
    convRule: rule14
  }, {
    start: 66504,
    length: 8,
    convRule: rule14
  }, {
    start: 66512,
    length: 1,
    convRule: rule2
  }, {
    start: 66513,
    length: 5,
    convRule: rule128
  }, {
    start: 66560,
    length: 40,
    convRule: rule201
  }, {
    start: 66600,
    length: 40,
    convRule: rule202
  }, {
    start: 66640,
    length: 78,
    convRule: rule14
  }, {
    start: 66720,
    length: 10,
    convRule: rule8
  }, {
    start: 66736,
    length: 36,
    convRule: rule201
  }, {
    start: 66776,
    length: 36,
    convRule: rule202
  }, {
    start: 66816,
    length: 40,
    convRule: rule14
  }, {
    start: 66864,
    length: 52,
    convRule: rule14
  }, {
    start: 66927,
    length: 1,
    convRule: rule2
  }, {
    start: 67072,
    length: 311,
    convRule: rule14
  }, {
    start: 67392,
    length: 22,
    convRule: rule14
  }, {
    start: 67424,
    length: 8,
    convRule: rule14
  }, {
    start: 67584,
    length: 6,
    convRule: rule14
  }, {
    start: 67592,
    length: 1,
    convRule: rule14
  }, {
    start: 67594,
    length: 44,
    convRule: rule14
  }, {
    start: 67639,
    length: 2,
    convRule: rule14
  }, {
    start: 67644,
    length: 1,
    convRule: rule14
  }, {
    start: 67647,
    length: 23,
    convRule: rule14
  }, {
    start: 67671,
    length: 1,
    convRule: rule2
  }, {
    start: 67672,
    length: 8,
    convRule: rule17
  }, {
    start: 67680,
    length: 23,
    convRule: rule14
  }, {
    start: 67703,
    length: 2,
    convRule: rule13
  }, {
    start: 67705,
    length: 7,
    convRule: rule17
  }, {
    start: 67712,
    length: 31,
    convRule: rule14
  }, {
    start: 67751,
    length: 9,
    convRule: rule17
  }, {
    start: 67808,
    length: 19,
    convRule: rule14
  }, {
    start: 67828,
    length: 2,
    convRule: rule14
  }, {
    start: 67835,
    length: 5,
    convRule: rule17
  }, {
    start: 67840,
    length: 22,
    convRule: rule14
  }, {
    start: 67862,
    length: 6,
    convRule: rule17
  }, {
    start: 67871,
    length: 1,
    convRule: rule2
  }, {
    start: 67872,
    length: 26,
    convRule: rule14
  }, {
    start: 67903,
    length: 1,
    convRule: rule2
  }, {
    start: 67968,
    length: 56,
    convRule: rule14
  }, {
    start: 68028,
    length: 2,
    convRule: rule17
  }, {
    start: 68030,
    length: 2,
    convRule: rule14
  }, {
    start: 68032,
    length: 16,
    convRule: rule17
  }, {
    start: 68050,
    length: 46,
    convRule: rule17
  }, {
    start: 68096,
    length: 1,
    convRule: rule14
  }, {
    start: 68097,
    length: 3,
    convRule: rule92
  }, {
    start: 68101,
    length: 2,
    convRule: rule92
  }, {
    start: 68108,
    length: 4,
    convRule: rule92
  }, {
    start: 68112,
    length: 4,
    convRule: rule14
  }, {
    start: 68117,
    length: 3,
    convRule: rule14
  }, {
    start: 68121,
    length: 29,
    convRule: rule14
  }, {
    start: 68152,
    length: 3,
    convRule: rule92
  }, {
    start: 68159,
    length: 1,
    convRule: rule92
  }, {
    start: 68160,
    length: 9,
    convRule: rule17
  }, {
    start: 68176,
    length: 9,
    convRule: rule2
  }, {
    start: 68192,
    length: 29,
    convRule: rule14
  }, {
    start: 68221,
    length: 2,
    convRule: rule17
  }, {
    start: 68223,
    length: 1,
    convRule: rule2
  }, {
    start: 68224,
    length: 29,
    convRule: rule14
  }, {
    start: 68253,
    length: 3,
    convRule: rule17
  }, {
    start: 68288,
    length: 8,
    convRule: rule14
  }, {
    start: 68296,
    length: 1,
    convRule: rule13
  }, {
    start: 68297,
    length: 28,
    convRule: rule14
  }, {
    start: 68325,
    length: 2,
    convRule: rule92
  }, {
    start: 68331,
    length: 5,
    convRule: rule17
  }, {
    start: 68336,
    length: 7,
    convRule: rule2
  }, {
    start: 68352,
    length: 54,
    convRule: rule14
  }, {
    start: 68409,
    length: 7,
    convRule: rule2
  }, {
    start: 68416,
    length: 22,
    convRule: rule14
  }, {
    start: 68440,
    length: 8,
    convRule: rule17
  }, {
    start: 68448,
    length: 19,
    convRule: rule14
  }, {
    start: 68472,
    length: 8,
    convRule: rule17
  }, {
    start: 68480,
    length: 18,
    convRule: rule14
  }, {
    start: 68505,
    length: 4,
    convRule: rule2
  }, {
    start: 68521,
    length: 7,
    convRule: rule17
  }, {
    start: 68608,
    length: 73,
    convRule: rule14
  }, {
    start: 68736,
    length: 51,
    convRule: rule97
  }, {
    start: 68800,
    length: 51,
    convRule: rule102
  }, {
    start: 68858,
    length: 6,
    convRule: rule17
  }, {
    start: 68864,
    length: 36,
    convRule: rule14
  }, {
    start: 68900,
    length: 4,
    convRule: rule92
  }, {
    start: 68912,
    length: 10,
    convRule: rule8
  }, {
    start: 69216,
    length: 31,
    convRule: rule17
  }, {
    start: 69248,
    length: 42,
    convRule: rule14
  }, {
    start: 69291,
    length: 2,
    convRule: rule92
  }, {
    start: 69293,
    length: 1,
    convRule: rule7
  }, {
    start: 69296,
    length: 2,
    convRule: rule14
  }, {
    start: 69376,
    length: 29,
    convRule: rule14
  }, {
    start: 69405,
    length: 10,
    convRule: rule17
  }, {
    start: 69415,
    length: 1,
    convRule: rule14
  }, {
    start: 69424,
    length: 22,
    convRule: rule14
  }, {
    start: 69446,
    length: 11,
    convRule: rule92
  }, {
    start: 69457,
    length: 4,
    convRule: rule17
  }, {
    start: 69461,
    length: 5,
    convRule: rule2
  }, {
    start: 69552,
    length: 21,
    convRule: rule14
  }, {
    start: 69573,
    length: 7,
    convRule: rule17
  }, {
    start: 69600,
    length: 23,
    convRule: rule14
  }, {
    start: 69632,
    length: 1,
    convRule: rule124
  }, {
    start: 69633,
    length: 1,
    convRule: rule92
  }, {
    start: 69634,
    length: 1,
    convRule: rule124
  }, {
    start: 69635,
    length: 53,
    convRule: rule14
  }, {
    start: 69688,
    length: 15,
    convRule: rule92
  }, {
    start: 69703,
    length: 7,
    convRule: rule2
  }, {
    start: 69714,
    length: 20,
    convRule: rule17
  }, {
    start: 69734,
    length: 10,
    convRule: rule8
  }, {
    start: 69759,
    length: 3,
    convRule: rule92
  }, {
    start: 69762,
    length: 1,
    convRule: rule124
  }, {
    start: 69763,
    length: 45,
    convRule: rule14
  }, {
    start: 69808,
    length: 3,
    convRule: rule124
  }, {
    start: 69811,
    length: 4,
    convRule: rule92
  }, {
    start: 69815,
    length: 2,
    convRule: rule124
  }, {
    start: 69817,
    length: 2,
    convRule: rule92
  }, {
    start: 69819,
    length: 2,
    convRule: rule2
  }, {
    start: 69821,
    length: 1,
    convRule: rule16
  }, {
    start: 69822,
    length: 4,
    convRule: rule2
  }, {
    start: 69837,
    length: 1,
    convRule: rule16
  }, {
    start: 69840,
    length: 25,
    convRule: rule14
  }, {
    start: 69872,
    length: 10,
    convRule: rule8
  }, {
    start: 69888,
    length: 3,
    convRule: rule92
  }, {
    start: 69891,
    length: 36,
    convRule: rule14
  }, {
    start: 69927,
    length: 5,
    convRule: rule92
  }, {
    start: 69932,
    length: 1,
    convRule: rule124
  }, {
    start: 69933,
    length: 8,
    convRule: rule92
  }, {
    start: 69942,
    length: 10,
    convRule: rule8
  }, {
    start: 69952,
    length: 4,
    convRule: rule2
  }, {
    start: 69956,
    length: 1,
    convRule: rule14
  }, {
    start: 69957,
    length: 2,
    convRule: rule124
  }, {
    start: 69959,
    length: 1,
    convRule: rule14
  }, {
    start: 69968,
    length: 35,
    convRule: rule14
  }, {
    start: 70003,
    length: 1,
    convRule: rule92
  }, {
    start: 70004,
    length: 2,
    convRule: rule2
  }, {
    start: 70006,
    length: 1,
    convRule: rule14
  }, {
    start: 70016,
    length: 2,
    convRule: rule92
  }, {
    start: 70018,
    length: 1,
    convRule: rule124
  }, {
    start: 70019,
    length: 48,
    convRule: rule14
  }, {
    start: 70067,
    length: 3,
    convRule: rule124
  }, {
    start: 70070,
    length: 9,
    convRule: rule92
  }, {
    start: 70079,
    length: 2,
    convRule: rule124
  }, {
    start: 70081,
    length: 4,
    convRule: rule14
  }, {
    start: 70085,
    length: 4,
    convRule: rule2
  }, {
    start: 70089,
    length: 4,
    convRule: rule92
  }, {
    start: 70093,
    length: 1,
    convRule: rule2
  }, {
    start: 70094,
    length: 1,
    convRule: rule124
  }, {
    start: 70095,
    length: 1,
    convRule: rule92
  }, {
    start: 70096,
    length: 10,
    convRule: rule8
  }, {
    start: 70106,
    length: 1,
    convRule: rule14
  }, {
    start: 70107,
    length: 1,
    convRule: rule2
  }, {
    start: 70108,
    length: 1,
    convRule: rule14
  }, {
    start: 70109,
    length: 3,
    convRule: rule2
  }, {
    start: 70113,
    length: 20,
    convRule: rule17
  }, {
    start: 70144,
    length: 18,
    convRule: rule14
  }, {
    start: 70163,
    length: 25,
    convRule: rule14
  }, {
    start: 70188,
    length: 3,
    convRule: rule124
  }, {
    start: 70191,
    length: 3,
    convRule: rule92
  }, {
    start: 70194,
    length: 2,
    convRule: rule124
  }, {
    start: 70196,
    length: 1,
    convRule: rule92
  }, {
    start: 70197,
    length: 1,
    convRule: rule124
  }, {
    start: 70198,
    length: 2,
    convRule: rule92
  }, {
    start: 70200,
    length: 6,
    convRule: rule2
  }, {
    start: 70206,
    length: 1,
    convRule: rule92
  }, {
    start: 70272,
    length: 7,
    convRule: rule14
  }, {
    start: 70280,
    length: 1,
    convRule: rule14
  }, {
    start: 70282,
    length: 4,
    convRule: rule14
  }, {
    start: 70287,
    length: 15,
    convRule: rule14
  }, {
    start: 70303,
    length: 10,
    convRule: rule14
  }, {
    start: 70313,
    length: 1,
    convRule: rule2
  }, {
    start: 70320,
    length: 47,
    convRule: rule14
  }, {
    start: 70367,
    length: 1,
    convRule: rule92
  }, {
    start: 70368,
    length: 3,
    convRule: rule124
  }, {
    start: 70371,
    length: 8,
    convRule: rule92
  }, {
    start: 70384,
    length: 10,
    convRule: rule8
  }, {
    start: 70400,
    length: 2,
    convRule: rule92
  }, {
    start: 70402,
    length: 2,
    convRule: rule124
  }, {
    start: 70405,
    length: 8,
    convRule: rule14
  }, {
    start: 70415,
    length: 2,
    convRule: rule14
  }, {
    start: 70419,
    length: 22,
    convRule: rule14
  }, {
    start: 70442,
    length: 7,
    convRule: rule14
  }, {
    start: 70450,
    length: 2,
    convRule: rule14
  }, {
    start: 70453,
    length: 5,
    convRule: rule14
  }, {
    start: 70459,
    length: 2,
    convRule: rule92
  }, {
    start: 70461,
    length: 1,
    convRule: rule14
  }, {
    start: 70462,
    length: 2,
    convRule: rule124
  }, {
    start: 70464,
    length: 1,
    convRule: rule92
  }, {
    start: 70465,
    length: 4,
    convRule: rule124
  }, {
    start: 70471,
    length: 2,
    convRule: rule124
  }, {
    start: 70475,
    length: 3,
    convRule: rule124
  }, {
    start: 70480,
    length: 1,
    convRule: rule14
  }, {
    start: 70487,
    length: 1,
    convRule: rule124
  }, {
    start: 70493,
    length: 5,
    convRule: rule14
  }, {
    start: 70498,
    length: 2,
    convRule: rule124
  }, {
    start: 70502,
    length: 7,
    convRule: rule92
  }, {
    start: 70512,
    length: 5,
    convRule: rule92
  }, {
    start: 70656,
    length: 53,
    convRule: rule14
  }, {
    start: 70709,
    length: 3,
    convRule: rule124
  }, {
    start: 70712,
    length: 8,
    convRule: rule92
  }, {
    start: 70720,
    length: 2,
    convRule: rule124
  }, {
    start: 70722,
    length: 3,
    convRule: rule92
  }, {
    start: 70725,
    length: 1,
    convRule: rule124
  }, {
    start: 70726,
    length: 1,
    convRule: rule92
  }, {
    start: 70727,
    length: 4,
    convRule: rule14
  }, {
    start: 70731,
    length: 5,
    convRule: rule2
  }, {
    start: 70736,
    length: 10,
    convRule: rule8
  }, {
    start: 70746,
    length: 2,
    convRule: rule2
  }, {
    start: 70749,
    length: 1,
    convRule: rule2
  }, {
    start: 70750,
    length: 1,
    convRule: rule92
  }, {
    start: 70751,
    length: 3,
    convRule: rule14
  }, {
    start: 70784,
    length: 48,
    convRule: rule14
  }, {
    start: 70832,
    length: 3,
    convRule: rule124
  }, {
    start: 70835,
    length: 6,
    convRule: rule92
  }, {
    start: 70841,
    length: 1,
    convRule: rule124
  }, {
    start: 70842,
    length: 1,
    convRule: rule92
  }, {
    start: 70843,
    length: 4,
    convRule: rule124
  }, {
    start: 70847,
    length: 2,
    convRule: rule92
  }, {
    start: 70849,
    length: 1,
    convRule: rule124
  }, {
    start: 70850,
    length: 2,
    convRule: rule92
  }, {
    start: 70852,
    length: 2,
    convRule: rule14
  }, {
    start: 70854,
    length: 1,
    convRule: rule2
  }, {
    start: 70855,
    length: 1,
    convRule: rule14
  }, {
    start: 70864,
    length: 10,
    convRule: rule8
  }, {
    start: 71040,
    length: 47,
    convRule: rule14
  }, {
    start: 71087,
    length: 3,
    convRule: rule124
  }, {
    start: 71090,
    length: 4,
    convRule: rule92
  }, {
    start: 71096,
    length: 4,
    convRule: rule124
  }, {
    start: 71100,
    length: 2,
    convRule: rule92
  }, {
    start: 71102,
    length: 1,
    convRule: rule124
  }, {
    start: 71103,
    length: 2,
    convRule: rule92
  }, {
    start: 71105,
    length: 23,
    convRule: rule2
  }, {
    start: 71128,
    length: 4,
    convRule: rule14
  }, {
    start: 71132,
    length: 2,
    convRule: rule92
  }, {
    start: 71168,
    length: 48,
    convRule: rule14
  }, {
    start: 71216,
    length: 3,
    convRule: rule124
  }, {
    start: 71219,
    length: 8,
    convRule: rule92
  }, {
    start: 71227,
    length: 2,
    convRule: rule124
  }, {
    start: 71229,
    length: 1,
    convRule: rule92
  }, {
    start: 71230,
    length: 1,
    convRule: rule124
  }, {
    start: 71231,
    length: 2,
    convRule: rule92
  }, {
    start: 71233,
    length: 3,
    convRule: rule2
  }, {
    start: 71236,
    length: 1,
    convRule: rule14
  }, {
    start: 71248,
    length: 10,
    convRule: rule8
  }, {
    start: 71264,
    length: 13,
    convRule: rule2
  }, {
    start: 71296,
    length: 43,
    convRule: rule14
  }, {
    start: 71339,
    length: 1,
    convRule: rule92
  }, {
    start: 71340,
    length: 1,
    convRule: rule124
  }, {
    start: 71341,
    length: 1,
    convRule: rule92
  }, {
    start: 71342,
    length: 2,
    convRule: rule124
  }, {
    start: 71344,
    length: 6,
    convRule: rule92
  }, {
    start: 71350,
    length: 1,
    convRule: rule124
  }, {
    start: 71351,
    length: 1,
    convRule: rule92
  }, {
    start: 71352,
    length: 1,
    convRule: rule14
  }, {
    start: 71360,
    length: 10,
    convRule: rule8
  }, {
    start: 71424,
    length: 27,
    convRule: rule14
  }, {
    start: 71453,
    length: 3,
    convRule: rule92
  }, {
    start: 71456,
    length: 2,
    convRule: rule124
  }, {
    start: 71458,
    length: 4,
    convRule: rule92
  }, {
    start: 71462,
    length: 1,
    convRule: rule124
  }, {
    start: 71463,
    length: 5,
    convRule: rule92
  }, {
    start: 71472,
    length: 10,
    convRule: rule8
  }, {
    start: 71482,
    length: 2,
    convRule: rule17
  }, {
    start: 71484,
    length: 3,
    convRule: rule2
  }, {
    start: 71487,
    length: 1,
    convRule: rule13
  }, {
    start: 71680,
    length: 44,
    convRule: rule14
  }, {
    start: 71724,
    length: 3,
    convRule: rule124
  }, {
    start: 71727,
    length: 9,
    convRule: rule92
  }, {
    start: 71736,
    length: 1,
    convRule: rule124
  }, {
    start: 71737,
    length: 2,
    convRule: rule92
  }, {
    start: 71739,
    length: 1,
    convRule: rule2
  }, {
    start: 71840,
    length: 32,
    convRule: rule9
  }, {
    start: 71872,
    length: 32,
    convRule: rule12
  }, {
    start: 71904,
    length: 10,
    convRule: rule8
  }, {
    start: 71914,
    length: 9,
    convRule: rule17
  }, {
    start: 71935,
    length: 8,
    convRule: rule14
  }, {
    start: 71945,
    length: 1,
    convRule: rule14
  }, {
    start: 71948,
    length: 8,
    convRule: rule14
  }, {
    start: 71957,
    length: 2,
    convRule: rule14
  }, {
    start: 71960,
    length: 24,
    convRule: rule14
  }, {
    start: 71984,
    length: 6,
    convRule: rule124
  }, {
    start: 71991,
    length: 2,
    convRule: rule124
  }, {
    start: 71995,
    length: 2,
    convRule: rule92
  }, {
    start: 71997,
    length: 1,
    convRule: rule124
  }, {
    start: 71998,
    length: 1,
    convRule: rule92
  }, {
    start: 71999,
    length: 1,
    convRule: rule14
  }, {
    start: 72e3,
    length: 1,
    convRule: rule124
  }, {
    start: 72001,
    length: 1,
    convRule: rule14
  }, {
    start: 72002,
    length: 1,
    convRule: rule124
  }, {
    start: 72003,
    length: 1,
    convRule: rule92
  }, {
    start: 72004,
    length: 3,
    convRule: rule2
  }, {
    start: 72016,
    length: 10,
    convRule: rule8
  }, {
    start: 72096,
    length: 8,
    convRule: rule14
  }, {
    start: 72106,
    length: 39,
    convRule: rule14
  }, {
    start: 72145,
    length: 3,
    convRule: rule124
  }, {
    start: 72148,
    length: 4,
    convRule: rule92
  }, {
    start: 72154,
    length: 2,
    convRule: rule92
  }, {
    start: 72156,
    length: 4,
    convRule: rule124
  }, {
    start: 72160,
    length: 1,
    convRule: rule92
  }, {
    start: 72161,
    length: 1,
    convRule: rule14
  }, {
    start: 72162,
    length: 1,
    convRule: rule2
  }, {
    start: 72163,
    length: 1,
    convRule: rule14
  }, {
    start: 72164,
    length: 1,
    convRule: rule124
  }, {
    start: 72192,
    length: 1,
    convRule: rule14
  }, {
    start: 72193,
    length: 10,
    convRule: rule92
  }, {
    start: 72203,
    length: 40,
    convRule: rule14
  }, {
    start: 72243,
    length: 6,
    convRule: rule92
  }, {
    start: 72249,
    length: 1,
    convRule: rule124
  }, {
    start: 72250,
    length: 1,
    convRule: rule14
  }, {
    start: 72251,
    length: 4,
    convRule: rule92
  }, {
    start: 72255,
    length: 8,
    convRule: rule2
  }, {
    start: 72263,
    length: 1,
    convRule: rule92
  }, {
    start: 72272,
    length: 1,
    convRule: rule14
  }, {
    start: 72273,
    length: 6,
    convRule: rule92
  }, {
    start: 72279,
    length: 2,
    convRule: rule124
  }, {
    start: 72281,
    length: 3,
    convRule: rule92
  }, {
    start: 72284,
    length: 46,
    convRule: rule14
  }, {
    start: 72330,
    length: 13,
    convRule: rule92
  }, {
    start: 72343,
    length: 1,
    convRule: rule124
  }, {
    start: 72344,
    length: 2,
    convRule: rule92
  }, {
    start: 72346,
    length: 3,
    convRule: rule2
  }, {
    start: 72349,
    length: 1,
    convRule: rule14
  }, {
    start: 72350,
    length: 5,
    convRule: rule2
  }, {
    start: 72384,
    length: 57,
    convRule: rule14
  }, {
    start: 72704,
    length: 9,
    convRule: rule14
  }, {
    start: 72714,
    length: 37,
    convRule: rule14
  }, {
    start: 72751,
    length: 1,
    convRule: rule124
  }, {
    start: 72752,
    length: 7,
    convRule: rule92
  }, {
    start: 72760,
    length: 6,
    convRule: rule92
  }, {
    start: 72766,
    length: 1,
    convRule: rule124
  }, {
    start: 72767,
    length: 1,
    convRule: rule92
  }, {
    start: 72768,
    length: 1,
    convRule: rule14
  }, {
    start: 72769,
    length: 5,
    convRule: rule2
  }, {
    start: 72784,
    length: 10,
    convRule: rule8
  }, {
    start: 72794,
    length: 19,
    convRule: rule17
  }, {
    start: 72816,
    length: 2,
    convRule: rule2
  }, {
    start: 72818,
    length: 30,
    convRule: rule14
  }, {
    start: 72850,
    length: 22,
    convRule: rule92
  }, {
    start: 72873,
    length: 1,
    convRule: rule124
  }, {
    start: 72874,
    length: 7,
    convRule: rule92
  }, {
    start: 72881,
    length: 1,
    convRule: rule124
  }, {
    start: 72882,
    length: 2,
    convRule: rule92
  }, {
    start: 72884,
    length: 1,
    convRule: rule124
  }, {
    start: 72885,
    length: 2,
    convRule: rule92
  }, {
    start: 72960,
    length: 7,
    convRule: rule14
  }, {
    start: 72968,
    length: 2,
    convRule: rule14
  }, {
    start: 72971,
    length: 38,
    convRule: rule14
  }, {
    start: 73009,
    length: 6,
    convRule: rule92
  }, {
    start: 73018,
    length: 1,
    convRule: rule92
  }, {
    start: 73020,
    length: 2,
    convRule: rule92
  }, {
    start: 73023,
    length: 7,
    convRule: rule92
  }, {
    start: 73030,
    length: 1,
    convRule: rule14
  }, {
    start: 73031,
    length: 1,
    convRule: rule92
  }, {
    start: 73040,
    length: 10,
    convRule: rule8
  }, {
    start: 73056,
    length: 6,
    convRule: rule14
  }, {
    start: 73063,
    length: 2,
    convRule: rule14
  }, {
    start: 73066,
    length: 32,
    convRule: rule14
  }, {
    start: 73098,
    length: 5,
    convRule: rule124
  }, {
    start: 73104,
    length: 2,
    convRule: rule92
  }, {
    start: 73107,
    length: 2,
    convRule: rule124
  }, {
    start: 73109,
    length: 1,
    convRule: rule92
  }, {
    start: 73110,
    length: 1,
    convRule: rule124
  }, {
    start: 73111,
    length: 1,
    convRule: rule92
  }, {
    start: 73112,
    length: 1,
    convRule: rule14
  }, {
    start: 73120,
    length: 10,
    convRule: rule8
  }, {
    start: 73440,
    length: 19,
    convRule: rule14
  }, {
    start: 73459,
    length: 2,
    convRule: rule92
  }, {
    start: 73461,
    length: 2,
    convRule: rule124
  }, {
    start: 73463,
    length: 2,
    convRule: rule2
  }, {
    start: 73648,
    length: 1,
    convRule: rule14
  }, {
    start: 73664,
    length: 21,
    convRule: rule17
  }, {
    start: 73685,
    length: 8,
    convRule: rule13
  }, {
    start: 73693,
    length: 4,
    convRule: rule3
  }, {
    start: 73697,
    length: 17,
    convRule: rule13
  }, {
    start: 73727,
    length: 1,
    convRule: rule2
  }, {
    start: 73728,
    length: 922,
    convRule: rule14
  }, {
    start: 74752,
    length: 111,
    convRule: rule128
  }, {
    start: 74864,
    length: 5,
    convRule: rule2
  }, {
    start: 74880,
    length: 196,
    convRule: rule14
  }, {
    start: 77824,
    length: 1071,
    convRule: rule14
  }, {
    start: 78896,
    length: 9,
    convRule: rule16
  }, {
    start: 82944,
    length: 583,
    convRule: rule14
  }, {
    start: 92160,
    length: 569,
    convRule: rule14
  }, {
    start: 92736,
    length: 31,
    convRule: rule14
  }, {
    start: 92768,
    length: 10,
    convRule: rule8
  }, {
    start: 92782,
    length: 2,
    convRule: rule2
  }, {
    start: 92880,
    length: 30,
    convRule: rule14
  }, {
    start: 92912,
    length: 5,
    convRule: rule92
  }, {
    start: 92917,
    length: 1,
    convRule: rule2
  }, {
    start: 92928,
    length: 48,
    convRule: rule14
  }, {
    start: 92976,
    length: 7,
    convRule: rule92
  }, {
    start: 92983,
    length: 5,
    convRule: rule2
  }, {
    start: 92988,
    length: 4,
    convRule: rule13
  }, {
    start: 92992,
    length: 4,
    convRule: rule91
  }, {
    start: 92996,
    length: 1,
    convRule: rule2
  }, {
    start: 92997,
    length: 1,
    convRule: rule13
  }, {
    start: 93008,
    length: 10,
    convRule: rule8
  }, {
    start: 93019,
    length: 7,
    convRule: rule17
  }, {
    start: 93027,
    length: 21,
    convRule: rule14
  }, {
    start: 93053,
    length: 19,
    convRule: rule14
  }, {
    start: 93760,
    length: 32,
    convRule: rule9
  }, {
    start: 93792,
    length: 32,
    convRule: rule12
  }, {
    start: 93824,
    length: 23,
    convRule: rule17
  }, {
    start: 93847,
    length: 4,
    convRule: rule2
  }, {
    start: 93952,
    length: 75,
    convRule: rule14
  }, {
    start: 94031,
    length: 1,
    convRule: rule92
  }, {
    start: 94032,
    length: 1,
    convRule: rule14
  }, {
    start: 94033,
    length: 55,
    convRule: rule124
  }, {
    start: 94095,
    length: 4,
    convRule: rule92
  }, {
    start: 94099,
    length: 13,
    convRule: rule91
  }, {
    start: 94176,
    length: 2,
    convRule: rule91
  }, {
    start: 94178,
    length: 1,
    convRule: rule2
  }, {
    start: 94179,
    length: 1,
    convRule: rule91
  }, {
    start: 94180,
    length: 1,
    convRule: rule92
  }, {
    start: 94192,
    length: 2,
    convRule: rule124
  }, {
    start: 94208,
    length: 6136,
    convRule: rule14
  }, {
    start: 100352,
    length: 1238,
    convRule: rule14
  }, {
    start: 101632,
    length: 9,
    convRule: rule14
  }, {
    start: 110592,
    length: 287,
    convRule: rule14
  }, {
    start: 110928,
    length: 3,
    convRule: rule14
  }, {
    start: 110948,
    length: 4,
    convRule: rule14
  }, {
    start: 110960,
    length: 396,
    convRule: rule14
  }, {
    start: 113664,
    length: 107,
    convRule: rule14
  }, {
    start: 113776,
    length: 13,
    convRule: rule14
  }, {
    start: 113792,
    length: 9,
    convRule: rule14
  }, {
    start: 113808,
    length: 10,
    convRule: rule14
  }, {
    start: 113820,
    length: 1,
    convRule: rule13
  }, {
    start: 113821,
    length: 2,
    convRule: rule92
  }, {
    start: 113823,
    length: 1,
    convRule: rule2
  }, {
    start: 113824,
    length: 4,
    convRule: rule16
  }, {
    start: 118784,
    length: 246,
    convRule: rule13
  }, {
    start: 119040,
    length: 39,
    convRule: rule13
  }, {
    start: 119081,
    length: 60,
    convRule: rule13
  }, {
    start: 119141,
    length: 2,
    convRule: rule124
  }, {
    start: 119143,
    length: 3,
    convRule: rule92
  }, {
    start: 119146,
    length: 3,
    convRule: rule13
  }, {
    start: 119149,
    length: 6,
    convRule: rule124
  }, {
    start: 119155,
    length: 8,
    convRule: rule16
  }, {
    start: 119163,
    length: 8,
    convRule: rule92
  }, {
    start: 119171,
    length: 2,
    convRule: rule13
  }, {
    start: 119173,
    length: 7,
    convRule: rule92
  }, {
    start: 119180,
    length: 30,
    convRule: rule13
  }, {
    start: 119210,
    length: 4,
    convRule: rule92
  }, {
    start: 119214,
    length: 59,
    convRule: rule13
  }, {
    start: 119296,
    length: 66,
    convRule: rule13
  }, {
    start: 119362,
    length: 3,
    convRule: rule92
  }, {
    start: 119365,
    length: 1,
    convRule: rule13
  }, {
    start: 119520,
    length: 20,
    convRule: rule17
  }, {
    start: 119552,
    length: 87,
    convRule: rule13
  }, {
    start: 119648,
    length: 25,
    convRule: rule17
  }, {
    start: 119808,
    length: 26,
    convRule: rule107
  }, {
    start: 119834,
    length: 26,
    convRule: rule20
  }, {
    start: 119860,
    length: 26,
    convRule: rule107
  }, {
    start: 119886,
    length: 7,
    convRule: rule20
  }, {
    start: 119894,
    length: 18,
    convRule: rule20
  }, {
    start: 119912,
    length: 26,
    convRule: rule107
  }, {
    start: 119938,
    length: 26,
    convRule: rule20
  }, {
    start: 119964,
    length: 1,
    convRule: rule107
  }, {
    start: 119966,
    length: 2,
    convRule: rule107
  }, {
    start: 119970,
    length: 1,
    convRule: rule107
  }, {
    start: 119973,
    length: 2,
    convRule: rule107
  }, {
    start: 119977,
    length: 4,
    convRule: rule107
  }, {
    start: 119982,
    length: 8,
    convRule: rule107
  }, {
    start: 119990,
    length: 4,
    convRule: rule20
  }, {
    start: 119995,
    length: 1,
    convRule: rule20
  }, {
    start: 119997,
    length: 7,
    convRule: rule20
  }, {
    start: 120005,
    length: 11,
    convRule: rule20
  }, {
    start: 120016,
    length: 26,
    convRule: rule107
  }, {
    start: 120042,
    length: 26,
    convRule: rule20
  }, {
    start: 120068,
    length: 2,
    convRule: rule107
  }, {
    start: 120071,
    length: 4,
    convRule: rule107
  }, {
    start: 120077,
    length: 8,
    convRule: rule107
  }, {
    start: 120086,
    length: 7,
    convRule: rule107
  }, {
    start: 120094,
    length: 26,
    convRule: rule20
  }, {
    start: 120120,
    length: 2,
    convRule: rule107
  }, {
    start: 120123,
    length: 4,
    convRule: rule107
  }, {
    start: 120128,
    length: 5,
    convRule: rule107
  }, {
    start: 120134,
    length: 1,
    convRule: rule107
  }, {
    start: 120138,
    length: 7,
    convRule: rule107
  }, {
    start: 120146,
    length: 26,
    convRule: rule20
  }, {
    start: 120172,
    length: 26,
    convRule: rule107
  }, {
    start: 120198,
    length: 26,
    convRule: rule20
  }, {
    start: 120224,
    length: 26,
    convRule: rule107
  }, {
    start: 120250,
    length: 26,
    convRule: rule20
  }, {
    start: 120276,
    length: 26,
    convRule: rule107
  }, {
    start: 120302,
    length: 26,
    convRule: rule20
  }, {
    start: 120328,
    length: 26,
    convRule: rule107
  }, {
    start: 120354,
    length: 26,
    convRule: rule20
  }, {
    start: 120380,
    length: 26,
    convRule: rule107
  }, {
    start: 120406,
    length: 26,
    convRule: rule20
  }, {
    start: 120432,
    length: 26,
    convRule: rule107
  }, {
    start: 120458,
    length: 28,
    convRule: rule20
  }, {
    start: 120488,
    length: 25,
    convRule: rule107
  }, {
    start: 120513,
    length: 1,
    convRule: rule6
  }, {
    start: 120514,
    length: 25,
    convRule: rule20
  }, {
    start: 120539,
    length: 1,
    convRule: rule6
  }, {
    start: 120540,
    length: 6,
    convRule: rule20
  }, {
    start: 120546,
    length: 25,
    convRule: rule107
  }, {
    start: 120571,
    length: 1,
    convRule: rule6
  }, {
    start: 120572,
    length: 25,
    convRule: rule20
  }, {
    start: 120597,
    length: 1,
    convRule: rule6
  }, {
    start: 120598,
    length: 6,
    convRule: rule20
  }, {
    start: 120604,
    length: 25,
    convRule: rule107
  }, {
    start: 120629,
    length: 1,
    convRule: rule6
  }, {
    start: 120630,
    length: 25,
    convRule: rule20
  }, {
    start: 120655,
    length: 1,
    convRule: rule6
  }, {
    start: 120656,
    length: 6,
    convRule: rule20
  }, {
    start: 120662,
    length: 25,
    convRule: rule107
  }, {
    start: 120687,
    length: 1,
    convRule: rule6
  }, {
    start: 120688,
    length: 25,
    convRule: rule20
  }, {
    start: 120713,
    length: 1,
    convRule: rule6
  }, {
    start: 120714,
    length: 6,
    convRule: rule20
  }, {
    start: 120720,
    length: 25,
    convRule: rule107
  }, {
    start: 120745,
    length: 1,
    convRule: rule6
  }, {
    start: 120746,
    length: 25,
    convRule: rule20
  }, {
    start: 120771,
    length: 1,
    convRule: rule6
  }, {
    start: 120772,
    length: 6,
    convRule: rule20
  }, {
    start: 120778,
    length: 1,
    convRule: rule107
  }, {
    start: 120779,
    length: 1,
    convRule: rule20
  }, {
    start: 120782,
    length: 50,
    convRule: rule8
  }, {
    start: 120832,
    length: 512,
    convRule: rule13
  }, {
    start: 121344,
    length: 55,
    convRule: rule92
  }, {
    start: 121399,
    length: 4,
    convRule: rule13
  }, {
    start: 121403,
    length: 50,
    convRule: rule92
  }, {
    start: 121453,
    length: 8,
    convRule: rule13
  }, {
    start: 121461,
    length: 1,
    convRule: rule92
  }, {
    start: 121462,
    length: 14,
    convRule: rule13
  }, {
    start: 121476,
    length: 1,
    convRule: rule92
  }, {
    start: 121477,
    length: 2,
    convRule: rule13
  }, {
    start: 121479,
    length: 5,
    convRule: rule2
  }, {
    start: 121499,
    length: 5,
    convRule: rule92
  }, {
    start: 121505,
    length: 15,
    convRule: rule92
  }, {
    start: 122880,
    length: 7,
    convRule: rule92
  }, {
    start: 122888,
    length: 17,
    convRule: rule92
  }, {
    start: 122907,
    length: 7,
    convRule: rule92
  }, {
    start: 122915,
    length: 2,
    convRule: rule92
  }, {
    start: 122918,
    length: 5,
    convRule: rule92
  }, {
    start: 123136,
    length: 45,
    convRule: rule14
  }, {
    start: 123184,
    length: 7,
    convRule: rule92
  }, {
    start: 123191,
    length: 7,
    convRule: rule91
  }, {
    start: 123200,
    length: 10,
    convRule: rule8
  }, {
    start: 123214,
    length: 1,
    convRule: rule14
  }, {
    start: 123215,
    length: 1,
    convRule: rule13
  }, {
    start: 123584,
    length: 44,
    convRule: rule14
  }, {
    start: 123628,
    length: 4,
    convRule: rule92
  }, {
    start: 123632,
    length: 10,
    convRule: rule8
  }, {
    start: 123647,
    length: 1,
    convRule: rule3
  }, {
    start: 124928,
    length: 197,
    convRule: rule14
  }, {
    start: 125127,
    length: 9,
    convRule: rule17
  }, {
    start: 125136,
    length: 7,
    convRule: rule92
  }, {
    start: 125184,
    length: 34,
    convRule: rule203
  }, {
    start: 125218,
    length: 34,
    convRule: rule204
  }, {
    start: 125252,
    length: 7,
    convRule: rule92
  }, {
    start: 125259,
    length: 1,
    convRule: rule91
  }, {
    start: 125264,
    length: 10,
    convRule: rule8
  }, {
    start: 125278,
    length: 2,
    convRule: rule2
  }, {
    start: 126065,
    length: 59,
    convRule: rule17
  }, {
    start: 126124,
    length: 1,
    convRule: rule13
  }, {
    start: 126125,
    length: 3,
    convRule: rule17
  }, {
    start: 126128,
    length: 1,
    convRule: rule3
  }, {
    start: 126129,
    length: 4,
    convRule: rule17
  }, {
    start: 126209,
    length: 45,
    convRule: rule17
  }, {
    start: 126254,
    length: 1,
    convRule: rule13
  }, {
    start: 126255,
    length: 15,
    convRule: rule17
  }, {
    start: 126464,
    length: 4,
    convRule: rule14
  }, {
    start: 126469,
    length: 27,
    convRule: rule14
  }, {
    start: 126497,
    length: 2,
    convRule: rule14
  }, {
    start: 126500,
    length: 1,
    convRule: rule14
  }, {
    start: 126503,
    length: 1,
    convRule: rule14
  }, {
    start: 126505,
    length: 10,
    convRule: rule14
  }, {
    start: 126516,
    length: 4,
    convRule: rule14
  }, {
    start: 126521,
    length: 1,
    convRule: rule14
  }, {
    start: 126523,
    length: 1,
    convRule: rule14
  }, {
    start: 126530,
    length: 1,
    convRule: rule14
  }, {
    start: 126535,
    length: 1,
    convRule: rule14
  }, {
    start: 126537,
    length: 1,
    convRule: rule14
  }, {
    start: 126539,
    length: 1,
    convRule: rule14
  }, {
    start: 126541,
    length: 3,
    convRule: rule14
  }, {
    start: 126545,
    length: 2,
    convRule: rule14
  }, {
    start: 126548,
    length: 1,
    convRule: rule14
  }, {
    start: 126551,
    length: 1,
    convRule: rule14
  }, {
    start: 126553,
    length: 1,
    convRule: rule14
  }, {
    start: 126555,
    length: 1,
    convRule: rule14
  }, {
    start: 126557,
    length: 1,
    convRule: rule14
  }, {
    start: 126559,
    length: 1,
    convRule: rule14
  }, {
    start: 126561,
    length: 2,
    convRule: rule14
  }, {
    start: 126564,
    length: 1,
    convRule: rule14
  }, {
    start: 126567,
    length: 4,
    convRule: rule14
  }, {
    start: 126572,
    length: 7,
    convRule: rule14
  }, {
    start: 126580,
    length: 4,
    convRule: rule14
  }, {
    start: 126585,
    length: 4,
    convRule: rule14
  }, {
    start: 126590,
    length: 1,
    convRule: rule14
  }, {
    start: 126592,
    length: 10,
    convRule: rule14
  }, {
    start: 126603,
    length: 17,
    convRule: rule14
  }, {
    start: 126625,
    length: 3,
    convRule: rule14
  }, {
    start: 126629,
    length: 5,
    convRule: rule14
  }, {
    start: 126635,
    length: 17,
    convRule: rule14
  }, {
    start: 126704,
    length: 2,
    convRule: rule6
  }, {
    start: 126976,
    length: 44,
    convRule: rule13
  }, {
    start: 127024,
    length: 100,
    convRule: rule13
  }, {
    start: 127136,
    length: 15,
    convRule: rule13
  }, {
    start: 127153,
    length: 15,
    convRule: rule13
  }, {
    start: 127169,
    length: 15,
    convRule: rule13
  }, {
    start: 127185,
    length: 37,
    convRule: rule13
  }, {
    start: 127232,
    length: 13,
    convRule: rule17
  }, {
    start: 127245,
    length: 161,
    convRule: rule13
  }, {
    start: 127462,
    length: 29,
    convRule: rule13
  }, {
    start: 127504,
    length: 44,
    convRule: rule13
  }, {
    start: 127552,
    length: 9,
    convRule: rule13
  }, {
    start: 127568,
    length: 2,
    convRule: rule13
  }, {
    start: 127584,
    length: 6,
    convRule: rule13
  }, {
    start: 127744,
    length: 251,
    convRule: rule13
  }, {
    start: 127995,
    length: 5,
    convRule: rule10
  }, {
    start: 128e3,
    length: 728,
    convRule: rule13
  }, {
    start: 128736,
    length: 13,
    convRule: rule13
  }, {
    start: 128752,
    length: 13,
    convRule: rule13
  }, {
    start: 128768,
    length: 116,
    convRule: rule13
  }, {
    start: 128896,
    length: 89,
    convRule: rule13
  }, {
    start: 128992,
    length: 12,
    convRule: rule13
  }, {
    start: 129024,
    length: 12,
    convRule: rule13
  }, {
    start: 129040,
    length: 56,
    convRule: rule13
  }, {
    start: 129104,
    length: 10,
    convRule: rule13
  }, {
    start: 129120,
    length: 40,
    convRule: rule13
  }, {
    start: 129168,
    length: 30,
    convRule: rule13
  }, {
    start: 129200,
    length: 2,
    convRule: rule13
  }, {
    start: 129280,
    length: 121,
    convRule: rule13
  }, {
    start: 129402,
    length: 82,
    convRule: rule13
  }, {
    start: 129485,
    length: 135,
    convRule: rule13
  }, {
    start: 129632,
    length: 14,
    convRule: rule13
  }, {
    start: 129648,
    length: 5,
    convRule: rule13
  }, {
    start: 129656,
    length: 3,
    convRule: rule13
  }, {
    start: 129664,
    length: 7,
    convRule: rule13
  }, {
    start: 129680,
    length: 25,
    convRule: rule13
  }, {
    start: 129712,
    length: 7,
    convRule: rule13
  }, {
    start: 129728,
    length: 3,
    convRule: rule13
  }, {
    start: 129744,
    length: 7,
    convRule: rule13
  }, {
    start: 129792,
    length: 147,
    convRule: rule13
  }, {
    start: 129940,
    length: 55,
    convRule: rule13
  }, {
    start: 130032,
    length: 10,
    convRule: rule8
  }, {
    start: 131072,
    length: 42718,
    convRule: rule14
  }, {
    start: 173824,
    length: 4149,
    convRule: rule14
  }, {
    start: 177984,
    length: 222,
    convRule: rule14
  }, {
    start: 178208,
    length: 5762,
    convRule: rule14
  }, {
    start: 183984,
    length: 7473,
    convRule: rule14
  }, {
    start: 194560,
    length: 542,
    convRule: rule14
  }, {
    start: 196608,
    length: 4939,
    convRule: rule14
  }, {
    start: 917505,
    length: 1,
    convRule: rule16
  }, {
    start: 917536,
    length: 96,
    convRule: rule16
  }, {
    start: 917760,
    length: 240,
    convRule: rule92
  }, {
    start: 983040,
    length: 65534,
    convRule: rule200
  }, {
    start: 1048576,
    length: 65534,
    convRule: rule200
  }];
  var checkAttr = function(categories) {
    return function($$char) {
      var numOfBlocks = function() {
        var $43 = $$char < 256;
        if ($43) {
          return numLat1Blocks;
        }
        ;
        return numBlocks;
      }();
      var maybeConversionRule = getRule(allchars)($$char)(numOfBlocks);
      if (maybeConversionRule instanceof Nothing) {
        return false;
      }
      ;
      if (maybeConversionRule instanceof Just) {
        return isJust(elemIndex2(maybeConversionRule.value0.category)(categories));
      }
      ;
      throw new Error("Failed pattern match at Data.CodePoint.Unicode.Internal (line 5645, column 5 - line 5647, column 86): " + [maybeConversionRule.constructor.name]);
    };
  };
  var uIswalnum = /* @__PURE__ */ checkAttr([gencatLT, gencatLU, gencatLL, gencatLM, gencatLO, gencatMC, gencatME, gencatMN, gencatNO, gencatND, gencatNL]);

  // output/Data.CodePoint.Unicode/index.js
  var fromEnum3 = /* @__PURE__ */ fromEnum(boundedEnumCodePoint);
  var isAlphaNum = function($70) {
    return uIswalnum(fromEnum3($70));
  };

  // output/Language.Pantograph.Generic.Smallstep/index.js
  var genericShowConstructor3 = /* @__PURE__ */ genericShowConstructor(genericShowArgsNoArguments);
  var SSInjIsSymbol = {
    reflectSymbol: function() {
      return "SSInj";
    }
  };
  var genericShowSum4 = /* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor(/* @__PURE__ */ genericShowArgsArgument(showInt))({
    reflectSymbol: function() {
      return "Marker";
    }
  }));
  var BoundaryIsSymbol = {
    reflectSymbol: function() {
      return "Boundary";
    }
  };
  var genericEqConstructor2 = /* @__PURE__ */ genericEqConstructor(genericEqNoArguments);
  var genericEqSum3 = /* @__PURE__ */ genericEqSum(/* @__PURE__ */ genericEqConstructor(/* @__PURE__ */ genericEqArgument(eqInt)));
  var genericOrdConstructor2 = /* @__PURE__ */ genericOrdConstructor(genericOrdNoArguments);
  var genericOrdSum3 = /* @__PURE__ */ genericOrdSum(/* @__PURE__ */ genericOrdConstructor(/* @__PURE__ */ genericOrdArgument(ordInt)));
  var intercalate10 = /* @__PURE__ */ intercalate(foldableArray)(monoidString);
  var map51 = /* @__PURE__ */ map(functorExpr);
  var map119 = /* @__PURE__ */ map(functorMaybe);
  var map213 = /* @__PURE__ */ map(functorArray);
  var trace3 = /* @__PURE__ */ trace();
  var pure21 = /* @__PURE__ */ pure(applicativeMaybe);
  var map313 = /* @__PURE__ */ map(functorMeta);
  var map410 = /* @__PURE__ */ map(functorTotalMap);
  var bind27 = /* @__PURE__ */ bind(bindMaybe);
  var map56 = /* @__PURE__ */ map(functorList);
  var max7 = /* @__PURE__ */ max(ordInt);
  var identity21 = /* @__PURE__ */ identity(categoryFn);
  var fromFoldable16 = /* @__PURE__ */ fromFoldable(foldableArray);
  var map64 = /* @__PURE__ */ map(functorMap);
  var union7 = /* @__PURE__ */ union(ordMetaVar);
  var append16 = /* @__PURE__ */ append(semigroupArray);
  var fromFoldable17 = /* @__PURE__ */ fromFoldable3(foldableList);
  var prettyMap2 = /* @__PURE__ */ prettyMap(prettyMetaVar);
  var append25 = /* @__PURE__ */ append(semigroupList);
  var apply5 = /* @__PURE__ */ apply(applyMaybe);
  var reversePath3 = /* @__PURE__ */ reversePath();
  var SSChangeRule = /* @__PURE__ */ function() {
    function SSChangeRule2(value0, value14, value23) {
      this.value0 = value0;
      this.value1 = value14;
      this.value2 = value23;
    }
    ;
    SSChangeRule2.create = function(value0) {
      return function(value14) {
        return function(value23) {
          return new SSChangeRule2(value0, value14, value23);
        };
      };
    };
    return SSChangeRule2;
  }();
  var Up = /* @__PURE__ */ function() {
    function Up2() {
    }
    ;
    Up2.value = new Up2();
    return Up2;
  }();
  var Down = /* @__PURE__ */ function() {
    function Down2() {
    }
    ;
    Down2.value = new Down2();
    return Down2;
  }();
  var SSInj = /* @__PURE__ */ function() {
    function SSInj2(value0) {
      this.value0 = value0;
    }
    ;
    SSInj2.create = function(value0) {
      return new SSInj2(value0);
    };
    return SSInj2;
  }();
  var Marker = /* @__PURE__ */ function() {
    function Marker2(value0) {
      this.value0 = value0;
    }
    ;
    Marker2.create = function(value0) {
      return new Marker2(value0);
    };
    return Marker2;
  }();
  var Boundary = /* @__PURE__ */ function() {
    function Boundary2(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    Boundary2.create = function(value0) {
      return function(value14) {
        return new Boundary2(value0, value14);
      };
    };
    return Boundary2;
  }();
  var prettyDirection = {
    pretty: function(v) {
      if (v instanceof Up) {
        return "\u2191";
      }
      ;
      if (v instanceof Down) {
        return "\u2193";
      }
      ;
      throw new Error("Failed pattern match at Language.Pantograph.Generic.Smallstep (line 59, column 1 - line 61, column 22): " + [v.constructor.name]);
    }
  };
  var pretty4 = /* @__PURE__ */ pretty(prettyDirection);
  var prettyStepExprLabel = function(dictIsExprLabel) {
    var prettyDerivLabel2 = prettyDerivLabel(dictIsExprLabel);
    var pretty13 = pretty(prettyExpr(isExprLabelChangeLabel(isExprLabelMeta(isExprLabelSortLabel(dictIsExprLabel)))));
    return function(dictPretty) {
      var pretty23 = pretty(prettyDerivLabel2(dictPretty));
      return {
        pretty: function(v) {
          if (v instanceof SSInj) {
            return pretty23(v.value0);
          }
          ;
          if (v instanceof Marker) {
            return "\u2336";
          }
          ;
          if (v instanceof Boundary) {
            return pretty4(v.value0) + brackets(pretty13(v.value1));
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Generic.Smallstep (line 108, column 1 - line 111, column 74): " + [v.constructor.name]);
        }
      };
    };
  };
  var genericStepExprLabel_ = {
    to: function(x) {
      if (x instanceof Inl) {
        return new SSInj(x.value0);
      }
      ;
      if (x instanceof Inr && x.value0 instanceof Inl) {
        return new Marker(x.value0.value0);
      }
      ;
      if (x instanceof Inr && x.value0 instanceof Inr) {
        return new Boundary(x.value0.value0.value0, x.value0.value0.value1);
      }
      ;
      throw new Error("Failed pattern match at Language.Pantograph.Generic.Smallstep (line 104, column 1 - line 104, column 46): " + [x.constructor.name]);
    },
    from: function(x) {
      if (x instanceof SSInj) {
        return new Inl(x.value0);
      }
      ;
      if (x instanceof Marker) {
        return new Inr(new Inl(x.value0));
      }
      ;
      if (x instanceof Boundary) {
        return new Inr(new Inr(new Product(x.value0, x.value1)));
      }
      ;
      throw new Error("Failed pattern match at Language.Pantograph.Generic.Smallstep (line 104, column 1 - line 104, column 46): " + [x.constructor.name]);
    }
  };
  var genericShow8 = /* @__PURE__ */ genericShow(genericStepExprLabel_);
  var genericEq4 = /* @__PURE__ */ genericEq(genericStepExprLabel_);
  var genericCompare4 = /* @__PURE__ */ genericCompare(genericStepExprLabel_);
  var genericDirection_ = {
    to: function(x) {
      if (x instanceof Inl) {
        return Up.value;
      }
      ;
      if (x instanceof Inr) {
        return Down.value;
      }
      ;
      throw new Error("Failed pattern match at Language.Pantograph.Generic.Smallstep (line 55, column 1 - line 55, column 36): " + [x.constructor.name]);
    },
    from: function(x) {
      if (x instanceof Up) {
        return new Inl(NoArguments.value);
      }
      ;
      if (x instanceof Down) {
        return new Inr(NoArguments.value);
      }
      ;
      throw new Error("Failed pattern match at Language.Pantograph.Generic.Smallstep (line 55, column 1 - line 55, column 36): " + [x.constructor.name]);
    }
  };
  var genericShow13 = /* @__PURE__ */ genericShow(genericDirection_)(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor3({
    reflectSymbol: function() {
      return "Up";
    }
  }))(/* @__PURE__ */ genericShowConstructor3({
    reflectSymbol: function() {
      return "Down";
    }
  })));
  var genericEq12 = /* @__PURE__ */ genericEq(genericDirection_)(/* @__PURE__ */ genericEqSum(genericEqConstructor2)(genericEqConstructor2));
  var genericCompare12 = /* @__PURE__ */ genericCompare(genericDirection_)(/* @__PURE__ */ genericOrdSum(genericOrdConstructor2)(genericOrdConstructor2));
  var showDirection = {
    show: function(x) {
      return genericShow13(x);
    }
  };
  var genericShowArgsProduct2 = /* @__PURE__ */ genericShowArgsProduct(/* @__PURE__ */ genericShowArgsArgument(showDirection));
  var showStepExprLabel = function(dictShow) {
    var showDerivLabel2 = showDerivLabel(dictShow);
    var genericShowSum1 = genericShowSum4(genericShowConstructor(genericShowArgsProduct2(genericShowArgsArgument(showExpr(showChangeLabel(showMeta(showSortLabel(dictShow)))))))(BoundaryIsSymbol));
    return function(dictShow1) {
      var genericShow24 = genericShow8(genericShowSum(genericShowConstructor(genericShowArgsArgument(showDerivLabel2(dictShow1)))(SSInjIsSymbol))(genericShowSum1));
      return {
        show: function(x) {
          return genericShow24(x);
        }
      };
    };
  };
  var eqDirection = {
    eq: function(x) {
      return function(y) {
        return genericEq12(x)(y);
      };
    }
  };
  var genericEqProduct2 = /* @__PURE__ */ genericEqProduct(/* @__PURE__ */ genericEqArgument(eqDirection));
  var eqStepExprLabel = function(dictEq) {
    var eqDerivLabel2 = eqDerivLabel(dictEq);
    var genericEqSum13 = genericEqSum3(genericEqConstructor(genericEqProduct2(genericEqArgument(eqExpr(eqChangeLabel(eqMeta(eqSortLabel(dictEq))))))));
    return function(dictEq1) {
      var genericEq24 = genericEq4(genericEqSum(genericEqConstructor(genericEqArgument(eqDerivLabel2(dictEq1))))(genericEqSum13));
      return {
        eq: function(x) {
          return function(y) {
            return genericEq24(x)(y);
          };
        }
      };
    };
  };
  var ordDirection = {
    compare: function(x) {
      return function(y) {
        return genericCompare12(x)(y);
      };
    },
    Eq0: function() {
      return eqDirection;
    }
  };
  var genericOrdProduct2 = /* @__PURE__ */ genericOrdProduct(/* @__PURE__ */ genericOrdArgument(ordDirection));
  var ordStepExprLabel = function(dictOrd) {
    var ordDerivLabel2 = ordDerivLabel(dictOrd);
    var genericOrdSum12 = genericOrdSum3(genericOrdConstructor(genericOrdProduct2(genericOrdArgument(ordExpr(ordChangeLabel(ordMeta(ordSortLabel(dictOrd))))))));
    var eqStepExprLabel1 = eqStepExprLabel(dictOrd.Eq0());
    return function(dictOrd1) {
      var genericCompare24 = genericCompare4(genericOrdSum(genericOrdConstructor(genericOrdArgument(ordDerivLabel2(dictOrd1))))(genericOrdSum12));
      var eqStepExprLabel2 = eqStepExprLabel1(dictOrd1.Eq0());
      return {
        compare: function(x) {
          return function(y) {
            return genericCompare24(x)(y);
          };
        },
        Eq0: function() {
          return eqStepExprLabel2;
        }
      };
    };
  };
  var isExprLabelStepExprLabel = function(dictIsRuleLabel) {
    var isExprLabelDerivLabel2 = isExprLabelDerivLabel(dictIsRuleLabel);
    var prettyExprF$prime_unsafe2 = prettyExprF$prime_unsafe(isExprLabelDerivLabel2)();
    var IsExprLabel0 = dictIsRuleLabel.IsExprLabel0();
    var prettyStepExprLabel1 = prettyStepExprLabel(IsExprLabel0)(dictIsRuleLabel.Pretty5());
    var pretty13 = pretty(prettyStepExprLabel1);
    var expectedKidsCount2 = expectedKidsCount(isExprLabelDerivLabel2);
    var Ord1 = IsExprLabel0.Ord1();
    var Ord0 = dictIsRuleLabel.Bounded3().Ord0();
    var eqStepExprLabel1 = eqStepExprLabel(Ord1.Eq0())(Ord0.Eq0());
    var ordStepExprLabel1 = ordStepExprLabel(Ord1)(Ord0);
    var showStepExprLabel1 = showStepExprLabel(IsExprLabel0.Show2())(dictIsRuleLabel.Show4());
    return {
      "prettyExprF'_unsafe": function() {
        return function(v) {
          if (v.value0 instanceof SSInj) {
            return prettyExprF$prime_unsafe2(new Tuple(v.value0.value0, v.value1));
          }
          ;
          if (v.value0 instanceof Marker) {
            return pretty13(v.value0) + braces(intercalate10(",")(v.value1));
          }
          ;
          if (v.value0 instanceof Boundary && v.value1.length === 1) {
            return pretty13(v.value0) + braces(v["value1"][0]);
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Generic.Smallstep (line 113, column 1 - line 120, column 41): " + [v.constructor.name]);
        };
      },
      expectedKidsCount: function(v) {
        if (v instanceof SSInj) {
          return expectedKidsCount2(v.value0);
        }
        ;
        if (v instanceof Marker) {
          return v.value0;
        }
        ;
        if (v instanceof Boundary) {
          return 1;
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Generic.Smallstep (line 113, column 1 - line 120, column 41): " + [v.constructor.name]);
      },
      Eq0: function() {
        return eqStepExprLabel1;
      },
      Ord1: function() {
        return ordStepExprLabel1;
      },
      Show2: function() {
        return showStepExprLabel1;
      },
      Pretty3: function() {
        return prettyStepExprLabel1;
      }
    };
  };
  var wrapCursor = function(t) {
    return new Expr(new Marker(1), [t]);
  };
  var wrapBoundary = function(dictIsExprLabel) {
    var isId2 = isId(isExprLabelMeta(isExprLabelSortLabel(dictIsExprLabel)));
    return function(dir2) {
      return function(ch) {
        return function(t) {
          var $479 = isId2(ch);
          if ($479) {
            return t;
          }
          ;
          return new Expr(new Boundary(dir2, ch), [t]);
        };
      };
    };
  };
  var termToSSTerm = /* @__PURE__ */ function() {
    return map51(SSInj.create);
  }();
  var stepUpThroughCursor = function(v) {
    return function(v1) {
      if (v1.value0 instanceof Marker && (v1.value0.value0 === 1 && (v1.value1.length === 1 && (v1["value1"][0].value0 instanceof Boundary && (v1["value1"][0].value0.value0 instanceof Up && v1["value1"][0].value1.length === 1))))) {
        return new Just(new Expr(new Boundary(Up.value, v1["value1"][0].value0.value1), [new Expr(new Marker(1), [v1["value1"][0]["value1"][0]])]));
      }
      ;
      return Nothing.value;
    };
  };
  var stepDownThroughCursor = function(v) {
    return function(v1) {
      if (v1.value0 instanceof Boundary && (v1.value0.value0 instanceof Down && (v1.value1.length === 1 && (v1["value1"][0].value0 instanceof Marker && (v1["value1"][0].value0.value0 === 1 && v1["value1"][0].value1.length === 1))))) {
        return new Just(new Expr(new Marker(1), [new Expr(new Boundary(Down.value, v1.value0.value1), [v1["value1"][0]["value1"][0]])]));
      }
      ;
      return Nothing.value;
    };
  };
  var ssTermStripTopChange = function(dictIsRuleLabel) {
    var derivLabelSort2 = derivLabelSort(dictIsRuleLabel);
    return function(v) {
      if (v.value0 instanceof Boundary && (v.value0.value0 instanceof Up && v.value1.length === 1)) {
        return new Tuple(v.value0.value1, v["value1"][0]);
      }
      ;
      if (v.value0 instanceof SSInj) {
        return new Tuple(inject(derivLabelSort2(v.value0.value0)), v);
      }
      ;
      if (v.value0 instanceof Marker && (v.value0.value0 === 1 && (v.value1.length === 1 && v["value1"][0].value0 instanceof SSInj))) {
        return new Tuple(inject(derivLabelSort2(v["value1"][0].value0.value0)), v);
      }
      ;
      return bug("invalid input ssTerStripTopChange");
    };
  };
  var ssTermSort = function(dictIsRuleLabel) {
    var derivLabelSort2 = derivLabelSort(dictIsRuleLabel);
    var IsExprLabel0 = dictIsRuleLabel.IsExprLabel0();
    var isExprLabelMeta3 = isExprLabelMeta(isExprLabelSortLabel(IsExprLabel0));
    var lEndpoint3 = lEndpoint(isExprLabelMeta3);
    var rEndpoint3 = rEndpoint(isExprLabelMeta3);
    var show19 = show(showExpr(showStepExprLabel(IsExprLabel0.Show2())(dictIsRuleLabel.Show4())));
    return function(v) {
      if (v.value0 instanceof SSInj) {
        return derivLabelSort2(v.value0.value0);
      }
      ;
      if (v.value0 instanceof Boundary && v.value0.value0 instanceof Up) {
        return lEndpoint3(v.value0.value1);
      }
      ;
      if (v.value0 instanceof Boundary && v.value0.value0 instanceof Down) {
        return rEndpoint3(v.value0.value1);
      }
      ;
      if (v.value0 instanceof Marker && (v.value0.value0 === 1 && v.value1.length === 1)) {
        return ssTermSort(dictIsRuleLabel)(v["value1"][0]);
      }
      ;
      if (v.value0 instanceof Marker) {
        return bug("Couldn't find sort of SSTerm " + show19(v));
      }
      ;
      throw new Error("Failed pattern match at Language.Pantograph.Generic.Smallstep (line 91, column 1 - line 91, column 74): " + [v.constructor.name]);
    };
  };
  var passThroughRule = function(dictIsRuleLabel) {
    var IsExprLabel0 = dictIsRuleLabel.IsExprLabel0();
    var isExprLabelMeta3 = isExprLabelMeta(isExprLabelSortLabel(IsExprLabel0));
    var lub2 = lub(isExprLabelMeta3);
    var compose1 = compose2(isExprLabelMeta3);
    var wrapBoundary1 = wrapBoundary(IsExprLabel0);
    return function(v) {
      return function(v1) {
        if (v1.value0 instanceof Boundary && (v1.value0.value0 instanceof Down && (v1.value1.length === 1 && (v1["value1"][0].value0 instanceof Boundary && (v1["value1"][0].value0.value0 instanceof Up && v1["value1"][0].value1.length === 1))))) {
          return trace3("passThroughRule happened")(function(v2) {
            var hypotenuse = fromJust$prime("This shouldn't happen [passThroughRule]")(lub2(v1.value0.value1)(v1["value1"][0].value0.value1));
            var upCh$prime = compose1(invert(v1.value0.value1))(hypotenuse);
            var downCh$prime = compose1(invert(v1["value1"][0].value0.value1))(hypotenuse);
            return pure21(wrapBoundary1(Up.value)(upCh$prime)(wrapBoundary1(Down.value)(downCh$prime)(v1["value1"][0]["value1"][0])));
          });
        }
        ;
        return Nothing.value;
      };
    };
  };
  var metaInject = function(e) {
    return map51(map313(function($853) {
      return CInj.create(MInj.create($853));
    }))(e);
  };
  var langToChLang = function(dictIsRuleLabel) {
    return function(lang2) {
      return map410(function(v) {
        return new SSChangeRule(v.value0, map213(metaInject)(v.value1), metaInject(v.value2));
      })(lang2);
    };
  };
  var injectSSMatchTerm = function(dictIsRuleLabel) {
    return function(ruleLabel) {
      return function(kids) {
        return new Expr(new InjectMatchLabel(ruleLabel), kids);
      };
    };
  };
  var injectChangeMatchExpr = function(l) {
    return function(kids) {
      return new Expr(new CInj(new InjectMatchLabel(new MInj(new SInj(l)))), kids);
    };
  };
  var infinity2 = 999999999;
  var getTooths = function(v) {
    return mapWithIndex3(function(i2) {
      return function(a2) {
        return new Tuple(new Just(new Tuple(v.value0, new Tuple(fromJust6(deleteAt(i2)(v.value1)), i2))), a2);
      };
    })(v.value1);
  };
  var getPathChange2 = function(dictOrd) {
    return function(dictIsRuleLabel) {
      var forgetCollectDerivPath2 = forgetCollectDerivPath(dictIsRuleLabel);
      var IsExprLabel0 = dictIsRuleLabel.IsExprLabel0();
      var inferPath2 = inferPath(IsExprLabel0)(dictIsRuleLabel);
      var nonemptyPathInnerSort2 = nonemptyPathInnerSort(dictIsRuleLabel);
      var subDerivPath2 = subDerivPath(dictIsRuleLabel);
      var diff3 = diff(eqMeta(eqSortLabel(IsExprLabel0.Ord1().Eq0())));
      var derivPathSort2 = derivPathSort(dictIsRuleLabel);
      var subSomeMetaChange2 = subSomeMetaChange(isExprLabelSortLabel(IsExprLabel0));
      return function(path) {
        return function(forgetSorts2) {
          var v = forgetCollectDerivPath2(forgetSorts2)(path);
          var sortSub = fromJust$prime("gpc2")(inferPath2(nonemptyPathInnerSort2(v.value0))(v.value0));
          var inferredPath = subDerivPath2(sortSub)(v.value0);
          var innerGeneralSort = nonemptyPathInnerSort2(inferredPath);
          var generalChange = diff3(innerGeneralSort)(derivPathSort2(inferredPath)(innerGeneralSort));
          return subSomeMetaChange2(v.value1)(generalChange);
        };
      };
    };
  };
  var getFirst = function(v) {
    return function(v1) {
      if (v instanceof Nil) {
        return Nothing.value;
      }
      ;
      if (v instanceof Cons) {
        var v2 = v1(v.value0);
        if (v2 instanceof Nothing) {
          return bind27(getFirst(v.value1)(v1))(function(v3) {
            return pure21(new Tuple(new Cons(v.value0, v3.value0), new Tuple(v3.value1.value0, v3.value1.value1)));
          });
        }
        ;
        if (v2 instanceof Just) {
          return new Just(new Tuple(Nil.value, new Tuple(v2.value0, v.value1)));
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Generic.Smallstep (line 386, column 23 - line 390, column 33): " + [v2.constructor.name]);
      }
      ;
      throw new Error("Failed pattern match at Language.Pantograph.Generic.Smallstep (line 384, column 1 - line 384, column 82): " + [v.constructor.name, v1.constructor.name]);
    };
  };
  var doAnyApply = function($copy_v) {
    return function($copy_v1) {
      var $tco_var_v = $copy_v;
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v, v1) {
        if (v1 instanceof Nil) {
          $tco_done = true;
          return Nothing.value;
        }
        ;
        if (v1 instanceof Cons) {
          var v2 = v1.value0(v);
          if (v2 instanceof Just) {
            $tco_done = true;
            return new Just(v2.value0);
          }
          ;
          if (v2 instanceof Nothing) {
            $tco_var_v = v;
            $copy_v1 = v1.value1;
            return;
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Generic.Smallstep (line 278, column 25 - line 280, column 28): " + [v2.constructor.name]);
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Generic.Smallstep (line 276, column 1 - line 276, column 68): " + [v.constructor.name, v1.constructor.name]);
      }
      ;
      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_v, $copy_v1);
      }
      ;
      return $tco_result;
    };
  };
  var fastStepImpl = function(dictIsRuleLabel) {
    return function(fullRules) {
      return function(assumeStepWithin0) {
        return function(parentTooth0) {
          return function(t0) {
            var fastStepTCO = function($copy_assumeStepWithin) {
              return function($copy_outChanged) {
                return function($copy_parentTooth) {
                  return function($copy_t) {
                    var $tco_var_assumeStepWithin = $copy_assumeStepWithin;
                    var $tco_var_outChanged = $copy_outChanged;
                    var $tco_var_parentTooth = $copy_parentTooth;
                    var $tco_done = false;
                    var $tco_result;
                    function $tco_loop(assumeStepWithin, outChanged, parentTooth, t) {
                      var $602 = assumeStepWithin === 0;
                      if ($602) {
                        $tco_done = true;
                        return new Tuple(t, false);
                      }
                      ;
                      var v = function() {
                        var v12 = doAnyApply(t)(map56(function(rule205) {
                          return rule205(parentTooth);
                        })(fullRules));
                        if (v12 instanceof Just) {
                          return new Tuple(v12.value0, true);
                        }
                        ;
                        if (v12 instanceof Nothing) {
                          return new Tuple(t, false);
                        }
                        ;
                        throw new Error("Failed pattern match at Language.Pantograph.Generic.Smallstep (line 343, column 33 - line 345, column 42): " + [v12.constructor.name]);
                      }();
                      var howFarToLookIntoKids = max7(assumeStepWithin - 1 | 0)(function() {
                        var $607 = v.value1 || outChanged;
                        if ($607) {
                          return 2;
                        }
                        ;
                        return 0;
                      }());
                      var v1 = function() {
                        var kidsWithTeeth = getTooths(v.value0);
                        var v2 = unzip2(map213(function(v3) {
                          return fastStepImpl(dictIsRuleLabel)(fullRules)(howFarToLookIntoKids)(v3.value0)(v3.value1);
                        })(kidsWithTeeth));
                        return new Tuple(v2.value0, any2(identity21)(v2.value1));
                      }();
                      var $615 = v.value1 || v1.value1;
                      if ($615) {
                        $tco_var_assumeStepWithin = 2;
                        $tco_var_outChanged = true;
                        $tco_var_parentTooth = parentTooth;
                        $copy_t = new Expr(v.value0.value0, v1.value0);
                        return;
                      }
                      ;
                      $tco_done = true;
                      return new Tuple(new Expr(v.value0.value0, v1.value0), v.value1 || outChanged);
                    }
                    ;
                    while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_assumeStepWithin, $tco_var_outChanged, $tco_var_parentTooth, $copy_t);
                    }
                    ;
                    return $tco_result;
                  };
                };
              };
            };
            return fastStepTCO(assumeStepWithin0)(false)(parentTooth0)(t0);
          };
        };
      };
    };
  };
  var defaultUp = function(dictIsExprLabel) {
    var isExprLabelMeta3 = isExprLabelMeta(isExprLabelSortLabel(dictIsExprLabel));
    var doOperation2 = doOperation(isExprLabelMeta3);
    var wrapBoundary1 = wrapBoundary(dictIsExprLabel);
    var subMetaExpr2 = subMetaExpr(isExprLabelChangeLabel(isExprLabelMeta3));
    var endpoints3 = endpoints(isExprLabelMeta3);
    return function(dictIsRuleLabel) {
      var lookup20 = lookup10(dictIsRuleLabel.Bounded3().Ord0());
      return function(v) {
        return function(v1) {
          return function(v2) {
            if (v2.value0 instanceof SSInj && v2.value0.value0 instanceof DerivLabel) {
              var v3 = lookup20(v2.value0.value0.value0)(v);
              var findUpBoundary = function(v4) {
                if (v4.value0.value0 instanceof Boundary && (v4.value0.value0.value0 instanceof Up && v4.value0.value1.length === 1)) {
                  return new Just(new Tuple(v4.value0.value0.value1, new Tuple(v4["value0"]["value1"][0], v4.value1)));
                }
                ;
                return Nothing.value;
              };
              return bind27(getFirst(fromFoldable16(zip(v2.value1)(v3.value1)))(findUpBoundary))(function(v4) {
                return bind27(doOperation2(v4.value1.value0.value0)(v4.value1.value0.value1.value1))(function(v5) {
                  var subFull = map64(map51(CInj.create))(v2.value0.value0.value1);
                  var sub$prime = union7(v5.value0)(subFull);
                  var wrapKid = function(v6) {
                    return wrapBoundary1(Down.value)(subMetaExpr2(sub$prime)(v6.value1))(v6.value0);
                  };
                  var leftKids = map56(wrapKid)(v4.value0);
                  var rightKids = map56(wrapKid)(v4.value1.value1);
                  var parentBoundary = function(node) {
                    return wrapBoundary1(Up.value)(subMetaExpr2(sub$prime)(v3.value2))(node);
                  };
                  return pure21(parentBoundary(new Expr(new SSInj(new DerivLabel(v2.value0.value0.value0, map64(function($854) {
                    return snd(endpoints3($854));
                  })(sub$prime))), append16(fromFoldable17(leftKids))(append16([wrapBoundary1(Down.value)(v5.value1)(v4.value1.value0.value1.value0)])(fromFoldable17(rightKids))))));
                });
              });
            }
            ;
            return Nothing.value;
          };
        };
      };
    };
  };
  var defaultDown = function(dictIsExprLabel) {
    var eq15 = eq(eqExpr(eqMeta(eqSortLabel(dictIsExprLabel.Ord1().Eq0()))));
    var isExprLabelMeta3 = isExprLabelMeta(isExprLabelSortLabel(dictIsExprLabel));
    var endpoints3 = endpoints(isExprLabelMeta3);
    var prettyExpr2 = prettyExpr(isExprLabelMeta3);
    var pretty13 = pretty(prettyExpr2);
    var isExprLabelChangeLabel2 = isExprLabelChangeLabel(isExprLabelMeta3);
    var pretty23 = pretty(prettyExpr(isExprLabelChangeLabel2));
    var pretty33 = pretty(prettyMap2(prettyExpr2));
    var doOperation2 = doOperation(isExprLabelMeta3);
    var subMetaExpr2 = subMetaExpr(isExprLabelChangeLabel2);
    var wrapBoundary1 = wrapBoundary(dictIsExprLabel);
    return function(dictIsRuleLabel) {
      var lookup20 = lookup10(dictIsRuleLabel.Bounded3().Ord0());
      var getSortFromSub2 = getSortFromSub(dictIsRuleLabel);
      return function(v) {
        return function(v1) {
          return function(v2) {
            if (v2.value0 instanceof Boundary && (v2.value0.value0 instanceof Down && (v2.value1.length === 1 && (v2["value1"][0].value0 instanceof SSInj && v2["value1"][0].value0.value0 instanceof DerivLabel)))) {
              var v3 = lookup20(v2["value1"][0].value0.value0.value0)(v);
              var sort2 = getSortFromSub2(v2["value1"][0].value0.value0.value0)(v2["value1"][0].value0.value0.value1);
              var $663 = !eq15(fst(endpoints3(v2.value0.value1)))(sort2);
              if ($663) {
                return bug("assertion failed: ch boundary didn't match sort in defaultDown. sort was: " + (pretty13(sort2) + (" and ch was " + (pretty23(v2.value0.value1) + (" also sub is " + pretty33(v2["value1"][0].value0.value0.value1))))));
              }
              ;
              return bind27(doOperation2(v2.value0.value1)(v3.value2))(function(v4) {
                var subFull = map64(map51(CInj.create))(v2["value1"][0].value0.value0.value1);
                var sub$prime = union7(v4.value0)(subFull);
                var kidGSorts$prime = map213(subMetaExpr2(sub$prime))(v3.value1);
                var kidsWithBoundaries = zipWith2(function(ch$prime) {
                  return function(kid) {
                    return wrapBoundary1(Down.value)(ch$prime)(kid);
                  };
                })(kidGSorts$prime)(v2["value1"][0].value1);
                return pure21(wrapBoundary1(Up.value)(v4.value1)(new Expr(new SSInj(new DerivLabel(v2["value1"][0].value0.value0.value0, map64(function($855) {
                  return snd(endpoints3($855));
                })(sub$prime))), kidsWithBoundaries)));
              });
            }
            ;
            return Nothing.value;
          };
        };
      };
    };
  };
  var dTERM = function(dictIsRuleLabel) {
    var makeLabel3 = makeLabel(dictIsRuleLabel);
    return function(ruleLabel) {
      return function(values3) {
        return function(kids) {
          return new Expr(new SSInj(makeLabel3(ruleLabel)(values3)), kids);
        };
      };
    };
  };
  var dPLUS = function(l) {
    return function(leftKids) {
      return function(inside) {
        return function(rightKids) {
          return new Expr(new Plus(new Tooth(new InjectMatchLabel(new MInj(new SInj(l))), {
            left: reverseArray(leftKids),
            right: fromFoldable16(rightKids)
          })), [inside]);
        };
      };
    };
  };
  var dMINUS = function(l) {
    return function(leftKids) {
      return function(inside) {
        return function(rightKids) {
          return new Expr(new Minus(new Tooth(new InjectMatchLabel(new MInj(new SInj(l))), {
            left: reverseArray(leftKids),
            right: fromFoldable16(rightKids)
          })), [inside]);
        };
      };
    };
  };
  var compareMatchLabel = function(dictIsRuleLabel) {
    var eq15 = eq(dictIsRuleLabel.Bounded3().Ord0().Eq0());
    return function(v) {
      return function(v1) {
        if (v instanceof SSInj && v.value0 instanceof DerivLabel) {
          return eq15(v.value0.value0)(v1);
        }
        ;
        return false;
      };
    };
  };
  var makeDownRule = function(dictIsExprLabel) {
    var matchChange3 = matchChange(isExprLabelMeta(isExprLabelSortLabel(dictIsExprLabel)));
    return function(dictIsRuleLabel) {
      var compareMatchLabel1 = compareMatchLabel(dictIsRuleLabel);
      return function(changeMatch) {
        return function(derivMatch) {
          return function(output2) {
            var output1 = output2();
            return function(_label) {
              return function(term) {
                if (term.value0 instanceof Boundary && (term.value0.value0 instanceof Down && term.value1.length === 1)) {
                  return bind27(matchChange3(term.value0.value1)(changeMatch))(function(v) {
                    return bind27(matchDiffExprs(compareMatchLabel1)(term["value1"][0])(derivMatch))(function(derivMatches) {
                      return output1(v.value0)(v.value1)(derivMatches);
                    });
                  });
                }
                ;
                return Nothing.value;
              };
            };
          };
        };
      };
    };
  };
  var makeUpRule = function(dictIsExprLabel) {
    var matchChange3 = matchChange(isExprLabelMeta(isExprLabelSortLabel(dictIsExprLabel)));
    return function(dictIsRuleLabel) {
      var compareMatchLabel1 = compareMatchLabel(dictIsRuleLabel);
      return function(changeMatch) {
        return function(derivMatch) {
          return function(output2) {
            var output1 = output2();
            return function(_label) {
              return function(term) {
                return bind27(matchDiffExprs(compareMatchLabel1)(term)(derivMatch))(function(derivMatches) {
                  var v = output1(derivMatches);
                  if (v.value0.value0 instanceof Boundary && (v.value0.value0.value0 instanceof Up && v.value0.value1.length === 1)) {
                    return bind27(matchChange3(v.value0.value0.value1)(changeMatch))(function(v1) {
                      return v.value1(v1.value0)(v1.value1)(v["value0"]["value1"][0]);
                    });
                  }
                  ;
                  return Nothing.value;
                });
              };
            };
          };
        };
      };
    };
  };
  var combineUpRule = function(dictIsRuleLabel) {
    var IsExprLabel0 = dictIsRuleLabel.IsExprLabel0();
    var wrapBoundary1 = wrapBoundary(IsExprLabel0);
    var compose1 = compose2(isExprLabelMeta(isExprLabelSortLabel(IsExprLabel0)));
    return function(v) {
      return function(v1) {
        if (v1.value0 instanceof Boundary && (v1.value0.value0 instanceof Up && (v1.value1.length === 1 && (v1["value1"][0].value0 instanceof Boundary && (v1["value1"][0].value0.value0 instanceof Up && v1["value1"][0].value1.length === 1))))) {
          return pure21(wrapBoundary1(Up.value)(compose1(v1.value0.value1)(v1["value1"][0].value0.value1))(v1["value1"][0]["value1"][0]));
        }
        ;
        return Nothing.value;
      };
    };
  };
  var combineDownRule = function(dictIsRuleLabel) {
    var IsExprLabel0 = dictIsRuleLabel.IsExprLabel0();
    var wrapBoundary1 = wrapBoundary(IsExprLabel0);
    var compose1 = compose2(isExprLabelMeta(isExprLabelSortLabel(IsExprLabel0)));
    return function(v) {
      return function(v1) {
        if (v1.value0 instanceof Boundary && (v1.value0.value0 instanceof Down && (v1.value1.length === 1 && (v1["value1"][0].value0 instanceof Boundary && (v1["value1"][0].value0.value0 instanceof Down && v1["value1"][0].value1.length === 1))))) {
          return pure21(wrapBoundary1(Down.value)(compose1(v1["value1"][0].value0.value1)(v1.value0.value1))(v1["value1"][0]["value1"][0]));
        }
        ;
        return Nothing.value;
      };
    };
  };
  var extraRules = function(dictIsRuleLabel) {
    var passThroughRule1 = passThroughRule(dictIsRuleLabel);
    var combineUpRule1 = combineUpRule(dictIsRuleLabel);
    var combineDownRule1 = combineDownRule(dictIsRuleLabel);
    return function(rules) {
      return append25(new Cons(passThroughRule1, new Cons(combineUpRule1, new Cons(combineDownRule1, Nil.value))))(append25(rules)(new Cons(stepUpThroughCursor, new Cons(stepDownThroughCursor, Nil.value))));
    };
  };
  var stepSomebody = function(dictIsRuleLabel) {
    return function(v) {
      return function(v1) {
        if (v instanceof Nil) {
          return Nothing.value;
        }
        ;
        if (v instanceof Cons) {
          var v2 = step4(dictIsRuleLabel)(v.value0.value0)(v.value0.value1)(v1);
          if (v2 instanceof Just) {
            return new Just(new Cons(v2.value0, map56(snd)(v.value1)));
          }
          ;
          if (v2 instanceof Nothing) {
            return apply5(map119(Cons.create)(pure21(v.value0.value1)))(stepSomebody(dictIsRuleLabel)(v.value1)(v1));
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Generic.Smallstep (line 284, column 48 - line 286, column 53): " + [v2.constructor.name]);
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Generic.Smallstep (line 282, column 1 - line 282, column 140): " + [v.constructor.name, v1.constructor.name]);
      };
    };
  };
  var step4 = function(dictIsRuleLabel) {
    var extraRules1 = extraRules(dictIsRuleLabel);
    return function(parentTooth) {
      return function(v) {
        return function(rules) {
          var fullRules = extraRules1(rules);
          var kidsWithTeeth = getTooths(v);
          var v1 = doAnyApply(v)(map56(function(rule205) {
            return rule205(parentTooth);
          })(fullRules));
          if (v1 instanceof Nothing) {
            return bind27(stepSomebody(dictIsRuleLabel)(fromFoldable16(kidsWithTeeth))(rules))(function(kids$prime) {
              return pure21(new Expr(v.value0, fromFoldable17(kids$prime)));
            });
          }
          ;
          if (v1 instanceof Just) {
            return new Just(v);
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Generic.Smallstep (line 299, column 2 - line 303, column 23): " + [v1.constructor.name]);
        };
      };
    };
  };
  var stepRepeatedly = function(dictIsRuleLabel) {
    var extraRules1 = extraRules(dictIsRuleLabel);
    var fastStepImpl1 = fastStepImpl(dictIsRuleLabel);
    return function(parentTooth) {
      return function(t) {
        return function(rules) {
          var fullRules = extraRules1(rules);
          var res = fst(fastStepImpl1(fullRules)(infinity2)(parentTooth)(t));
          return res;
        };
      };
    };
  };
  var cSlot = /* @__PURE__ */ function() {
    return new Expr(new CInj(Match.value), []);
  }();
  var assertNoneOfList = function(v) {
    return function(v1) {
      if (v instanceof Nil) {
        return Nil.value;
      }
      ;
      if (v instanceof Cons) {
        var v2 = v1(v.value0);
        if (v2 instanceof Nothing) {
          return bug("assertNoneOfList: assertion failed");
        }
        ;
        if (v2 instanceof Just) {
          return new Cons(v2.value0, assertNoneOfList(v.value1)(v1));
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Generic.Smallstep (line 175, column 31 - line 177, column 37): " + [v2.constructor.name]);
      }
      ;
      throw new Error("Failed pattern match at Language.Pantograph.Generic.Smallstep (line 173, column 1 - line 173, column 67): " + [v.constructor.name, v1.constructor.name]);
    };
  };
  var oneOrNone = function(v) {
    return function(v1) {
      if (v instanceof Nil) {
        return new Left(Nil.value);
      }
      ;
      if (v instanceof Cons) {
        var v2 = v1(v.value0);
        if (v2 instanceof Right) {
          var v3 = oneOrNone(v.value1)(v1);
          if (v3 instanceof Right) {
            return new Right(new Tuple(new Cons(v2.value0, v3.value0.value0), new Tuple(v3.value0.value1.value0, v3.value0.value1.value1)));
          }
          ;
          if (v3 instanceof Left) {
            return new Left(new Cons(v2.value0, v3.value0));
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Generic.Smallstep (line 184, column 6 - line 186, column 34): " + [v3.constructor.name]);
        }
        ;
        if (v2 instanceof Left) {
          var bs2 = assertNoneOfList(v.value1)(function(aa) {
            var v32 = v1(aa);
            if (v32 instanceof Left) {
              return Nothing.value;
            }
            ;
            if (v32 instanceof Right) {
              return new Just(v32.value0);
            }
            ;
            throw new Error("Failed pattern match at Language.Pantograph.Generic.Smallstep (line 189, column 22 - line 191, column 39): " + [v32.constructor.name]);
          });
          return new Right(new Tuple(Nil.value, new Tuple(v2.value0, bs2)));
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Generic.Smallstep (line 182, column 24 - line 193, column 29): " + [v2.constructor.name]);
      }
      ;
      throw new Error("Failed pattern match at Language.Pantograph.Generic.Smallstep (line 180, column 1 - line 180, column 98): " + [v.constructor.name, v1.constructor.name]);
    };
  };
  var unwrapSSTerm$prime = function(dictIsRuleLabel) {
    var pretty13 = pretty(prettyExpr(isExprLabelStepExprLabel(dictIsRuleLabel)));
    return function(v) {
      if (v.value0 instanceof SSInj) {
        var kids$prime = fromFoldable16(map213(unwrapSSTerm$prime(dictIsRuleLabel))(v.value1));
        var v1 = oneOrNone(kids$prime)(identity21);
        if (v1 instanceof Left) {
          return new Right(new Expr(v.value0.value0, fromFoldable17(v1.value0)));
        }
        ;
        if (v1 instanceof Right) {
          var newTooth = new Tooth(v.value0.value0, {
            left: reverse3(v1.value0.value0),
            right: v1.value0.value1.value1
          });
          return new Left(new Tuple(new Cons(newTooth, v1.value0.value1.value0.value0), v1.value0.value1.value0.value1));
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Generic.Smallstep (line 216, column 2 - line 222, column 45): " + [v1.constructor.name]);
      }
      ;
      if (v.value0 instanceof Marker) {
        return new Left(new Tuple(Nil.value, v));
      }
      ;
      if (v.value0 instanceof Boundary && (v.value0.value0 instanceof Down && (v.value1.length === 1 && v["value1"][0].value0 instanceof Marker))) {
        return new Left(new Tuple(Nil.value, v));
      }
      ;
      return bug("shouldn't happen in unwrapSSTerm': t was " + pretty13(v));
    };
  };
  var unwrapSSTerm = function(dictIsRuleLabel) {
    var $856 = unwrapSSTerm$prime(dictIsRuleLabel);
    return function($857) {
      return function(v) {
        if (v instanceof Left) {
          return new Left(new Tuple(reversePath3(v.value0.value0), v.value0.value1));
        }
        ;
        if (v instanceof Right) {
          return new Right(v.value0);
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Generic.Smallstep (line 227, column 34 - line 229, column 25): " + [v.constructor.name]);
      }($856($857));
    };
  };
  var ssTermToPath = function(dictIsRuleLabel) {
    var unwrapSSTerm1 = unwrapSSTerm(dictIsRuleLabel);
    var nonemptyPathInnerSort2 = nonemptyPathInnerSort(dictIsRuleLabel);
    var pretty13 = pretty(prettyExpr(isExprLabelStepExprLabel(dictIsRuleLabel)));
    return function(term) {
      var v = unwrapSSTerm1(term);
      if (v instanceof Left && (v.value0.value1.value0 instanceof Boundary && (v.value0.value1.value0.value0 instanceof Down && (v.value0.value1.value1.length === 1 && (v["value0"]["value1"]["value1"][0].value0 instanceof Marker && (v["value0"]["value1"]["value1"][0].value0.value0 === 0 && v["value0"]["value1"]["value1"][0].value1.length === 0)))))) {
        return new Tuple(v.value0.value0, v.value0.value1.value0.value1);
      }
      ;
      if (v instanceof Left && (v.value0.value1.value0 instanceof Marker && (v.value0.value1.value0.value0 === 0 && v.value0.value1.value1.length === 0))) {
        return new Tuple(v.value0.value0, inject(nonemptyPathInnerSort2(v.value0.value0)));
      }
      ;
      return bug("ssTermToPath: term didn't have the right shape: " + pretty13(term));
    };
  };
  var ssTermToChangedPath = function(dictIsRuleLabel) {
    var ssTermStripTopChange1 = ssTermStripTopChange(dictIsRuleLabel);
    var ssTermToPath1 = ssTermToPath(dictIsRuleLabel);
    return function(t) {
      var v = ssTermStripTopChange1(t);
      return new Tuple(v.value0, ssTermToPath1(v.value1));
    };
  };
  var assertJustExpr = function(dictIsExprLabel) {
    return function(dictIsRuleLabel) {
      var pretty13 = pretty(prettyExpr(isExprLabelStepExprLabel(dictIsRuleLabel)));
      return function(v) {
        if (v.value0 instanceof SSInj) {
          return new Expr(v.value0.value0, map213(assertJustExpr(dictIsExprLabel)(dictIsRuleLabel))(v.value1));
        }
        ;
        return bug("Error: assertJustExpr assertion failed. Term was: \n" + pretty13(v));
      };
    };
  };
  var ssTermToChangedTerm = function(dictIsRuleLabel) {
    var ssTermStripTopChange1 = ssTermStripTopChange(dictIsRuleLabel);
    var assertJustExpr1 = assertJustExpr(dictIsRuleLabel.IsExprLabel0())(dictIsRuleLabel);
    return function(t) {
      var v = ssTermStripTopChange1(t);
      return new Tuple(v.value0, assertJustExpr1(v.value1));
    };
  };
  var termToZipper = function(dictIsRuleLabel) {
    var ssTermStripTopChange1 = ssTermStripTopChange(dictIsRuleLabel);
    var unwrapSSTerm1 = unwrapSSTerm(dictIsRuleLabel);
    var assertJustExpr1 = assertJustExpr(dictIsRuleLabel.IsExprLabel0())(dictIsRuleLabel);
    var pretty13 = pretty(prettyExpr(isExprLabelStepExprLabel(dictIsRuleLabel)));
    return function(term) {
      var v = ssTermStripTopChange1(term);
      var v1 = unwrapSSTerm1(v.value1);
      if (v1 instanceof Left && (v1.value0.value1.value0 instanceof Marker && (v1.value0.value1.value0.value0 === 1 && v1.value0.value1.value1.length === 1))) {
        return new Zipper(v1.value0.value0, assertJustExpr1(v1["value0"]["value1"]["value1"][0]));
      }
      ;
      return bug("termToZipper: term didn't have the right shape: " + pretty13(term));
    };
  };
  var addToothToTerm = function(v) {
    return function(t) {
      return new Expr(new SSInj(v.value0), append16(fromFoldable17(map56(map51(SSInj.create))(unreverse(v.value1.left))))(append16([t])(fromFoldable17(map56(map51(SSInj.create))(v.value1.right)))));
    };
  };
  var wrapPath = function($copy_v) {
    return function($copy_v1) {
      var $tco_var_v = $copy_v;
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v, v1) {
        if (v instanceof Nil) {
          $tco_done = true;
          return v1;
        }
        ;
        if (v instanceof Cons) {
          $tco_var_v = v.value1;
          $copy_v1 = addToothToTerm(v.value0)(v1);
          return;
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Generic.Smallstep (line 142, column 1 - line 142, column 81): " + [v.constructor.name, v1.constructor.name]);
      }
      ;
      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_v, $copy_v1);
      }
      ;
      return $tco_result;
    };
  };
  var setupSSTermFromReplaceAction = function(dictIsExprLabel) {
    var wrapBoundary1 = wrapBoundary(dictIsExprLabel);
    return function(topPath) {
      return function(ch) {
        return function(newTerm) {
          return wrapPath(topPath)(wrapBoundary1(Up.value)(ch)(wrapCursor(termToSSTerm(newTerm))));
        };
      };
    };
  };
  var setupSSTermFromWrapAction = function(dictIsExprLabel) {
    var wrapBoundary1 = wrapBoundary(dictIsExprLabel);
    return function(cursorGoesInside) {
      return function(topPath) {
        return function(topCh) {
          return function(insertedPath) {
            return function(bottomCh) {
              return function(botTerm) {
                if (cursorGoesInside) {
                  return wrapPath(topPath)(wrapBoundary1(Up.value)(topCh)(wrapPath(insertedPath)(wrapCursor(wrapBoundary1(Down.value)(bottomCh)(termToSSTerm(botTerm))))));
                }
                ;
                return wrapPath(topPath)(wrapBoundary1(Up.value)(topCh)(wrapCursor(wrapPath(insertedPath)(wrapBoundary1(Down.value)(bottomCh)(termToSSTerm(botTerm))))));
              };
            };
          };
        };
      };
    };
  };

  // output/Language.Pantograph.Generic.Rendering.Base/index.js
  var prettyPath4 = /* @__PURE__ */ prettyPath(reflectPathDirUp);
  var prettyPath32 = /* @__PURE__ */ prettyPath3(reflectPathDirUp);
  var genericShowConstructor4 = /* @__PURE__ */ genericShowConstructor(genericShowArgsNoArguments);
  var intercalate11 = /* @__PURE__ */ intercalate3(monoidString);
  var pure25 = /* @__PURE__ */ pure(applicativeHookM);
  var reversePath4 = /* @__PURE__ */ reversePath();
  var elem3 = /* @__PURE__ */ elem2(eqString);
  var append17 = /* @__PURE__ */ append(semigroupArray);
  var map57 = /* @__PURE__ */ map(functorArray);
  var zipDowns3 = /* @__PURE__ */ zipDowns(zippableZipper);
  var bind28 = /* @__PURE__ */ bind(bindMaybe);
  var zipUp$prime2 = /* @__PURE__ */ zipUp$prime(zippableZipper);
  var identity22 = /* @__PURE__ */ identity(categoryFn);
  var pure111 = /* @__PURE__ */ pure(applicativeMaybe);
  var bimap4 = /* @__PURE__ */ bimap(bifunctorTuple);
  var on4 = /* @__PURE__ */ on2();
  var on12 = /* @__PURE__ */ on4({
    reflectSymbol: function() {
      return "next";
    }
  });
  var on23 = /* @__PURE__ */ on4({
    reflectSymbol: function() {
      return "prev";
    }
  });
  var on32 = /* @__PURE__ */ on4({
    reflectSymbol: function() {
      return "right";
    }
  });
  var on42 = /* @__PURE__ */ on4({
    reflectSymbol: function() {
      return "left";
    }
  });
  var on5 = /* @__PURE__ */ on4({
    reflectSymbol: function() {
      return "down";
    }
  });
  var on6 = /* @__PURE__ */ on4({
    reflectSymbol: function() {
      return "up";
    }
  });
  var lookup17 = /* @__PURE__ */ lookup2(ordMetaVar);
  var insert11 = /* @__PURE__ */ insert(ordMetaVar);
  var pure26 = /* @__PURE__ */ pure(applicativeEither);
  var throwError5 = /* @__PURE__ */ throwError(monadThrowEither);
  var elem1 = /* @__PURE__ */ elem2(eqCodePoint);
  var foldMapPath2 = /* @__PURE__ */ foldMapPath(reflectPathDirUp);
  var show7 = /* @__PURE__ */ show(showInt);
  var SetBufferEnabledQuery = /* @__PURE__ */ function() {
    function SetBufferEnabledQuery2(value0, value14, value23) {
      this.value0 = value0;
      this.value1 = value14;
      this.value2 = value23;
    }
    ;
    SetBufferEnabledQuery2.create = function(value0) {
      return function(value14) {
        return function(value23) {
          return new SetBufferEnabledQuery2(value0, value14, value23);
        };
      };
    };
    return SetBufferEnabledQuery2;
  }();
  var MoveBufferQuery = /* @__PURE__ */ function() {
    function MoveBufferQuery2(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    MoveBufferQuery2.create = function(value0) {
      return function(value14) {
        return new MoveBufferQuery2(value0, value14);
      };
    };
    return MoveBufferQuery2;
  }();
  var SubmitBufferQuery = /* @__PURE__ */ function() {
    function SubmitBufferQuery2(value0) {
      this.value0 = value0;
    }
    ;
    SubmitBufferQuery2.create = function(value0) {
      return new SubmitBufferQuery2(value0);
    };
    return SubmitBufferQuery2;
  }();
  var HoleyDerivZipper = /* @__PURE__ */ function() {
    function HoleyDerivZipper2(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    HoleyDerivZipper2.create = function(value0) {
      return function(value14) {
        return new HoleyDerivZipper2(value0, value14);
      };
    };
    return HoleyDerivZipper2;
  }();
  var HoleyDerivPath = /* @__PURE__ */ function() {
    function HoleyDerivPath2(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    HoleyDerivPath2.create = function(value0) {
      return function(value14) {
        return new HoleyDerivPath2(value0, value14);
      };
    };
    return HoleyDerivPath2;
  }();
  var FillEditPreview = /* @__PURE__ */ function() {
    function FillEditPreview2(value0) {
      this.value0 = value0;
    }
    ;
    FillEditPreview2.create = function(value0) {
      return new FillEditPreview2(value0);
    };
    return FillEditPreview2;
  }();
  var ReplaceEditPreview = /* @__PURE__ */ function() {
    function ReplaceEditPreview2(value0) {
      this.value0 = value0;
    }
    ;
    ReplaceEditPreview2.create = function(value0) {
      return new ReplaceEditPreview2(value0);
    };
    return ReplaceEditPreview2;
  }();
  var WrapEditPreview = /* @__PURE__ */ function() {
    function WrapEditPreview2(value0) {
      this.value0 = value0;
    }
    ;
    WrapEditPreview2.create = function(value0) {
      return new WrapEditPreview2(value0);
    };
    return WrapEditPreview2;
  }();
  var ActionOutput = /* @__PURE__ */ function() {
    function ActionOutput2(value0) {
      this.value0 = value0;
    }
    ;
    ActionOutput2.create = function(value0) {
      return new ActionOutput2(value0);
    };
    return ActionOutput2;
  }();
  var SetPreviewOutput = /* @__PURE__ */ function() {
    function SetPreviewOutput2(value0) {
      this.value0 = value0;
    }
    ;
    SetPreviewOutput2.create = function(value0) {
      return new SetPreviewOutput2(value0);
    };
    return SetPreviewOutput2;
  }();
  var SetPreviewQuery = /* @__PURE__ */ function() {
    function SetPreviewQuery2(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    SetPreviewQuery2.create = function(value0) {
      return function(value14) {
        return new SetPreviewQuery2(value0, value14);
      };
    };
    return SetPreviewQuery2;
  }();
  var NavigationCursorMode = /* @__PURE__ */ function() {
    function NavigationCursorMode2() {
    }
    ;
    NavigationCursorMode2.value = new NavigationCursorMode2();
    return NavigationCursorMode2;
  }();
  var BufferCursorMode = /* @__PURE__ */ function() {
    function BufferCursorMode2() {
    }
    ;
    BufferCursorMode2.value = new BufferCursorMode2();
    return BufferCursorMode2;
  }();
  var CursorState = /* @__PURE__ */ function() {
    function CursorState2(value0) {
      this.value0 = value0;
    }
    ;
    CursorState2.create = function(value0) {
      return new CursorState2(value0);
    };
    return CursorState2;
  }();
  var SelectState = /* @__PURE__ */ function() {
    function SelectState2(value0) {
      this.value0 = value0;
    }
    ;
    SelectState2.create = function(value0) {
      return new SelectState2(value0);
    };
    return SelectState2;
  }();
  var TopState = /* @__PURE__ */ function() {
    function TopState2(value0) {
      this.value0 = value0;
    }
    ;
    TopState2.create = function(value0) {
      return new TopState2(value0);
    };
    return TopState2;
  }();
  var SmallStepState = /* @__PURE__ */ function() {
    function SmallStepState2(value0) {
      this.value0 = value0;
    }
    ;
    SmallStepState2.create = function(value0) {
      return new SmallStepState2(value0);
    };
    return SmallStepState2;
  }();
  var prettyHoleyDerivZipper = function(dictIsRuleLabel) {
    var isExprLabelDerivLabel2 = isExprLabelDerivLabel(dictIsRuleLabel);
    var pretty7 = pretty(prettyZipper(isExprLabelDerivLabel2));
    var prettyPath12 = prettyPath4(isExprLabelDerivLabel2);
    var pretty13 = pretty(prettyExpr(isExprLabelDerivLabel2));
    return {
      pretty: function(v) {
        if (!v.value1) {
          return pretty7(v.value0);
        }
        ;
        if (v.value1) {
          return prettyPath12(v.value0.value0)("(\u2336 : " + (pretty13(v.value0.value1) + ")"));
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Base (line 318, column 1 - line 320, column 116): " + [v.constructor.name]);
      }
    };
  };
  var prettyHoleyDerivPath = function(dictIsRuleLabel) {
    var isExprLabelDerivLabel2 = isExprLabelDerivLabel(dictIsRuleLabel);
    var pretty7 = pretty(prettyPath32(isExprLabelDerivLabel2));
    var prettyPath12 = prettyPath4(isExprLabelDerivLabel2);
    return {
      pretty: function(v) {
        if (!v.value1) {
          return pretty7(v.value0);
        }
        ;
        if (v.value1) {
          return prettyPath12(v.value0)("(\u2336{?} : _)");
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Base (line 355, column 1 - line 357, column 76): " + [v.constructor.name]);
      }
    };
  };
  var genericCursorMode_ = {
    to: function(x) {
      if (x instanceof Inl) {
        return NavigationCursorMode.value;
      }
      ;
      if (x instanceof Inr) {
        return BufferCursorMode.value;
      }
      ;
      throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Base (line 274, column 1 - line 274, column 37): " + [x.constructor.name]);
    },
    from: function(x) {
      if (x instanceof NavigationCursorMode) {
        return new Inl(NoArguments.value);
      }
      ;
      if (x instanceof BufferCursorMode) {
        return new Inr(NoArguments.value);
      }
      ;
      throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Base (line 274, column 1 - line 274, column 37): " + [x.constructor.name]);
    }
  };
  var genericShow33 = /* @__PURE__ */ genericShow(genericCursorMode_)(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor4({
    reflectSymbol: function() {
      return "NavigationCursorMode";
    }
  }))(/* @__PURE__ */ genericShowConstructor4({
    reflectSymbol: function() {
      return "BufferCursorMode";
    }
  })));
  var showCursorMode = {
    show: function(x) {
      return genericShow33(x);
    }
  };
  var show13 = /* @__PURE__ */ show(showCursorMode);
  var prettyState = function(dictIsExprLabel) {
    return function(dictIsRuleLabel) {
      var pretty7 = pretty(prettyHoleyDerivZipper(dictIsRuleLabel));
      var pretty13 = pretty(prettyZipperp(isExprLabelDerivLabel(dictIsRuleLabel)));
      var pretty23 = pretty(prettyExpr(isExprLabelStepExprLabel(dictIsRuleLabel)));
      return {
        pretty: function(v) {
          if (v instanceof CursorState) {
            return intercalate11("\n")(["cursor:", indent(newlines(["- hdzipper = " + pretty7(v.value0.hdzipper), "- mode = " + show13(v.value0.mode)]))]);
          }
          ;
          if (v instanceof SelectState) {
            return intercalate11("\n")(["select:", indent(newlines(["- dzipperp = " + pretty13(v.value0.dzipperp)]))]);
          }
          ;
          if (v instanceof TopState) {
            return intercalate11("\n")(["top:"]);
          }
          ;
          if (v instanceof SmallStepState) {
            return intercalate11("\n")(["small stepping:", indent(newlines(["- ssterm = " + pretty23(v.value0.ssterm)]))]);
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Base (line 233, column 12 - line 254, column 8): " + [v.constructor.name]);
        }
      };
    };
  };
  var eqHoleyDerivPath = function(dictEq) {
    var eqDerivLabel2 = eqDerivLabel(dictEq);
    return function(dictEq1) {
      var eq15 = eq(eqPath2(eqDerivLabel2(dictEq1)));
      return {
        eq: function(x) {
          return function(y) {
            return eq15(x.value0)(y.value0) && x.value1 === y.value1;
          };
        }
      };
    };
  };
  var trivialEditorLocals = function(spec) {
    return {
      spec,
      handleBufferOutput: function(v) {
        return pure25(unit);
      },
      onMouseDown: function(v) {
        return function(v1) {
          return pure25(unit);
        };
      },
      onMouseOver: function(v) {
        return function(v1) {
          return pure25(unit);
        };
      }
    };
  };
  var selectTopClassName = "select-top";
  var selectBottomClassName = "select-bottom";
  var previewSlot = /* @__PURE__ */ function() {
    return $$Proxy.value;
  }();
  var previewRenderingContext = function(pathIdPrefix) {
    return {
      indentationLevel: 0,
      isCursor: false,
      isInteractive: false,
      isInlined: true,
      metavarNumbers: stateful(new Tuple(empty2, 0)),
      cssClasses: empty7,
      pathIdPrefix
    };
  };
  var isValidSelect = function(dictIsRuleLabel) {
    var derivTermSort3 = derivTermSort(dictIsRuleLabel);
    var derivPathSort2 = derivPathSort(dictIsRuleLabel);
    return function(spec) {
      return function(v) {
        var bottom3 = derivTermSort3(v.value2);
        var upSelection = function() {
          if (v.value1 instanceof Left) {
            return reversePath4(v.value1.value0);
          }
          ;
          if (v.value1 instanceof Right) {
            return v.value1.value0;
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Base (line 306, column 23 - line 308, column 25): " + [v.value1.constructor.name]);
        }();
        return spec.isValidSelectionSorts({
          bottom: bottom3,
          top: derivPathSort2(upSelection)(bottom3)
        });
      };
    };
  };
  var isValidCursor = function(dictIsRuleLabel) {
    var derivZipperSort2 = derivZipperSort(dictIsRuleLabel);
    return function(isValidCursorSort2) {
      return function(v) {
        return v.value1 || isValidCursorSort2(derivZipperSort2(v.value0));
      };
    };
  };
  var isOpenBufferKey = function(v) {
    return elem3(v)(["Enter"]);
  };
  var injectHoleyDerivZipper = function(z) {
    return new HoleyDerivZipper(z, false);
  };
  var zippableHoleyDerivZipper = function(dictIsRuleLabel) {
    var isInnerHoleDerivTerm2 = isInnerHoleDerivTerm(dictIsRuleLabel);
    return {
      zipDowns: function(v) {
        if (!v.value1) {
          var extraInner = function() {
            var v1 = isInnerHoleDerivTerm2(zipperExpr(v.value0));
            if (v1 instanceof Just) {
              return [new HoleyDerivZipper(v.value0, true)];
            }
            ;
            if (v1 instanceof Nothing) {
              return [];
            }
            ;
            throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Base (line 326, column 22 - line 328, column 26): " + [v1.constructor.name]);
          }();
          return append17(extraInner)(map57(injectHoleyDerivZipper)(zipDowns3(v.value0)));
        }
        ;
        if (v.value1) {
          return [];
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Base (line 322, column 1 - line 342, column 42): " + [v.constructor.name]);
      },
      "zipUp'": function(v) {
        if (!v.value1) {
          return bind28(zipUp$prime2(v.value0))(function(parentDZipper) {
            var augmentIndices = function() {
              var v1 = isInnerHoleDerivTerm2(zipperExpr(snd(parentDZipper)));
              if (v1 instanceof Just) {
                return function(i2) {
                  return i2 + 1 | 0;
                };
              }
              ;
              if (v1 instanceof Nothing) {
                return identity22;
              }
              ;
              throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Base (line 334, column 26 - line 336, column 32): " + [v1.constructor.name]);
            }();
            return pure111(bimap4(augmentIndices)(injectHoleyDerivZipper)(parentDZipper));
          });
        }
        ;
        if (v.value1) {
          return pure111(new Tuple(0, new HoleyDerivZipper(v.value0, false)));
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Base (line 322, column 1 - line 342, column 42): " + [v.constructor.name]);
      }
    };
  };
  var moveHoleyDerivZipper = function(dictIsRuleLabel) {
    var zippableHoleyDerivZipper1 = zippableHoleyDerivZipper(dictIsRuleLabel);
    var zipNext3 = zipNext(zippableHoleyDerivZipper1);
    var zipPrev3 = zipPrev(zippableHoleyDerivZipper1);
    var zipRight4 = zipRight(zippableHoleyDerivZipper1);
    var zipLeft4 = zipLeft(zippableHoleyDerivZipper1);
    var zipDown3 = zipDown(zippableHoleyDerivZipper1);
    var zipUp4 = zipUp(zippableHoleyDerivZipper1);
    return on12(_next)(function(v) {
      return zipNext3(0);
    })(on23(_prev)(function(v) {
      return zipPrev3;
    })(on32(_right)(function(v) {
      return zipRight4;
    })(on42(_left)(function(v) {
      return zipLeft4;
    })(on5(_down)(function(v) {
      return zipDown3(0);
    })(on6(_up)(function(v) {
      return zipUp4;
    })(case_))))));
  };
  var moveHDZUntil = function(dictIsRuleLabel) {
    var moveHoleyDerivZipper1 = moveHoleyDerivZipper(dictIsRuleLabel);
    return function(dir2) {
      return function(valid) {
        return function(hdz) {
          var v = moveHoleyDerivZipper1(dir2)(hdz);
          if (v instanceof Just) {
            var $440 = valid(v.value0);
            if ($440) {
              return new Just(v.value0);
            }
            ;
            return moveHDZUntil(dictIsRuleLabel)(dir2)(valid)(v.value0);
          }
          ;
          if (v instanceof Nothing) {
            return Nothing.value;
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Base (line 374, column 5 - line 377, column 27): " + [v.constructor.name]);
        };
      };
    };
  };
  var injectHoleyDerivPath = function(z) {
    return new HoleyDerivPath(z, false);
  };
  var incremementIndentationLevel = function(ctx) {
    return {
      isCursor: ctx.isCursor,
      isInteractive: ctx.isInteractive,
      isInlined: ctx.isInlined,
      metavarNumbers: ctx.metavarNumbers,
      cssClasses: ctx.cssClasses,
      pathIdPrefix: ctx.pathIdPrefix,
      indentationLevel: ctx.indentationLevel + 1 | 0
    };
  };
  var highlightClassName = "highlight";
  var hdzipperHoleyDerivPath = function(v) {
    return new HoleyDerivPath(zipperPath(v.value0), v.value1);
  };
  var hdzipperDerivTerm = function(dictIsRuleLabel) {
    return function(v) {
      return zipperExpr(v.value0);
    };
  };
  var hdzipperDerivPath = function(v) {
    return zipperPath(v.value0);
  };
  var hdzipperDerivZipper = function(dictIsRuleLabel) {
    var hdzipperDerivTerm1 = hdzipperDerivTerm(dictIsRuleLabel);
    return function(hdzipper) {
      var path = hdzipperDerivPath(hdzipper);
      var dterm = hdzipperDerivTerm1(hdzipper);
      return new Zipper(path, dterm);
    };
  };
  var stateToDerivTerm = function(dictIsRuleLabel) {
    var hdzipperDerivZipper1 = hdzipperDerivZipper(dictIsRuleLabel);
    var isExprLabelDerivLabel2 = isExprLabelDerivLabel(dictIsRuleLabel);
    var unPath2 = unPath(isExprLabelDerivLabel2);
    var unzipperp2 = unzipperp(isExprLabelDerivLabel2);
    return function(v) {
      if (v instanceof CursorState) {
        var v1 = hdzipperDerivZipper1(v.value0.hdzipper);
        return unPath2(v1.value0)(v1.value1);
      }
      ;
      if (v instanceof SelectState) {
        var v1 = unzipperp2(v.value0.dzipperp);
        return unPath2(v1.value0)(v1.value1);
      }
      ;
      if (v instanceof TopState) {
        return v.value0.dterm;
      }
      ;
      if (v instanceof SmallStepState) {
        return bug("couldn't get term in smallstep state");
      }
      ;
      throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Base (line 219, column 20 - line 227, column 71): " + [v.constructor.name]);
    };
  };
  var hdzIsHolePosition = function(dictIsRuleLabel) {
    var isHoleDerivLabel2 = isHoleDerivLabel(dictIsRuleLabel);
    var isInnerHoleDerivLabel2 = isInnerHoleDerivLabel(dictIsRuleLabel);
    return function(v) {
      var isHoleRule = isJust(isHoleDerivLabel2(v.value0.value1.value0));
      var hasInnerHole2 = isJust(isInnerHoleDerivLabel2(v.value0.value1.value0));
      if (hasInnerHole2) {
        return v.value1;
      }
      ;
      return isHoleRule;
    };
  };
  var hdzEnterInnerHoleIfPossible = function(dictIsRuleLabel) {
    var isInnerHoleDerivLabel2 = isInnerHoleDerivLabel(dictIsRuleLabel);
    return function(v) {
      var $477 = isJust(isInnerHoleDerivLabel2(derivZipperLabel(v.value0)));
      if ($477) {
        return new HoleyDerivZipper(v.value0, true);
      }
      ;
      return v;
    };
  };
  var getMetavarNumber = function(renCtx) {
    return function(mv) {
      var v = renCtx.metavarNumbers.get(unit);
      var v1 = lookup17(mv)(v.value0);
      if (v1 instanceof Just) {
        return v1.value0;
      }
      ;
      if (v1 instanceof Nothing) {
        var v2 = renCtx.metavarNumbers.set(new Tuple(insert11(mv)(v.value1)(v.value0), v.value1 + 1 | 0));
        return v.value1;
      }
      ;
      throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Base (line 79, column 5 - line 83, column 16): " + [v1.constructor.name]);
    };
  };
  var emptyStringClassName = "empty-string";
  var editsAtHoleyDerivZipper = function(dictIsRuleLabel) {
    var derivZipperSort2 = derivZipperSort(dictIsRuleLabel);
    return function(spec) {
      return function(hdzipper) {
        if (!hdzipper.value1) {
          return spec.editsAtCursor(derivZipperSort2(hdzipper.value0));
        }
        ;
        if (hdzipper.value1) {
          return spec.editsAtHoleInterior(derivZipperSort2(hdzipper.value0));
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Base (line 197, column 41 - line 199, column 76): " + [hdzipper.constructor.name]);
      };
    };
  };
  var defaultRenderingContext = function(pathIdPrefix) {
    return {
      indentationLevel: 0,
      isCursor: false,
      isInteractive: true,
      isInlined: false,
      metavarNumbers: stateful(new Tuple(empty2, 0)),
      cssClasses: empty7,
      pathIdPrefix
    };
  };
  var cursorState = function(source3) {
    return function(st) {
      return {
        name: "cursorState",
        source: source3,
        result: function() {
          if (st instanceof CursorState) {
            return pure26(st.value0);
          }
          ;
          return throwError5("expected to be cursor state");
        }()
      };
    };
  };
  var cursorFromHoleyDerivZipper = function(hdzipper) {
    return {
      hdzipper,
      mode: NavigationCursorMode.value
    };
  };
  var cursorClassName = "cursor";
  var bufferSlot = /* @__PURE__ */ function() {
    return $$Proxy.value;
  }();
  var additionalQueryKeys = /* @__PURE__ */ mapFlipped(functorArray)(["+", "-", ">", "<", "=", "*", "/", "^", "%", "(", ")", "&", "|", "!"])(function(s) {
    return fromJust6(index3(toCodePointArray(s))(0));
  });
  var isQueryKey = function(s) {
    return isAlphaNum(s) || elem1(s)(additionalQueryKeys);
  };
  var _verbose_path_element_ids = false;
  var fromPathToElementIdImpl = function(dictIsExprLabel) {
    var pretty7 = pretty(dictIsExprLabel.Pretty3());
    if (_verbose_path_element_ids) {
      return foldMapPath2("PathNil")(function(v) {
        return function(str) {
          return replaceAll(" ")("_")(pretty7(v.value0) + ("@" + show7(leftLength(v.value1)))) + ("-" + str);
        };
      });
    }
    ;
    if (otherwise) {
      return foldMapPath2("PathNil")(function(v) {
        return function(str) {
          return show7(leftLength(v.value1)) + ("-" + str);
        };
      });
    }
    ;
    throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Base (line 441, column 1 - line 441, column 84): " + []);
  };
  var fromHoleyDerivPathToElementIdImpl = function(dictIsRuleLabel) {
    var fromPathToElementIdImpl1 = fromPathToElementIdImpl(isExprLabelDerivLabel(dictIsRuleLabel));
    var pretty7 = pretty(prettyDerivLabel(dictIsRuleLabel.IsExprLabel0())(dictIsRuleLabel.Pretty5()));
    if (_verbose_path_element_ids) {
      return function(v) {
        if (!v.value1) {
          return fromPathToElementIdImpl1(v.value0);
        }
        ;
        if (v.value1) {
          return foldMapPath2("holeInterior-PathNil")(function(v1) {
            return function(str) {
              return replaceAll(" ")("_")(pretty7(v1.value0) + ("@" + show7(leftLength(v1.value1)))) + ("-" + str);
            };
          })(v.value0);
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Base (line 434, column 33 - line 436, column 247): " + [v.constructor.name]);
      };
    }
    ;
    if (otherwise) {
      return function(v) {
        if (!v.value1) {
          return fromPathToElementIdImpl1(v.value0);
        }
        ;
        if (v.value1) {
          return foldMapPath2("holeInterior-PathNil")(function(v1) {
            return function(str) {
              return show7(leftLength(v1.value1)) + ("-" + str);
            };
          })(v.value0);
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Base (line 437, column 17 - line 439, column 162): " + [v.constructor.name]);
      };
    }
    ;
    throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Base (line 432, column 1 - line 432, column 97): " + []);
  };
  var fromHoleyDerivPathToElementId = function(dictIsRuleLabel) {
    var fromHoleyDerivPathToElementIdImpl1 = fromHoleyDerivPathToElementIdImpl(dictIsRuleLabel);
    return function(prefix) {
      return function(path) {
        return prefix + fromHoleyDerivPathToElementIdImpl1(path);
      };
    };
  };
  var fromPathToElementId = function(dictIsExprLabel) {
    var fromPathToElementIdImpl1 = fromPathToElementIdImpl(dictIsExprLabel);
    return function(prefix) {
      return function(path) {
        return prefix + fromPathToElementIdImpl1(path);
      };
    };
  };

  // output/Data.Ratio/index.js
  var Ratio = /* @__PURE__ */ function() {
    function Ratio2(value0, value14) {
      this.value0 = value0;
      this.value1 = value14;
    }
    ;
    Ratio2.create = function(value0) {
      return function(value14) {
        return new Ratio2(value0, value14);
      };
    };
    return Ratio2;
  }();
  var reduce = function(dictOrd) {
    var gcd2 = gcd(dictOrd.Eq0());
    var signum2 = signum(dictOrd);
    var abs3 = abs(dictOrd);
    return function(dictEuclideanRing) {
      var gcd1 = gcd2(dictEuclideanRing);
      var div5 = div(dictEuclideanRing);
      var Ring0 = dictEuclideanRing.CommutativeRing0().Ring0();
      var mul2 = mul(Ring0.Semiring0());
      var signum1 = signum2(Ring0);
      var abs1 = abs3(Ring0);
      return function(n) {
        return function(d) {
          var g = gcd1(n)(d);
          var d$prime = div5(d)(g);
          return new Ratio(mul2(div5(n)(g))(signum1(d$prime)), abs1(d$prime));
        };
      };
    };
  };
  var semiringRatio = function(dictOrd) {
    var reduce1 = reduce(dictOrd);
    return function(dictEuclideanRing) {
      var Semiring0 = dictEuclideanRing.CommutativeRing0().Ring0().Semiring0();
      var one2 = one(Semiring0);
      var reduce22 = reduce1(dictEuclideanRing);
      var mul2 = mul(Semiring0);
      var add3 = add(Semiring0);
      return {
        one: new Ratio(one2, one2),
        mul: function(v) {
          return function(v1) {
            return reduce22(mul2(v.value0)(v1.value0))(mul2(v.value1)(v1.value1));
          };
        },
        zero: new Ratio(zero(Semiring0), one2),
        add: function(v) {
          return function(v1) {
            return reduce22(add3(mul2(v.value0)(v1.value1))(mul2(v.value1)(v1.value0)))(mul2(v.value1)(v1.value1));
          };
        }
      };
    };
  };
  var ringRatio = function(dictOrd) {
    var reduce1 = reduce(dictOrd);
    var semiringRatio1 = semiringRatio(dictOrd);
    return function(dictEuclideanRing) {
      var reduce22 = reduce1(dictEuclideanRing);
      var Ring0 = dictEuclideanRing.CommutativeRing0().Ring0();
      var sub3 = sub(Ring0);
      var mul2 = mul(Ring0.Semiring0());
      var semiringRatio2 = semiringRatio1(dictEuclideanRing);
      return {
        sub: function(v) {
          return function(v1) {
            return reduce22(sub3(mul2(v.value0)(v1.value1))(mul2(v.value1)(v1.value0)))(mul2(v.value1)(v1.value1));
          };
        },
        Semiring0: function() {
          return semiringRatio2;
        }
      };
    };
  };
  var eqRatio = function(dictEq) {
    var eq9 = eq(dictEq);
    return {
      eq: function(v) {
        return function(v1) {
          return eq9(v.value0)(v1.value0) && eq9(v.value1)(v1.value1);
        };
      }
    };
  };
  var ordRatio = function(dictOrd) {
    var ringRatio1 = ringRatio(dictOrd);
    var Eq0 = dictOrd.Eq0();
    var eq9 = eq(Eq0);
    var greaterThan2 = greaterThan(dictOrd);
    var eqRatio1 = eqRatio(Eq0);
    return function(dictEuclideanRing) {
      var sub3 = sub(ringRatio1(dictEuclideanRing));
      var zero2 = zero(dictEuclideanRing.CommutativeRing0().Ring0().Semiring0());
      return {
        compare: function(x) {
          return function(y) {
            var v = sub3(x)(y);
            var $130 = eq9(v.value0)(zero2);
            if ($130) {
              return EQ.value;
            }
            ;
            var v1 = greaterThan2(v.value1)(zero2);
            var v2 = greaterThan2(v.value0)(zero2);
            if (v2 && v1) {
              return GT.value;
            }
            ;
            if (!v2 && !v1) {
              return GT.value;
            }
            ;
            return LT.value;
          };
        },
        Eq0: function() {
          return eqRatio1;
        }
      };
    };
  };

  // output/Data.String.Pattern/index.js
  var Pattern = function(x) {
    return x;
  };

  // output/Data.Fuzzy/index.js
  var pure27 = /* @__PURE__ */ pure(applicativeArray);
  var distanceIsSymbol = {
    reflectSymbol: function() {
      return "distance";
    }
  };
  var originalIsSymbol = {
    reflectSymbol: function() {
      return "original";
    }
  };
  var ratioIsSymbol = {
    reflectSymbol: function() {
      return "ratio";
    }
  };
  var segmentsIsSymbol = {
    reflectSymbol: function() {
      return "segments";
    }
  };
  var genericEqConstructor3 = /* @__PURE__ */ genericEqConstructor(genericEqNoArguments);
  var genericEqSum4 = /* @__PURE__ */ genericEqSum(genericEqConstructor3);
  var genericEqSum1 = /* @__PURE__ */ genericEqSum4(/* @__PURE__ */ genericEqSum4(genericEqConstructor3));
  var reduce2 = /* @__PURE__ */ reduce(ordInt)(euclideanRingInt);
  var mempty4 = /* @__PURE__ */ mempty(monoidArray);
  var append11 = /* @__PURE__ */ append(/* @__PURE__ */ semigroupEither(semigroupString));
  var append18 = /* @__PURE__ */ append(semigroupArray);
  var sub1 = /* @__PURE__ */ sub(/* @__PURE__ */ ringRatio(ordInt)(euclideanRingInt));
  var foldl10 = /* @__PURE__ */ foldl(foldableArray);
  var map58 = /* @__PURE__ */ map(functorArray);
  var eqRatio2 = /* @__PURE__ */ eqRatio(eqInt);
  var eq6 = /* @__PURE__ */ eq(eqRatio2);
  var genericEqArgument2 = /* @__PURE__ */ genericEqArgument(eqInt);
  var genericEqProduct3 = /* @__PURE__ */ genericEqProduct(genericEqArgument2);
  var eqRec2 = /* @__PURE__ */ eqRec();
  var eqRowCons2 = /* @__PURE__ */ eqRowCons(eqRowNil)()(segmentsIsSymbol);
  var eqArray2 = /* @__PURE__ */ eqArray(/* @__PURE__ */ eqEither(eqString)(eqString));
  var genericOrdArgument2 = /* @__PURE__ */ genericOrdArgument(ordInt);
  var genericOrdProduct3 = /* @__PURE__ */ genericOrdProduct(genericOrdArgument2);
  var unwrap13 = /* @__PURE__ */ unwrap();
  var Full = /* @__PURE__ */ function() {
    function Full2() {
    }
    ;
    Full2.value = new Full2();
    return Full2;
  }();
  var Word = /* @__PURE__ */ function() {
    function Word2() {
    }
    ;
    Word2.value = new Word2();
    return Word2;
  }();
  var Char = /* @__PURE__ */ function() {
    function Char2() {
    }
    ;
    Char2.value = new Char2();
    return Char2;
  }();
  var Start = /* @__PURE__ */ function() {
    function Start2() {
    }
    ;
    Start2.value = new Start2();
    return Start2;
  }();
  var Prefix = /* @__PURE__ */ function() {
    function Prefix2() {
    }
    ;
    Prefix2.value = new Prefix2();
    return Prefix2;
  }();
  var Mid = /* @__PURE__ */ function() {
    function Mid2() {
    }
    ;
    Mid2.value = new Mid2();
    return Mid2;
  }();
  var Suffix = /* @__PURE__ */ function() {
    function Suffix2() {
    }
    ;
    Suffix2.value = new Suffix2();
    return Suffix2;
  }();
  var End = /* @__PURE__ */ function() {
    function End2() {
    }
    ;
    End2.value = new End2();
    return End2;
  }();
  var Distance = /* @__PURE__ */ function() {
    function Distance2(value0, value14, value23, value33, value42, value52) {
      this.value0 = value0;
      this.value1 = value14;
      this.value2 = value23;
      this.value3 = value33;
      this.value4 = value42;
      this.value5 = value52;
    }
    ;
    Distance2.create = function(value0) {
      return function(value14) {
        return function(value23) {
          return function(value33) {
            return function(value42) {
              return function(value52) {
                return new Distance2(value0, value14, value23, value33, value42, value52);
              };
            };
          };
        };
      };
    };
    return Distance2;
  }();
  var None2 = /* @__PURE__ */ function() {
    function None3() {
    }
    ;
    None3.value = new None3();
    return None3;
  }();
  var words = /* @__PURE__ */ function() {
    var regex$prime = regex("\\s+")(parseFlags("g"));
    return either(function($353) {
      return $$const(pure27($353));
    })(split2)(regex$prime);
  }();
  var semigroupDistance = {
    append: function(v) {
      return function(v1) {
        if (v instanceof None2) {
          return v1;
        }
        ;
        if (v1 instanceof None2) {
          return v;
        }
        ;
        if (v instanceof Distance && v1 instanceof Distance) {
          return new Distance(v.value0 + v1.value0 | 0, v.value1 + v1.value1 | 0, v.value2 + v1.value2 | 0, v.value3 + v1.value3 | 0, v.value4 + v1.value4 | 0, v.value5 + v1.value5 | 0);
        }
        ;
        throw new Error("Failed pattern match at Data.Fuzzy (line 78, column 1 - line 82, column 67): " + [v.constructor.name, v1.constructor.name]);
      };
    }
  };
  var append26 = /* @__PURE__ */ append(semigroupDistance);
  var scoreScope = /* @__PURE__ */ function() {
    return append26(new Distance(1, 0, 0, 0, 0, 0));
  }();
  var scoreDistance = function(v) {
    return function(v1) {
      if (v instanceof Start) {
        return new Distance(0, 0, 0, v1, 0, 0);
      }
      ;
      if (v instanceof Prefix) {
        return new Distance(0, 0, v1, 0, 0, 0);
      }
      ;
      if (v instanceof Mid) {
        return new Distance(0, v1, 0, 0, 0, 0);
      }
      ;
      if (v instanceof Suffix) {
        return new Distance(0, 0, 0, 0, v1, 0);
      }
      ;
      if (v instanceof End) {
        return new Distance(0, 0, 0, 0, 0, v1);
      }
      ;
      throw new Error("Failed pattern match at Data.Fuzzy (line 359, column 1 - line 359, column 40): " + [v.constructor.name, v1.constructor.name]);
    };
  };
  var monoidDistance = /* @__PURE__ */ function() {
    return {
      mempty: None2.value,
      Semigroup0: function() {
        return semigroupDistance;
      }
    };
  }();
  var mempty12 = /* @__PURE__ */ mempty(monoidDistance);
  var lastIndexOf$prime2 = function($354) {
    return lastIndexOf2(Pattern($354));
  };
  var indexOf$prime = function($355) {
    return indexOf2(Pattern($355));
  };
  var scoreWord = function(pos) {
    return function(distance) {
      return function(str) {
        var before = take4(distance)(str);
        var wordStart = length7(before) - (fromMaybe(-1 | 0)(lastIndexOf$prime2(" ")(before)) + 1 | 0) | 0;
        var after = length7(str);
        var wordEnd = fromMaybe(1 * after | 0)(indexOf$prime(" ")(str));
        if (pos instanceof Start) {
          return scoreDistance(Prefix.value)(wordStart);
        }
        ;
        if (pos instanceof End) {
          return scoreDistance(Suffix.value)(wordEnd);
        }
        ;
        return mempty12;
      };
    };
  };
  var genericScope = {
    to: function(x) {
      if (x instanceof Inl) {
        return Full.value;
      }
      ;
      if (x instanceof Inr && x.value0 instanceof Inl) {
        return Word.value;
      }
      ;
      if (x instanceof Inr && x.value0 instanceof Inr) {
        return Char.value;
      }
      ;
      throw new Error("Failed pattern match at Data.Fuzzy (line 149, column 1 - line 149, column 48): " + [x.constructor.name]);
    },
    from: function(x) {
      if (x instanceof Full) {
        return new Inl(NoArguments.value);
      }
      ;
      if (x instanceof Word) {
        return new Inr(new Inl(NoArguments.value));
      }
      ;
      if (x instanceof Char) {
        return new Inr(new Inr(NoArguments.value));
      }
      ;
      throw new Error("Failed pattern match at Data.Fuzzy (line 149, column 1 - line 149, column 48): " + [x.constructor.name]);
    }
  };
  var genericFuzzyStr = {
    to: function(x) {
      return x;
    },
    from: function(x) {
      return x;
    }
  };
  var genericDistance = {
    to: function(x) {
      if (x instanceof Inl) {
        return new Distance(x.value0.value0, x.value0.value1.value0, x.value0.value1.value1.value0, x.value0.value1.value1.value1.value0, x.value0.value1.value1.value1.value1.value0, x.value0.value1.value1.value1.value1.value1);
      }
      ;
      if (x instanceof Inr) {
        return None2.value;
      }
      ;
      throw new Error("Failed pattern match at Data.Fuzzy (line 73, column 1 - line 73, column 54): " + [x.constructor.name]);
    },
    from: function(x) {
      if (x instanceof Distance) {
        return new Inl(new Product(x.value0, new Product(x.value1, new Product(x.value2, new Product(x.value3, new Product(x.value4, x.value5))))));
      }
      ;
      if (x instanceof None2) {
        return new Inr(NoArguments.value);
      }
      ;
      throw new Error("Failed pattern match at Data.Fuzzy (line 73, column 1 - line 73, column 54): " + [x.constructor.name]);
    }
  };
  var eqScope = {
    eq: /* @__PURE__ */ genericEq(genericScope)(genericEqSum1)
  };
  var eq13 = /* @__PURE__ */ eq(eqScope);
  var matchStr = function(v) {
    return function(v1) {
      return function(v2) {
        if (v1 === "") {
          return {
            original: v2,
            segments: [new Left(v2)],
            distance: None2.value,
            ratio: reduce2(1)(1)
          };
        }
        ;
        var initialAcc = {
          substr: v2,
          pos: Start.value,
          fuzzy: {
            original: v2,
            segments: mempty4,
            distance: mempty12,
            ratio: reduce2(1)(1)
          }
        };
        var chars = length7(replaceAll(" ")("")(v1));
        var matchStr$prime = function(scope2) {
          return function(v3) {
            return function(pat) {
              var v4 = function() {
                if (v) {
                  return new Tuple(toLower(pat), toLower(v3.substr));
                }
                ;
                return new Tuple(pat, v3.substr);
              }();
              var nextRight = function(d) {
                return new Right(take4(length7(pat))(drop4(d)(v3.substr)));
              };
              var nextLeft = function(d) {
                if (d === 0) {
                  return mempty4;
                }
                ;
                return [new Left(take4(d)(v3.substr))];
              };
              var nextSegment = function(d) {
                var v52 = new Tuple(d, unsnoc(v3.fuzzy.segments));
                if (v52.value0 === 0 && v52.value1 instanceof Just) {
                  return snoc(v52.value1.value0.init)(append11(v52.value1.value0.last)(nextRight(d)));
                }
                ;
                return append18(v3.fuzzy.segments)(append18(nextLeft(d))([nextRight(d)]));
              };
              var nextDistance = function(d) {
                var v52 = new Tuple(scope2, v3.pos);
                if (v52.value0 instanceof Word && v52.value1 instanceof Mid) {
                  return append26(v3.fuzzy.distance)(scoreDistance(Start.value)(d));
                }
                ;
                return append26(v3.fuzzy.distance)(append26(scoreDistance(v3.pos)(d))(scoreWord(v3.pos)(d)(v4.value1)));
              };
              var nextAcc = function(p2) {
                return {
                  substr: v3.substr,
                  pos: p2,
                  fuzzy: {
                    original: v3.fuzzy.original,
                    segments: v3.fuzzy.segments,
                    distance: scoreScope(v3.fuzzy.distance),
                    ratio: function() {
                      var $321 = eq13(scope2)(Char.value);
                      if ($321) {
                        return sub1(v3.fuzzy.ratio)(reduce2(1)(chars));
                      }
                      ;
                      return v3.fuzzy.ratio;
                    }()
                  }
                };
              };
              var v5 = indexOf$prime(v4.value0)(v4.value1);
              if (v5 instanceof Just) {
                return {
                  substr: drop4(v5.value0 + length7(pat) | 0)(v3.substr),
                  pos: Mid.value,
                  fuzzy: {
                    original: v3.fuzzy.original,
                    segments: nextSegment(v5.value0),
                    distance: nextDistance(v5.value0),
                    ratio: v3.fuzzy.ratio
                  }
                };
              }
              ;
              if (v5 instanceof Nothing) {
                if (scope2 instanceof Full) {
                  return foldl10(matchStr$prime(Word.value))(nextAcc(Start.value))(words(pat));
                }
                ;
                if (scope2 instanceof Word) {
                  return foldl10(matchStr$prime(Char.value))(nextAcc(Start.value))(map58(singleton8)(toCodePointArray(pat)));
                }
                ;
                if (scope2 instanceof Char) {
                  return nextAcc(v3.pos);
                }
                ;
                throw new Error("Failed pattern match at Data.Fuzzy (line 238, column 11 - line 241, column 32): " + [scope2.constructor.name]);
              }
              ;
              throw new Error("Failed pattern match at Data.Fuzzy (line 226, column 7 - line 241, column 32): " + [v5.constructor.name]);
            };
          };
        };
        var after = function(v3) {
          var nextSegment = function() {
            if (v3.substr === "") {
              return v3.fuzzy.segments;
            }
            ;
            return snoc(v3.fuzzy.segments)(new Left(v3.substr));
          }();
          var nextDistance = function() {
            if (eq6(v3.fuzzy.ratio)(reduce2(0)(1))) {
              return v3.fuzzy.distance;
            }
            ;
            if (otherwise) {
              return append26(v3.fuzzy.distance)(append26(scoreDistance(End.value)(length7(v3.substr)))(scoreWord(End.value)(0)(v3.substr)));
            }
            ;
            throw new Error("Failed pattern match at Data.Fuzzy (line 287, column 11 - line 287, column 35): " + []);
          }();
          return {
            original: v3.fuzzy.original,
            segments: nextSegment,
            distance: nextDistance,
            ratio: v3.fuzzy.ratio
          };
        };
        return after(foldl10(matchStr$prime(Full.value))(initialAcc)([v1]));
      };
    };
  };
  var eqDistance = {
    eq: /* @__PURE__ */ genericEq(genericDistance)(/* @__PURE__ */ genericEqSum(/* @__PURE__ */ genericEqConstructor(/* @__PURE__ */ genericEqProduct3(/* @__PURE__ */ genericEqProduct3(/* @__PURE__ */ genericEqProduct3(/* @__PURE__ */ genericEqProduct3(/* @__PURE__ */ genericEqProduct3(genericEqArgument2)))))))(genericEqConstructor3))
  };
  var eqFuzzyStr = {
    eq: /* @__PURE__ */ genericEq(genericFuzzyStr)(/* @__PURE__ */ genericEqConstructor(/* @__PURE__ */ genericEqArgument(/* @__PURE__ */ eqRec2(/* @__PURE__ */ eqRowCons(/* @__PURE__ */ eqRowCons(/* @__PURE__ */ eqRowCons(/* @__PURE__ */ eqRowCons2(eqArray2))()(ratioIsSymbol)(eqRatio2))()(originalIsSymbol)(eqString))()(distanceIsSymbol)(eqDistance)))))
  };
  var ordDistance = {
    compare: /* @__PURE__ */ genericCompare(genericDistance)(/* @__PURE__ */ genericOrdSum(/* @__PURE__ */ genericOrdConstructor(/* @__PURE__ */ genericOrdProduct3(/* @__PURE__ */ genericOrdProduct3(/* @__PURE__ */ genericOrdProduct3(/* @__PURE__ */ genericOrdProduct3(/* @__PURE__ */ genericOrdProduct3(genericOrdArgument2)))))))(/* @__PURE__ */ genericOrdConstructor(genericOrdNoArguments))),
    Eq0: function() {
      return eqDistance;
    }
  };
  var compare7 = /* @__PURE__ */ compare(ordDistance);
  var ordFuzzyStr = {
    compare: /* @__PURE__ */ on(compare7)(function($359) {
      return function(v) {
        return v.distance;
      }(unwrap13($359));
    }),
    Eq0: function() {
      return eqFuzzyStr;
    }
  };

  // output/Data.Rational/index.js
  var reduce3 = /* @__PURE__ */ reduce(ordInt)(euclideanRingInt);
  var fromInt = function(i2) {
    return reduce3(i2)(1);
  };

  // output/Language.Pantograph.Generic.Rendering.Elements/index.js
  var newlineElem = br_;
  var makePuncElem = function(className2) {
    return function(symbol) {
      return div2([classNames(["subnode", "punctuation", className2])])([text5(symbol)]);
    };
  };
  var rbraceElem = /* @__PURE__ */ makePuncElem("rbrace")("}");
  var rbracketElem = /* @__PURE__ */ makePuncElem("rbracket")("]");
  var rparenElem = /* @__PURE__ */ makePuncElem("rparen")(")");
  var spaceElem = /* @__PURE__ */ makePuncElem("space")(" ");
  var placeholderCursorNodeElem = /* @__PURE__ */ div2([/* @__PURE__ */ classNames(["node", "placeholderCursor"])])([/* @__PURE__ */ div2([/* @__PURE__ */ classNames(["subnode", "placeholderCursor-inner"])])([spaceElem])]);
  var upArrowElem = /* @__PURE__ */ makePuncElem("upArrow")("\u2191");
  var lparenElem = /* @__PURE__ */ makePuncElem("lparen")("(");
  var lbracketElem = /* @__PURE__ */ makePuncElem("lbracket")("[");
  var lbraceElem = /* @__PURE__ */ makePuncElem("lbrace")("{");
  var interrogativeElem = /* @__PURE__ */ makePuncElem("interrogative")("?");
  var downArrowElem = /* @__PURE__ */ makePuncElem("downArrow")("\u2193");
  var colonElem = /* @__PURE__ */ makePuncElem("colon")(":");

  // output/Web.UIEvent.MouseEvent/foreign.js
  function buttons(e) {
    return e.buttons;
  }

  // output/Web.UIEvent.MouseEvent/index.js
  var toEvent = unsafeCoerce2;

  // output/Language.Pantograph.Generic.Rendering.Buffer/index.js
  var mod3 = /* @__PURE__ */ mod(euclideanRingInt);
  var pure28 = /* @__PURE__ */ pure(applicativeEither);
  var map59 = /* @__PURE__ */ map(functorArray);
  var lessThan2 = /* @__PURE__ */ lessThan(/* @__PURE__ */ ordRatio(ordInt)(euclideanRingInt));
  var compare8 = /* @__PURE__ */ compare(ordFuzzyStr);
  var append19 = /* @__PURE__ */ append(semigroupArray);
  var show8 = /* @__PURE__ */ show(showInt);
  var discard11 = /* @__PURE__ */ discard(discardUnit)(bindHookM);
  var pure112 = /* @__PURE__ */ pure(applicativeHookM);
  var bind29 = /* @__PURE__ */ bind(bindHookM);
  var map120 = /* @__PURE__ */ map(functorHookM);
  var $$void13 = /* @__PURE__ */ $$void(functorHookM);
  var map214 = /* @__PURE__ */ map(functorMaybe);
  var mapFlipped6 = /* @__PURE__ */ mapFlipped(functorMaybe);
  var liftEffect8 = /* @__PURE__ */ liftEffect(/* @__PURE__ */ monadEffectHookM(monadEffectAff));
  var on7 = /* @__PURE__ */ on2();
  var on13 = /* @__PURE__ */ on7({
    reflectSymbol: function() {
      return "down";
    }
  });
  var on24 = /* @__PURE__ */ on7({
    reflectSymbol: function() {
      return "up";
    }
  });
  var type_19 = /* @__PURE__ */ type_17(isPropInputType);
  var pure29 = /* @__PURE__ */ pure(applicativeArray);
  var extractBufferPreState = function(dictIsRuleLabel) {
    return function(v) {
      return {
        isEnabled: v.isEnabled,
        bufferString: v.bufferString,
        bufferFocus: v.bufferFocus
      };
    };
  };
  var computeNormalBufferFocus = function(v) {
    return mod3(v.bufferFocus)(length5(v.edits));
  };
  var computeFocussedEdit = function(v) {
    if (v.isEnabled) {
      return index3(v.edits)(v.normalBufferFocus);
    }
    ;
    return Nothing.value;
  };
  var computeEdits = function(dictIsRuleLabel) {
    return function(input3) {
      return function(v) {
        if (v.mb_oldString instanceof Just) {
          return [{
            edit: {
              label: v.bufferString,
              action: pure28(defer3(function(v1) {
                return new ReplaceAction({
                  topChange: injectChange(new MInj(new TypeOfLabel(SortString.value)))([replaceChange(pureMetaExpr(new DataLabel(new DataString(v.mb_oldString.value0)))([]))(pureMetaExpr(new DataLabel(new DataString(v.bufferString)))([]))]),
                  dterm: new Expr(new DerivLiteral(new DataString(v.bufferString)), [])
                });
              }))
            },
            lazy_preview: defer3(function(v1) {
              return new FillEditPreview(text5(v.bufferString));
            })
          }];
        }
        ;
        if (v.mb_oldString instanceof Nothing) {
          var sortedMatchingEdits = function() {
            var $176 = map59(snd);
            var $177 = sortBy(function(v1) {
              return function(v2) {
                return compare8(v1.value0)(v2.value0);
              };
            });
            var $178 = filter2(function(v1) {
              if (v1.value0.distance instanceof None2) {
                return false;
              }
              ;
              if (v1.value0.distance instanceof Distance) {
                return lessThan2(fromInt(0))(v1.value0.ratio) && v1.value0.distance.value2 === 0;
              }
              ;
              throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Buffer (line 85, column 45 - line 87, column 178): " + [v1.value0.distance.constructor.name]);
            });
            return function($179) {
              return $176($177($178($179)));
            };
          }()(map59(function(v1) {
            return new Tuple(matchStr(true)(v.bufferString)(v1.edit.label), v1);
          })(input3.edits));
          var extraEdits = input3.extraEdits(v.bufferString);
          var extraEditsAndPreviews = map59(function(edit) {
            return {
              edit,
              lazy_preview: defer3(function(v1) {
                return new FillEditPreview(text5(v.bufferString));
              })
            };
          })(extraEdits);
          return append19(extraEditsAndPreviews)(sortedMatchingEdits);
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Buffer (line 60, column 3 - line 96, column 51): " + [v.mb_oldString.constructor.name]);
      };
    };
  };
  var computeBufferState = function(dictIsRuleLabel) {
    var computeEdits1 = computeEdits(dictIsRuleLabel);
    return function(input3) {
      return function(v) {
        var mb_oldString = function() {
          if (input3.hdzipper.value0.value1.value0 instanceof DerivLiteral && (input3.hdzipper.value0.value1.value0.value0 instanceof DataString && !input3.hdzipper.value1)) {
            return new Just(input3.hdzipper.value0.value1.value0.value0.value0);
          }
          ;
          if (input3.hdzipper.value0.value1.value0 instanceof DerivLiteral && (input3.hdzipper.value0.value1.value0.value0 instanceof DataInt && !input3.hdzipper.value1)) {
            return new Just(show8(input3.hdzipper.value0.value1.value0.value0.value0));
          }
          ;
          return Nothing.value;
        }();
        var edits = computeEdits1(input3)({
          bufferString: v.bufferString,
          mb_oldString
        });
        var normalBufferFocus = computeNormalBufferFocus({
          bufferFocus: v.bufferFocus,
          edits
        });
        var focussedEdit = computeFocussedEdit({
          isEnabled: v.isEnabled,
          normalBufferFocus,
          edits
        });
        return {
          isEnabled: v.isEnabled,
          bufferString: v.bufferString,
          bufferFocus: v.bufferFocus,
          normalBufferFocus,
          edits,
          focussedEdit,
          mb_oldString
        };
      };
    };
  };
  var bufferInputRefLabelString = "buffer-input";
  var bufferInputRefLabel = bufferInputRefLabelString;
  var bufferComponent = function(dictIsRuleLabel) {
    var computeBufferState1 = computeBufferState(dictIsRuleLabel);
    var extractBufferPreState1 = extractBufferPreState(dictIsRuleLabel);
    return component(function(tokens) {
      return function(input3) {
        return bind19(useState(computeBufferState1(input3)({
          isEnabled: false,
          bufferString: "",
          bufferFocus: 0
        })))(function(v) {
          var setPreview = function(mb_preview) {
            return raise2(tokens.outputToken)(new SetPreviewOutput(mb_preview));
          };
          var put3 = function(_st) {
            var st = computeBufferState1(input3)(_st);
            return discard11(put2(v.value1)(st))(function() {
              return discard11(function() {
                if (st.focussedEdit instanceof Nothing) {
                  return setPreview(Nothing.value);
                }
                ;
                if (st.focussedEdit instanceof Just) {
                  return setPreview(new Just(force(st.focussedEdit.value0.lazy_preview)));
                }
                ;
                throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Buffer (line 172, column 7 - line 174, column 70): " + [st.focussedEdit.constructor.name]);
              }())(function() {
                return pure112(st);
              });
            });
          };
          var get8 = get3(v.value1);
          var modify7 = function(f) {
            return bind29(map120(extractBufferPreState1)(get8))(function(st) {
              var st$prime = f(st);
              return put3(st$prime);
            });
          };
          var submitBuffer = function(v1) {
            return bind29(get8)(function(st) {
              var v2 = new Tuple(st.isEnabled, st.focussedEdit);
              if (v2.value0 && v2.value1 instanceof Just) {
                if (v2.value1.value0.edit.action instanceof Right) {
                  return discard11($$void13(modify7(function(v3) {
                    return {
                      bufferString: v3.bufferString,
                      isEnabled: false,
                      bufferFocus: 0
                    };
                  })))(function() {
                    return discard11(setPreview(Nothing.value))(function() {
                      return discard11(raise2(tokens.outputToken)(new ActionOutput(force(v2.value1.value0.edit.action.value0))))(function() {
                        return pure112(true);
                      });
                    });
                  });
                }
                ;
                if (v2.value1.value0.edit.action instanceof Left) {
                  return pure112(false);
                }
                ;
                throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Buffer (line 188, column 13 - line 198, column 37): " + [v2.value1.value0.edit.action.constructor.name]);
              }
              ;
              return pure112(false);
            });
          };
          var modifyBufferFocus = function(f) {
            return bind29(modify7(function(st) {
              return {
                isEnabled: st.isEnabled,
                bufferString: st.bufferString,
                bufferFocus: f(st.bufferFocus)
              };
            }))(function(st) {
              return setPreview(map214(force)(mapFlipped6(st.focussedEdit)(function(v1) {
                return v1.lazy_preview;
              })));
            });
          };
          return discard8(useQuery(tokens.queryToken)(function(v1) {
            if (v1 instanceof SetBufferEnabledQuery) {
              return discard11($$void13(modify7(function(v2) {
                return {
                  bufferString: v2.bufferString,
                  bufferFocus: v2.bufferFocus,
                  isEnabled: v1.value0
                };
              })))(function() {
                return discard11(function() {
                  if (v1.value0) {
                    return bind29(getHTMLElementRef2(bufferInputRefLabel))(function(mb_elem) {
                      return assert(just("could not find element with ref ExprLabel: " + bufferInputRefLabelString)(mb_elem))(function() {
                        return function(elem4) {
                          return discard11(liftEffect8(focus(elem4)))(function() {
                            if (v1.value1 instanceof Nothing) {
                              return pure112(unit);
                            }
                            ;
                            if (v1.value1 instanceof Just) {
                              return assert(just("could not find element with ref ExprLabel: " + bufferInputRefLabelString)(fromElement2(toElement(elem4))))(function() {
                                return function(inputElem) {
                                  return discard11(liftEffect8(setValue3(v1.value1.value0)(inputElem)))(function() {
                                    return $$void13(modify7(function(v2) {
                                      return {
                                        isEnabled: v2.isEnabled,
                                        bufferString: v1.value1.value0,
                                        bufferFocus: 0
                                      };
                                    }));
                                  });
                                };
                              });
                            }
                            ;
                            throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Buffer (line 217, column 15 - line 227, column 26): " + [v1.value1.constructor.name]);
                          });
                        };
                      });
                    });
                  }
                  ;
                  return setPreview(Nothing.value);
                }())(function() {
                  return pure112(new Just(v1.value2));
                });
              });
            }
            ;
            if (v1 instanceof MoveBufferQuery) {
              return bind29(get8)(function(st) {
                if (st.isEnabled) {
                  return discard11(function(v2) {
                    return v2(v1.value0);
                  }(on13(_down)(function(v2) {
                    return modifyBufferFocus(function(v3) {
                      return v3 + 1 | 0;
                    });
                  })(on24(_up)(function(v2) {
                    return modifyBufferFocus(function(v3) {
                      return v3 - 1 | 0;
                    });
                  })(case_))))(function() {
                    return pure112(new Just(v1.value1));
                  });
                }
                ;
                return pure112(Nothing.value);
              });
            }
            ;
            if (v1 instanceof SubmitBufferQuery) {
              return bind29(submitBuffer(unit))(function(v2) {
                if (!v2) {
                  return pure112(Nothing.value);
                }
                ;
                if (v2) {
                  return pure112(new Just(v1.value0));
                }
                ;
                throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Buffer (line 250, column 29 - line 252, column 30): " + [v2.constructor.name]);
              });
            }
            ;
            throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Buffer (line 205, column 33 - line 252, column 30): " + [v1.constructor.name]);
          }))(function() {
            return pure14(div2([classNames(["subnode", "buffer"])])(concat2([function() {
              var $158 = !v.value0.isEnabled;
              if ($158) {
                return [];
              }
              ;
              return [div2([classNames(["buffer-inner"])])(concat2([[input2([classNames(["buffer-input"]), autofocus6(true), ref2(bufferInputRefLabel), type_19(InputText.value), onInput(function(event) {
                return bind29(liftEffect8(fromInputEventToTargetValue(event)))(function(bufferString$prime) {
                  return $$void13(modify7(function(v1) {
                    return {
                      isEnabled: v1.isEnabled,
                      bufferString: bufferString$prime,
                      bufferFocus: 0
                    };
                  }));
                });
              })])], function() {
                if (v.value0.mb_oldString instanceof Just) {
                  return [];
                }
                ;
                if (v.value0.mb_oldString instanceof Nothing) {
                  return pure29(div2([classNames(["buffer-results"])])(flip(mapWithIndex3)(v.value0.edits)(function(i2) {
                    return function(v1) {
                      return div2([classNames(append19(["buffer-result"])(function() {
                        var $162 = i2 === v.value0.normalBufferFocus;
                        if ($162) {
                          return ["buffer-focus"];
                        }
                        ;
                        return [];
                      }())), onMouseMove(function(event) {
                        return discard11(liftEffect8(preventDefault(toEvent(event))))(function() {
                          return $$void13(modify7(function(v2) {
                            return {
                              isEnabled: v2.isEnabled,
                              bufferString: v2.bufferString,
                              bufferFocus: i2
                            };
                          }));
                        });
                      }), onMouseDown(function(event) {
                        return discard11(liftEffect8(preventDefault(toEvent(event))))(function() {
                          return discard11($$void13(modify7(function(v2) {
                            return {
                              isEnabled: v2.isEnabled,
                              bufferString: v2.bufferString,
                              bufferFocus: i2
                            };
                          })))(function() {
                            return $$void13(submitBuffer(unit));
                          });
                        });
                      })])(function() {
                        if (v1.edit.action instanceof Right) {
                          var v2 = force(v1.lazy_preview);
                          if (v2 instanceof FillEditPreview) {
                            return [v2.value0];
                          }
                          ;
                          if (v2 instanceof WrapEditPreview) {
                            return append19(v2.value0.before)(append19([placeholderCursorNodeElem])(v2.value0.after));
                          }
                          ;
                          if (v2 instanceof ReplaceEditPreview) {
                            return [v2.value0];
                          }
                          ;
                          throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Buffer (line 303, column 40 - line 306, column 74): " + [v2.constructor.name]);
                        }
                        ;
                        if (v1.edit.action instanceof Left) {
                          return [text5(v1.edit.label + (": " + v1.edit.action.value0))];
                        }
                        ;
                        throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Buffer (line 301, column 28 - line 307, column 98): " + [v1.edit.action.constructor.name]);
                      }());
                    };
                  })));
                }
                ;
                throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Buffer (line 285, column 17 - line 307, column 99): " + [v.value0.mb_oldString.constructor.name]);
              }()]))];
            }()])));
          });
        });
      };
    });
  };

  // output/Language.Pantograph.Generic.Rendering.Preview/index.js
  var empty11 = /* @__PURE__ */ empty(plusMaybe);
  var discard13 = /* @__PURE__ */ discard(discardUnit)(bindHookM);
  var pure30 = /* @__PURE__ */ pure(applicativeHookM);
  var on8 = /* @__PURE__ */ on2();
  var on14 = /* @__PURE__ */ on8({
    reflectSymbol: function() {
      return "right";
    }
  });
  var on25 = /* @__PURE__ */ on8({
    reflectSymbol: function() {
      return "left";
    }
  });
  var previewComponent = /* @__PURE__ */ component(function(tokens) {
    return function(dir2) {
      return bind19(useState(empty11))(function(v) {
        return discard8(useQuery(tokens.queryToken)(function(v1) {
          return discard13(put2(v.value1)(v1.value0))(function() {
            return pure30(new Just(v1.value1));
          });
        }))(function() {
          return pure14(function() {
            if (v.value0 instanceof Nothing) {
              return span3([classNames(["preview", "empty"])])([]);
            }
            ;
            if (v.value0 instanceof Just && v.value0.value0 instanceof ReplaceEditPreview) {
              return on14(_right)(function(v1) {
                return span3([classNames(["preview", "replace"])])([]);
              })(on25(_left)(function(v1) {
                return span3([classNames(["preview", "replace"])])([v.value0.value0.value0]);
              })(case_))(dir2);
            }
            ;
            if (v.value0 instanceof Just && v.value0.value0 instanceof FillEditPreview) {
              return on14(_right)(function(v1) {
                return span3([classNames(["preview", "empty"])])([]);
              })(on25(_left)(function(v1) {
                return span3([classNames(["preview", "fill"])])([v.value0.value0.value0]);
              })(case_))(dir2);
            }
            ;
            if (v.value0 instanceof Just && v.value0.value0 instanceof WrapEditPreview) {
              return on14(_right)(function(v1) {
                return span3([classNames(["preview", "wrap", "after"])])(v.value0.value0.value0.after);
              })(on25(_left)(function(v1) {
                return span3([classNames(["preview", "wrap", "before"])])(v.value0.value0.value0.before);
              })(case_))(dir2);
            }
            ;
            throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Preview (line 45, column 5 - line 58, column 16): " + [v.value0.constructor.name]);
          }());
        });
      });
    };
  });

  // output/Language.Pantograph.Generic.Rendering.Rendering/index.js
  var fromFoldable18 = /* @__PURE__ */ fromFoldable3(foldableSet);
  var insert14 = /* @__PURE__ */ insert7(ordString);
  var zipDowns4 = /* @__PURE__ */ zipDowns(zippableZipper);
  var mapFlipped7 = /* @__PURE__ */ mapFlipped(functorArray);
  var fromFoldable19 = /* @__PURE__ */ fromFoldable3(foldableList);
  var append20 = /* @__PURE__ */ append(semigroupArray);
  var slot3 = /* @__PURE__ */ slot()({
    reflectSymbol: function() {
      return "buffer";
    }
  })(ordUnit);
  var slot_2 = /* @__PURE__ */ slot_()({
    reflectSymbol: function() {
      return "preview";
    }
  })(/* @__PURE__ */ ordVariant()(/* @__PURE__ */ variantTagsCons(/* @__PURE__ */ variantTagsCons(variantTagsNil)({
    reflectSymbol: function() {
      return "right";
    }
  }))({
    reflectSymbol: function() {
      return "left";
    }
  }))(/* @__PURE__ */ eqVariantCons(/* @__PURE__ */ eqVariantCons(eqVariantNil)(eqProxy))(eqProxy))(/* @__PURE__ */ ordVariantCons(/* @__PURE__ */ ordVariantCons(ordVariantNil)(ordProxy))(ordProxy)));
  var show9 = /* @__PURE__ */ show(showInt);
  var mapFlipped12 = /* @__PURE__ */ mapFlipped(functorPath);
  var show14 = /* @__PURE__ */ show(showString);
  var map60 = /* @__PURE__ */ map(functorArray);
  var applyCssClasses = function(classes2) {
    return function(html2) {
      var $106 = isEmpty3(classes2);
      if ($106) {
        return html2;
      }
      ;
      return div2([classNames(fromFoldable18(insert14("node")(classes2)))])([html2]);
    };
  };
  var renderPreviewDerivTooth = function(dictIsRuleLabel) {
    var getSortFromSub2 = getSortFromSub(dictIsRuleLabel);
    var isExprLabelDerivLabel2 = isExprLabelDerivLabel(dictIsRuleLabel);
    var wellformedExprF2 = wellformedExprF(isExprLabelDerivLabel2);
    var pretty7 = pretty(prettyExpr(isExprLabelDerivLabel2));
    return function(locs) {
      return function(up) {
        return function(v) {
          return function(dterm) {
            var v1 = function() {
              if (v.value0 instanceof DerivLabel) {
                return new Tuple(v.value0.value0, v.value0.value1);
              }
              ;
              if (v.value0 instanceof DerivLiteral) {
                return bug("in `renderPreviewDerivTooth`: should not have a tooth with a non-DerivLabel DerivLabel");
              }
              ;
              throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Rendering (line 245, column 23 - line 247, column 119): " + [v.value0.constructor.name]);
            }();
            var dzipper = new Zipper(up, unTooth(v)(dterm));
            var kidDZippers = zipDowns4(dzipper);
            var kidElems = mapFlipped7(kidDZippers)(function(dzipper$prime) {
              return defer3(function(v2) {
                return renderPreviewDerivTerm(dictIsRuleLabel)(locs)(dzipper$prime);
              });
            });
            var renderSubElem = function(v2) {
              if (v2 instanceof Left) {
                return [applyCssClasses(v2.value0.value0.cssClasses)(force(fromJust$prime("renderPreviewDerivTooth")(index3(kidElems)(v2.value0.value1))))];
              }
              ;
              if (v2 instanceof Right) {
                return v2.value0;
              }
              ;
              throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Rendering (line 255, column 23 - line 259, column 29): " + [v2.constructor.name]);
            };
            var kids = fromFoldable19(unpathAround(dterm)(v.value1));
            var sort2 = getSortFromSub2(v1.value0)(v1.value1);
            var subCtxSymElems = assert(wellformedExprF2("renderPreviewDerivTooth")(pretty7)(new Tuple(new DerivLabel(v1.value0, v1.value1), kids)))(function() {
              return function(v2) {
                return locs.spec.arrangeDerivTermSubs(unit)()({
                  mb_parent: zipperParent(dzipper),
                  renCtx: previewRenderingContext("shouldn't get used"),
                  rule: v1.value0,
                  sort: sort2,
                  sigma: v1.value1,
                  dzipper: new Just(dzipper),
                  renderTerm: renderDerivTerm(dictIsRuleLabel)(trivialEditorLocals(locs.spec))(false)(false)
                });
              };
            });
            var toothInteriorKidIx = leftLength(v.value1);
            var isToothInterior = function(v2) {
              if (v2 instanceof Left) {
                return v2.value0.value1 === toothInteriorKidIx;
              }
              ;
              return false;
            };
            var toothInteriorSymElemIx = fromJust$prime("renderPreviewDerivTooth")(findIndex(isToothInterior)(subCtxSymElems));
            var before = take(toothInteriorSymElemIx)(subCtxSymElems);
            var after = drop(toothInteriorSymElemIx + 1 | 0)(subCtxSymElems);
            return {
              before: concat2(mapFlipped7(before)(renderSubElem)),
              after: concat2(mapFlipped7(after)(renderSubElem))
            };
          };
        };
      };
    };
  };
  var renderPreviewDerivTerm = function(dictIsRuleLabel) {
    return function(locs) {
      return function(dzipper) {
        return div2([classNames(["node"])])(arrangeDerivTermSubs(dictIsRuleLabel)(locs)(false)(dzipper)(mapFlipped7(zipDowns4(dzipper))(function(kidDZipper) {
          return function(v) {
            return renderPreviewDerivTerm(dictIsRuleLabel)(locs)(kidDZipper);
          };
        }))(previewRenderingContext("shouldn't get used")));
      };
    };
  };
  var renderPreviewDerivPath = function(dictIsRuleLabel) {
    return function(v) {
      return function(v1) {
        return function(v2) {
          return function(v3) {
            if (v2 instanceof Nil) {
              return {
                before: [],
                after: []
              };
            }
            ;
            if (v2 instanceof Cons) {
              var next2 = renderPreviewDerivPath(dictIsRuleLabel)(v)(v1)(v2.value1)(unTooth(v2.value0)(v3));
              var v4 = renderPreviewDerivTooth(dictIsRuleLabel)(v)(v1)(v2.value0)(v3);
              return {
                before: append20(next2.before)(v4.before),
                after: append20(v4.after)(next2.after)
              };
            }
            ;
            throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Rendering (line 224, column 1 - line 229, column 70): " + [v.constructor.name, v1.constructor.name, v2.constructor.name, v3.constructor.name]);
          };
        };
      };
    };
  };
  var renderPreview = function(dictIsRuleLabel) {
    var hdzipperDerivTerm2 = hdzipperDerivTerm(dictIsRuleLabel);
    return function(locs) {
      return function(hdzipper) {
        return function(edit) {
          return defer3(function(v) {
            if (edit.action instanceof Left) {
              return new WrapEditPreview({
                before: [],
                after: []
              });
            }
            ;
            if (edit.action instanceof Right) {
              var v1 = force(edit.action.value0);
              if (v1 instanceof FillAction) {
                return new FillEditPreview(renderPreviewDerivTerm(dictIsRuleLabel)(locs)(new Zipper(hdzipperDerivPath(hdzipper), v1.value0.dterm)));
              }
              ;
              if (v1 instanceof ReplaceAction) {
                return new ReplaceEditPreview(renderPreviewDerivTerm(dictIsRuleLabel)(locs)(new Zipper(hdzipperDerivPath(hdzipper), v1.value0.dterm)));
              }
              ;
              if (v1 instanceof WrapAction) {
                return new WrapEditPreview(renderPreviewDerivPath(dictIsRuleLabel)(locs)(hdzipperDerivPath(hdzipper))(v1.value0.dpath)(hdzipperDerivTerm2(hdzipper)));
              }
              ;
              throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Rendering (line 219, column 25 - line 222, column 146): " + [v1.constructor.name]);
            }
            ;
            throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Rendering (line 216, column 5 - line 222, column 146): " + [edit.action.constructor.name]);
          });
        };
      };
    };
  };
  var renderHoleInterior = function(dictIsRuleLabel) {
    var fromHoleyDerivPathToElementId2 = fromHoleyDerivPathToElementId(dictIsRuleLabel);
    return function(locs) {
      return function(isCursor) {
        return function(dzipper) {
          return function(renCtx) {
            var hdzipper = new HoleyDerivZipper(dzipper, true);
            var hdpath = hdzipperHoleyDerivPath(hdzipper);
            return div2(concat2([[classNames(append20(["node", "holeInterior"])(function() {
              if (isCursor) {
                return [cursorClassName];
              }
              ;
              return [];
            }()))], function() {
              var $149 = !renCtx.isInteractive;
              if ($149) {
                return [];
              }
              ;
              var elemId = fromHoleyDerivPathToElementId2(renCtx.pathIdPrefix)(hdpath);
              return [id2(elemId), onMouseDown(locs.onMouseDown(new HoleyDerivZipper(dzipper, true))), onMouseOver(locs.onMouseOver(new HoleyDerivZipper(dzipper, true)))];
            }()]))(arrangeNodeSubs(dictIsRuleLabel)(locs)(isCursor)(hdzipper)([div2([classNames(["subnode", "holeInterior-inner"])])([text5(" ")])]));
          };
        };
      };
    };
  };
  var renderDerivTerm = function(dictIsRuleLabel) {
    var fromPathToElementId2 = fromPathToElementId(isExprLabelDerivLabel(dictIsRuleLabel));
    return function(locs) {
      return function(isCursor) {
        return function(innerHoleIsCursor) {
          return function(dzipper) {
            return function(renCtx) {
              var isEmptyString = function(v) {
                if (v.value1.value0 instanceof DerivLiteral && (v.value1.value0.value0 instanceof DataString && $$null2(v.value1.value0.value0.value0))) {
                  return true;
                }
                ;
                return false;
              };
              return div2(concat2([[classNames(append20(["node"])(append20(function() {
                if (isCursor) {
                  return [cursorClassName];
                }
                ;
                return [];
              }())(function() {
                var $158 = isEmptyString(dzipper);
                if ($158) {
                  return [emptyStringClassName];
                }
                ;
                return [];
              }())))], function() {
                var $159 = !renCtx.isInteractive;
                if ($159) {
                  return [];
                }
                ;
                var elemId = fromPathToElementId2(renCtx.pathIdPrefix)(zipperPath(dzipper));
                return [id2(elemId), onMouseDown(locs.onMouseDown(injectHoleyDerivZipper(dzipper))), onMouseOver(locs.onMouseOver(injectHoleyDerivZipper(dzipper)))];
              }()]))(arrangeNodeSubs(dictIsRuleLabel)(locs)(isCursor)(injectHoleyDerivZipper(dzipper))(arrangeDerivTermSubs(dictIsRuleLabel)(locs)(innerHoleIsCursor)(dzipper)(mapFlipped7(zipDowns4(dzipper))(renderDerivTerm(dictIsRuleLabel)(locs)(false)(false)))(renCtx)));
            };
          };
        };
      };
    };
  };
  var arrangeNodeSubs = function(dictIsRuleLabel) {
    var bufferComponent2 = bufferComponent(dictIsRuleLabel);
    var editsAtHoleyDerivZipper2 = editsAtHoleyDerivZipper(dictIsRuleLabel);
    var derivTermSort3 = derivTermSort(dictIsRuleLabel);
    var hdzipperDerivTerm2 = hdzipperDerivTerm(dictIsRuleLabel);
    return function(locs) {
      return function(isCursor) {
        return function(hdzipper) {
          return function(subElems) {
            return concat2([function() {
              var $160 = !isCursor;
              if ($160) {
                return [];
              }
              ;
              return [slot3(bufferSlot)(unit)(bufferComponent2)({
                hdzipper,
                edits: mapFlipped7(editsAtHoleyDerivZipper2(locs.spec)(hdzipper))(function(edit) {
                  return {
                    lazy_preview: renderPreview(dictIsRuleLabel)(locs)(hdzipper)(edit),
                    edit
                  };
                }),
                extraEdits: locs.spec.extraQueryEdits(derivTermSort3(hdzipperDerivTerm2(hdzipper)))
              })(locs.handleBufferOutput), slot_2(previewSlot)(leftDir)(previewComponent)(leftDir)];
            }(), subElems, function() {
              var $161 = !isCursor;
              if ($161) {
                return [];
              }
              ;
              return [slot_2(previewSlot)(rightDir)(previewComponent)(rightDir)];
            }()]);
          };
        };
      };
    };
  };
  var arrangeDerivTermSubs = function(dictIsRuleLabel) {
    var wellformedExpr2 = wellformedExpr(isExprLabelDerivLabel(dictIsRuleLabel));
    var getSortFromSub2 = getSortFromSub(dictIsRuleLabel);
    var hasInnerHole2 = hasInnerHole(dictIsRuleLabel);
    return function(locs) {
      return function(innerHoleIsCursor) {
        return function(v) {
          return function(kidCtxElems) {
            return function(renCtx) {
              return assert(wellformedExpr2("arrangeDerivTermSubs")(v.value1))(function() {
                return function(v1) {
                  if (v.value1.value0 instanceof DerivLabel) {
                    var sort2 = getSortFromSub2(v.value1.value0.value0)(v.value1.value0.value1);
                    var subCtxSymElems = locs.spec.arrangeDerivTermSubs(unit)()({
                      mb_parent: zipperParent(v),
                      renCtx,
                      rule: v.value1.value0.value0,
                      sort: sort2,
                      sigma: v.value1.value0.value1,
                      dzipper: new Just(v),
                      renderTerm: renderDerivTerm(dictIsRuleLabel)(trivialEditorLocals(locs.spec))(false)(false)
                    });
                    var kidCtxElems$prime = function() {
                      var $168 = hasInnerHole2(v.value1.value0.value0);
                      if ($168) {
                        return append20([renderHoleInterior(dictIsRuleLabel)(locs)(innerHoleIsCursor)(v)])(kidCtxElems);
                      }
                      ;
                      return kidCtxElems;
                    }();
                    return concat2(mapFlipped7(subCtxSymElems)(function(v2) {
                      if (v2 instanceof Left) {
                        return assert(just("arrangeDerivTermSubs")(index3(kidCtxElems$prime)(v2.value0.value1)))(function() {
                          return function(kidElem) {
                            return [applyCssClasses(v2.value0.value0.cssClasses)(kidElem(v2.value0.value0))];
                          };
                        });
                      }
                      ;
                      if (v2 instanceof Right) {
                        return v2.value0;
                      }
                      ;
                      throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Rendering (line 73, column 39 - line 76, column 27): " + [v2.constructor.name]);
                    }));
                  }
                  ;
                  if (v.value1.value0 instanceof DerivLiteral && (v.value1.value0.value0 instanceof DataString && v.value1.value1.length === 0)) {
                    return [function() {
                      var $178 = $$null2(v.value1.value0.value0.value0);
                      if ($178) {
                        return div2([classNames(["subnode", "string-inner", "empty-string"])])([div2([classNames(["subnode"])])([text5("\u25AA")])]);
                      }
                      ;
                      return div2([classNames(["subnode", "string-inner"])])([text5(v.value1.value0.value0.value0)]);
                    }()];
                  }
                  ;
                  if (v.value1.value0 instanceof DerivLiteral && (v.value1.value0.value0 instanceof DataInt && v.value1.value1.length === 0)) {
                    return [div2([classNames(["subnode", "string-inner"])])([text5(show9(v.value1.value0.value0.value0))])];
                  }
                  ;
                  throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Rendering (line 60, column 159 - line 82, column 75): " + [v.value1.constructor.name]);
                };
              });
            };
          };
        };
      };
    };
  };
  var renderPath = function(dictIsRuleLabel) {
    var isExprLabelDerivLabel2 = isExprLabelDerivLabel(dictIsRuleLabel);
    var fromPathToElementId2 = fromPathToElementId(isExprLabelDerivLabel2);
    var arrangeNodeSubs1 = arrangeNodeSubs(dictIsRuleLabel);
    var arrangeDerivTermSubs1 = arrangeDerivTermSubs(dictIsRuleLabel);
    var zipDownsTooth2 = zipDownsTooth(isExprLabelDerivLabel2);
    var renderDerivTerm1 = renderDerivTerm(dictIsRuleLabel);
    return function(locs) {
      return function(dzipper) {
        return function(interior) {
          var v = zipUp2(dzipper);
          if (v instanceof Nothing) {
            return interior;
          }
          ;
          if (v instanceof Just) {
            return renderPath(dictIsRuleLabel)(locs)(v.value0.value1)(function(renCtx) {
              return div2(concat2([[classNames(["node"])], function() {
                var $190 = !renCtx.isInteractive;
                if ($190) {
                  return [];
                }
                ;
                var elemId = fromPathToElementId2(renCtx.pathIdPrefix)(zipperPath(v.value0.value1));
                return [id2(elemId), onMouseDown(locs.onMouseDown(injectHoleyDerivZipper(v.value0.value1))), onMouseOver(locs.onMouseOver(injectHoleyDerivZipper(v.value0.value1)))];
              }()]))(arrangeNodeSubs1(locs)(false)(injectHoleyDerivZipper(v.value0.value1))(arrangeDerivTermSubs1(locs)(false)(v.value0.value1)(fromFoldable19(unpathAround(interior)(function() {
                var kidZippers = zipDownsTooth2(v.value0.value1)(v.value0.value0);
                return mapFlipped12(kidZippers)(renderDerivTerm1(locs)(false)(false));
              }())))(renCtx)));
            });
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Rendering (line 182, column 3 - line 204, column 26): " + [v.constructor.name]);
        };
      };
    };
  };
  var renderSSTerm = function(dictIsRuleLabel) {
    var hasInnerHole2 = hasInnerHole(dictIsRuleLabel);
    var getSortFromSub2 = getSortFromSub(dictIsRuleLabel);
    var renderDerivTerm1 = renderDerivTerm(dictIsRuleLabel);
    var pretty7 = pretty(prettyExpr(isExprLabelChangeLabel(isExprLabelMeta(isExprLabelSortLabel(dictIsRuleLabel.IsExprLabel0())))));
    var pretty13 = pretty(prettyExpr(isExprLabelStepExprLabel(dictIsRuleLabel)));
    return function(locs) {
      return function(term) {
        return function(renCtx) {
          if (term.value0 instanceof SSInj && (term.value0.value0 instanceof DerivLiteral && (term.value0.value0.value0 instanceof DataString && term.value1.length === 0))) {
            return div2([classNames(["node", "smallstep", "string"])])([lparenElem, interrogativeElem, colonElem, text5("String " + show14(term.value0.value0.value0.value0)), rparenElem]);
          }
          ;
          if (term.value0 instanceof SSInj && (term.value0.value0 instanceof DerivLiteral && (term.value0.value0.value0 instanceof DataInt && term.value1.length === 0))) {
            return div2([classNames(["subnode", "smallstep", "string-inner"])])([text5(show9(term.value0.value0.value0.value0))]);
          }
          ;
          if (term.value0 instanceof SSInj && term.value0.value0 instanceof DerivLabel) {
            return div2([classNames(["node", "smallstep"])])(function() {
              var kidElems = append20(function() {
                var $205 = hasInnerHole2(term.value0.value0.value0);
                if ($205) {
                  return [function(v) {
                    return div_([interrogativeElem, colonElem]);
                  }];
                }
                ;
                return [];
              }())(map60(renderSSTerm(dictIsRuleLabel)(locs))(term.value1));
              return concat2(mapFlipped7(locs.spec.arrangeDerivTermSubs(unit)()({
                mb_parent: Nothing.value,
                renCtx,
                rule: term.value0.value0.value0,
                sort: getSortFromSub2(term.value0.value0.value0)(term.value0.value0.value1),
                sigma: term.value0.value0.value1,
                dzipper: Nothing.value,
                renderTerm: renderDerivTerm1(trivialEditorLocals(locs.spec))(false)(false)
              }))(function(v) {
                if (v instanceof Left) {
                  return assert(just("renderSSTerm")(index3(kidElems)(v.value0.value1)))(function() {
                    return function(kid) {
                      return [applyCssClasses(v.value0.value0.cssClasses)(kid(v.value0.value0))];
                    };
                  });
                }
                ;
                if (v instanceof Right) {
                  return v.value0;
                }
                ;
                throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Rendering (line 324, column 94 - line 326, column 29): " + [v.constructor.name]);
              }));
            }());
          }
          ;
          if (term.value0 instanceof Marker && (term.value0.value0 === 0 && term.value1.length === 0)) {
            return div2([classNames(["node", "smallstep", "cursor"])])([]);
          }
          ;
          if (term.value0 instanceof Marker && (term.value0.value0 === 1 && term.value1.length === 1)) {
            return div2([classNames(["node", "smallstep", "cursor"])])([renderSSTerm(dictIsRuleLabel)(locs)(term["value1"][0])(renCtx)]);
          }
          ;
          if (term.value0 instanceof Boundary && term.value1.length === 1) {
            return div2([classNames(["node", "smallstep", "boundary"])])([span3([classNames(["subnode", "smallstep", "changeDirection"])])([function() {
              if (term.value0.value0 instanceof Up) {
                return upArrowElem;
              }
              ;
              if (term.value0.value0 instanceof Down) {
                return downArrowElem;
              }
              ;
              throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Rendering (line 337, column 12 - line 339, column 44): " + [term.value0.value0.constructor.name]);
            }()]), lbracketElem, span3([classNames(["subnode", "smallstep", "sortChange"])])([text5(pretty7(term.value0.value1))]), rbracketElem, lbraceElem, renderSSTerm(dictIsRuleLabel)(locs)(term["value1"][0])(renCtx), rbraceElem]);
          }
          ;
          return bug("failed pattern matchin in renderSSTerm: " + pretty13(term));
        };
      };
    };
  };

  // output/Language.Pantograph.Generic.ZipperMovement/index.js
  var map61 = /* @__PURE__ */ map(functorMaybe);
  var on9 = /* @__PURE__ */ on2();
  var on15 = /* @__PURE__ */ on9({
    reflectSymbol: function() {
      return "next";
    }
  });
  var zipNext2 = /* @__PURE__ */ zipNext(zippableZipperp);
  var on26 = /* @__PURE__ */ on9({
    reflectSymbol: function() {
      return "prev";
    }
  });
  var zipPrev2 = /* @__PURE__ */ zipPrev(zippableZipperp);
  var on33 = /* @__PURE__ */ on9({
    reflectSymbol: function() {
      return "right";
    }
  });
  var zipRight3 = /* @__PURE__ */ zipRight(zippableZipperp);
  var on43 = /* @__PURE__ */ on9({
    reflectSymbol: function() {
      return "left";
    }
  });
  var zipLeft3 = /* @__PURE__ */ zipLeft(zippableZipperp);
  var on52 = /* @__PURE__ */ on9({
    reflectSymbol: function() {
      return "down";
    }
  });
  var zipDown2 = /* @__PURE__ */ zipDown(zippableZipperp);
  var on62 = /* @__PURE__ */ on9({
    reflectSymbol: function() {
      return "up";
    }
  });
  var zipUp3 = /* @__PURE__ */ zipUp(zippableZipperp);
  var normalizeZipperp = function(v) {
    if (v.value1 instanceof Left && v.value1.value0 instanceof Nil) {
      return new Left(new Zipper(v.value0, v.value2));
    }
    ;
    if (v.value1 instanceof Right && v.value1.value0 instanceof Nil) {
      return new Left(new Zipper(v.value0, v.value2));
    }
    ;
    return new Right(v);
  };
  var moveZipperp = function(dir2) {
    var $54 = map61(normalizeZipperp);
    var $55 = on15(_next)(function(v) {
      return zipNext2(0);
    })(on26(_prev)(function(v) {
      return zipPrev2;
    })(on33(_right)(function(v) {
      return zipRight3;
    })(on43(_left)(function(v) {
      return zipLeft3;
    })(on52(_down)(function(v) {
      return zipDown2(0);
    })(on62(_up)(function(v) {
      return zipUp3;
    })(case_))))))(dir2);
    return function($56) {
      return $54($55($56));
    };
  };
  var moveZipperpUntil = function($copy_dir) {
    return function($copy_valid) {
      return function($copy_zipperp) {
        var $tco_var_dir = $copy_dir;
        var $tco_var_valid = $copy_valid;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(dir2, valid, zipperp) {
          var v = moveZipperp(dir2)(zipperp);
          if (v instanceof Nothing) {
            $tco_done = true;
            return Nothing.value;
          }
          ;
          if (v instanceof Just && v.value0 instanceof Left) {
            $tco_done = true;
            return new Just(new Left(v.value0.value0));
          }
          ;
          if (v instanceof Just && v.value0 instanceof Right) {
            var $51 = valid(v.value0.value0);
            if ($51) {
              $tco_done = true;
              return v;
            }
            ;
            $tco_var_dir = dir2;
            $tco_var_valid = valid;
            $copy_zipperp = v.value0.value0;
            return;
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Generic.ZipperMovement (line 45, column 5 - line 50, column 48): " + [v.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_dir, $tco_var_valid, $copy_zipperp);
        }
        ;
        return $tco_result;
      };
    };
  };

  // output/Language.Pantograph.UserStudy.Programs/index.js
  var program_strings = /* @__PURE__ */ function() {
    return fromFoldable2(ordString)(foldableArray)([new Tuple("transcribe1", Nothing.value), new Tuple("transcribe2", Nothing.value), new Tuple("deMorgan", new Just('{"values":[{"tag":"Left","value":{"values":[],"tag":"Let"}},[{"values":[{"tag":"Right","value":{"values":["deMorgansLaw"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Bool"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Bool"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Bool"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Lam"}},[{"values":[{"tag":"Right","value":{"values":["p"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Bool"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Lam"}},[{"values":[{"tag":"Right","value":{"values":["q"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Bool"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"EqualsRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"OpAnd"}],"tag":"InfixRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"OpOr"}],"tag":"InfixRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"OpAnd"}],"tag":"InfixRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"ConstTrue"}],"tag":"ConstantRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"ConstTrue"}],"tag":"ConstantRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"OpAnd"}],"tag":"InfixRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"ConstTrue"}],"tag":"ConstantRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"ConstFalse"}],"tag":"ConstantRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"OpAnd"}],"tag":"InfixRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"ConstFalse"}],"tag":"ConstantRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"ConstTrue"}],"tag":"ConstantRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"ConstFalse"}],"tag":"ConstantRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"ConstFalse"}],"tag":"ConstantRule"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}')), new Tuple("collatz", new Just('{"values":[{"tag":"Left","value":{"values":[],"tag":"Let"}},[{"values":[{"tag":"Right","value":{"values":["collatz"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Lam"}},[{"values":[{"tag":"Right","value":{"values":["n"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"If"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"EqualsRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[1],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[0],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"If"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"EqualsRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"OpMod"}],"tag":"InfixRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[2],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[0],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"OpDivide"}],"tag":"InfixRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[2],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"OpTimes"}],"tag":"InfixRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"OpPlus"}],"tag":"InfixRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[1],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[3],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[5],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}')), new Tuple("isPrime", new Just('{"values":[{"tag":"Left","value":{"values":[],"tag":"Let"}},[{"values":[{"tag":"Right","value":{"values":["isPrime"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Bool"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Let"}},[{"values":[{"tag":"Right","value":{"values":["helper"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Bool"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Lam"}},[{"values":[{"tag":"Right","value":{"values":["x"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"If"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"EqualsRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[1],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"ConstFalse"}],"tag":"ConstantRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"If"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"EqualsRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"OpMod"}],"tag":"InfixRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"TermHole"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"TermHole"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"ConstTrue"}],"tag":"ConstantRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"OpMinus"}],"tag":"InfixRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[1],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Lam"}},[{"values":[{"tag":"Right","value":{"values":["n"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"ConstNot"}],"tag":"ConstantRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"OpMinus"}],"tag":"InfixRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[1],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"OpAnd"}],"tag":"InfixRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"ConstNot"}],"tag":"ConstantRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[1],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"OpAnd"}],"tag":"InfixRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[2],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"OpAnd"}],"tag":"InfixRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[3],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"OpAnd"}],"tag":"InfixRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"ConstNot"}],"tag":"ConstantRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[4],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"OpAnd"}],"tag":"InfixRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[5],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"OpAnd"}],"tag":"InfixRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"ConstNot"}],"tag":"ConstantRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[6],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"OpAnd"}],"tag":"InfixRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[7],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"ConstNot"}],"tag":"ConstantRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[8],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}')), new Tuple("reverse", new Just('{"values":[{"tag":"Left","value":{"values":[],"tag":"Let"}},[{"values":[{"tag":"Right","value":{"values":["reverse"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ListRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ListRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"TermHole"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ListRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ListRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ConsRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[1],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ConsRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[2],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ConsRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[3],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ConsRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[4],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"NilRule"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}')), new Tuple("filter", new Just('{"values":[{"tag":"Left","value":{"values":[],"tag":"Let"}},[{"values":[{"tag":"Right","value":{"values":["filter"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Bool"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ListRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ListRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"TermHole"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Bool"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ListRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ListRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Lam"}},[{"values":[{"tag":"Right","value":{"values":["x"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"EqualsRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"OpMod"}],"tag":"InfixRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[2],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[0],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ConsRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[1],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ConsRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[2],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ConsRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[3],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ConsRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[4],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"NilRule"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}')), new Tuple("filterWithIndex", new Just('{"values":[{"tag":"Left","value":{"values":[],"tag":"Let"}},[{"values":[{"tag":"Right","value":{"values":["filter"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Bool"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Bool"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ListRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Bool"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ListRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Bool"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Lam"}},[{"values":[{"tag":"Right","value":{"values":["cond"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Bool"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Bool"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Lam"}},[{"values":[{"tag":"Right","value":{"values":["l"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ListRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Bool"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ListMatchRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"NilRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Right","value":{"values":["h"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Right","value":{"values":["t"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"If"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ConsRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Lam"}},[{"values":[{"tag":"Right","value":{"values":["b"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Bool"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"OpAnd"}],"tag":"InfixRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"EqualsRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"OpMod"}],"tag":"InfixRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"TermHole"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[2],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[0],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ConsRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"ConstTrue"}],"tag":"ConstantRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ConsRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"ConstTrue"}],"tag":"ConstantRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ConsRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"ConstFalse"}],"tag":"ConstantRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ConsRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"ConstTrue"}],"tag":"ConstantRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"NilRule"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}')), new Tuple("sumViaFold", new Just('{"values":[{"tag":"Left","value":{"values":[],"tag":"Let"}},[{"values":[{"tag":"Right","value":{"values":["fold"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ListRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Lam"}},[{"values":[{"tag":"Right","value":{"values":["f"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Lam"}},[{"values":[{"tag":"Right","value":{"values":["n"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Lam"}},[{"values":[{"tag":"Right","value":{"values":["ls"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ListRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ListMatchRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Right","value":{"values":["h"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Right","value":{"values":["t"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Let"}},[{"values":[{"tag":"Right","value":{"values":["sum"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ListRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"TermHole"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ListRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ConsRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[0],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ConsRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[1],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ConsRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[2],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ConsRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[3],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ConsRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[4],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"NilRule"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}')), new Tuple("sumFromViaFold", new Just('{"values":[{"tag":"Left","value":{"values":[],"tag":"Let"}},[{"values":[{"tag":"Right","value":{"values":["fold"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ListRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Lam"}},[{"values":[{"tag":"Right","value":{"values":["f"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Lam"}},[{"values":[{"tag":"Right","value":{"values":["n"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Lam"}},[{"values":[{"tag":"Right","value":{"values":["ls"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ListRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ListMatchRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Right","value":{"values":["h"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Right","value":{"values":["t"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Let"}},[{"values":[{"tag":"Right","value":{"values":["sum"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ListRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Lam"}},[{"values":[{"tag":"Right","value":{"values":["x"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Lam"}},[{"values":[{"tag":"Right","value":{"values":["y"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"OpPlus"}],"tag":"InfixRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[0],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ConsRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[0],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ConsRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[1],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ConsRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[2],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ConsRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[3],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ConsRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[4],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"NilRule"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}')), new Tuple("allEvenViaFold", new Just('{"values":[{"tag":"Left","value":{"values":[],"tag":"Let"}},[{"values":[{"tag":"Right","value":{"values":["fold"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Bool"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Bool"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Bool"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ListRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Bool"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Lam"}},[{"values":[{"tag":"Right","value":{"values":["f"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Bool"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Bool"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Lam"}},[{"values":[{"tag":"Right","value":{"values":["n"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Bool"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Lam"}},[{"values":[{"tag":"Right","value":{"values":["l"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ListRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ListMatchRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Right","value":{"values":["h"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Right","value":{"values":["t"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Let"}},[{"values":[{"tag":"Right","value":{"values":["isEven"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Bool"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Lam"}},[{"values":[{"tag":"Right","value":{"values":["x"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"EqualsRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"OpMod"}],"tag":"InfixRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[2],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[0],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Let"}},[{"values":[{"tag":"Right","value":{"values":["allEven"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ListRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Bool"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"TermHole"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ListRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Bool"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ConsRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[0],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ConsRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[2],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ConsRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[4],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"NilRule"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}')), new Tuple("allViaFold", new Just('{"values":[{"tag":"Left","value":{"values":[],"tag":"Let"}},[{"values":[{"tag":"Right","value":{"values":["fold"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Bool"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Bool"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Bool"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ListRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Bool"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Lam"}},[{"values":[{"tag":"Right","value":{"values":["f"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Bool"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Bool"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Lam"}},[{"values":[{"tag":"Right","value":{"values":["n"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Bool"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Lam"}},[{"values":[{"tag":"Right","value":{"values":["l"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ListRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ListMatchRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Right","value":{"values":["h"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Right","value":{"values":["t"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Let"}},[{"values":[{"tag":"Right","value":{"values":["isEven"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Bool"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Lam"}},[{"values":[{"tag":"Right","value":{"values":["x"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"EqualsRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"OpMod"}],"tag":"InfixRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[2],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[0],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Let"}},[{"values":[{"tag":"Right","value":{"values":["allEven"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ListRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Bool"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Lam"}},[{"values":[{"tag":"Right","value":{"values":["b"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Bool"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Lam"}},[{"values":[{"tag":"Right","value":{"values":["i"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"OpAnd"}],"tag":"InfixRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"ConstTrue"}],"tag":"ConstantRule"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ConsRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[0],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ConsRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[2],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ConsRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[4],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"NilRule"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}')), new Tuple("associativity", new Just('{"values":[{"tag":"Left","value":{"values":[],"tag":"Let"}},[{"values":[{"tag":"Right","value":{"values":["associativity"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Bool"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Lam"}},[{"values":[{"tag":"Right","value":{"values":["f"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"ArrowRule"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"EqualsRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[1],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[2],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[3],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[1],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[2],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[3],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"OpAnd"}],"tag":"InfixRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Lam"}},[{"values":[{"tag":"Right","value":{"values":["x"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Lam"}},[{"values":[{"tag":"Right","value":{"values":["y"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"OpPlus"}],"tag":"InfixRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"OpAnd"}],"tag":"InfixRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"ConstNot"}],"tag":"ConstantRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Lam"}},[{"values":[{"tag":"Right","value":{"values":["x"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Lam"}},[{"values":[{"tag":"Right","value":{"values":["y"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"OpMinus"}],"tag":"InfixRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"App"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Lam"}},[{"values":[{"tag":"Right","value":{"values":["x"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Lam"}},[{"values":[{"tag":"Right","value":{"values":["y"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"OpTimes"}],"tag":"InfixRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Suc"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}')), new Tuple("example", new Just('{"values":[{"tag":"Left","value":{"values":[],"tag":"Let"}},[{"values":[{"tag":"Right","value":{"values":["x"],"tag":"DataString"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"TermHole"}},[{"values":[{"tag":"Left","value":{"values":[{"values":[],"tag":"Int"}],"tag":"DataTypeRule"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"Newline"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"EqualsRule"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Var"}},[{"values":[{"tag":"Left","value":{"values":[],"tag":"Zero"}},[]],"tag":"Expr"}]],"tag":"Expr"},{"values":[{"tag":"Left","value":{"values":[],"tag":"IntegerLiteral"}},[{"values":[{"tag":"Right","value":{"values":[1],"tag":"DataInt"}},[]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}]],"tag":"Expr"}'))]);
  }();

  // output/Log/foreign.js
  var _log = (tag) => (x) => (k) => {
    console.log(`--[ ${tag} ]---------------------------------------------------`);
    console.log(x);
    return k({});
  };

  // output/Log/index.js
  var discard14 = /* @__PURE__ */ discard(discardUnit);
  var _logging = false;
  var log4 = /* @__PURE__ */ function() {
    if (_logging) {
      return _log;
    }
    ;
    return function(v) {
      return function(v1) {
        return function(k) {
          return k(unit);
        };
      };
    };
  }();
  var logM = function(dictMonad) {
    var discard19 = discard14(dictMonad.Bind1());
    var pure38 = pure(dictMonad.Applicative0());
    if (_logging) {
      return function(tag) {
        return function(x) {
          return discard19(pure38(unit))(function() {
            return log4(tag)(x)(function(v) {
              return pure38(unit);
            });
          });
        };
      };
    }
    ;
    return $$const($$const(pure38(unit)));
  };

  // output/Web.UIEvent.KeyboardEvent/foreign.js
  function key5(e) {
    return e.key;
  }
  function ctrlKey2(e) {
    return e.ctrlKey;
  }
  function shiftKey2(e) {
    return e.shiftKey;
  }
  function metaKey2(e) {
    return e.metaKey;
  }

  // output/Web.UIEvent.KeyboardEvent/index.js
  var toEvent2 = unsafeCoerce2;
  var fromEvent = /* @__PURE__ */ unsafeReadProtoTagged("KeyboardEvent");

  // output/Language.Pantograph.Generic.Rendering.Editor/index.js
  var $runtime_lazy10 = function(name15, moduleName, init3) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2)
        return val;
      if (state3 === 1)
        throw new ReferenceError(name15 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init3();
      state3 = 2;
      return val;
    };
  };
  var show10 = /* @__PURE__ */ show(showInt);
  var pure31 = /* @__PURE__ */ pure(applicativeEffect);
  var mempty5 = /* @__PURE__ */ mempty(monoidPath);
  var bind30 = /* @__PURE__ */ bind(bindEffect);
  var lookup18 = /* @__PURE__ */ lookup2(ordString);
  var pure113 = /* @__PURE__ */ pure(applicativeList);
  var monadEffectHookM2 = /* @__PURE__ */ monadEffectHookM(monadEffectAff);
  var liftEffect9 = /* @__PURE__ */ liftEffect(monadEffectHookM2);
  var bind113 = /* @__PURE__ */ bind(bindHookM);
  var discard15 = /* @__PURE__ */ discard(discardUnit)(bindHookM);
  var log5 = /* @__PURE__ */ log2(monadEffectHookM2);
  var pure210 = /* @__PURE__ */ pure(applicativeHookM);
  var setClassName3 = /* @__PURE__ */ setClassName2(monadEffectEffect);
  var tell4 = /* @__PURE__ */ tell3();
  var tell1 = /* @__PURE__ */ tell4({
    reflectSymbol: function() {
      return "buffer";
    }
  })(ordUnit);
  var logM2 = /* @__PURE__ */ logM(monadHookM);
  var on10 = /* @__PURE__ */ on2();
  var on16 = /* @__PURE__ */ on10({
    reflectSymbol: function() {
      return "next";
    }
  });
  var hole2 = /* @__PURE__ */ hole();
  var on27 = /* @__PURE__ */ on10({
    reflectSymbol: function() {
      return "down";
    }
  });
  var map65 = /* @__PURE__ */ map(functorExpr);
  var map121 = /* @__PURE__ */ map(functorPath2);
  var map215 = /* @__PURE__ */ map(functorZipper);
  var monadStateT4 = /* @__PURE__ */ monadStateT(monadIdentity);
  var bind210 = /* @__PURE__ */ bind(/* @__PURE__ */ bindExceptT(monadStateT4));
  var pure33 = /* @__PURE__ */ pure(/* @__PURE__ */ applicativeExceptT(monadStateT4));
  var rightIsSymbol2 = {
    reflectSymbol: function() {
      return "right";
    }
  };
  var leftIsSymbol2 = {
    reflectSymbol: function() {
      return "left";
    }
  };
  var tell22 = /* @__PURE__ */ tell4({
    reflectSymbol: function() {
      return "preview";
    }
  })(/* @__PURE__ */ ordVariant()(/* @__PURE__ */ variantTagsCons(/* @__PURE__ */ variantTagsCons(variantTagsNil)(rightIsSymbol2))(leftIsSymbol2))(/* @__PURE__ */ eqVariantCons(/* @__PURE__ */ eqVariantCons(eqVariantNil)(eqProxy))(eqProxy))(/* @__PURE__ */ ordVariantCons(/* @__PURE__ */ ordVariantCons(ordVariantNil)(ordProxy))(ordProxy)));
  var on34 = /* @__PURE__ */ on10({
    reflectSymbol: function() {
      return "prev";
    }
  });
  var when7 = /* @__PURE__ */ when(applicativeHookM);
  var pretty5 = /* @__PURE__ */ pretty(prettyString);
  var prettyPath33 = /* @__PURE__ */ prettyPath3(reflectPathDirUp);
  var show15 = /* @__PURE__ */ show(/* @__PURE__ */ showRecord()()(/* @__PURE__ */ showRecordFieldsCons({
    reflectSymbol: function() {
      return "bottom";
    }
  })(/* @__PURE__ */ showRecordFieldsCons({
    reflectSymbol: function() {
      return "height";
    }
  })(/* @__PURE__ */ showRecordFieldsCons(leftIsSymbol2)(/* @__PURE__ */ showRecordFieldsCons(rightIsSymbol2)(/* @__PURE__ */ showRecordFieldsCons({
    reflectSymbol: function() {
      return "top";
    }
  })(/* @__PURE__ */ showRecordFieldsCons({
    reflectSymbol: function() {
      return "width";
    }
  })(/* @__PURE__ */ showRecordFieldsCons({
    reflectSymbol: function() {
      return "x";
    }
  })(/* @__PURE__ */ showRecordFieldsConsNil({
    reflectSymbol: function() {
      return "y";
    }
  })(showNumber))(showNumber))(showNumber))(showNumber))(showNumber))(showNumber))(showNumber))(showNumber)));
  var liftAff2 = /* @__PURE__ */ liftAff(/* @__PURE__ */ monadAffHookM(monadAffAff));
  var identity23 = /* @__PURE__ */ identity(categoryFn);
  var eq14 = /* @__PURE__ */ eq(/* @__PURE__ */ eqMaybe(eqBoolean));
  var map314 = /* @__PURE__ */ map(functorMaybe);
  var reversePath5 = /* @__PURE__ */ reversePath();
  var mempty13 = /* @__PURE__ */ mempty(monoidList);
  var sequence8 = /* @__PURE__ */ sequence(traversableArray)(applicativeHookM);
  var mapFlipped8 = /* @__PURE__ */ mapFlipped(functorArray);
  var SetProgram = /* @__PURE__ */ function() {
    function SetProgram2(value0, value14, value23) {
      this.value0 = value0;
      this.value1 = value14;
      this.value2 = value23;
    }
    ;
    SetProgram2.create = function(value0) {
      return function(value14) {
        return function(value23) {
          return new SetProgram2(value0, value14, value23);
        };
      };
    };
    return SetProgram2;
  }();
  var GetProgram = /* @__PURE__ */ function() {
    function GetProgram2(value0) {
      this.value0 = value0;
    }
    ;
    GetProgram2.create = function(value0) {
      return new GetProgram2(value0);
    };
    return GetProgram2;
  }();
  var editorPrefix = /* @__PURE__ */ stateful(0);
  var editorComponent = function(dictIsRuleLabel) {
    var decodeSerializedZipper22 = decodeSerializedZipper2(dictIsRuleLabel);
    var fromHoleyDerivPathToElementId2 = fromHoleyDerivPathToElementId(dictIsRuleLabel);
    var pretty13 = pretty(prettyHoleyDerivPath(dictIsRuleLabel));
    var IsExprLabel0 = dictIsRuleLabel.IsExprLabel0();
    var pretty23 = pretty(prettyState(IsExprLabel0)(dictIsRuleLabel));
    var Ord0 = dictIsRuleLabel.Bounded3().Ord0();
    var eq24 = eq(eqMaybe(eqHoleyDerivPath(IsExprLabel0.Ord1().Eq0())(Ord0.Eq0())));
    var hdzEnterInnerHoleIfPossible2 = hdzEnterInnerHoleIfPossible(dictIsRuleLabel);
    var hdzipperDerivTerm2 = hdzipperDerivTerm(dictIsRuleLabel);
    var isValidSelect2 = isValidSelect(dictIsRuleLabel);
    var moveHDZUntil2 = moveHDZUntil(dictIsRuleLabel);
    var isValidCursor2 = isValidCursor(dictIsRuleLabel);
    var hdzIsHolePosition2 = hdzIsHolePosition(dictIsRuleLabel);
    var derivZipperpSorts2 = derivZipperpSorts(dictIsRuleLabel);
    var hdzipperDerivZipper2 = hdzipperDerivZipper(dictIsRuleLabel);
    var isExprLabelDerivLabel2 = isExprLabelDerivLabel(dictIsRuleLabel);
    var zipperpFromTo2 = zipperpFromTo(isExprLabelDerivLabel2);
    var unzipperp2 = unzipperp(isExprLabelDerivLabel2);
    var derivTermSort3 = derivTermSort(dictIsRuleLabel);
    var assertJustExpr2 = assertJustExpr(IsExprLabel0)(dictIsRuleLabel);
    var stepRepeatedly2 = stepRepeatedly(dictIsRuleLabel);
    var wrapBoundary3 = wrapBoundary(IsExprLabel0);
    var forgetDerivLabelSorts2 = forgetDerivLabelSorts(IsExprLabel0)(dictIsRuleLabel);
    var inferF2 = inferF(dictIsRuleLabel);
    var isExprLabelSortLabel3 = isExprLabelSortLabel(IsExprLabel0);
    var subMetaExprPartially3 = subMetaExprPartially(isExprLabelSortLabel3);
    var composeSub3 = composeSub(isExprLabelSortLabel3);
    var unify3 = unify(isExprLabelSortLabel3);
    var subDerivTerm3 = subDerivTerm(dictIsRuleLabel);
    var nonemptyUpPathTopSort2 = nonemptyUpPathTopSort(dictIsRuleLabel);
    var ssTermToChangedPath2 = ssTermToChangedPath(dictIsRuleLabel);
    var inferPathF2 = inferPathF(dictIsRuleLabel);
    var nonemptyPathInnerSort2 = nonemptyPathInnerSort(dictIsRuleLabel);
    var subDerivPath2 = subDerivPath(dictIsRuleLabel);
    var termToZipper2 = termToZipper(dictIsRuleLabel);
    var derivZipperTopSort2 = derivZipperTopSort(dictIsRuleLabel);
    var runUnifyMonad2 = runUnifyMonad(isExprLabelSortLabel3);
    var inferZipperFImpl2 = inferZipperFImpl(IsExprLabel0)(dictIsRuleLabel);
    var unifyFImpl2 = unifyFImpl(isExprLabelSortLabel3);
    var subDerivZipper2 = subDerivZipper(dictIsRuleLabel);
    var setupSSTermFromWrapAction2 = setupSSTermFromWrapAction(IsExprLabel0);
    var subDerivLabel2 = subDerivLabel(dictIsRuleLabel);
    var setupSSTermFromReplaceAction2 = setupSSTermFromReplaceAction(IsExprLabel0);
    var defaultDerivTerm3 = defaultDerivTerm(dictIsRuleLabel);
    var isExprLabelMeta3 = isExprLabelMeta(isExprLabelSortLabel3);
    var rEndpoint3 = rEndpoint(isExprLabelMeta3);
    var zipperpToZipper2 = zipperpToZipper(isExprLabelDerivLabel2);
    var moveHoleyDerivZipper2 = moveHoleyDerivZipper(dictIsRuleLabel);
    var getPathChange22 = getPathChange2(Ord0)(dictIsRuleLabel);
    var subSomeMetaChange2 = subSomeMetaChange(isExprLabelSortLabel3);
    var ssTermToChangedTerm2 = ssTermToChangedTerm(dictIsRuleLabel);
    var pretty33 = pretty(prettyPath33(isExprLabelDerivLabel2));
    var pretty42 = pretty(prettyExpr(isExprLabelDerivLabel2));
    var pretty52 = pretty(prettyExpr(isExprLabelMeta3));
    var pretty62 = pretty(prettyDerivLabel(IsExprLabel0)(dictIsRuleLabel.Pretty5()));
    var serializePath2 = serializePath(dictIsRuleLabel);
    var printSerializedDerivZipper22 = printSerializedDerivZipper2(dictIsRuleLabel);
    var unzipper2 = unzipper(isExprLabelDerivLabel2);
    var step5 = step4(dictIsRuleLabel);
    var stateToDerivTerm2 = stateToDerivTerm(dictIsRuleLabel);
    var renderPath2 = renderPath(dictIsRuleLabel);
    var renderDerivTerm2 = renderDerivTerm(dictIsRuleLabel);
    var renderSSTerm2 = renderSSTerm(dictIsRuleLabel);
    return function(_unit) {
      var editorIdPrefixNum = editorPrefix.get(unit);
      var v = editorPrefix.set(editorIdPrefixNum + 1 | 0);
      var pathIdPrefix = "Editor" + (show10(editorIdPrefixNum) + "-");
      return component(function(tokens) {
        return function(spec) {
          var initState = unsafePerformEffect(function() {
            var $$default2 = pure31(new CursorState(cursorFromHoleyDerivZipper(injectHoleyDerivZipper(new Zipper(mempty5, spec.dterm)))));
            return function __do2() {
              var param2 = get_url_search_param("UserStudyProgramIndex")();
              var $258 = $$null2(param2);
              if ($258) {
                return $$default2();
              }
              ;
              var v1 = lookup18(param2)(program_strings);
              if (v1 instanceof Just && v1.value0 instanceof Just) {
                var dterm = decodeSerializedZipper22(spec.clipboardSort)(v1.value0.value0);
                return new CursorState(cursorFromHoleyDerivZipper(injectHoleyDerivZipper(new Zipper(mempty5, dterm))));
              }
              ;
              return $$default2();
            };
          }());
          return bind19(useState(initState))(function(v1) {
            return bind19(useRef(false))(function(v2) {
              return bind19(useRef(pure113(initState)))(function(v3) {
                return bind19(useRef(initState))(function(v4) {
                  return bind19(useRef(Nothing.value))(function(v5) {
                    return bind19(useRef(Nothing.value))(function(v6) {
                      var pushHistory = function(st) {
                        return liftEffect9(modify_(Cons.create(st))(v3.value1));
                      };
                      var $lazy_popHistory = $runtime_lazy10("popHistory", "Language.Pantograph.Generic.Rendering.Editor", function() {
                        return bind113(liftEffect9(read(v3.value1)))(function(history2) {
                          if (history2 instanceof Nil) {
                            return discard15(log5("[popHistory] empty history"))(function() {
                              return pure210(Nothing.value);
                            });
                          }
                          ;
                          if (history2 instanceof Cons) {
                            return discard15(liftEffect9(write(history2.value1)(v3.value1)))(function() {
                              if (history2.value0 instanceof CursorState && (history2.value0.value0.mode instanceof BufferCursorMode && false)) {
                                return pure210(new Just(new CursorState({
                                  hdzipper: history2.value0.value0.hdzipper,
                                  mode: NavigationCursorMode.value
                                })));
                              }
                              ;
                              if (history2.value0 instanceof CursorState && (history2.value0.value0.mode instanceof BufferCursorMode && true)) {
                                return $lazy_popHistory(532);
                              }
                              ;
                              return pure210(new Just(history2.value0));
                            });
                          }
                          ;
                          throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Editor (line 518, column 7 - line 533, column 32): " + [history2.constructor.name]);
                        });
                      });
                      var popHistory = $lazy_popHistory(515);
                      var normalizeZipperpToState = function(zipperp) {
                        if (zipperp instanceof Left) {
                          return new CursorState(cursorFromHoleyDerivZipper(injectHoleyDerivZipper(zipperp.value0)));
                        }
                        ;
                        if (zipperp instanceof Right) {
                          return new SelectState({
                            dzipperp: zipperp.value0
                          });
                        }
                        ;
                        throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Editor (line 416, column 39 - line 418, column 53): " + [zipperp.constructor.name]);
                      };
                      var getState = get3(v1.value1);
                      var getFacade = liftEffect9(read(v4.value1));
                      var getElementIdByHoleyDerivPath = function() {
                        var $528 = fromHoleyDerivPathToElementId2(pathIdPrefix);
                        return function($529) {
                          return pure210($528($529));
                        };
                      }();
                      var getElementByHoleyDerivPath = function(hdzipper) {
                        return bind113(liftEffect9(bind30(windowImpl)(document)))(function(doc) {
                          return bind113(getElementIdByHoleyDerivPath(hdzipper))(function(elemId) {
                            return bind113(liftEffect9(getElementById(elemId)(toNonElementParentNode(doc))))(function(v7) {
                              if (v7 instanceof Nothing) {
                                return bind113(getState)(function(st) {
                                  return bug("could not find element" + indent("\n- elemId = " + (elemId + ("\n- hdzipper = " + (pretty13(hdzipper) + ("\n- st = " + pretty23(st)))))));
                                });
                              }
                              ;
                              if (v7 instanceof Just) {
                                return pure210(v7.value0);
                              }
                              ;
                              throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Editor (line 146, column 109 - line 150, column 31): " + [v7.constructor.name]);
                            });
                          });
                        });
                      };
                      var setNodeElementStyle = function(className2) {
                        return function(mb_hdpath_old) {
                          return function(mb_hdpath_new) {
                            var update2 = function() {
                              if (mb_hdpath_new instanceof Nothing) {
                                return pure210(unit);
                              }
                              ;
                              if (mb_hdpath_new instanceof Just) {
                                return bind113(getElementByHoleyDerivPath(mb_hdpath_new.value0))(function(elem4) {
                                  return liftEffect9(setClassName3(elem4)(className2)(true));
                                });
                              }
                              ;
                              throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Editor (line 171, column 9 - line 175, column 58): " + [mb_hdpath_new.constructor.name]);
                            }();
                            if (mb_hdpath_old instanceof Nothing) {
                              return update2;
                            }
                            ;
                            if (mb_hdpath_old instanceof Just) {
                              var $284 = eq24(new Just(mb_hdpath_old.value0))(mb_hdpath_new);
                              if ($284) {
                                return pure210(unit);
                              }
                              ;
                              return bind113(getElementByHoleyDerivPath(mb_hdpath_old.value0))(function(elem4) {
                                return discard15(liftEffect9(setClassName3(elem4)(className2)(false)))(function() {
                                  return update2;
                                });
                              });
                            }
                            ;
                            throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Editor (line 155, column 7 - line 168, column 19): " + [mb_hdpath_old.constructor.name]);
                          };
                        };
                      };
                      var setCursorElement = setNodeElementStyle(cursorClassName);
                      var setHighlightElement = function(mb_hdpath_new) {
                        return bind113(liftEffect9(read(v6.value1)))(function(mb_hdpath_old) {
                          return discard15(setNodeElementStyle(highlightClassName)(mb_hdpath_old)(mb_hdpath_new))(function() {
                            return liftEffect9(write(mb_hdpath_new)(v6.value1));
                          });
                        });
                      };
                      var setSelectBottomElement = setNodeElementStyle(selectBottomClassName);
                      var setSelectTopElement = setNodeElementStyle(selectTopClassName);
                      var setFacade$prime = function(st) {
                        return discard15(function() {
                          if (st instanceof CursorState) {
                            return setCursorElement(Nothing.value)(new Just(hdzipperHoleyDerivPath(st.value0.hdzipper)));
                          }
                          ;
                          if (st instanceof SelectState) {
                            return discard15(setSelectTopElement(Nothing.value)(new Just(injectHoleyDerivPath(zipperpTopPath(st.value0.dzipperp)))))(function() {
                              return setSelectBottomElement(Nothing.value)(new Just(injectHoleyDerivPath(zipperpBottomPath(st.value0.dzipperp))));
                            });
                          }
                          ;
                          if (st instanceof TopState) {
                            return pure210(unit);
                          }
                          ;
                          if (st instanceof SmallStepState) {
                            return pure210(unit);
                          }
                          ;
                          throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Editor (line 233, column 7 - line 242, column 20): " + [st.constructor.name]);
                        }())(function() {
                          return discard15(liftEffect9(write(st)(v4.value1)))(function() {
                            return liftEffect9(write(true)(v2.value1));
                          });
                        });
                      };
                      var unsetFacadeElements = bind113(getFacade)(function(currentFacade) {
                        if (currentFacade instanceof CursorState) {
                          return discard15(setHighlightElement(Nothing.value))(function() {
                            return setCursorElement(new Just(hdzipperHoleyDerivPath(currentFacade.value0.hdzipper)))(Nothing.value);
                          });
                        }
                        ;
                        if (currentFacade instanceof SelectState) {
                          return discard15(setHighlightElement(Nothing.value))(function() {
                            return discard15(setSelectTopElement(new Just(injectHoleyDerivPath(zipperpTopPath(currentFacade.value0.dzipperp))))(Nothing.value))(function() {
                              return setSelectBottomElement(new Just(injectHoleyDerivPath(zipperpBottomPath(currentFacade.value0.dzipperp))))(Nothing.value);
                            });
                          });
                        }
                        ;
                        if (currentFacade instanceof TopState) {
                          return setHighlightElement(Nothing.value);
                        }
                        ;
                        if (currentFacade instanceof SmallStepState) {
                          return setHighlightElement(Nothing.value);
                        }
                        ;
                        throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Editor (line 200, column 7 - line 211, column 38): " + [currentFacade.constructor.name]);
                      });
                      var setFacade = function(st) {
                        return discard15(function() {
                          if (st instanceof CursorState) {
                            return bind113(getState)(function(state3) {
                              if (state3 instanceof CursorState) {
                                return tell1(tokens.slotToken)(bufferSlot)(unit)(SetBufferEnabledQuery.create(false)(Nothing.value));
                              }
                              ;
                              return pure210(unit);
                            });
                          }
                          ;
                          return pure210(unit);
                        }())(function() {
                          return discard15(unsetFacadeElements)(function() {
                            return setFacade$prime(st);
                          });
                        });
                      };
                      var goToInnerHoleIfPossible = bind113(getFacade)(function(st) {
                        if (st instanceof CursorState) {
                          return setFacade(new CursorState({
                            mode: st.value0.mode,
                            hdzipper: hdzEnterInnerHoleIfPossible2(st.value0.hdzipper)
                          }));
                        }
                        ;
                        return pure210(unit);
                      });
                      var moveSelect = function(dir2) {
                        return bind113(getFacade)(function(v7) {
                          if (v7 instanceof CursorState) {
                            var path = hdzipperDerivPath(v7.value0.hdzipper);
                            var dterm = hdzipperDerivTerm2(v7.value0.hdzipper);
                            var select5 = {
                              dzipperp: new Zipperp(path, new Left(mempty5), dterm)
                            };
                            var v8 = moveZipperpUntil(dir2)(isValidSelect2(spec))(select5.dzipperp);
                            if (v8 instanceof Nothing) {
                              return discard15(logM2("moveSelect")("failed to enter SelectState"))(function() {
                                return pure210(unit);
                              });
                            }
                            ;
                            if (v8 instanceof Just && v8.value0 instanceof Left) {
                              return setFacade(new CursorState(cursorFromHoleyDerivZipper(injectHoleyDerivZipper(v8.value0.value0))));
                            }
                            ;
                            if (v8 instanceof Just && v8.value0 instanceof Right) {
                              return setFacade(new SelectState({
                                dzipperp: v8.value0.value0
                              }));
                            }
                            ;
                            throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Editor (line 425, column 9 - line 430, column 88): " + [v8.constructor.name]);
                          }
                          ;
                          if (v7 instanceof SelectState) {
                            var v8 = moveZipperpUntil(dir2)(isValidSelect2(spec))(v7.value0.dzipperp);
                            if (v8 instanceof Nothing) {
                              return logM2("moveSelect")("failed to move selection");
                            }
                            ;
                            if (v8 instanceof Just && v8.value0 instanceof Left) {
                              return setFacade(new CursorState(cursorFromHoleyDerivZipper(injectHoleyDerivZipper(v8.value0.value0))));
                            }
                            ;
                            if (v8 instanceof Just && v8.value0 instanceof Right) {
                              return setFacade(new SelectState({
                                dzipperp: v8.value0.value0
                              }));
                            }
                            ;
                            throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Editor (line 432, column 9 - line 436, column 88): " + [v8.constructor.name]);
                          }
                          ;
                          if (v7 instanceof TopState) {
                            var mb_select = function(v82) {
                              return v82(dir2);
                            }(on16(_next)(function(v82) {
                              return new Just(hole2("moveSelect next when TopState"));
                            })(on27(_down)(function(v82) {
                              return new Just({
                                dzipperp: new Zipperp(mempty5, new Left(mempty5), v7.value0.dterm)
                              });
                            })($$default(Nothing.value))));
                            if (mb_select instanceof Nothing) {
                              return pure210(unit);
                            }
                            ;
                            if (mb_select instanceof Just) {
                              var v8 = moveZipperpUntil(dir2)(isValidSelect2(spec))(mb_select.value0.dzipperp);
                              if (v8 instanceof Nothing) {
                                return pure210(unit);
                              }
                              ;
                              if (v8 instanceof Just && v8.value0 instanceof Left) {
                                return setFacade(new CursorState(cursorFromHoleyDerivZipper(injectHoleyDerivZipper(v8.value0.value0))));
                              }
                              ;
                              if (v8 instanceof Just && v8.value0 instanceof Right) {
                                return setFacade(new SelectState({
                                  dzipperp: v8.value0.value0
                                }));
                              }
                              ;
                              throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Editor (line 443, column 26 - line 446, column 90): " + [v8.constructor.name]);
                            }
                            ;
                            throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Editor (line 441, column 9 - line 446, column 90): " + [mb_select.constructor.name]);
                          }
                          ;
                          if (v7 instanceof SmallStepState) {
                            return pure210(unit);
                          }
                          ;
                          throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Editor (line 420, column 36 - line 447, column 36): " + [v7.constructor.name]);
                        });
                      };
                      var moveToNextHole = bind113(getFacade)(function(v7) {
                        if (v7 instanceof CursorState && v7.value0.mode instanceof BufferCursorMode) {
                          return pure210(unit);
                        }
                        ;
                        if (v7 instanceof CursorState) {
                          var v8 = moveHDZUntil2(nextDir)(function(hdz) {
                            return isValidCursor2(spec.isValidCursorSort)(hdz) && hdzIsHolePosition2(hdz);
                          })(v7.value0.hdzipper);
                          if (v8 instanceof Nothing) {
                            return pure210(unit);
                          }
                          ;
                          if (v8 instanceof Just) {
                            return setFacade(new CursorState(cursorFromHoleyDerivZipper(v8.value0)));
                          }
                          ;
                          throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Editor (line 340, column 11 - line 342, column 93): " + [v8.constructor.name]);
                        }
                        ;
                        return pure210(unit);
                      });
                      var moveToPrevHole = bind113(getFacade)(function(v7) {
                        if (v7 instanceof CursorState && v7.value0.mode instanceof BufferCursorMode) {
                          return pure210(unit);
                        }
                        ;
                        if (v7 instanceof CursorState) {
                          var v8 = moveHDZUntil2(prevDir)(function(hdz) {
                            return isValidCursor2(spec.isValidCursorSort)(hdz) && hdzIsHolePosition2(hdz);
                          })(v7.value0.hdzipper);
                          if (v8 instanceof Nothing) {
                            return pure210(unit);
                          }
                          ;
                          if (v8 instanceof Just) {
                            return setFacade(new CursorState(cursorFromHoleyDerivZipper(v8.value0)));
                          }
                          ;
                          throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Editor (line 348, column 11 - line 350, column 93): " + [v8.constructor.name]);
                        }
                        ;
                        return pure210(unit);
                      });
                      var onMouseDown2 = function(hdzipper) {
                        return function(event) {
                          var $337 = isValidCursor2(spec.isValidCursorSort)(hdzipper);
                          if ($337) {
                            return discard15(liftEffect9(stopPropagation(toEvent(event))))(function() {
                              return setFacade(new CursorState(cursorFromHoleyDerivZipper(hdzipper)));
                            });
                          }
                          ;
                          return pure210(unit);
                        };
                      };
                      var onMouseOver2 = function(hdzipper) {
                        return function(event) {
                          var stopprop = liftEffect9(stopPropagation(toEvent(event)));
                          var checkValidity10 = function(dzipperp) {
                            var v7 = derivZipperpSorts2(dzipperp);
                            var $339 = isValidSelect2(spec)(dzipperp);
                            if ($339) {
                              return discard15(stopprop)(function() {
                                return setFacade(new SelectState({
                                  dzipperp
                                }));
                              });
                            }
                            ;
                            return pure210(unit);
                          };
                          var dzipper = hdzipperDerivZipper2(hdzipper);
                          var $342 = (buttons(event) & 1) !== 0;
                          if ($342) {
                            return discard15(bind113(getFacade)(function(v7) {
                              if (v7 instanceof CursorState) {
                                var v8 = zipperpFromTo2(hdzipperDerivZipper2(v7.value0.hdzipper))(dzipper);
                                if (v8 instanceof Nothing) {
                                  return pure210(unit);
                                }
                                ;
                                if (v8 instanceof Just) {
                                  return checkValidity10(v8.value0);
                                }
                                ;
                                throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Editor (line 861, column 13 - line 863, column 54): " + [v8.constructor.name]);
                              }
                              ;
                              if (v7 instanceof SelectState) {
                                var from3 = unzipperp2(v7.value0.dzipperp);
                                var v8 = zipperpFromTo2(from3)(dzipper);
                                if (v8 instanceof Nothing) {
                                  return pure210(unit);
                                }
                                ;
                                if (v8 instanceof Just) {
                                  var v9 = normalizeZipperp(v8.value0);
                                  if (v9 instanceof Right) {
                                    return checkValidity10(v9.value0);
                                  }
                                  ;
                                  if (v9 instanceof Left) {
                                    return discard15(stopprop)(function() {
                                      return setFacade(new CursorState(cursorFromHoleyDerivZipper(injectHoleyDerivZipper(v9.value0))));
                                    });
                                  }
                                  ;
                                  throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Editor (line 875, column 17 - line 879, column 110): " + [v9.constructor.name]);
                                }
                                ;
                                throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Editor (line 868, column 13 - line 879, column 110): " + [v8.constructor.name]);
                              }
                              ;
                              if (v7 instanceof TopState) {
                                return pure210(unit);
                              }
                              ;
                              if (v7 instanceof SmallStepState) {
                                return pure210(unit);
                              }
                              ;
                              throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Editor (line 859, column 23 - line 881, column 40): " + [v7.constructor.name]);
                            }))(function() {
                              return setHighlightElement(Nothing.value);
                            });
                          }
                          ;
                          var $355 = isValidCursor2(spec.isValidCursorSort)(hdzipper);
                          if ($355) {
                            return discard15(stopprop)(function() {
                              return setHighlightElement(new Just(hdzipperHoleyDerivPath(hdzipper)));
                            });
                          }
                          ;
                          return pure210(unit);
                        };
                      };
                      var setState = function(st) {
                        return discard15(unsetFacadeElements)(function() {
                          return discard15(put2(v1.value1)(st))(function() {
                            return discard15(setFacade$prime(st))(function() {
                              return discard15(liftEffect9(write(true)(v2.value1)))(function() {
                                return pushHistory(st);
                              });
                            });
                          });
                        });
                      };
                      var setBufferEnabled = function(isEnabled) {
                        return function(mb_str) {
                          return bind113(bind113(getFacade)(function(st) {
                            return assert(cursorState("setBufferEnabled")(st))(function() {
                              return pure210;
                            });
                          }))(function(cursor2) {
                            return discard15(setState(new CursorState({
                              hdzipper: cursor2.hdzipper,
                              mode: function() {
                                if (isEnabled) {
                                  return BufferCursorMode.value;
                                }
                                ;
                                return NavigationCursorMode.value;
                              }()
                            })))(function() {
                              return tell1(tokens.slotToken)(bufferSlot)(unit)(SetBufferEnabledQuery.create(isEnabled)(mb_str));
                            });
                          });
                        };
                      };
                      var getCursorState = function(source3) {
                        return bind113(getState)(function(st) {
                          return assert(cursorState(source3)(st))(function() {
                            return pure210;
                          });
                        });
                      };
                      var getBoundingClientRectFromPath = function(path) {
                        return bind113(getElementByHoleyDerivPath(path))(function(elem4) {
                          return bind113(liftEffect9(getBoundingClientRect(elem4)))(function(rect) {
                            return pure210(rect);
                          });
                        });
                      };
                      var genAndCopyClipTerm = function(dterm) {
                        var generalizingChange = spec.generalizeDerivation(derivTermSort3(dterm));
                        var generalizedDTerm = assertJustExpr2(stepRepeatedly2(Nothing.value)(wrapBoundary3(Down.value)(generalizingChange)(termToSSTerm(dterm)))(spec.stepRules));
                        var forgottenDTerm = map65(forgetDerivLabelSorts2(spec.forgetSorts))(generalizedDTerm);
                        var unifyingSub$prime = fromJust$prime("shouldn't fail if term typechecks")(inferF2(forgottenDTerm));
                        var expectedClipSort = spec.clipboardSort(derivTermSort3(forgottenDTerm));
                        var forgottenTopSort = subMetaExprPartially3(unifyingSub$prime)(derivTermSort3(forgottenDTerm));
                        var unifyingSub = composeSub3(unifyingSub$prime)(snd(fromJust$prime("gacct shouldn't fail")(unify3(expectedClipSort)(forgottenTopSort))));
                        var unifiedDTerm = subDerivTerm3(unifyingSub)(forgottenDTerm);
                        return liftEffect9(write(new Just(new Right(unifiedDTerm)))(v5.value1));
                      };
                      var genAndCopyClipPath = function(dpath) {
                        var generalizingChange = spec.generalizeDerivation(nonemptyUpPathTopSort2(dpath));
                        var v7 = ssTermToChangedPath2(stepRepeatedly2(Nothing.value)(wrapBoundary3(Down.value)(generalizingChange)(wrapPath(dpath)(new Expr(new Marker(0), []))))(spec.stepRules));
                        var forgottenDPath = map121(forgetDerivLabelSorts2(spec.forgetSorts))(v7.value1.value0);
                        var unifyingSub$prime = fromJust$prime("shouldn't fail if term typechecks")(inferPathF2(nonemptyPathInnerSort2(forgottenDPath))(forgottenDPath));
                        var expectedClipSort = spec.clipboardSort(nonemptyUpPathTopSort2(forgottenDPath));
                        var forgottenTopSort = subMetaExprPartially3(unifyingSub$prime)(nonemptyUpPathTopSort2(forgottenDPath));
                        var unifyingSub = composeSub3(unifyingSub$prime)(snd(fromJust$prime("gacct shouldn't fail")(unify3(expectedClipSort)(forgottenTopSort))));
                        var unifiedDPath = subDerivPath2(unifyingSub)(forgottenDPath);
                        return liftEffect9(write(new Just(new Left(unifiedDPath)))(v5.value1));
                      };
                      var finalizeSmallstep = function(ssterm) {
                        var preFinal = termToZipper2(stepRepeatedly2(Nothing.value)(ssterm)(spec.stepRules));
                        var forgottenFinal = map215(forgetDerivLabelSorts2(spec.forgetSorts))(preFinal);
                        var forgottenFinalSort = derivZipperTopSort2(forgottenFinal);
                        var expectedProgSort = spec.clipboardSort(forgottenFinalSort);
                        var unifyingSub = fst(fromJust$prime("fss")(runUnifyMonad2(bind210(inferZipperFImpl2(forgottenFinal))(function() {
                          return bind210(unifyFImpl2(expectedProgSort)(forgottenFinalSort))(function() {
                            return pure33(unit);
                          });
                        }))));
                        var $$final = subDerivZipper2(unifyingSub)(forgottenFinal);
                        return setState(new CursorState(cursorFromHoleyDerivZipper(injectHoleyDerivZipper($$final))));
                      };
                      var doSmallstep = function(ssterm) {
                        if (false) {
                          return setState(new SmallStepState({
                            ssterm
                          }));
                        }
                        ;
                        return finalizeSmallstep(ssterm);
                      };
                      var handleAction = function(v7) {
                        if (v7 instanceof WrapAction) {
                          return bind113(getCursorState("handleAction"))(function(cursor2) {
                            var up = hdzipperDerivPath(cursor2.hdzipper);
                            var dterm = hdzipperDerivTerm2(cursor2.hdzipper);
                            var ssterm = setupSSTermFromWrapAction2(v7.value0.cursorGoesInside)(map121(subDerivLabel2(v7.value0.sub))(up))(v7.value0.topChange)(v7.value0.dpath)(v7.value0.botChange)(map65(subDerivLabel2(v7.value0.sub))(dterm));
                            return doSmallstep(ssterm);
                          });
                        }
                        ;
                        if (v7 instanceof FillAction) {
                          return bind113(getCursorState("handleAction"))(function(cursor2) {
                            var up = hdzipperDerivPath(cursor2.hdzipper);
                            var dzipper0 = new Zipper(up, v7.value0.dterm);
                            var dzipper1 = subDerivZipper2(v7.value0.sub)(dzipper0);
                            var ssterm = setupSSTermFromReplaceAction2(zipperPath(dzipper1))(inject(derivTermSort3(zipperExpr(dzipper1))))(zipperExpr(dzipper1));
                            return doSmallstep(ssterm);
                          });
                        }
                        ;
                        if (v7 instanceof ReplaceAction) {
                          return bind113(getCursorState("handleAction"))(function(cursor2) {
                            var up = hdzipperDerivPath(cursor2.hdzipper);
                            var ssterm = setupSSTermFromReplaceAction2(up)(v7.value0.topChange)(v7.value0.dterm);
                            return doSmallstep(ssterm);
                          });
                        }
                        ;
                        throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Editor (line 294, column 20 - line 334, column 27): " + [v7.constructor.name]);
                      };
                      var handleBufferOutput = function(v7) {
                        if (v7 instanceof ActionOutput) {
                          return handleAction(v7.value0);
                        }
                        ;
                        if (v7 instanceof SetPreviewOutput) {
                          return discard15(tell22(tokens.slotToken)(previewSlot)(leftDir)(SetPreviewQuery.create(v7.value0)))(function() {
                            return tell22(tokens.slotToken)(previewSlot)(rightDir)(SetPreviewQuery.create(v7.value0));
                          });
                        }
                        ;
                        throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Editor (line 814, column 26 - line 818, column 83): " + [v7.constructor.name]);
                      };
                      var deleteTermAtCursor = function(restOfProg) {
                        return function(dterm) {
                          var upChange = spec.onDelete(derivTermSort3(dterm));
                          var v7 = defaultDerivTerm3(rEndpoint3(upChange));
                          if (v7 instanceof Nothing) {
                            return pure210(unit);
                          }
                          ;
                          if (v7 instanceof Just) {
                            var ssterm = setupSSTermFromReplaceAction2(restOfProg)(upChange)(v7.value0);
                            return discard15(doSmallstep(ssterm))(function() {
                              return goToInnerHoleIfPossible;
                            });
                          }
                          ;
                          throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Editor (line 504, column 9 - line 513, column 36): " + [v7.constructor.name]);
                        };
                      };
                      var computeCursorMovement = function(dir2) {
                        return function(hdzipper) {
                          return moveHDZUntil2(dir2)(isValidCursor2(spec.isValidCursorSort))(hdzipper);
                        };
                      };
                      var moveCursor = function(dir2) {
                        return bind113(getFacade)(function(v7) {
                          if (v7 instanceof CursorState && v7.value0.mode instanceof BufferCursorMode) {
                            return pure210(unit);
                          }
                          ;
                          if (v7 instanceof CursorState) {
                            var v8 = computeCursorMovement(dir2)(v7.value0.hdzipper);
                            if (v8 instanceof Nothing) {
                              return pure210(unit);
                            }
                            ;
                            if (v8 instanceof Just) {
                              return setFacade(new CursorState(cursorFromHoleyDerivZipper(v8.value0)));
                            }
                            ;
                            throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Editor (line 393, column 11 - line 395, column 93): " + [v8.constructor.name]);
                          }
                          ;
                          if (v7 instanceof SelectState) {
                            var atTop = on34(_prev)(function(v82) {
                              return true;
                            })($$default(false))(dir2);
                            return setFacade(new CursorState(cursorFromHoleyDerivZipper(injectHoleyDerivZipper(zipperpToZipper2(atTop)(v7.value0.dzipperp)))));
                          }
                          ;
                          if (v7 instanceof TopState) {
                            var dzipper = new Zipper(mempty5, v7.value0.dterm);
                            var v8 = moveHoleyDerivZipper2(dir2)(injectHoleyDerivZipper(dzipper));
                            if (v8 instanceof Nothing) {
                              return pure210(unit);
                            }
                            ;
                            if (v8 instanceof Just) {
                              return setFacade(new CursorState(cursorFromHoleyDerivZipper(v8.value0)));
                            }
                            ;
                            throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Editor (line 411, column 11 - line 413, column 93): " + [v8.constructor.name]);
                          }
                          ;
                          if (v7 instanceof SmallStepState) {
                            return pure210(unit);
                          }
                          ;
                          throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Editor (line 390, column 21 - line 414, column 38): " + [v7.constructor.name]);
                        });
                      };
                      var moveCursorVertically = function(verticalOrHorizontal) {
                        return bind113(getFacade)(function(v7) {
                          if (v7 instanceof CursorState && v7.value0.mode instanceof BufferCursorMode) {
                            return pure210(unit);
                          }
                          ;
                          if (v7 instanceof CursorState) {
                            var getPos = function(hdzipper) {
                              return getBoundingClientRectFromPath(hdzipperHoleyDerivPath(hdzipper));
                            };
                            return bind113(getPos(v7.value0.hdzipper))(function(startRect) {
                              var goUntil = function(dir2) {
                                return function(hdzipper) {
                                  return function(check) {
                                    return bind113(getPos(hdzipper))(function(newPos) {
                                      var $395 = check(newPos);
                                      if ($395) {
                                        return pure210(hdzipper);
                                      }
                                      ;
                                      var v8 = computeCursorMovement(dir2)(hdzipper);
                                      if (v8 instanceof Nothing) {
                                        return pure210(hdzipper);
                                      }
                                      ;
                                      if (v8 instanceof Just) {
                                        return goUntil(dir2)(v8.value0)(check);
                                      }
                                      ;
                                      throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Editor (line 365, column 30 - line 367, column 78): " + [v8.constructor.name]);
                                    });
                                  };
                                };
                              };
                              return bind113(function() {
                                if (verticalOrHorizontal) {
                                  return bind113(goUntil(prevDir)(v7.value0.hdzipper)(function(newpos) {
                                    return newpos.top + 4 < startRect.top;
                                  }))(function(pos1) {
                                    return goUntil(prevDir)(pos1)(function(newpos) {
                                      return newpos.left <= startRect.left + 4;
                                    });
                                  });
                                }
                                ;
                                return bind113(goUntil(nextDir)(v7.value0.hdzipper)(function(newpos) {
                                  return newpos.top > startRect.top + 4;
                                }))(function(pos1) {
                                  return bind113(getPos(pos1))(function(rect1) {
                                    return bind113(goUntil(nextDir)(pos1)(function(newpos) {
                                      return newpos.left + 4 >= startRect.left || newpos.top > rect1.top + 4;
                                    }))(function(pos2) {
                                      return bind113(getPos(pos2))(function(rect2) {
                                        var $399 = rect2.top > rect1.top + 4;
                                        if ($399) {
                                          var v8 = computeCursorMovement(prevDir)(pos2);
                                          if (v8 instanceof Nothing) {
                                            return pure210(pos2);
                                          }
                                          ;
                                          if (v8 instanceof Just) {
                                            return pure210(v8.value0);
                                          }
                                          ;
                                          throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Editor (line 378, column 30 - line 380, column 45): " + [v8.constructor.name]);
                                        }
                                        ;
                                        return pure210(pos2);
                                      });
                                    });
                                  });
                                });
                              }())(function(finalZipper) {
                                return setFacade(new CursorState(cursorFromHoleyDerivZipper(finalZipper)));
                              });
                            });
                          }
                          ;
                          return pure210(unit);
                        });
                      };
                      var handleKeyboardEvent = function(event) {
                        var shiftKey3 = shiftKey2(event);
                        var metaKey3 = metaKey2(event);
                        var key6 = key5(event);
                        var keyCodePoint = function() {
                          var v7 = toCodePointArray(key6);
                          if (v7.length === 1) {
                            return new Just(v7[0]);
                          }
                          ;
                          return Nothing.value;
                        }();
                        var ctrlKey3 = ctrlKey2(event);
                        var cmdKey = ctrlKey3 || metaKey3;
                        return bind113(getFacade)(function(v7) {
                          if (v7 instanceof CursorState && v7.value0.mode instanceof BufferCursorMode) {
                            var $406 = key6 === "Tab" || (key6 === "Enter" || key6 === " ");
                            if ($406) {
                              return discard15(liftEffect9(preventDefault(toEvent2(event))))(function() {
                                return discard15(tell1(tokens.slotToken)(bufferSlot)(unit)(SubmitBufferQuery.create))(function() {
                                  return when7(key6 === " ")(moveToNextHole);
                                });
                              });
                            }
                            ;
                            var $407 = key6 === "Escape";
                            if ($407) {
                              return discard15(liftEffect9(preventDefault(toEvent2(event))))(function() {
                                return setBufferEnabled(false)(Nothing.value);
                              });
                            }
                            ;
                            var $408 = isJust(readVerticalDir(key6));
                            if ($408) {
                              return assert(just("handleKeyboardEvent")(readVerticalDir(key6)))(function() {
                                return function(dir2) {
                                  return discard15(liftEffect9(preventDefault(toEvent2(event))))(function() {
                                    return tell1(tokens.slotToken)(bufferSlot)(unit)(MoveBufferQuery.create(dir2));
                                  });
                                };
                              });
                            }
                            ;
                            return pure210(unit);
                          }
                          ;
                          if (v7 instanceof CursorState && v7.value0.mode instanceof NavigationCursorMode) {
                            var path = hdzipperDerivPath(v7.value0.hdzipper);
                            var dterm = hdzipperDerivTerm2(v7.value0.hdzipper);
                            var $411 = isJust(spec.keyAction(key6)(derivTermSort3(dterm)));
                            if ($411) {
                              return discard15(setState(v7))(function() {
                                var action2 = fromJust6(spec.keyAction(key6)(derivTermSort3(dterm)));
                                return handleAction(action2);
                              });
                            }
                            ;
                            var $412 = cmdKey && key6 === "z";
                            if ($412) {
                              return discard15(liftEffect9(preventDefault(toEvent2(event))))(function() {
                                return bind113(popHistory)(function(v82) {
                                  return bind113(popHistory)(function(v9) {
                                    if (v9 instanceof Nothing) {
                                      return pure210(unit);
                                    }
                                    ;
                                    if (v9 instanceof Just) {
                                      return setState(v9.value0);
                                    }
                                    ;
                                    throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Editor (line 591, column 49 - line 593, column 39): " + [v9.constructor.name]);
                                  });
                                });
                              });
                            }
                            ;
                            var $415 = cmdKey && key6 === "c";
                            if ($415) {
                              return genAndCopyClipTerm(dterm);
                            }
                            ;
                            var $416 = cmdKey && key6 === "x";
                            if ($416) {
                              return discard15(liftEffect9(preventDefault(toEvent2(event))))(function() {
                                return discard15(genAndCopyClipTerm(dterm))(function() {
                                  return deleteTermAtCursor(path)(dterm);
                                });
                              });
                            }
                            ;
                            var $417 = cmdKey && key6 === "v";
                            if ($417) {
                              return bind113(liftEffect9(read(v5.value1)))(function(v82) {
                                if (v82 instanceof Nothing) {
                                  return pure210(unit);
                                }
                                ;
                                if (v82 instanceof Just && v82.value0 instanceof Left) {
                                  return discard15(liftEffect9(preventDefault(toEvent2(event))))(function() {
                                    var specializingChange = spec.specializeDerivation(nonemptyUpPathTopSort2(v82.value0.value0))(derivTermSort3(dterm));
                                    var v9 = ssTermToChangedPath2(stepRepeatedly2(Nothing.value)(wrapBoundary3(Down.value)(specializingChange)(wrapPath(v82.value0.value0)(new Expr(new Marker(0), []))))(spec.stepRules));
                                    var pathChange = getPathChange22(v9.value1.value0)(spec.forgetSorts);
                                    var v10 = spec.splitChange(pathChange);
                                    var v11 = unify3(v10.cursorSort)(derivTermSort3(dterm));
                                    if (v11 instanceof Just) {
                                      var unifiedClipDPath = subDerivPath2(v11.value0.value1)(v9.value1.value0);
                                      var unifiedProgPath = subDerivPath2(v11.value0.value1)(path);
                                      var unifiedProgDTerm = subDerivTerm3(v11.value0.value1)(dterm);
                                      var unifiedDownChange = subSomeMetaChange2(v11.value0.value1)(v10.downChange);
                                      var unifiedUpChange = subSomeMetaChange2(v11.value0.value1)(v10.upChange);
                                      var ssterm = setupSSTermFromWrapAction2(false)(unifiedProgPath)(unifiedUpChange)(unifiedClipDPath)(invert(unifiedDownChange))(unifiedProgDTerm);
                                      return doSmallstep(ssterm);
                                    }
                                    ;
                                    if (v11 instanceof Nothing) {
                                      return pure210(unit);
                                    }
                                    ;
                                    throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Editor (line 621, column 17 - line 638, column 34): " + [v11.constructor.name]);
                                  });
                                }
                                ;
                                if (v82 instanceof Just && v82.value0 instanceof Right) {
                                  return discard15(liftEffect9(preventDefault(toEvent2(event))))(function() {
                                    var specializingChange = spec.specializeDerivation(derivTermSort3(v82.value0.value0))(derivTermSort3(dterm));
                                    var v9 = ssTermToChangedTerm2(stepRepeatedly2(Nothing.value)(wrapBoundary3(Down.value)(specializingChange)(termToSSTerm(v82.value0.value0)))(spec.stepRules));
                                    var v10 = unify3(derivTermSort3(v9.value1))(derivTermSort3(dterm));
                                    if (v10 instanceof Just) {
                                      var unifiedDTerm = subDerivTerm3(v10.value0.value1)(v9.value1);
                                      var unifiedPath = subDerivPath2(v10.value0.value1)(path);
                                      return bind113(function() {
                                        var $436 = hdzIsHolePosition2(v7.value0.hdzipper);
                                        if ($436) {
                                          return pure210(unit);
                                        }
                                        ;
                                        return genAndCopyClipTerm(dterm);
                                      }())(function() {
                                        var ssterm = setupSSTermFromReplaceAction2(unifiedPath)(inject(derivTermSort3(unifiedDTerm)))(unifiedDTerm);
                                        return doSmallstep(ssterm);
                                      });
                                    }
                                    ;
                                    if (v10 instanceof Nothing) {
                                      return pure210(unit);
                                    }
                                    ;
                                    throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Editor (line 648, column 17 - line 665, column 34): " + [v10.constructor.name]);
                                  });
                                }
                                ;
                                throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Editor (line 607, column 53 - line 665, column 34): " + [v82.constructor.name]);
                              });
                            }
                            ;
                            var $444 = cmdKey && key6 === "s";
                            if ($444) {
                              return discard15(liftEffect9(preventDefault(toEvent2(event))))(function() {
                                return bind113(getBoundingClientRectFromPath(hdzipperHoleyDerivPath(v7.value0.hdzipper)))(function(rect) {
                                  return log5(pretty5("[print sort]" + bullets(["path = " + pretty33(path), "dterm = " + pretty42(dterm), "sort = " + pretty52(derivTermSort3(dterm)), "dlabel = " + pretty62(exprLabel(dterm)), "rect = " + show15(rect), "serialized-path = " + serializePath2(path)])));
                                });
                              });
                            }
                            ;
                            var $445 = cmdKey && key6 === "p";
                            if ($445) {
                              return discard15(liftEffect9(preventDefault(toEvent2(event))))(function() {
                                return discard15(function() {
                                  if (shiftKey3) {
                                    return log5(encode_uri_string(printSerializedDerivZipper22(hdzipperDerivZipper2(v7.value0.hdzipper))));
                                  }
                                  ;
                                  return log5(printSerializedDerivZipper22(hdzipperDerivZipper2(v7.value0.hdzipper)));
                                }())(function() {
                                  return pure210(unit);
                                });
                              });
                            }
                            ;
                            var $447 = cmdKey && key6 === "l";
                            if ($447) {
                              return discard15(liftEffect9(preventDefault(toEvent2(event))))(function() {
                                return bind113(liftAff2(navigator_clipboard_text))(function(s) {
                                  var dterm$prime = decodeSerializedZipper22(identity23)(s);
                                  return setState(new TopState({
                                    dterm: dterm$prime
                                  }));
                                });
                              });
                            }
                            ;
                            var $448 = isOpenBufferKey(key6);
                            if ($448) {
                              return discard15(liftEffect9(preventDefault(toEvent2(event))))(function() {
                                return bind113(function() {
                                  var v82 = hdzipperDerivTerm2(v7.value0.hdzipper);
                                  if (v82.value0 instanceof DerivLiteral && v82.value0.value0 instanceof DataString) {
                                    return pure210(new Just(v82.value0.value0.value0));
                                  }
                                  ;
                                  if (v82.value0 instanceof DerivLiteral && v82.value0.value0 instanceof DataInt) {
                                    return pure210(new Just(show10(v82.value0.value0.value0)));
                                  }
                                  ;
                                  return pure210(Nothing.value);
                                }())(function(mb_str) {
                                  return setBufferEnabled(true)(mb_str);
                                });
                              });
                            }
                            ;
                            var $458 = !cmdKey && eq14(map314(isQueryKey)(keyCodePoint))(new Just(true));
                            if ($458) {
                              return discard15(liftEffect9(preventDefault(toEvent2(event))))(function() {
                                return setBufferEnabled(true)(new Just(key6));
                              });
                            }
                            ;
                            var $459 = key6 === "Backspace" || key6 === "Delete";
                            if ($459) {
                              return discard15(liftEffect9(preventDefault(toEvent2(event))))(function() {
                                return deleteTermAtCursor(path)(dterm);
                              });
                            }
                            ;
                            var $460 = key6 === "Escape";
                            if ($460) {
                              return discard15(liftEffect9(preventDefault(toEvent2(event))))(function() {
                                return setFacade(new TopState({
                                  dterm: unzipper2(hdzipperDerivZipper2(v7.value0.hdzipper))
                                }));
                              });
                            }
                            ;
                            var $461 = key6 === "ArrowUp";
                            if ($461) {
                              return moveCursorVertically(true);
                            }
                            ;
                            var $462 = key6 === "ArrowDown";
                            if ($462) {
                              return moveCursorVertically(false);
                            }
                            ;
                            var $463 = isJust(readMoveDir(key6));
                            if ($463) {
                              return assert(just("handleKeyboardEvent")(readMoveDir(key6)))(function() {
                                return function(dir2) {
                                  return discard15(liftEffect9(preventDefault(toEvent2(event))))(function() {
                                    return function() {
                                      if (shiftKey3) {
                                        return moveSelect;
                                      }
                                      ;
                                      return moveCursor;
                                    }()(dir2);
                                  });
                                };
                              });
                            }
                            ;
                            var $465 = shiftKey3 && key6 === "Tab";
                            if ($465) {
                              return discard15(liftEffect9(preventDefault(toEvent2(event))))(function() {
                                return moveToPrevHole;
                              });
                            }
                            ;
                            var $466 = key6 === " " || key6 === "Tab";
                            if ($466) {
                              return discard15(liftEffect9(preventDefault(toEvent2(event))))(function() {
                                return moveToNextHole;
                              });
                            }
                            ;
                            return pure210(unit);
                          }
                          ;
                          if (v7 instanceof SelectState) {
                            var deleteSelection = function(unit2) {
                              var sort2 = derivTermSort3(v7.value0.dzipperp.value2);
                              var selection$prime$prime = function() {
                                if (v7.value0.dzipperp.value1 instanceof Left) {
                                  return reversePath5(v7.value0.dzipperp.value1.value0);
                                }
                                ;
                                if (v7.value0.dzipperp.value1 instanceof Right) {
                                  return v7.value0.dzipperp.value1.value0;
                                }
                                ;
                                throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Editor (line 735, column 35 - line 737, column 35): " + [v7.value0.dzipperp.value1.constructor.name]);
                              }();
                              var v82 = spec.splitChange(getPathChange22(selection$prime$prime)(spec.forgetSorts));
                              var ssterm = setupSSTermFromWrapAction2(false)(v7.value0.dzipperp.value0)(invert(v82.upChange))(mempty13)(v82.downChange)(v7.value0.dzipperp.value2);
                              return doSmallstep(ssterm);
                            };
                            var $481 = cmdKey && key6 === "c";
                            if ($481) {
                              return genAndCopyClipPath(either(reversePath5)(identity23)(v7.value0.dzipperp.value1));
                            }
                            ;
                            var $482 = cmdKey && key6 === "x";
                            if ($482) {
                              return discard15(genAndCopyClipPath(either(reversePath5)(identity23)(v7.value0.dzipperp.value1)))(function() {
                                return deleteSelection(unit);
                              });
                            }
                            ;
                            var $483 = key6 === "Escape";
                            if ($483) {
                              return setFacade(new CursorState(cursorFromHoleyDerivZipper(injectHoleyDerivZipper(unzipperp2(v7.value0.dzipperp)))));
                            }
                            ;
                            var $484 = key6 === "Backspace" || key6 === "Delete";
                            if ($484) {
                              return deleteSelection(unit);
                            }
                            ;
                            var $485 = isOpenBufferKey(key6);
                            if ($485) {
                              return discard15(liftEffect9(preventDefault(toEvent2(event))))(function() {
                                var cursor2 = cursorFromHoleyDerivZipper(injectHoleyDerivZipper(unzipperp2(v7.value0.dzipperp)));
                                return discard15(setFacade(new CursorState(cursor2)))(function() {
                                  return setBufferEnabled(true)(Nothing.value);
                                });
                              });
                            }
                            ;
                            var $486 = eq14(map314(isQueryKey)(keyCodePoint))(new Just(true));
                            if ($486) {
                              return discard15(liftEffect9(preventDefault(toEvent2(event))))(function() {
                                var cursor2 = cursorFromHoleyDerivZipper(injectHoleyDerivZipper(unzipperp2(v7.value0.dzipperp)));
                                return discard15(setFacade(new CursorState(cursor2)))(function() {
                                  return setBufferEnabled(true)(new Just(key6));
                                });
                              });
                            }
                            ;
                            var $487 = isJust(readMoveDir(key6));
                            if ($487) {
                              return assert(just("handleKeyboardEvent")(readMoveDir(key6)))(function() {
                                return function(dir2) {
                                  return discard15(liftEffect9(preventDefault(toEvent2(event))))(function() {
                                    return function() {
                                      if (shiftKey3) {
                                        return moveSelect;
                                      }
                                      ;
                                      return moveCursor;
                                    }()(dir2);
                                  });
                                };
                              });
                            }
                            ;
                            return pure210(unit);
                          }
                          ;
                          if (v7 instanceof TopState) {
                            var $493 = isOpenBufferKey(key6);
                            if ($493) {
                              return discard15(liftEffect9(preventDefault(toEvent2(event))))(function() {
                                return setFacade(new CursorState(cursorFromHoleyDerivZipper(injectHoleyDerivZipper(new Zipper(mempty5, v7.value0.dterm)))));
                              });
                            }
                            ;
                            var $494 = isJust(readMoveDir(key6));
                            if ($494) {
                              return setFacade(new CursorState(cursorFromHoleyDerivZipper(injectHoleyDerivZipper(new Zipper(mempty5, v7.value0.dterm)))));
                            }
                            ;
                            return pure210(unit);
                          }
                          ;
                          if (v7 instanceof SmallStepState) {
                            var $496 = key6 === " ";
                            if ($496) {
                              var v8 = step5(Nothing.value)(v7.value0.ssterm)(spec.stepRules);
                              if (v8 instanceof Nothing) {
                                return finalizeSmallstep(v7.value0.ssterm);
                              }
                              ;
                              if (v8 instanceof Just) {
                                return setState(new SmallStepState({
                                  ssterm: v8.value0
                                }));
                              }
                              ;
                              throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Editor (line 800, column 13 - line 802, column 76): " + [v8.constructor.name]);
                            }
                            ;
                            var $499 = key6 === "Enter";
                            if ($499) {
                              var $$final = stepRepeatedly2(Nothing.value)(v7.value0.ssterm)(spec.stepRules);
                              return finalizeSmallstep($$final);
                            }
                            ;
                            return pure210(unit);
                          }
                          ;
                          throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Editor (line 556, column 21 - line 807, column 22): " + [v7.constructor.name]);
                        });
                      };
                      var locs = {
                        spec,
                        handleBufferOutput,
                        onMouseDown: onMouseDown2,
                        onMouseOver: onMouseOver2
                      };
                      return discard8(useLifecycleEffect(bind113(liftEffect9(bind30(windowImpl)(document)))(function(doc) {
                        return bind113(subscribe3(eventListener2(keydown)(toEventTarget(doc))(function() {
                          var $530 = map314(handleKeyboardEvent);
                          return function($531) {
                            return $530(fromEvent($531));
                          };
                        }())))(function(kbdSubId) {
                          return pure210(new Just(unsubscribe4(kbdSubId)));
                        });
                      })))(function() {
                        return discard8(useQuery(tokens.queryToken)(function(v7) {
                          if (v7 instanceof SetProgram) {
                            return discard15(setState(new TopState({
                              dterm: v7.value0
                            })))(function() {
                              return bind113(sequence8(mapFlipped8(v7.value1)(function(path) {
                                return setNodeElementStyle("marked")(Nothing.value)(new Just(path));
                              })))(function() {
                                return pure210(new Just(v7.value2));
                              });
                            });
                          }
                          ;
                          if (v7 instanceof GetProgram) {
                            return bind113(getState)(function(st) {
                              return pure210(new Just(v7.value0(stateToDerivTerm2(st))));
                            });
                          }
                          ;
                          throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Editor (line 923, column 33 - line 930, column 51): " + [v7.constructor.name]);
                        }))(function() {
                          return pure14(div2([classNames(["editor"])])([div2([classNames(["program"]), onMouseLeave(function(event) {
                            return discard15(liftEffect9(stopPropagation(toEvent(event))))(function() {
                              return setHighlightElement(Nothing.value);
                            });
                          })])(function() {
                            if (v1.value0 instanceof CursorState) {
                              var dzipper = hdzipperDerivZipper2(v1.value0.value0.hdzipper);
                              if (!v1.value0.value0.hdzipper.value1) {
                                return [renderPath2(locs)(dzipper)(renderDerivTerm2(locs)(true)(false)(dzipper))(defaultRenderingContext(pathIdPrefix))];
                              }
                              ;
                              if (v1.value0.value0.hdzipper.value1) {
                                return [renderPath2(locs)(dzipper)(renderDerivTerm2(locs)(false)(true)(dzipper))(defaultRenderingContext(pathIdPrefix))];
                              }
                              ;
                              throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Editor (line 961, column 11 - line 971, column 16): " + [v1.value0.value0.hdzipper.constructor.name]);
                            }
                            ;
                            if (v1.value0 instanceof SelectState) {
                              return hole2("render SelectState");
                            }
                            ;
                            if (v1.value0 instanceof TopState) {
                              return [renderDerivTerm2(locs)(false)(false)(new Zipper(Nil.value, v1.value0.value0.dterm))(defaultRenderingContext(pathIdPrefix))];
                            }
                            ;
                            if (v1.value0 instanceof SmallStepState) {
                              return [div2([classNames(["smallstep-program"])])([renderSSTerm2(locs)(v1.value0.value0.ssterm)(defaultRenderingContext(pathIdPrefix))])];
                            }
                            ;
                            throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.Editor (line 957, column 7 - line 979, column 15): " + [v1.value0.constructor.name]);
                          }())]));
                        });
                      });
                    });
                  });
                });
              });
            });
          });
        };
      });
    };
  };

  // output/Language.Pantograph.Generic.Rendering.RunnableEditor/index.js
  var discard16 = /* @__PURE__ */ discard(discardUnit)(bindStyleM);
  var fromString10 = /* @__PURE__ */ fromString2(isStringKey);
  var fromString16 = /* @__PURE__ */ fromString2(isStringValue);
  var singleton11 = /* @__PURE__ */ singleton2(plusArray);
  var editorIsSymbol = {
    reflectSymbol: function() {
      return "editor";
    }
  };
  var slot_3 = /* @__PURE__ */ slot_()(editorIsSymbol)(ordUnit);
  var bind31 = /* @__PURE__ */ bind(bindHalogenM);
  var request3 = /* @__PURE__ */ request()(editorIsSymbol)(ordUnit);
  var get7 = /* @__PURE__ */ get(monadStateHalogenM);
  var modify_5 = /* @__PURE__ */ modify_2(monadStateHalogenM);
  var pure34 = /* @__PURE__ */ pure(applicativeHalogenM);
  var RunProgram = /* @__PURE__ */ function() {
    function RunProgram2() {
    }
    ;
    RunProgram2.value = new RunProgram2();
    return RunProgram2;
  }();
  var _editorSlot = /* @__PURE__ */ function() {
    return $$Proxy.value;
  }();
  var component2 = function(dictIsRuleLabel) {
    var editorComponent2 = editorComponent(dictIsRuleLabel);
    var render2 = function(state3) {
      return div2([style3(discard16(display(flex))(function() {
        return flexDirection(column);
      }))])([div2([style3(discard16(height8(em2(1.5)))(function() {
        return discard16(function() {
          var s = em2(0.5);
          return padding(s)(s)(s)(s);
        }())(function() {
          return discard16(display(flex))(function() {
            return discard16(flexDirection(row))(function() {
              return discard16(rule(new Property2(fromString10("gap"), fromString16("0.5em"))))(function() {
                return discard16(backgroundColor(rgb(0)(0)(0)))(function() {
                  return color(rgb(255)(255)(255));
                });
              });
            });
          });
        });
      }))])([button([onMouseDown($$const(RunProgram.value))])([text5("run")]), div2([id2("evaluation"), style3(fontFamily([])(singleton11(monospace)))])([text5(state3.output)])]), div2([style3(function() {
        var s = em2(1);
        return padding(s)(s)(s)(s);
      }())])([slot_3(_editorSlot)(unit)(editorComponent2(unit))(state3.spec)])]);
    };
    var initialState = function(input3) {
      return {
        spec: input3.spec,
        interpreter: input3.interpreter,
        output: ""
      };
    };
    var handleAction = function(v) {
      return bind31(request3(_editorSlot)(unit)(GetProgram.create))(function(mprog) {
        return bind31(get7)(function(state3) {
          if (mprog instanceof Just) {
            return modify_5(function(v1) {
              var $23 = {};
              for (var $24 in v1) {
                if ({}.hasOwnProperty.call(v1, $24)) {
                  $23[$24] = v1[$24];
                }
                ;
              }
              ;
              $23.output = state3.interpreter(mprog.value0);
              return $23;
            });
          }
          ;
          if (mprog instanceof Nothing) {
            return pure34(unit);
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Generic.Rendering.RunnableEditor (line 51, column 7 - line 53, column 29): " + [mprog.constructor.name]);
        });
      });
    };
    var $$eval2 = mkEval({
      handleQuery: defaultEval.handleQuery,
      receive: defaultEval.receive,
      initialize: defaultEval.initialize,
      finalize: defaultEval.finalize,
      handleAction
    });
    return mkComponent({
      initialState,
      render: render2,
      "eval": $$eval2
    });
  };

  // output/Data.Bounded.Generic/index.js
  var genericTopNoArguments = /* @__PURE__ */ function() {
    return {
      "genericTop'": NoArguments.value
    };
  }();
  var genericTopArgument = function(dictBounded) {
    return {
      "genericTop'": top(dictBounded)
    };
  };
  var genericTop$prime = function(dict) {
    return dict["genericTop'"];
  };
  var genericTopConstructor = function(dictGenericTop) {
    return {
      "genericTop'": genericTop$prime(dictGenericTop)
    };
  };
  var genericTopSum = function(dictGenericTop) {
    return {
      "genericTop'": new Inr(genericTop$prime(dictGenericTop))
    };
  };
  var genericTop = function(dictGeneric) {
    var to2 = to(dictGeneric);
    return function(dictGenericTop) {
      return to2(genericTop$prime(dictGenericTop));
    };
  };
  var genericBottomNoArguments = /* @__PURE__ */ function() {
    return {
      "genericBottom'": NoArguments.value
    };
  }();
  var genericBottomArgument = function(dictBounded) {
    return {
      "genericBottom'": bottom(dictBounded)
    };
  };
  var genericBottom$prime = function(dict) {
    return dict["genericBottom'"];
  };
  var genericBottomConstructor = function(dictGenericBottom) {
    return {
      "genericBottom'": genericBottom$prime(dictGenericBottom)
    };
  };
  var genericBottomSum = function(dictGenericBottom) {
    return {
      "genericBottom'": new Inl(genericBottom$prime(dictGenericBottom))
    };
  };
  var genericBottom = function(dictGeneric) {
    var to2 = to(dictGeneric);
    return function(dictGenericBottom) {
      return to2(genericBottom$prime(dictGenericBottom));
    };
  };

  // output/Data.Enum.Generic/index.js
  var map66 = /* @__PURE__ */ map(functorMaybe);
  var genericSucc$prime = function(dict) {
    return dict["genericSucc'"];
  };
  var genericSucc = function(dictGeneric) {
    var to2 = to(dictGeneric);
    var from3 = from(dictGeneric);
    return function(dictGenericEnum) {
      var $156 = map66(to2);
      var $157 = genericSucc$prime(dictGenericEnum);
      return function($158) {
        return $156($157(from3($158)));
      };
    };
  };
  var genericPred$prime = function(dict) {
    return dict["genericPred'"];
  };
  var genericPred = function(dictGeneric) {
    var to2 = to(dictGeneric);
    var from3 = from(dictGeneric);
    return function(dictGenericEnum) {
      var $159 = map66(to2);
      var $160 = genericPred$prime(dictGenericEnum);
      return function($161) {
        return $159($160(from3($161)));
      };
    };
  };
  var genericEnumSum = function(dictGenericEnum) {
    var genericPred$prime1 = genericPred$prime(dictGenericEnum);
    var genericSucc$prime1 = genericSucc$prime(dictGenericEnum);
    return function(dictGenericTop) {
      var genericTop$prime2 = genericTop$prime(dictGenericTop);
      return function(dictGenericEnum1) {
        var genericPred$prime2 = genericPred$prime(dictGenericEnum1);
        var genericSucc$prime2 = genericSucc$prime(dictGenericEnum1);
        return function(dictGenericBottom) {
          var genericBottom$prime2 = genericBottom$prime(dictGenericBottom);
          return {
            "genericPred'": function(v) {
              if (v instanceof Inl) {
                return map66(Inl.create)(genericPred$prime1(v.value0));
              }
              ;
              if (v instanceof Inr) {
                var v1 = genericPred$prime2(v.value0);
                if (v1 instanceof Nothing) {
                  return new Just(new Inl(genericTop$prime2));
                }
                ;
                if (v1 instanceof Just) {
                  return new Just(new Inr(v1.value0));
                }
                ;
                throw new Error("Failed pattern match at Data.Enum.Generic (line 30, column 14 - line 32, column 31): " + [v1.constructor.name]);
              }
              ;
              throw new Error("Failed pattern match at Data.Enum.Generic (line 28, column 18 - line 32, column 31): " + [v.constructor.name]);
            },
            "genericSucc'": function(v) {
              if (v instanceof Inl) {
                var v1 = genericSucc$prime1(v.value0);
                if (v1 instanceof Nothing) {
                  return new Just(new Inr(genericBottom$prime2));
                }
                ;
                if (v1 instanceof Just) {
                  return new Just(new Inl(v1.value0));
                }
                ;
                throw new Error("Failed pattern match at Data.Enum.Generic (line 34, column 14 - line 36, column 31): " + [v1.constructor.name]);
              }
              ;
              if (v instanceof Inr) {
                return map66(Inr.create)(genericSucc$prime2(v.value0));
              }
              ;
              throw new Error("Failed pattern match at Data.Enum.Generic (line 33, column 18 - line 37, column 36): " + [v.constructor.name]);
            }
          };
        };
      };
    };
  };
  var genericEnumNoArguments = {
    "genericPred'": function(v) {
      return Nothing.value;
    },
    "genericSucc'": function(v) {
      return Nothing.value;
    }
  };
  var genericEnumConstructor = function(dictGenericEnum) {
    var genericPred$prime1 = genericPred$prime(dictGenericEnum);
    var genericSucc$prime1 = genericSucc$prime(dictGenericEnum);
    return {
      "genericPred'": function(v) {
        return map66(Constructor)(genericPred$prime1(v));
      },
      "genericSucc'": function(v) {
        return map66(Constructor)(genericSucc$prime1(v));
      }
    };
  };
  var genericEnumArgument = function(dictEnum) {
    var pred2 = pred(dictEnum);
    var succ2 = succ(dictEnum);
    return {
      "genericPred'": function(v) {
        return map66(Argument)(pred2(v));
      },
      "genericSucc'": function(v) {
        return map66(Argument)(succ2(v));
      }
    };
  };

  // output/Language.Pantograph.Lib.DefaultEdits/index.js
  var bind32 = /* @__PURE__ */ bind(bindMaybe);
  var pure35 = /* @__PURE__ */ pure(applicativeMaybe);
  var pure114 = /* @__PURE__ */ pure(applicativeEither);
  var map67 = /* @__PURE__ */ map(functorList);
  var fromFoldable20 = /* @__PURE__ */ fromFoldable(foldableArray);
  var zipDowns5 = /* @__PURE__ */ zipDowns(zippableZipper);
  var makeSubEditFromTerm = function(dictIsRuleLabel) {
    var unify3 = unify(isExprLabelSortLabel(dictIsRuleLabel.IsExprLabel0()));
    var derivTermSort3 = derivTermSort(dictIsRuleLabel);
    var subDerivTerm3 = subDerivTerm(dictIsRuleLabel);
    return function(dterm) {
      return function(name15) {
        return function(cursorSort) {
          return bind32(unify3(derivTermSort3(dterm))(cursorSort))(function(v) {
            return pure35({
              label: name15,
              action: pure114(defer3(function(v1) {
                return new FillAction({
                  sub: v.value1,
                  dterm: subDerivTerm3(v.value1)(dterm)
                });
              }))
            });
          });
        };
      };
    };
  };
  var makeChangeEditFromTerm = function(dictIsRuleLabel) {
    var IsExprLabel0 = dictIsRuleLabel.IsExprLabel0();
    var unify3 = unify(isExprLabelSortLabel(IsExprLabel0));
    var derivTermSort3 = derivTermSort(dictIsRuleLabel);
    var diff3 = diff(eqMeta(eqSortLabel(IsExprLabel0.Ord1().Eq0())));
    var subDerivTerm3 = subDerivTerm(dictIsRuleLabel);
    return function(dterm) {
      return function(name15) {
        return function(cursorSort) {
          return bind32(unify3(derivTermSort3(dterm))(cursorSort))(function(v) {
            return pure35({
              label: name15,
              action: pure114(defer3(function(v1) {
                return new ReplaceAction({
                  topChange: diff3(cursorSort)(v.value0),
                  dterm: subDerivTerm3(v.value1)(dterm)
                });
              }))
            });
          });
        };
      };
    };
  };
  var makeActionFromPath = function(dictIsRuleLabel) {
    var getPathChange22 = getPathChange2(dictIsRuleLabel.Bounded3().Ord0())(dictIsRuleLabel);
    var isExprLabelSortLabel3 = isExprLabelSortLabel(dictIsRuleLabel.IsExprLabel0());
    var unify3 = unify(isExprLabelSortLabel3);
    var subSomeMetaChange2 = subSomeMetaChange(isExprLabelSortLabel3);
    var subDerivPath2 = subDerivPath(dictIsRuleLabel);
    return function(cursorGoesInside) {
      return function(forgetSorts2) {
        return function(splitChange2) {
          return function(path) {
            return function(name15) {
              return function(cursorSort) {
                var change2 = getPathChange22(path)(forgetSorts2);
                var v = splitChange2(change2);
                return bind32(unify3(v.cursorSort)(cursorSort))(function(v1) {
                  var topChange = subSomeMetaChange2(v1.value1)(v.upChange);
                  var botChange = subSomeMetaChange2(v1.value1)(invert(v.downChange));
                  var pathSubbed = subDerivPath2(v1.value1)(path);
                  return pure35(new WrapAction({
                    topChange,
                    dpath: pathSubbed,
                    botChange,
                    sub: v1.value1,
                    cursorGoesInside
                  }));
                });
              };
            };
          };
        };
      };
    };
  };
  var makeEditFromPath = function(dictIsRuleLabel) {
    var makeActionFromPath1 = makeActionFromPath(dictIsRuleLabel);
    return function(forgetSorts2) {
      return function(splitChange2) {
        return function(v) {
          return function(name15) {
            return function(cursorSort) {
              return bind32(makeActionFromPath1(false)(forgetSorts2)(splitChange2)(v.value0)(name15)(cursorSort))(function(action2) {
                return pure35({
                  label: name15,
                  action: pure114(defer3(function(v1) {
                    return action2;
                  }))
                });
              });
            };
          };
        };
      };
    };
  };
  var makeWrapEdits = function(dictIsRuleLabel) {
    var derivTermSort3 = derivTermSort(dictIsRuleLabel);
    var isHole2 = isHole(dictIsRuleLabel);
    var nonemptyUpPathTopSort2 = nonemptyUpPathTopSort(dictIsRuleLabel);
    var makeEditFromPath1 = makeEditFromPath(dictIsRuleLabel);
    var nonemptyPathInnerSort2 = nonemptyPathInnerSort(dictIsRuleLabel);
    return function(isValidCursorSort2) {
      return function(isValidSelectionSorts2) {
        return function(forgetSorts2) {
          return function(splitChange2) {
            return function(name15) {
              return function(cursorSort) {
                return function(dterm) {
                  var getPaths = function(v) {
                    var rest = concat(map67(getPaths)(fromFoldable20(zipDowns5(v))));
                    var $74 = isValidCursorSort2(derivTermSort3(v.value1)) && isHole2(exprLabel(v.value1));
                    if ($74) {
                      return new Cons(v, rest);
                    }
                    ;
                    return rest;
                  };
                  var edits = flip(mapMaybe)(getPaths(new Zipper(Nil.value, dterm)))(function(v) {
                    return bind32(function() {
                      if (v.value0 instanceof Nil) {
                        return Nothing.value;
                      }
                      ;
                      return new Just(unit);
                    }())(function() {
                      return bind32(function() {
                        var $79 = isValidSelectionSorts2({
                          bottom: derivTermSort3(v.value1),
                          top: nonemptyUpPathTopSort2(v.value0)
                        });
                        if ($79) {
                          return new Just(unit);
                        }
                        ;
                        return Nothing.value;
                      }())(function() {
                        return makeEditFromPath1(forgetSorts2)(splitChange2)(new Tuple(v.value0, nonemptyPathInnerSort2(v.value0)))(name15)(cursorSort);
                      });
                    });
                  });
                  var $82 = length4(edits) === 0;
                  if ($82) {
                    return singleton3({
                      label: name15,
                      action: new Left("can't wrap around this type")
                    });
                  }
                  ;
                  return edits;
                };
              };
            };
          };
        };
      };
    };
  };

  // output/Language.Pantograph.Specific.Currying/index.js
  var genericShowConstructor5 = /* @__PURE__ */ genericShowConstructor(genericShowArgsNoArguments);
  var OpPlusIsSymbol = {
    reflectSymbol: function() {
      return "OpPlus";
    }
  };
  var OpMinusIsSymbol = {
    reflectSymbol: function() {
      return "OpMinus";
    }
  };
  var OpTimesIsSymbol = {
    reflectSymbol: function() {
      return "OpTimes";
    }
  };
  var OpDivideIsSymbol = {
    reflectSymbol: function() {
      return "OpDivide";
    }
  };
  var OpModIsSymbol = {
    reflectSymbol: function() {
      return "OpMod";
    }
  };
  var OpPowIsSymbol = {
    reflectSymbol: function() {
      return "OpPow";
    }
  };
  var OpLessIsSymbol = {
    reflectSymbol: function() {
      return "OpLess";
    }
  };
  var OpGreaterIsSymbol = {
    reflectSymbol: function() {
      return "OpGreater";
    }
  };
  var OpLessEqIsSymbol = {
    reflectSymbol: function() {
      return "OpLessEq";
    }
  };
  var OpGreaterEqIsSymbol = {
    reflectSymbol: function() {
      return "OpGreaterEq";
    }
  };
  var OpAndIsSymbol = {
    reflectSymbol: function() {
      return "OpAnd";
    }
  };
  var OpOrIsSymbol = {
    reflectSymbol: function() {
      return "OpOr";
    }
  };
  var BoolIsSymbol = {
    reflectSymbol: function() {
      return "Bool";
    }
  };
  var IntIsSymbol = {
    reflectSymbol: function() {
      return "Int";
    }
  };
  var VarSortIsSymbol = {
    reflectSymbol: function() {
      return "VarSort";
    }
  };
  var TermSortIsSymbol = {
    reflectSymbol: function() {
      return "TermSort";
    }
  };
  var TypeSortIsSymbol = {
    reflectSymbol: function() {
      return "TypeSort";
    }
  };
  var CtxConsSortIsSymbol = {
    reflectSymbol: function() {
      return "CtxConsSort";
    }
  };
  var CtxNilSortIsSymbol = {
    reflectSymbol: function() {
      return "CtxNilSort";
    }
  };
  var DataTypeIsSymbol = {
    reflectSymbol: function() {
      return "DataType";
    }
  };
  var ArrowIsSymbol = {
    reflectSymbol: function() {
      return "Arrow";
    }
  };
  var ListIsSymbol = {
    reflectSymbol: function() {
      return "List";
    }
  };
  var LocalIsSymbol = {
    reflectSymbol: function() {
      return "Local";
    }
  };
  var NonLocalIsSymbol = {
    reflectSymbol: function() {
      return "NonLocal";
    }
  };
  var ConstTrueIsSymbol = {
    reflectSymbol: function() {
      return "ConstTrue";
    }
  };
  var ConstFalseIsSymbol = {
    reflectSymbol: function() {
      return "ConstFalse";
    }
  };
  var ConstNotIsSymbol = {
    reflectSymbol: function() {
      return "ConstNot";
    }
  };
  var ZeroIsSymbol = {
    reflectSymbol: function() {
      return "Zero";
    }
  };
  var SucIsSymbol = {
    reflectSymbol: function() {
      return "Suc";
    }
  };
  var LamIsSymbol = {
    reflectSymbol: function() {
      return "Lam";
    }
  };
  var LetIsSymbol = {
    reflectSymbol: function() {
      return "Let";
    }
  };
  var AppIsSymbol = {
    reflectSymbol: function() {
      return "App";
    }
  };
  var GreyAppIsSymbol = {
    reflectSymbol: function() {
      return "GreyApp";
    }
  };
  var VarIsSymbol = {
    reflectSymbol: function() {
      return "Var";
    }
  };
  var FreeVarIsSymbol = {
    reflectSymbol: function() {
      return "FreeVar";
    }
  };
  var TermHoleIsSymbol = {
    reflectSymbol: function() {
      return "TermHole";
    }
  };
  var TypeHoleIsSymbol = {
    reflectSymbol: function() {
      return "TypeHole";
    }
  };
  var DataTypeRuleIsSymbol = {
    reflectSymbol: function() {
      return "DataTypeRule";
    }
  };
  var ArrowRuleIsSymbol = {
    reflectSymbol: function() {
      return "ArrowRule";
    }
  };
  var ListRuleIsSymbol = {
    reflectSymbol: function() {
      return "ListRule";
    }
  };
  var NewlineIsSymbol = {
    reflectSymbol: function() {
      return "Newline";
    }
  };
  var IfIsSymbol = {
    reflectSymbol: function() {
      return "If";
    }
  };
  var ErrorBoundaryIsSymbol = {
    reflectSymbol: function() {
      return "ErrorBoundary";
    }
  };
  var ConstantRuleIsSymbol = {
    reflectSymbol: function() {
      return "ConstantRule";
    }
  };
  var InfixRuleIsSymbol = {
    reflectSymbol: function() {
      return "InfixRule";
    }
  };
  var EqualsRuleIsSymbol = {
    reflectSymbol: function() {
      return "EqualsRule";
    }
  };
  var NilRuleIsSymbol = {
    reflectSymbol: function() {
      return "NilRule";
    }
  };
  var ConsRuleIsSymbol = {
    reflectSymbol: function() {
      return "ConsRule";
    }
  };
  var LengthRuleIsSymbol = {
    reflectSymbol: function() {
      return "LengthRule";
    }
  };
  var AppendRuleIsSymbol = {
    reflectSymbol: function() {
      return "AppendRule";
    }
  };
  var HeadRuleIsSymbol = {
    reflectSymbol: function() {
      return "HeadRule";
    }
  };
  var TailRuleIsSymbol = {
    reflectSymbol: function() {
      return "TailRule";
    }
  };
  var IndexRuleIsSymbol = {
    reflectSymbol: function() {
      return "IndexRule";
    }
  };
  var ListMatchRuleIsSymbol = {
    reflectSymbol: function() {
      return "ListMatchRule";
    }
  };
  var IntegerLiteralIsSymbol = {
    reflectSymbol: function() {
      return "IntegerLiteral";
    }
  };
  var CommentIsSymbol = {
    reflectSymbol: function() {
      return "Comment";
    }
  };
  var genericEqConstructor4 = /* @__PURE__ */ genericEqConstructor(genericEqNoArguments);
  var genericEqSum5 = /* @__PURE__ */ genericEqSum(genericEqConstructor4);
  var genericEqSum12 = /* @__PURE__ */ genericEqSum5(genericEqConstructor4);
  var genericEqSum22 = /* @__PURE__ */ genericEqSum5(genericEqSum12);
  var genericEqSum32 = /* @__PURE__ */ genericEqSum5(genericEqSum22);
  var genericOrdConstructor3 = /* @__PURE__ */ genericOrdConstructor(genericOrdNoArguments);
  var genericOrdSum4 = /* @__PURE__ */ genericOrdSum(genericOrdConstructor3);
  var genericOrdSum1 = /* @__PURE__ */ genericOrdSum4(genericOrdConstructor3);
  var genericOrdSum22 = /* @__PURE__ */ genericOrdSum4(genericOrdSum1);
  var genericOrdSum32 = /* @__PURE__ */ genericOrdSum4(genericOrdSum22);
  var show11 = /* @__PURE__ */ show(showString);
  var genericEnumConstructor2 = /* @__PURE__ */ genericEnumConstructor(genericEnumNoArguments);
  var genericTopConstructor2 = /* @__PURE__ */ genericTopConstructor(genericTopNoArguments);
  var genericEnumSum2 = /* @__PURE__ */ genericEnumSum(genericEnumConstructor2)(genericTopConstructor2);
  var genericBottomConstructor2 = /* @__PURE__ */ genericBottomConstructor(genericBottomNoArguments);
  var genericEnumSum1 = /* @__PURE__ */ genericEnumSum2(genericEnumConstructor2)(genericBottomConstructor2);
  var genericBottomSum2 = /* @__PURE__ */ genericBottomSum(genericBottomConstructor2);
  var genericEnumSum22 = /* @__PURE__ */ genericEnumSum2(genericEnumSum1)(genericBottomSum2);
  var genericEnumSum3 = /* @__PURE__ */ genericEnumSum2(/* @__PURE__ */ genericEnumSum2(/* @__PURE__ */ genericEnumSum2(/* @__PURE__ */ genericEnumSum2(/* @__PURE__ */ genericEnumSum2(/* @__PURE__ */ genericEnumSum2(/* @__PURE__ */ genericEnumSum2(/* @__PURE__ */ genericEnumSum2(genericEnumSum22)(genericBottomSum2))(genericBottomSum2))(genericBottomSum2))(genericBottomSum2))(genericBottomSum2))(genericBottomSum2))(genericBottomSum2))(genericBottomSum2);
  var genericEnumSum4 = /* @__PURE__ */ genericEnumSum2(genericEnumSum3)(genericBottomSum2);
  var genericTopSum2 = /* @__PURE__ */ genericTopSum(genericTopConstructor2);
  var genericTopSum1 = /* @__PURE__ */ genericTopSum(genericTopSum2);
  var genericTopSum22 = /* @__PURE__ */ genericTopSum(/* @__PURE__ */ genericTopSum(/* @__PURE__ */ genericTopSum(/* @__PURE__ */ genericTopSum(/* @__PURE__ */ genericTopSum(/* @__PURE__ */ genericTopSum(/* @__PURE__ */ genericTopSum(/* @__PURE__ */ genericTopSum(/* @__PURE__ */ genericTopSum(genericTopSum1)))))))));
  var pure36 = /* @__PURE__ */ pure(applicativeMaybe);
  var trace4 = /* @__PURE__ */ trace();
  var lookup$prime3 = /* @__PURE__ */ lookup$prime(ordMetaVar);
  var bind33 = /* @__PURE__ */ bind(bindMaybe);
  var append110 = /* @__PURE__ */ append(semigroupArray);
  var empty12 = /* @__PURE__ */ empty(plusMaybe);
  var identity24 = /* @__PURE__ */ identity(categoryFn);
  var show16 = /* @__PURE__ */ show(showInt);
  var discard17 = /* @__PURE__ */ discard(discardUnit)(bindMaybe);
  var traceM2 = /* @__PURE__ */ traceM()(monadMaybe);
  var map68 = /* @__PURE__ */ map(functorList);
  var fromFoldable21 = /* @__PURE__ */ fromFoldable3(foldableList);
  var mapFlipped9 = /* @__PURE__ */ mapFlipped(functorArray);
  var mapFlipped13 = /* @__PURE__ */ mapFlipped(functorList);
  var $$delete5 = /* @__PURE__ */ $$delete4(ordString);
  var pure115 = /* @__PURE__ */ pure(applicativeEither);
  var insert15 = /* @__PURE__ */ insert7(ordString);
  var lookup19 = /* @__PURE__ */ lookup2(ordMetaVar);
  var filter6 = /* @__PURE__ */ filter4(ordMetaVar);
  var toUnfoldable8 = /* @__PURE__ */ toUnfoldable4(unfoldableArray);
  var OpPlus = /* @__PURE__ */ function() {
    function OpPlus2() {
    }
    ;
    OpPlus2.value = new OpPlus2();
    return OpPlus2;
  }();
  var OpMinus = /* @__PURE__ */ function() {
    function OpMinus2() {
    }
    ;
    OpMinus2.value = new OpMinus2();
    return OpMinus2;
  }();
  var OpTimes = /* @__PURE__ */ function() {
    function OpTimes2() {
    }
    ;
    OpTimes2.value = new OpTimes2();
    return OpTimes2;
  }();
  var OpDivide = /* @__PURE__ */ function() {
    function OpDivide2() {
    }
    ;
    OpDivide2.value = new OpDivide2();
    return OpDivide2;
  }();
  var OpMod = /* @__PURE__ */ function() {
    function OpMod2() {
    }
    ;
    OpMod2.value = new OpMod2();
    return OpMod2;
  }();
  var OpPow = /* @__PURE__ */ function() {
    function OpPow2() {
    }
    ;
    OpPow2.value = new OpPow2();
    return OpPow2;
  }();
  var OpLess = /* @__PURE__ */ function() {
    function OpLess2() {
    }
    ;
    OpLess2.value = new OpLess2();
    return OpLess2;
  }();
  var OpGreater = /* @__PURE__ */ function() {
    function OpGreater2() {
    }
    ;
    OpGreater2.value = new OpGreater2();
    return OpGreater2;
  }();
  var OpLessEq = /* @__PURE__ */ function() {
    function OpLessEq2() {
    }
    ;
    OpLessEq2.value = new OpLessEq2();
    return OpLessEq2;
  }();
  var OpGreaterEq = /* @__PURE__ */ function() {
    function OpGreaterEq2() {
    }
    ;
    OpGreaterEq2.value = new OpGreaterEq2();
    return OpGreaterEq2;
  }();
  var OpAnd = /* @__PURE__ */ function() {
    function OpAnd2() {
    }
    ;
    OpAnd2.value = new OpAnd2();
    return OpAnd2;
  }();
  var OpOr = /* @__PURE__ */ function() {
    function OpOr2() {
    }
    ;
    OpOr2.value = new OpOr2();
    return OpOr2;
  }();
  var Bool = /* @__PURE__ */ function() {
    function Bool2() {
    }
    ;
    Bool2.value = new Bool2();
    return Bool2;
  }();
  var Int = /* @__PURE__ */ function() {
    function Int2() {
    }
    ;
    Int2.value = new Int2();
    return Int2;
  }();
  var VarSort = /* @__PURE__ */ function() {
    function VarSort2() {
    }
    ;
    VarSort2.value = new VarSort2();
    return VarSort2;
  }();
  var TermSort = /* @__PURE__ */ function() {
    function TermSort2() {
    }
    ;
    TermSort2.value = new TermSort2();
    return TermSort2;
  }();
  var TypeSort = /* @__PURE__ */ function() {
    function TypeSort2() {
    }
    ;
    TypeSort2.value = new TypeSort2();
    return TypeSort2;
  }();
  var CtxConsSort = /* @__PURE__ */ function() {
    function CtxConsSort2() {
    }
    ;
    CtxConsSort2.value = new CtxConsSort2();
    return CtxConsSort2;
  }();
  var CtxNilSort = /* @__PURE__ */ function() {
    function CtxNilSort2() {
    }
    ;
    CtxNilSort2.value = new CtxNilSort2();
    return CtxNilSort2;
  }();
  var DataType = /* @__PURE__ */ function() {
    function DataType2(value0) {
      this.value0 = value0;
    }
    ;
    DataType2.create = function(value0) {
      return new DataType2(value0);
    };
    return DataType2;
  }();
  var Arrow = /* @__PURE__ */ function() {
    function Arrow2() {
    }
    ;
    Arrow2.value = new Arrow2();
    return Arrow2;
  }();
  var List2 = /* @__PURE__ */ function() {
    function List3() {
    }
    ;
    List3.value = new List3();
    return List3;
  }();
  var Local = /* @__PURE__ */ function() {
    function Local2() {
    }
    ;
    Local2.value = new Local2();
    return Local2;
  }();
  var NonLocal = /* @__PURE__ */ function() {
    function NonLocal2() {
    }
    ;
    NonLocal2.value = new NonLocal2();
    return NonLocal2;
  }();
  var ConstTrue = /* @__PURE__ */ function() {
    function ConstTrue2() {
    }
    ;
    ConstTrue2.value = new ConstTrue2();
    return ConstTrue2;
  }();
  var ConstFalse = /* @__PURE__ */ function() {
    function ConstFalse2() {
    }
    ;
    ConstFalse2.value = new ConstFalse2();
    return ConstFalse2;
  }();
  var ConstNot = /* @__PURE__ */ function() {
    function ConstNot2() {
    }
    ;
    ConstNot2.value = new ConstNot2();
    return ConstNot2;
  }();
  var Zero = /* @__PURE__ */ function() {
    function Zero2() {
    }
    ;
    Zero2.value = new Zero2();
    return Zero2;
  }();
  var Suc = /* @__PURE__ */ function() {
    function Suc2() {
    }
    ;
    Suc2.value = new Suc2();
    return Suc2;
  }();
  var Lam = /* @__PURE__ */ function() {
    function Lam2() {
    }
    ;
    Lam2.value = new Lam2();
    return Lam2;
  }();
  var Let = /* @__PURE__ */ function() {
    function Let2() {
    }
    ;
    Let2.value = new Let2();
    return Let2;
  }();
  var App2 = /* @__PURE__ */ function() {
    function App3() {
    }
    ;
    App3.value = new App3();
    return App3;
  }();
  var GreyApp = /* @__PURE__ */ function() {
    function GreyApp2() {
    }
    ;
    GreyApp2.value = new GreyApp2();
    return GreyApp2;
  }();
  var Var = /* @__PURE__ */ function() {
    function Var2() {
    }
    ;
    Var2.value = new Var2();
    return Var2;
  }();
  var FreeVar = /* @__PURE__ */ function() {
    function FreeVar2() {
    }
    ;
    FreeVar2.value = new FreeVar2();
    return FreeVar2;
  }();
  var TermHole = /* @__PURE__ */ function() {
    function TermHole2() {
    }
    ;
    TermHole2.value = new TermHole2();
    return TermHole2;
  }();
  var TypeHole = /* @__PURE__ */ function() {
    function TypeHole2() {
    }
    ;
    TypeHole2.value = new TypeHole2();
    return TypeHole2;
  }();
  var DataTypeRule = /* @__PURE__ */ function() {
    function DataTypeRule2(value0) {
      this.value0 = value0;
    }
    ;
    DataTypeRule2.create = function(value0) {
      return new DataTypeRule2(value0);
    };
    return DataTypeRule2;
  }();
  var ArrowRule = /* @__PURE__ */ function() {
    function ArrowRule2() {
    }
    ;
    ArrowRule2.value = new ArrowRule2();
    return ArrowRule2;
  }();
  var ListRule = /* @__PURE__ */ function() {
    function ListRule2() {
    }
    ;
    ListRule2.value = new ListRule2();
    return ListRule2;
  }();
  var Newline = /* @__PURE__ */ function() {
    function Newline2() {
    }
    ;
    Newline2.value = new Newline2();
    return Newline2;
  }();
  var If = /* @__PURE__ */ function() {
    function If2() {
    }
    ;
    If2.value = new If2();
    return If2;
  }();
  var ErrorBoundary = /* @__PURE__ */ function() {
    function ErrorBoundary2() {
    }
    ;
    ErrorBoundary2.value = new ErrorBoundary2();
    return ErrorBoundary2;
  }();
  var ConstantRule = /* @__PURE__ */ function() {
    function ConstantRule2(value0) {
      this.value0 = value0;
    }
    ;
    ConstantRule2.create = function(value0) {
      return new ConstantRule2(value0);
    };
    return ConstantRule2;
  }();
  var InfixRule = /* @__PURE__ */ function() {
    function InfixRule2(value0) {
      this.value0 = value0;
    }
    ;
    InfixRule2.create = function(value0) {
      return new InfixRule2(value0);
    };
    return InfixRule2;
  }();
  var EqualsRule = /* @__PURE__ */ function() {
    function EqualsRule2() {
    }
    ;
    EqualsRule2.value = new EqualsRule2();
    return EqualsRule2;
  }();
  var NilRule = /* @__PURE__ */ function() {
    function NilRule2() {
    }
    ;
    NilRule2.value = new NilRule2();
    return NilRule2;
  }();
  var ConsRule = /* @__PURE__ */ function() {
    function ConsRule2() {
    }
    ;
    ConsRule2.value = new ConsRule2();
    return ConsRule2;
  }();
  var LengthRule = /* @__PURE__ */ function() {
    function LengthRule2() {
    }
    ;
    LengthRule2.value = new LengthRule2();
    return LengthRule2;
  }();
  var AppendRule = /* @__PURE__ */ function() {
    function AppendRule2() {
    }
    ;
    AppendRule2.value = new AppendRule2();
    return AppendRule2;
  }();
  var HeadRule = /* @__PURE__ */ function() {
    function HeadRule2() {
    }
    ;
    HeadRule2.value = new HeadRule2();
    return HeadRule2;
  }();
  var TailRule = /* @__PURE__ */ function() {
    function TailRule2() {
    }
    ;
    TailRule2.value = new TailRule2();
    return TailRule2;
  }();
  var IndexRule = /* @__PURE__ */ function() {
    function IndexRule2() {
    }
    ;
    IndexRule2.value = new IndexRule2();
    return IndexRule2;
  }();
  var ListMatchRule = /* @__PURE__ */ function() {
    function ListMatchRule2() {
    }
    ;
    ListMatchRule2.value = new ListMatchRule2();
    return ListMatchRule2;
  }();
  var IntegerLiteral = /* @__PURE__ */ function() {
    function IntegerLiteral2() {
    }
    ;
    IntegerLiteral2.value = new IntegerLiteral2();
    return IntegerLiteral2;
  }();
  var Comment = /* @__PURE__ */ function() {
    function Comment2() {
    }
    ;
    Comment2.value = new Comment2();
    return Comment2;
  }();
  var genericRuleLabel_ = {
    to: function(x) {
      if (x instanceof Inl) {
        return Zero.value;
      }
      ;
      if (x instanceof Inr && x.value0 instanceof Inl) {
        return Suc.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && x.value0.value0 instanceof Inl)) {
        return Lam.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && x.value0.value0.value0 instanceof Inl))) {
        return Let.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0 instanceof Inl)))) {
        return App2.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0 instanceof Inl))))) {
        return GreyApp.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0.value0 instanceof Inl)))))) {
        return Var.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0.value0.value0 instanceof Inl))))))) {
        return FreeVar.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inl)))))))) {
        return TermHole.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inl))))))))) {
        return TypeHole.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inl)))))))))) {
        return new DataTypeRule(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inl))))))))))) {
        return ArrowRule.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inl)))))))))))) {
        return ListRule.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inl))))))))))))) {
        return Newline.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inl)))))))))))))) {
        return If.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inl))))))))))))))) {
        return ErrorBoundary.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inl)))))))))))))))) {
        return new ConstantRule(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inl))))))))))))))))) {
        return new InfixRule(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inl)))))))))))))))))) {
        return EqualsRule.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inl))))))))))))))))))) {
        return NilRule.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inl)))))))))))))))))))) {
        return ConsRule.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inl))))))))))))))))))))) {
        return LengthRule.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inl)))))))))))))))))))))) {
        return AppendRule.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inl))))))))))))))))))))))) {
        return HeadRule.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inl)))))))))))))))))))))))) {
        return TailRule.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inl))))))))))))))))))))))))) {
        return IndexRule.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inl)))))))))))))))))))))))))) {
        return ListMatchRule.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inl))))))))))))))))))))))))))) {
        return IntegerLiteral.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr))))))))))))))))))))))))))) {
        return Comment.value;
      }
      ;
      throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 321, column 1 - line 321, column 36): " + [x.constructor.name]);
    },
    from: function(x) {
      if (x instanceof Zero) {
        return new Inl(NoArguments.value);
      }
      ;
      if (x instanceof Suc) {
        return new Inr(new Inl(NoArguments.value));
      }
      ;
      if (x instanceof Lam) {
        return new Inr(new Inr(new Inl(NoArguments.value)));
      }
      ;
      if (x instanceof Let) {
        return new Inr(new Inr(new Inr(new Inl(NoArguments.value))));
      }
      ;
      if (x instanceof App2) {
        return new Inr(new Inr(new Inr(new Inr(new Inl(NoArguments.value)))));
      }
      ;
      if (x instanceof GreyApp) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inl(NoArguments.value))))));
      }
      ;
      if (x instanceof Var) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inl(NoArguments.value)))))));
      }
      ;
      if (x instanceof FreeVar) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inl(NoArguments.value))))))));
      }
      ;
      if (x instanceof TermHole) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inl(NoArguments.value)))))))));
      }
      ;
      if (x instanceof TypeHole) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inl(NoArguments.value))))))))));
      }
      ;
      if (x instanceof DataTypeRule) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inl(x.value0)))))))))));
      }
      ;
      if (x instanceof ArrowRule) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inl(NoArguments.value))))))))))));
      }
      ;
      if (x instanceof ListRule) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inl(NoArguments.value)))))))))))));
      }
      ;
      if (x instanceof Newline) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inl(NoArguments.value))))))))))))));
      }
      ;
      if (x instanceof If) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inl(NoArguments.value)))))))))))))));
      }
      ;
      if (x instanceof ErrorBoundary) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inl(NoArguments.value))))))))))))))));
      }
      ;
      if (x instanceof ConstantRule) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inl(x.value0)))))))))))))))));
      }
      ;
      if (x instanceof InfixRule) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inl(x.value0))))))))))))))))));
      }
      ;
      if (x instanceof EqualsRule) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inl(NoArguments.value)))))))))))))))))));
      }
      ;
      if (x instanceof NilRule) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inl(NoArguments.value))))))))))))))))))));
      }
      ;
      if (x instanceof ConsRule) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inl(NoArguments.value)))))))))))))))))))));
      }
      ;
      if (x instanceof LengthRule) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inl(NoArguments.value))))))))))))))))))))));
      }
      ;
      if (x instanceof AppendRule) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inl(NoArguments.value)))))))))))))))))))))));
      }
      ;
      if (x instanceof HeadRule) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inl(NoArguments.value))))))))))))))))))))))));
      }
      ;
      if (x instanceof TailRule) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inl(NoArguments.value)))))))))))))))))))))))));
      }
      ;
      if (x instanceof IndexRule) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inl(NoArguments.value))))))))))))))))))))))))));
      }
      ;
      if (x instanceof ListMatchRule) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inl(NoArguments.value)))))))))))))))))))))))))));
      }
      ;
      if (x instanceof IntegerLiteral) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inl(NoArguments.value))))))))))))))))))))))))))));
      }
      ;
      if (x instanceof Comment) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(NoArguments.value))))))))))))))))))))))))))));
      }
      ;
      throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 321, column 1 - line 321, column 36): " + [x.constructor.name]);
    }
  };
  var genericPreSortLabel_ = {
    to: function(x) {
      if (x instanceof Inl) {
        return VarSort.value;
      }
      ;
      if (x instanceof Inr && x.value0 instanceof Inl) {
        return TermSort.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && x.value0.value0 instanceof Inl)) {
        return TypeSort.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && x.value0.value0.value0 instanceof Inl))) {
        return CtxConsSort.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0 instanceof Inl)))) {
        return CtxNilSort.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0 instanceof Inl))))) {
        return new DataType(x.value0.value0.value0.value0.value0.value0);
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0.value0 instanceof Inl)))))) {
        return Arrow.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0.value0.value0 instanceof Inl))))))) {
        return List2.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inl)))))))) {
        return Local.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr)))))))) {
        return NonLocal.value;
      }
      ;
      throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 121, column 1 - line 121, column 39): " + [x.constructor.name]);
    },
    from: function(x) {
      if (x instanceof VarSort) {
        return new Inl(NoArguments.value);
      }
      ;
      if (x instanceof TermSort) {
        return new Inr(new Inl(NoArguments.value));
      }
      ;
      if (x instanceof TypeSort) {
        return new Inr(new Inr(new Inl(NoArguments.value)));
      }
      ;
      if (x instanceof CtxConsSort) {
        return new Inr(new Inr(new Inr(new Inl(NoArguments.value))));
      }
      ;
      if (x instanceof CtxNilSort) {
        return new Inr(new Inr(new Inr(new Inr(new Inl(NoArguments.value)))));
      }
      ;
      if (x instanceof DataType) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inl(x.value0))))));
      }
      ;
      if (x instanceof Arrow) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inl(NoArguments.value)))))));
      }
      ;
      if (x instanceof List2) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inl(NoArguments.value))))))));
      }
      ;
      if (x instanceof Local) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inl(NoArguments.value)))))))));
      }
      ;
      if (x instanceof NonLocal) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(NoArguments.value)))))))));
      }
      ;
      throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 121, column 1 - line 121, column 39): " + [x.constructor.name]);
    }
  };
  var genericInfixOperator_ = {
    to: function(x) {
      if (x instanceof Inl) {
        return OpPlus.value;
      }
      ;
      if (x instanceof Inr && x.value0 instanceof Inl) {
        return OpMinus.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && x.value0.value0 instanceof Inl)) {
        return OpTimes.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && x.value0.value0.value0 instanceof Inl))) {
        return OpDivide.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0 instanceof Inl)))) {
        return OpMod.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0 instanceof Inl))))) {
        return OpPow.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0.value0 instanceof Inl)))))) {
        return OpLess.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0.value0.value0 instanceof Inl))))))) {
        return OpGreater.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inl)))))))) {
        return OpLessEq.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inl))))))))) {
        return OpGreaterEq.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inl)))))))))) {
        return OpAnd.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr)))))))))) {
        return OpOr.value;
      }
      ;
      throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 240, column 1 - line 240, column 40): " + [x.constructor.name]);
    },
    from: function(x) {
      if (x instanceof OpPlus) {
        return new Inl(NoArguments.value);
      }
      ;
      if (x instanceof OpMinus) {
        return new Inr(new Inl(NoArguments.value));
      }
      ;
      if (x instanceof OpTimes) {
        return new Inr(new Inr(new Inl(NoArguments.value)));
      }
      ;
      if (x instanceof OpDivide) {
        return new Inr(new Inr(new Inr(new Inl(NoArguments.value))));
      }
      ;
      if (x instanceof OpMod) {
        return new Inr(new Inr(new Inr(new Inr(new Inl(NoArguments.value)))));
      }
      ;
      if (x instanceof OpPow) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inl(NoArguments.value))))));
      }
      ;
      if (x instanceof OpLess) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inl(NoArguments.value)))))));
      }
      ;
      if (x instanceof OpGreater) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inl(NoArguments.value))))))));
      }
      ;
      if (x instanceof OpLessEq) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inl(NoArguments.value)))))))));
      }
      ;
      if (x instanceof OpGreaterEq) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inl(NoArguments.value))))))))));
      }
      ;
      if (x instanceof OpAnd) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inl(NoArguments.value)))))))))));
      }
      ;
      if (x instanceof OpOr) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(NoArguments.value)))))))))));
      }
      ;
      throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 240, column 1 - line 240, column 40): " + [x.constructor.name]);
    }
  };
  var genericShow9 = /* @__PURE__ */ genericShow(genericInfixOperator_)(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(OpPlusIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(OpMinusIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(OpTimesIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(OpDivideIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(OpModIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(OpPowIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(OpLessIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(OpGreaterIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(OpLessEqIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(OpGreaterEqIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(OpAndIsSymbol))(/* @__PURE__ */ genericShowConstructor5(OpOrIsSymbol)))))))))))));
  var genericEq5 = /* @__PURE__ */ genericEq(genericInfixOperator_)(/* @__PURE__ */ genericEqSum5(/* @__PURE__ */ genericEqSum5(/* @__PURE__ */ genericEqSum5(/* @__PURE__ */ genericEqSum5(/* @__PURE__ */ genericEqSum5(/* @__PURE__ */ genericEqSum5(/* @__PURE__ */ genericEqSum5(/* @__PURE__ */ genericEqSum5(genericEqSum32)))))))));
  var genericCompare5 = /* @__PURE__ */ genericCompare(genericInfixOperator_)(/* @__PURE__ */ genericOrdSum4(/* @__PURE__ */ genericOrdSum4(/* @__PURE__ */ genericOrdSum4(/* @__PURE__ */ genericOrdSum4(/* @__PURE__ */ genericOrdSum4(/* @__PURE__ */ genericOrdSum4(/* @__PURE__ */ genericOrdSum4(/* @__PURE__ */ genericOrdSum4(genericOrdSum32)))))))));
  var genericPred2 = /* @__PURE__ */ genericPred(genericInfixOperator_)(genericEnumSum4);
  var genericSucc2 = /* @__PURE__ */ genericSucc(genericInfixOperator_)(genericEnumSum4);
  var genericEncodeJson3 = /* @__PURE__ */ genericEncodeJson(genericInfixOperator_)(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(OpPlusIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(OpMinusIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(OpTimesIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(OpDivideIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(OpModIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(OpPowIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(OpLessIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(OpGreaterIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(OpLessEqIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(OpGreaterEqIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(OpAndIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepConstructor(OpOrIsSymbol)(encodeRepArgsNoArguments)))))))))))));
  var genericDecodeJson3 = /* @__PURE__ */ genericDecodeJson(genericInfixOperator_)(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(OpPlusIsSymbol))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(OpMinusIsSymbol))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(OpTimesIsSymbol))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(OpDivideIsSymbol))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(OpModIsSymbol))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(OpPowIsSymbol))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(OpLessIsSymbol))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(OpGreaterIsSymbol))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(OpLessEqIsSymbol))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(OpGreaterEqIsSymbol))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(OpAndIsSymbol))(/* @__PURE__ */ decodeRepConstructorNoArgs(OpOrIsSymbol)))))))))))));
  var showInfixOperator = {
    show: function(x) {
      return genericShow9(x);
    }
  };
  var genericDataType_ = {
    to: function(x) {
      if (x instanceof Inl) {
        return Bool.value;
      }
      ;
      if (x instanceof Inr) {
        return Int.value;
      }
      ;
      throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 90, column 1 - line 90, column 35): " + [x.constructor.name]);
    },
    from: function(x) {
      if (x instanceof Bool) {
        return new Inl(NoArguments.value);
      }
      ;
      if (x instanceof Int) {
        return new Inr(NoArguments.value);
      }
      ;
      throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 90, column 1 - line 90, column 35): " + [x.constructor.name]);
    }
  };
  var genericShow14 = /* @__PURE__ */ genericShow(genericDataType_)(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(BoolIsSymbol))(/* @__PURE__ */ genericShowConstructor5(IntIsSymbol)));
  var genericEq13 = /* @__PURE__ */ genericEq(genericDataType_)(genericEqSum12);
  var genericCompare13 = /* @__PURE__ */ genericCompare(genericDataType_)(genericOrdSum1);
  var genericPred1 = /* @__PURE__ */ genericPred(genericDataType_)(genericEnumSum1);
  var genericSucc1 = /* @__PURE__ */ genericSucc(genericDataType_)(genericEnumSum1);
  var genericEncodeJson1 = /* @__PURE__ */ genericEncodeJson(genericDataType_)(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(BoolIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepConstructor(IntIsSymbol)(encodeRepArgsNoArguments)));
  var genericDecodeJson1 = /* @__PURE__ */ genericDecodeJson(genericDataType_)(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(BoolIsSymbol))(/* @__PURE__ */ decodeRepConstructorNoArgs(IntIsSymbol)));
  var showDataType = {
    show: function(x) {
      return genericShow14(x);
    }
  };
  var show23 = /* @__PURE__ */ show(showDataType);
  var genericShowConstructor12 = /* @__PURE__ */ genericShowConstructor(/* @__PURE__ */ genericShowArgsArgument(showDataType));
  var genericShow23 = /* @__PURE__ */ genericShow(genericPreSortLabel_)(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(VarSortIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(TermSortIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(TypeSortIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(CtxConsSortIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(CtxNilSortIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor12(DataTypeIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(ArrowIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(ListIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(LocalIsSymbol))(/* @__PURE__ */ genericShowConstructor5(NonLocalIsSymbol)))))))))));
  var prettyDataType = {
    pretty: show23
  };
  var pretty6 = /* @__PURE__ */ pretty(prettyDataType);
  var showPreSortLabel = {
    show: function(x) {
      return genericShow23(x);
    }
  };
  var showExpr2 = /* @__PURE__ */ showExpr(/* @__PURE__ */ showMeta(/* @__PURE__ */ showSortLabel(showPreSortLabel)));
  var show33 = /* @__PURE__ */ show(/* @__PURE__ */ showMaybe(showExpr2));
  var show42 = /* @__PURE__ */ show(showExpr2);
  var prettyPreSortLabel = {
    pretty: /* @__PURE__ */ show(showPreSortLabel)
  };
  var genericConstant_ = {
    to: function(x) {
      if (x instanceof Inl) {
        return ConstTrue.value;
      }
      ;
      if (x instanceof Inr && x.value0 instanceof Inl) {
        return ConstFalse.value;
      }
      ;
      if (x instanceof Inr && x.value0 instanceof Inr) {
        return ConstNot.value;
      }
      ;
      throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 199, column 1 - line 199, column 35): " + [x.constructor.name]);
    },
    from: function(x) {
      if (x instanceof ConstTrue) {
        return new Inl(NoArguments.value);
      }
      ;
      if (x instanceof ConstFalse) {
        return new Inr(new Inl(NoArguments.value));
      }
      ;
      if (x instanceof ConstNot) {
        return new Inr(new Inr(NoArguments.value));
      }
      ;
      throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 199, column 1 - line 199, column 35): " + [x.constructor.name]);
    }
  };
  var genericShow34 = /* @__PURE__ */ genericShow(genericConstant_)(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(ConstTrueIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(ConstFalseIsSymbol))(/* @__PURE__ */ genericShowConstructor5(ConstNotIsSymbol))));
  var genericEq23 = /* @__PURE__ */ genericEq(genericConstant_)(genericEqSum22);
  var genericCompare23 = /* @__PURE__ */ genericCompare(genericConstant_)(genericOrdSum22);
  var genericPred22 = /* @__PURE__ */ genericPred(genericConstant_)(genericEnumSum22);
  var genericSucc22 = /* @__PURE__ */ genericSucc(genericConstant_)(genericEnumSum22);
  var genericEncodeJson22 = /* @__PURE__ */ genericEncodeJson(genericConstant_)(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(ConstTrueIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(ConstFalseIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepConstructor(ConstNotIsSymbol)(encodeRepArgsNoArguments))));
  var genericDecodeJson22 = /* @__PURE__ */ genericDecodeJson(genericConstant_)(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(ConstTrueIsSymbol))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(ConstFalseIsSymbol))(/* @__PURE__ */ decodeRepConstructorNoArgs(ConstNotIsSymbol))));
  var showConstant = {
    show: function(x) {
      return genericShow34(x);
    }
  };
  var genericShow42 = /* @__PURE__ */ genericShow(genericRuleLabel_)(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(ZeroIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(SucIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(LamIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(LetIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(AppIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(GreyAppIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(VarIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(FreeVarIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(TermHoleIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(TypeHoleIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor12(DataTypeRuleIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(ArrowRuleIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(ListRuleIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(NewlineIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(IfIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(ErrorBoundaryIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor(/* @__PURE__ */ genericShowArgsArgument(showConstant))(ConstantRuleIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor(/* @__PURE__ */ genericShowArgsArgument(showInfixOperator))(InfixRuleIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(EqualsRuleIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(NilRuleIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(ConsRuleIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(LengthRuleIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(AppendRuleIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(HeadRuleIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(TailRuleIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(IndexRuleIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(ListMatchRuleIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor5(IntegerLiteralIsSymbol))(/* @__PURE__ */ genericShowConstructor5(CommentIsSymbol))))))))))))))))))))))))))))));
  var showRuleLabel = {
    show: function(x) {
      return genericShow42(x);
    }
  };
  var show52 = /* @__PURE__ */ show(/* @__PURE__ */ showTuple(showRuleLabel)(/* @__PURE__ */ showArray(showString)));
  var prettyRuleLabel = {
    pretty: /* @__PURE__ */ show(showRuleLabel)
  };
  var pretty12 = /* @__PURE__ */ pretty(prettyRuleLabel);
  var eqInfixOperator = {
    eq: function(x) {
      return genericEq5(x);
    }
  };
  var eq23 = /* @__PURE__ */ eq(eqInfixOperator);
  var ordInfixOperator = {
    compare: function(x) {
      return function(y) {
        return genericCompare5(x)(y);
      };
    },
    Eq0: function() {
      return eqInfixOperator;
    }
  };
  var compare9 = /* @__PURE__ */ compare(ordInfixOperator);
  var eqDataType = {
    eq: function(x) {
      return genericEq13(x);
    }
  };
  var genericEq32 = /* @__PURE__ */ genericEq(genericPreSortLabel_)(/* @__PURE__ */ genericEqSum5(/* @__PURE__ */ genericEqSum5(/* @__PURE__ */ genericEqSum5(/* @__PURE__ */ genericEqSum5(/* @__PURE__ */ genericEqSum5(/* @__PURE__ */ genericEqSum(/* @__PURE__ */ genericEqConstructor(/* @__PURE__ */ genericEqArgument(eqDataType)))(genericEqSum32)))))));
  var eq33 = /* @__PURE__ */ eq(eqDataType);
  var eqPreSortLabel = {
    eq: function(x) {
      return genericEq32(x);
    }
  };
  var eqMeta2 = /* @__PURE__ */ eqMeta(/* @__PURE__ */ eqSortLabel(eqPreSortLabel));
  var eq42 = /* @__PURE__ */ eq(/* @__PURE__ */ eqExpr(/* @__PURE__ */ eqChangeLabel(eqMeta2)));
  var eq52 = /* @__PURE__ */ eq(/* @__PURE__ */ eqExpr(eqMeta2));
  var diff2 = /* @__PURE__ */ diff(eqMeta2);
  var ordDataType = {
    compare: function(x) {
      return function(y) {
        return genericCompare13(x)(y);
      };
    },
    Eq0: function() {
      return eqDataType;
    }
  };
  var genericCompare32 = /* @__PURE__ */ genericCompare(genericPreSortLabel_)(/* @__PURE__ */ genericOrdSum4(/* @__PURE__ */ genericOrdSum4(/* @__PURE__ */ genericOrdSum4(/* @__PURE__ */ genericOrdSum4(/* @__PURE__ */ genericOrdSum4(/* @__PURE__ */ genericOrdSum(/* @__PURE__ */ genericOrdConstructor(/* @__PURE__ */ genericOrdArgument(ordDataType)))(genericOrdSum32)))))));
  var compare14 = /* @__PURE__ */ compare(ordDataType);
  var ordPreSortLabel = {
    compare: function(x) {
      return function(y) {
        return genericCompare32(x)(y);
      };
    },
    Eq0: function() {
      return eqPreSortLabel;
    }
  };
  var isExprLabelPreSortLabel = {
    "prettyExprF'_unsafe": function() {
      return function(v) {
        if (v.value0 instanceof VarSort && v.value1.length === 4) {
          return appendSpaced("Var")(appendSpaced(parens(v["value1"][0]))(appendSpaced(v["value1"][1])(appendSpaced(v["value1"][2])("(" + (show11(v["value1"][3]) + ")")))));
        }
        ;
        if (v.value0 instanceof TermSort && v.value1.length === 2) {
          return appendSpaced("Term")(appendSpaced(parens(v["value1"][0]))(v["value1"][1]));
        }
        ;
        if (v.value0 instanceof TypeSort && v.value1.length === 1) {
          return appendSpaced("Type")(parens(v["value1"][0]));
        }
        ;
        if (v.value0 instanceof CtxConsSort && (v.value1.length === 3 && v["value1"][2] === "\u2205")) {
          return v["value1"][0] + (":" + v["value1"][1]);
        }
        ;
        if (v.value0 instanceof CtxConsSort && v.value1.length === 3) {
          return v["value1"][0] + (":" + (v["value1"][1] + (", " + v["value1"][2])));
        }
        ;
        if (v.value0 instanceof CtxNilSort && v.value1.length === 0) {
          return "\u2205";
        }
        ;
        if (v.value0 instanceof Local && v.value1.length === 0) {
          return "Local";
        }
        ;
        if (v.value0 instanceof NonLocal && v.value1.length === 0) {
          return "NonLocal";
        }
        ;
        if (v.value0 instanceof DataType && v.value1.length === 0) {
          return show23(v.value0.value0);
        }
        ;
        if (v.value0 instanceof Arrow && v.value1.length === 2) {
          return parens(v["value1"][0] + (" -> " + v["value1"][1]));
        }
        ;
        if (v.value0 instanceof List2 && v.value1.length === 1) {
          return appendSpaced("List")(v["value1"][0]);
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 131, column 1 - line 154, column 29): " + [v.constructor.name]);
      };
    },
    expectedKidsCount: function(v) {
      if (v instanceof VarSort) {
        return 4;
      }
      ;
      if (v instanceof TermSort) {
        return 2;
      }
      ;
      if (v instanceof TypeSort) {
        return 1;
      }
      ;
      if (v instanceof CtxConsSort) {
        return 3;
      }
      ;
      if (v instanceof CtxNilSort) {
        return 0;
      }
      ;
      if (v instanceof Local) {
        return 0;
      }
      ;
      if (v instanceof NonLocal) {
        return 0;
      }
      ;
      if (v instanceof DataType) {
        return 0;
      }
      ;
      if (v instanceof Arrow) {
        return 2;
      }
      ;
      if (v instanceof List2) {
        return 1;
      }
      ;
      throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 131, column 1 - line 154, column 29): " + [v.constructor.name]);
    },
    Eq0: function() {
      return eqPreSortLabel;
    },
    Ord1: function() {
      return ordPreSortLabel;
    },
    Show2: function() {
      return showPreSortLabel;
    },
    Pretty3: function() {
      return prettyPreSortLabel;
    }
  };
  var isExprLabelSortLabel2 = /* @__PURE__ */ isExprLabelSortLabel(isExprLabelPreSortLabel);
  var isExprLabelMeta2 = /* @__PURE__ */ isExprLabelMeta(isExprLabelSortLabel2);
  var matchChange2 = /* @__PURE__ */ matchChange(isExprLabelMeta2);
  var wrapBoundary2 = /* @__PURE__ */ wrapBoundary(isExprLabelPreSortLabel);
  var rEndpoint2 = /* @__PURE__ */ rEndpoint(isExprLabelMeta2);
  var eliminateReplaces2 = /* @__PURE__ */ eliminateReplaces(isExprLabelMeta2);
  var pretty22 = /* @__PURE__ */ pretty(/* @__PURE__ */ prettyExpr(/* @__PURE__ */ isExprLabelChangeLabel(isExprLabelMeta2)));
  var lEndpoint2 = /* @__PURE__ */ lEndpoint(isExprLabelMeta2);
  var endpoints2 = /* @__PURE__ */ endpoints(isExprLabelMeta2);
  var matchExprImpl2 = /* @__PURE__ */ matchExprImpl(isExprLabelMeta2);
  var unify2 = /* @__PURE__ */ unify(isExprLabelSortLabel2);
  var pretty32 = /* @__PURE__ */ pretty(/* @__PURE__ */ prettyExpr(isExprLabelMeta2));
  var isMerelyASubstitution2 = /* @__PURE__ */ isMerelyASubstitution(isExprLabelSortLabel2);
  var composeSub2 = /* @__PURE__ */ composeSub(isExprLabelSortLabel2);
  var matchExpr22 = /* @__PURE__ */ matchExpr2(isExprLabelMeta2);
  var matchExpr3 = /* @__PURE__ */ matchExpr(isExprLabelMeta2);
  var subMetaExprPartially2 = /* @__PURE__ */ subMetaExprPartially(isExprLabelSortLabel2);
  var eqConstant = {
    eq: function(x) {
      return genericEq23(x);
    }
  };
  var eq62 = /* @__PURE__ */ eq(eqConstant);
  var eqRuleLabel = {
    eq: function(x) {
      return function(y) {
        if (x instanceof Zero && y instanceof Zero) {
          return true;
        }
        ;
        if (x instanceof Suc && y instanceof Suc) {
          return true;
        }
        ;
        if (x instanceof Lam && y instanceof Lam) {
          return true;
        }
        ;
        if (x instanceof Let && y instanceof Let) {
          return true;
        }
        ;
        if (x instanceof App2 && y instanceof App2) {
          return true;
        }
        ;
        if (x instanceof GreyApp && y instanceof GreyApp) {
          return true;
        }
        ;
        if (x instanceof Var && y instanceof Var) {
          return true;
        }
        ;
        if (x instanceof FreeVar && y instanceof FreeVar) {
          return true;
        }
        ;
        if (x instanceof TermHole && y instanceof TermHole) {
          return true;
        }
        ;
        if (x instanceof TypeHole && y instanceof TypeHole) {
          return true;
        }
        ;
        if (x instanceof DataTypeRule && y instanceof DataTypeRule) {
          return eq33(x.value0)(y.value0);
        }
        ;
        if (x instanceof ArrowRule && y instanceof ArrowRule) {
          return true;
        }
        ;
        if (x instanceof ListRule && y instanceof ListRule) {
          return true;
        }
        ;
        if (x instanceof Newline && y instanceof Newline) {
          return true;
        }
        ;
        if (x instanceof If && y instanceof If) {
          return true;
        }
        ;
        if (x instanceof ErrorBoundary && y instanceof ErrorBoundary) {
          return true;
        }
        ;
        if (x instanceof ConstantRule && y instanceof ConstantRule) {
          return eq62(x.value0)(y.value0);
        }
        ;
        if (x instanceof InfixRule && y instanceof InfixRule) {
          return eq23(x.value0)(y.value0);
        }
        ;
        if (x instanceof EqualsRule && y instanceof EqualsRule) {
          return true;
        }
        ;
        if (x instanceof NilRule && y instanceof NilRule) {
          return true;
        }
        ;
        if (x instanceof ConsRule && y instanceof ConsRule) {
          return true;
        }
        ;
        if (x instanceof LengthRule && y instanceof LengthRule) {
          return true;
        }
        ;
        if (x instanceof AppendRule && y instanceof AppendRule) {
          return true;
        }
        ;
        if (x instanceof HeadRule && y instanceof HeadRule) {
          return true;
        }
        ;
        if (x instanceof TailRule && y instanceof TailRule) {
          return true;
        }
        ;
        if (x instanceof IndexRule && y instanceof IndexRule) {
          return true;
        }
        ;
        if (x instanceof ListMatchRule && y instanceof ListMatchRule) {
          return true;
        }
        ;
        if (x instanceof IntegerLiteral && y instanceof IntegerLiteral) {
          return true;
        }
        ;
        if (x instanceof Comment && y instanceof Comment) {
          return true;
        }
        ;
        return false;
      };
    }
  };
  var eq7 = /* @__PURE__ */ eq(eqRuleLabel);
  var eq8 = /* @__PURE__ */ eq(/* @__PURE__ */ eqMaybe(eqRuleLabel));
  var ordConstant = {
    compare: function(x) {
      return function(y) {
        return genericCompare23(x)(y);
      };
    },
    Eq0: function() {
      return eqConstant;
    }
  };
  var compare23 = /* @__PURE__ */ compare(ordConstant);
  var ordRuleLabel = {
    compare: function(x) {
      return function(y) {
        if (x instanceof Zero && y instanceof Zero) {
          return EQ.value;
        }
        ;
        if (x instanceof Zero) {
          return LT.value;
        }
        ;
        if (y instanceof Zero) {
          return GT.value;
        }
        ;
        if (x instanceof Suc && y instanceof Suc) {
          return EQ.value;
        }
        ;
        if (x instanceof Suc) {
          return LT.value;
        }
        ;
        if (y instanceof Suc) {
          return GT.value;
        }
        ;
        if (x instanceof Lam && y instanceof Lam) {
          return EQ.value;
        }
        ;
        if (x instanceof Lam) {
          return LT.value;
        }
        ;
        if (y instanceof Lam) {
          return GT.value;
        }
        ;
        if (x instanceof Let && y instanceof Let) {
          return EQ.value;
        }
        ;
        if (x instanceof Let) {
          return LT.value;
        }
        ;
        if (y instanceof Let) {
          return GT.value;
        }
        ;
        if (x instanceof App2 && y instanceof App2) {
          return EQ.value;
        }
        ;
        if (x instanceof App2) {
          return LT.value;
        }
        ;
        if (y instanceof App2) {
          return GT.value;
        }
        ;
        if (x instanceof GreyApp && y instanceof GreyApp) {
          return EQ.value;
        }
        ;
        if (x instanceof GreyApp) {
          return LT.value;
        }
        ;
        if (y instanceof GreyApp) {
          return GT.value;
        }
        ;
        if (x instanceof Var && y instanceof Var) {
          return EQ.value;
        }
        ;
        if (x instanceof Var) {
          return LT.value;
        }
        ;
        if (y instanceof Var) {
          return GT.value;
        }
        ;
        if (x instanceof FreeVar && y instanceof FreeVar) {
          return EQ.value;
        }
        ;
        if (x instanceof FreeVar) {
          return LT.value;
        }
        ;
        if (y instanceof FreeVar) {
          return GT.value;
        }
        ;
        if (x instanceof TermHole && y instanceof TermHole) {
          return EQ.value;
        }
        ;
        if (x instanceof TermHole) {
          return LT.value;
        }
        ;
        if (y instanceof TermHole) {
          return GT.value;
        }
        ;
        if (x instanceof TypeHole && y instanceof TypeHole) {
          return EQ.value;
        }
        ;
        if (x instanceof TypeHole) {
          return LT.value;
        }
        ;
        if (y instanceof TypeHole) {
          return GT.value;
        }
        ;
        if (x instanceof DataTypeRule && y instanceof DataTypeRule) {
          return compare14(x.value0)(y.value0);
        }
        ;
        if (x instanceof DataTypeRule) {
          return LT.value;
        }
        ;
        if (y instanceof DataTypeRule) {
          return GT.value;
        }
        ;
        if (x instanceof ArrowRule && y instanceof ArrowRule) {
          return EQ.value;
        }
        ;
        if (x instanceof ArrowRule) {
          return LT.value;
        }
        ;
        if (y instanceof ArrowRule) {
          return GT.value;
        }
        ;
        if (x instanceof ListRule && y instanceof ListRule) {
          return EQ.value;
        }
        ;
        if (x instanceof ListRule) {
          return LT.value;
        }
        ;
        if (y instanceof ListRule) {
          return GT.value;
        }
        ;
        if (x instanceof Newline && y instanceof Newline) {
          return EQ.value;
        }
        ;
        if (x instanceof Newline) {
          return LT.value;
        }
        ;
        if (y instanceof Newline) {
          return GT.value;
        }
        ;
        if (x instanceof If && y instanceof If) {
          return EQ.value;
        }
        ;
        if (x instanceof If) {
          return LT.value;
        }
        ;
        if (y instanceof If) {
          return GT.value;
        }
        ;
        if (x instanceof ErrorBoundary && y instanceof ErrorBoundary) {
          return EQ.value;
        }
        ;
        if (x instanceof ErrorBoundary) {
          return LT.value;
        }
        ;
        if (y instanceof ErrorBoundary) {
          return GT.value;
        }
        ;
        if (x instanceof ConstantRule && y instanceof ConstantRule) {
          return compare23(x.value0)(y.value0);
        }
        ;
        if (x instanceof ConstantRule) {
          return LT.value;
        }
        ;
        if (y instanceof ConstantRule) {
          return GT.value;
        }
        ;
        if (x instanceof InfixRule && y instanceof InfixRule) {
          return compare9(x.value0)(y.value0);
        }
        ;
        if (x instanceof InfixRule) {
          return LT.value;
        }
        ;
        if (y instanceof InfixRule) {
          return GT.value;
        }
        ;
        if (x instanceof EqualsRule && y instanceof EqualsRule) {
          return EQ.value;
        }
        ;
        if (x instanceof EqualsRule) {
          return LT.value;
        }
        ;
        if (y instanceof EqualsRule) {
          return GT.value;
        }
        ;
        if (x instanceof NilRule && y instanceof NilRule) {
          return EQ.value;
        }
        ;
        if (x instanceof NilRule) {
          return LT.value;
        }
        ;
        if (y instanceof NilRule) {
          return GT.value;
        }
        ;
        if (x instanceof ConsRule && y instanceof ConsRule) {
          return EQ.value;
        }
        ;
        if (x instanceof ConsRule) {
          return LT.value;
        }
        ;
        if (y instanceof ConsRule) {
          return GT.value;
        }
        ;
        if (x instanceof LengthRule && y instanceof LengthRule) {
          return EQ.value;
        }
        ;
        if (x instanceof LengthRule) {
          return LT.value;
        }
        ;
        if (y instanceof LengthRule) {
          return GT.value;
        }
        ;
        if (x instanceof AppendRule && y instanceof AppendRule) {
          return EQ.value;
        }
        ;
        if (x instanceof AppendRule) {
          return LT.value;
        }
        ;
        if (y instanceof AppendRule) {
          return GT.value;
        }
        ;
        if (x instanceof HeadRule && y instanceof HeadRule) {
          return EQ.value;
        }
        ;
        if (x instanceof HeadRule) {
          return LT.value;
        }
        ;
        if (y instanceof HeadRule) {
          return GT.value;
        }
        ;
        if (x instanceof TailRule && y instanceof TailRule) {
          return EQ.value;
        }
        ;
        if (x instanceof TailRule) {
          return LT.value;
        }
        ;
        if (y instanceof TailRule) {
          return GT.value;
        }
        ;
        if (x instanceof IndexRule && y instanceof IndexRule) {
          return EQ.value;
        }
        ;
        if (x instanceof IndexRule) {
          return LT.value;
        }
        ;
        if (y instanceof IndexRule) {
          return GT.value;
        }
        ;
        if (x instanceof ListMatchRule && y instanceof ListMatchRule) {
          return EQ.value;
        }
        ;
        if (x instanceof ListMatchRule) {
          return LT.value;
        }
        ;
        if (y instanceof ListMatchRule) {
          return GT.value;
        }
        ;
        if (x instanceof IntegerLiteral && y instanceof IntegerLiteral) {
          return EQ.value;
        }
        ;
        if (x instanceof IntegerLiteral) {
          return LT.value;
        }
        ;
        if (y instanceof IntegerLiteral) {
          return GT.value;
        }
        ;
        if (x instanceof Comment && y instanceof Comment) {
          return EQ.value;
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 0, column 0 - line 0, column 0): " + [x.constructor.name, y.constructor.name]);
      };
    },
    Eq0: function() {
      return eqRuleLabel;
    }
  };
  var lookup110 = /* @__PURE__ */ lookup10(ordRuleLabel);
  var enumInfixOperator = {
    pred: function(x) {
      return genericPred2(x);
    },
    succ: function(x) {
      return genericSucc2(x);
    },
    Ord0: function() {
      return ordInfixOperator;
    }
  };
  var enumDataType = {
    pred: function(x) {
      return genericPred1(x);
    },
    succ: function(x) {
      return genericSucc1(x);
    },
    Ord0: function() {
      return ordDataType;
    }
  };
  var enumConstant = {
    pred: function(x) {
      return genericPred22(x);
    },
    succ: function(x) {
      return genericSucc22(x);
    },
    Ord0: function() {
      return ordConstant;
    }
  };
  var encodeJsonInfixOperator = {
    encodeJson: function(a2) {
      return genericEncodeJson3(a2);
    }
  };
  var encodeJsonDataType = {
    encodeJson: function(a2) {
      return genericEncodeJson1(a2);
    }
  };
  var encodeRepArgsArgument2 = /* @__PURE__ */ encodeRepArgsArgument(encodeJsonDataType);
  var genericEncodeJson32 = /* @__PURE__ */ genericEncodeJson(genericPreSortLabel_)(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(VarSortIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(TermSortIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(TypeSortIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(CtxConsSortIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(CtxNilSortIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(DataTypeIsSymbol)(encodeRepArgsArgument2))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(ArrowIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(ListIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(LocalIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepConstructor(NonLocalIsSymbol)(encodeRepArgsNoArguments)))))))))));
  var encodeJsonPreSortLabel = {
    encodeJson: function(a2) {
      return genericEncodeJson32(a2);
    }
  };
  var encodeJsonConstant = {
    encodeJson: function(a2) {
      return genericEncodeJson22(a2);
    }
  };
  var genericEncodeJson42 = /* @__PURE__ */ genericEncodeJson(genericRuleLabel_)(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(ZeroIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(SucIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(LamIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(LetIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(AppIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(GreyAppIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(VarIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(FreeVarIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(TermHoleIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(TypeHoleIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(DataTypeRuleIsSymbol)(encodeRepArgsArgument2))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(ArrowRuleIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(ListRuleIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(NewlineIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(IfIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(ErrorBoundaryIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(ConstantRuleIsSymbol)(/* @__PURE__ */ encodeRepArgsArgument(encodeJsonConstant)))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(InfixRuleIsSymbol)(/* @__PURE__ */ encodeRepArgsArgument(encodeJsonInfixOperator)))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(EqualsRuleIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(NilRuleIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(ConsRuleIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(LengthRuleIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(AppendRuleIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(HeadRuleIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(TailRuleIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(IndexRuleIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(ListMatchRuleIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepSum(/* @__PURE__ */ encodeRepConstructor(IntegerLiteralIsSymbol)(encodeRepArgsNoArguments))(/* @__PURE__ */ encodeRepConstructor(CommentIsSymbol)(encodeRepArgsNoArguments))))))))))))))))))))))))))))));
  var encodeJsonRuleLabel = {
    encodeJson: function(a2) {
      return genericEncodeJson42(a2);
    }
  };
  var decodeJsonInfixOperator = {
    decodeJson: function(a2) {
      return genericDecodeJson3(a2);
    }
  };
  var decodeJsonDataType = {
    decodeJson: function(a2) {
      return genericDecodeJson1(a2);
    }
  };
  var genericDecodeJson32 = /* @__PURE__ */ genericDecodeJson(genericPreSortLabel_)(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(VarSortIsSymbol))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(TermSortIsSymbol))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(TypeSortIsSymbol))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(CtxConsSortIsSymbol))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(CtxNilSortIsSymbol))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorArg(DataTypeIsSymbol)(decodeJsonDataType))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(ArrowIsSymbol))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(ListIsSymbol))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(LocalIsSymbol))(/* @__PURE__ */ decodeRepConstructorNoArgs(NonLocalIsSymbol)))))))))));
  var decodeJsonPreSortLabel = {
    decodeJson: function(a2) {
      return genericDecodeJson32(a2);
    }
  };
  var decodeJsonConstant = {
    decodeJson: function(a2) {
      return genericDecodeJson22(a2);
    }
  };
  var genericDecodeJson42 = /* @__PURE__ */ genericDecodeJson(genericRuleLabel_)(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(ZeroIsSymbol))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(SucIsSymbol))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(LamIsSymbol))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(LetIsSymbol))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(AppIsSymbol))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(GreyAppIsSymbol))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(VarIsSymbol))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(FreeVarIsSymbol))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(TermHoleIsSymbol))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(TypeHoleIsSymbol))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorArg(DataTypeRuleIsSymbol)(decodeJsonDataType))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(ArrowRuleIsSymbol))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(ListRuleIsSymbol))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(NewlineIsSymbol))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(IfIsSymbol))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(ErrorBoundaryIsSymbol))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorArg(ConstantRuleIsSymbol)(decodeJsonConstant))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorArg(InfixRuleIsSymbol)(decodeJsonInfixOperator))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(EqualsRuleIsSymbol))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(NilRuleIsSymbol))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(ConsRuleIsSymbol))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(LengthRuleIsSymbol))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(AppendRuleIsSymbol))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(HeadRuleIsSymbol))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(TailRuleIsSymbol))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(IndexRuleIsSymbol))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(ListMatchRuleIsSymbol))(/* @__PURE__ */ decodeRepSum(/* @__PURE__ */ decodeRepConstructorNoArgs(IntegerLiteralIsSymbol))(/* @__PURE__ */ decodeRepConstructorNoArgs(CommentIsSymbol))))))))))))))))))))))))))))));
  var decodeJsonRuleLabel = {
    decodeJson: function(a2) {
      return genericDecodeJson42(a2);
    }
  };
  var boundedRuleLabel = {
    bottom: /* @__PURE__ */ genericBottom(genericRuleLabel_)(genericBottomSum2),
    top: /* @__PURE__ */ genericTop(genericRuleLabel_)(/* @__PURE__ */ genericTopSum(/* @__PURE__ */ genericTopSum(/* @__PURE__ */ genericTopSum(/* @__PURE__ */ genericTopSum(/* @__PURE__ */ genericTopSum(/* @__PURE__ */ genericTopSum(/* @__PURE__ */ genericTopSum(/* @__PURE__ */ genericTopSum(/* @__PURE__ */ genericTopSum(/* @__PURE__ */ genericTopSum(/* @__PURE__ */ genericTopSum(/* @__PURE__ */ genericTopSum(/* @__PURE__ */ genericTopSum(/* @__PURE__ */ genericTopSum(/* @__PURE__ */ genericTopSum(/* @__PURE__ */ genericTopSum(/* @__PURE__ */ genericTopSum(genericTopSum22)))))))))))))))))),
    Ord0: function() {
      return ordRuleLabel;
    }
  };
  var boundedInfixOperator = {
    bottom: /* @__PURE__ */ genericBottom(genericInfixOperator_)(genericBottomSum2),
    top: /* @__PURE__ */ genericTop(genericInfixOperator_)(genericTopSum22),
    Ord0: function() {
      return ordInfixOperator;
    }
  };
  var allPossible2 = /* @__PURE__ */ allPossible(enumInfixOperator)(boundedInfixOperator);
  var boundedDataType = {
    bottom: /* @__PURE__ */ genericBottom(genericDataType_)(genericBottomSum2),
    top: /* @__PURE__ */ genericTop(genericDataType_)(genericTopSum2),
    Ord0: function() {
      return ordDataType;
    }
  };
  var boundedConstant = {
    bottom: /* @__PURE__ */ genericBottom(genericConstant_)(genericBottomSum2),
    top: /* @__PURE__ */ genericTop(genericConstant_)(genericTopSum1),
    Ord0: function() {
      return ordConstant;
    }
  };
  var genericEnumSum5 = /* @__PURE__ */ genericEnumSum2(/* @__PURE__ */ genericEnumSum2(/* @__PURE__ */ genericEnumSum2(/* @__PURE__ */ genericEnumSum2(/* @__PURE__ */ genericEnumSum2(/* @__PURE__ */ genericEnumSum2(/* @__PURE__ */ genericEnumSum2(/* @__PURE__ */ genericEnumSum2(/* @__PURE__ */ genericEnumSum2(/* @__PURE__ */ genericEnumSum2(/* @__PURE__ */ genericEnumSum(/* @__PURE__ */ genericEnumConstructor(/* @__PURE__ */ genericEnumArgument(enumDataType)))(/* @__PURE__ */ genericTopConstructor(/* @__PURE__ */ genericTopArgument(boundedDataType)))(/* @__PURE__ */ genericEnumSum2(/* @__PURE__ */ genericEnumSum2(/* @__PURE__ */ genericEnumSum2(/* @__PURE__ */ genericEnumSum2(/* @__PURE__ */ genericEnumSum2(/* @__PURE__ */ genericEnumSum(/* @__PURE__ */ genericEnumConstructor(/* @__PURE__ */ genericEnumArgument(enumConstant)))(/* @__PURE__ */ genericTopConstructor(/* @__PURE__ */ genericTopArgument(boundedConstant)))(/* @__PURE__ */ genericEnumSum(/* @__PURE__ */ genericEnumConstructor(/* @__PURE__ */ genericEnumArgument(enumInfixOperator)))(/* @__PURE__ */ genericTopConstructor(/* @__PURE__ */ genericTopArgument(boundedInfixOperator)))(genericEnumSum3)(genericBottomSum2))(/* @__PURE__ */ genericBottomSum(/* @__PURE__ */ genericBottomConstructor(/* @__PURE__ */ genericBottomArgument(boundedInfixOperator)))))(/* @__PURE__ */ genericBottomSum(/* @__PURE__ */ genericBottomConstructor(/* @__PURE__ */ genericBottomArgument(boundedConstant)))))(genericBottomSum2))(genericBottomSum2))(genericBottomSum2))(genericBottomSum2))(genericBottomSum2))(/* @__PURE__ */ genericBottomSum(/* @__PURE__ */ genericBottomConstructor(/* @__PURE__ */ genericBottomArgument(boundedDataType)))))(genericBottomSum2))(genericBottomSum2))(genericBottomSum2))(genericBottomSum2))(genericBottomSum2))(genericBottomSum2))(genericBottomSum2))(genericBottomSum2))(genericBottomSum2);
  var genericPred3 = /* @__PURE__ */ genericPred(genericRuleLabel_)(genericEnumSum5);
  var genericSucc3 = /* @__PURE__ */ genericSucc(genericRuleLabel_)(genericEnumSum5);
  var allPossible1 = /* @__PURE__ */ allPossible(enumConstant)(boundedConstant);
  var enumRuleLabel = {
    pred: function(x) {
      return genericPred3(x);
    },
    succ: function(x) {
      return genericSucc3(x);
    },
    Ord0: function() {
      return ordRuleLabel;
    }
  };
  var makeTotalMap2 = /* @__PURE__ */ makeTotalMap(enumRuleLabel)(boundedRuleLabel);
  var unWrapLambda = function(v) {
    return function(v1) {
      if (v1.value0 instanceof Boundary && (v1.value0.value0 instanceof Down && (v1.value1.length === 1 && (v1["value1"][0].value0 instanceof SSInj && (v1["value1"][0].value0.value0 instanceof DerivLabel && (v1["value1"][0].value0.value0.value0 instanceof Lam && v1["value1"][0].value1.length === 3)))))) {
        var varName = lookup$prime3(new RuleMetaVar("x"))(v1["value1"][0].value0.value0.value1);
        return bind33(function() {
          var v2 = function(v3) {
            return Nothing.value;
          };
          var $1931 = matchChange2(v1.value0.value1)(injectChangeMatchExpr(TermSort.value)([cSlot, dMINUS(Arrow.value)([slot2])(cSlot)([])]));
          if ($1931 instanceof Just && ($1931.value0.value0.length === 1 && $1931.value0.value1.length === 2)) {
            return pure36(new Expr(csor(TermSort.value), [minusChange(sor(CtxConsSort.value))([varName, $1931["value0"]["value0"][0]])($1931["value0"]["value1"][0])([]), $1931["value0"]["value1"][1]]));
          }
          ;
          return v2(true);
        }())(function(restOfCh) {
          return pure36(wrapBoundary2(Down.value)(restOfCh)(v1["value1"][0]["value1"][2]));
        });
      }
      ;
      return Nothing.value;
    };
  };
  var unWrapAppDown = function(v) {
    return function(v1) {
      var v2 = function(v3) {
        return Nothing.value;
      };
      if (v1.value0 instanceof Boundary && (v1.value0.value0 instanceof Down && (v1.value1.length === 1 && (v1["value1"][0].value0 instanceof SSInj && (v1["value1"][0].value0.value0 instanceof DerivLabel && (v1["value1"][0].value0.value0.value0 instanceof App2 && (v1["value1"][0].value1.length === 2 && (v1["value1"][0]["value1"][1].value0 instanceof SSInj && (v1["value1"][0]["value1"][1].value0.value0 instanceof DerivLabel && v1["value1"][0]["value1"][1].value0.value0.value0 instanceof TermHole))))))))) {
        var $1953 = matchChange2(v1.value0.value1)(injectChangeMatchExpr(TermSort.value)([cSlot, dPLUS(Arrow.value)([slot2])(cSlot)([])]));
        if ($1953 instanceof Just && ($1953.value0.value0.length === 1 && $1953.value0.value1.length === 2)) {
          var $1954 = eq52(lookup$prime3(new RuleMetaVar("a"))(v1["value1"][0].value0.value0.value1))($1953["value0"]["value0"][0]);
          if ($1954) {
            return pure36(wrapBoundary2(Down.value)(new Expr(csor(TermSort.value), [$1953["value0"]["value1"][0], $1953["value0"]["value1"][1]]))(v1["value1"][0]["value1"][0]));
          }
          ;
          return v2(true);
        }
        ;
        return v2(true);
      }
      ;
      return v2(true);
    };
  };
  var thenElem = /* @__PURE__ */ makePuncElem("then")("then");
  var tabElem = /* @__PURE__ */ makePuncElem("indent")("    ");
  var startCtx = /* @__PURE__ */ function() {
    return new Expr(sor(CtxNilSort.value), []);
  }();
  var splitChange = function(c) {
    var v = eliminateReplaces2(c);
    var v1 = function(v22) {
      var v32 = function(v4) {
        if (v.value0 instanceof CInj && (v.value0.value0 instanceof MV && v.value1.length === 0)) {
          return {
            upChange: c,
            cursorSort: rEndpoint2(c),
            downChange: c
          };
        }
        ;
        return bug("splitChange - got c = " + pretty22(v));
      };
      var $1984 = matchChange2(v)(injectChangeMatchExpr(TypeSort.value)([cSlot]));
      if ($1984 instanceof Just && ($1984.value0.value0.length === 0 && $1984.value0.value1.length === 1)) {
        return {
          upChange: v,
          cursorSort: lEndpoint2(v),
          downChange: inject(lEndpoint2(v))
        };
      }
      ;
      return v32(true);
    };
    var $1990 = matchChange2(v)(injectChangeMatchExpr(TermSort.value)([cSlot, cSlot]));
    if ($1990 instanceof Just && ($1990.value0.value0.length === 0 && $1990.value0.value1.length === 2)) {
      var v2 = endpoints2($1990["value0"]["value1"][0]);
      var v3 = endpoints2($1990["value0"]["value1"][1]);
      return {
        upChange: new Expr(csor(TermSort.value), [inject(v2.value1), $1990["value0"]["value1"][1]]),
        cursorSort: new Expr(sor(TermSort.value), [v2.value1, v3.value0]),
        downChange: new Expr(csor(TermSort.value), [$1990["value0"]["value1"][0], inject(v3.value0)])
      };
    }
    ;
    return v1(true);
  };
  var specializeDerivation = function(v) {
    return function(v1) {
      var v2 = function(v3) {
        return inject(v);
      };
      var $2006 = matchExprImpl2(v)(injectMatchExpr(sor(TermSort.value))([slot2, slot2]));
      if ($2006 instanceof Just && $2006.value0.length === 2) {
        var $2007 = matchExprImpl2(v1)(injectMatchExpr(sor(TermSort.value))([slot2, slot2]));
        if ($2007 instanceof Just && $2007.value0.length === 2) {
          return new Expr(csor(TermSort.value), [diff2($2006["value0"][0])($2007["value0"][0]), inject($2006["value0"][1])]);
        }
        ;
        return v2(true);
      }
      ;
      return v2(true);
    };
  };
  var removeGreyedApp = function(v) {
    return function(dterm) {
      if (dterm.value0 instanceof SSInj && (dterm.value0.value0 instanceof DerivLabel && (dterm.value0.value0.value0 instanceof GreyApp && (dterm.value1.length === 2 && (dterm["value1"][1].value0 instanceof SSInj && (dterm["value1"][1].value0.value0 instanceof DerivLabel && dterm["value1"][1].value0.value0.value0 instanceof TermHole)))))) {
        return pure36(dterm["value1"][0]);
      }
      ;
      return Nothing.value;
    };
  };
  var removeError = function(v) {
    return function(v1) {
      if (v1.value0 instanceof SSInj && (v1.value0.value0 instanceof DerivLabel && (v1.value0.value0.value0 instanceof ErrorBoundary && v1.value1.length === 1))) {
        var insideType = lookup$prime3(new RuleMetaVar("insideType"))(v1.value0.value0.value1);
        var outsideType = lookup$prime3(new RuleMetaVar("outsideType"))(v1.value0.value0.value1);
        var $2038 = eq52(insideType)(outsideType);
        if ($2038) {
          return pure36(v1["value1"][0]);
        }
        ;
        return Nothing.value;
      }
      ;
      return Nothing.value;
    };
  };
  var onDelete = function(v) {
    var v1 = function(v2) {
      if (v.value0 instanceof MInj && (v.value0.value0 instanceof TypeOfLabel && (v.value0.value0.value0 instanceof SortString && v.value1.length === 1))) {
        return new Expr(new CInj(new MInj(new TypeOfLabel(SortString.value))), [replaceChange(v["value1"][0])(new Expr(new MInj(new DataLabel(new DataString(""))), []))]);
      }
      ;
      return inject(v);
    };
    var $2052 = matchExprImpl2(v)(injectMatchExpr(sor(TypeSort.value))([slot2]));
    if ($2052 instanceof Just && $2052.value0.length === 1) {
      return new Expr(csor(TypeSort.value), [replaceChange($2052["value0"][0])(fromMetaVar(freshMetaVar("deleted")))]);
    }
    ;
    return v1(true);
  };
  var newlineIndentElem = function(n) {
    return append110([newlineElem])(replicate(n)(tabElem));
  };
  var nameElem = function(str) {
    return span3([classNames(["name"])])([text5(str)]);
  };
  var mergeAppGreyApp2 = function(v) {
    return function(dterm) {
      if (dterm.value0 instanceof SSInj && (dterm.value0.value0 instanceof DerivLabel && (dterm.value0.value0.value0 instanceof App2 && (dterm.value1.length === 2 && (dterm["value1"][0].value0 instanceof SSInj && (dterm["value1"][0].value0.value0 instanceof DerivLabel && (dterm["value1"][0].value0.value0.value0 instanceof GreyApp && (dterm["value1"][0].value1.length === 2 && (dterm["value1"][1].value0 instanceof SSInj && (dterm["value1"][1].value0.value0 instanceof DerivLabel && (dterm["value1"][1].value0.value0.value0 instanceof TermHole && eq52(lookup$prime3(new RuleMetaVar("a"))(dterm.value0.value0.value1))(lookup$prime3(new RuleMetaVar("a"))(dterm["value1"][0].value0.value0.value1))))))))))))) {
        return pure36(new Expr(new SSInj(new DerivLabel(App2.value, dterm.value0.value0.value1)), [dterm["value1"][0]["value1"][0], dterm["value1"][0]["value1"][1]]));
      }
      ;
      return Nothing.value;
    };
  };
  var mergeAppGreyApp = function(v) {
    return function(dterm) {
      if (dterm.value0 instanceof SSInj && (dterm.value0.value0 instanceof DerivLabel && (dterm.value0.value0.value0 instanceof GreyApp && (dterm.value1.length === 2 && (dterm["value1"][0].value0 instanceof SSInj && (dterm["value1"][0].value0.value0 instanceof DerivLabel && (dterm["value1"][0].value0.value0.value0 instanceof App2 && (dterm["value1"][0].value1.length === 2 && (dterm["value1"][0]["value1"][1].value0 instanceof SSInj && (dterm["value1"][0]["value1"][1].value0.value0 instanceof DerivLabel && (dterm["value1"][0]["value1"][1].value0.value0.value0 instanceof TermHole && eq52(lookup$prime3(new RuleMetaVar("a"))(dterm["value1"][0].value0.value0.value1))(lookup$prime3(new RuleMetaVar("a"))(dterm.value0.value0.value1))))))))))))) {
        return pure36(new Expr(new SSInj(new DerivLabel(App2.value, dterm["value1"][0].value0.value0.value1)), [dterm["value1"][0]["value1"][0], dterm["value1"][1]]));
      }
      ;
      return Nothing.value;
    };
  };
  var mapstoElem = /* @__PURE__ */ makePuncElem("mapsto")("=>");
  var letElem = /* @__PURE__ */ makePuncElem("let")("let");
  var lambdaElem = /* @__PURE__ */ makePuncElem("lambda")("fun");
  var isValidSelectionSorts = function(v) {
    if (v.bottom.value0 instanceof MInj && (v.bottom.value0.value0 instanceof SInj && (v.bottom.value0.value0.value0 instanceof TermSort && (v.top.value0 instanceof MInj && (v.top.value0.value0 instanceof SInj && v.top.value0.value0.value0 instanceof TermSort))))) {
      return true;
    }
    ;
    if (v.bottom.value0 instanceof MInj && (v.bottom.value0.value0 instanceof SInj && (v.bottom.value0.value0.value0 instanceof TypeSort && (v.top.value0 instanceof MInj && (v.top.value0.value0 instanceof SInj && v.top.value0.value0.value0 instanceof TypeSort))))) {
      return true;
    }
    ;
    return false;
  };
  var isValidCursorSort = function(v) {
    if (v.value0 instanceof MInj && (v.value0.value0 instanceof SInj && v.value0.value0.value0 instanceof VarSort)) {
      return false;
    }
    ;
    if (v.value0 instanceof MInj && (v.value0.value0 instanceof TypeOfLabel && v.value0.value0.value0 instanceof SortInt)) {
      return false;
    }
    ;
    return true;
  };
  var isTermSort = function(v) {
    if (v.value0 instanceof MInj && (v.value0.value0 instanceof SInj && v.value0.value0.value0 instanceof TermSort)) {
      return true;
    }
    ;
    return false;
  };
  var isNeutralFormWithoutCursor = function($copy_t) {
    var $tco_done = false;
    var $tco_result;
    function $tco_loop(t) {
      if (t.value0 instanceof SSInj && (t.value0.value0 instanceof DerivLabel && t.value0.value0.value0 instanceof Var)) {
        $tco_done = true;
        return true;
      }
      ;
      if (t.value0 instanceof SSInj && (t.value0.value0 instanceof DerivLabel && (t.value0.value0.value0 instanceof App2 && t.value1.length === 2))) {
        $copy_t = t["value1"][0];
        return;
      }
      ;
      if (t.value0 instanceof SSInj && (t.value0.value0 instanceof DerivLabel && (t.value0.value0.value0 instanceof GreyApp && t.value1.length === 2))) {
        $copy_t = t["value1"][0];
        return;
      }
      ;
      if (t.value0 instanceof Boundary && t.value1.length === 1) {
        $copy_t = t["value1"][0];
        return;
      }
      ;
      $tco_done = true;
      return false;
    }
    ;
    while (!$tco_done) {
      $tco_result = $tco_loop($copy_t);
    }
    ;
    return $tco_result;
  };
  var isNeutralFormWithCursor = function($copy_t) {
    var $tco_done = false;
    var $tco_result;
    function $tco_loop(t) {
      if (t.value0 instanceof SSInj && (t.value0.value0 instanceof DerivLabel && t.value0.value0.value0 instanceof Var)) {
        $tco_done = true;
        return true;
      }
      ;
      if (t.value0 instanceof SSInj && (t.value0.value0 instanceof DerivLabel && (t.value0.value0.value0 instanceof App2 && t.value1.length === 2))) {
        $copy_t = t["value1"][0];
        return;
      }
      ;
      if (t.value0 instanceof SSInj && (t.value0.value0 instanceof DerivLabel && (t.value0.value0.value0 instanceof GreyApp && t.value1.length === 2))) {
        $copy_t = t["value1"][0];
        return;
      }
      ;
      if (t.value0 instanceof Boundary && t.value1.length === 1) {
        $copy_t = t["value1"][0];
        return;
      }
      ;
      if (t.value0 instanceof Marker && (t.value0.value0 === 1 && t.value1.length === 1)) {
        $copy_t = t["value1"][0];
        return;
      }
      ;
      $tco_done = true;
      return false;
    }
    ;
    while (!$tco_done) {
      $tco_result = $tco_loop($copy_t);
    }
    ;
    return $tco_result;
  };
  var isAppOrGreyApp = function(v) {
    if (v instanceof App2) {
      return true;
    }
    ;
    if (v instanceof GreyApp) {
      return true;
    }
    ;
    return false;
  };
  var infixTypes = function(op) {
    var $$int = injectSortLabelDerivLabel(new DataType(Int.value))([]);
    var bool = injectSortLabelDerivLabel(new DataType(Bool.value))([]);
    if (op instanceof OpPlus) {
      return {
        left: $$int,
        right: $$int,
        output: $$int
      };
    }
    ;
    if (op instanceof OpMinus) {
      return {
        left: $$int,
        right: $$int,
        output: $$int
      };
    }
    ;
    if (op instanceof OpTimes) {
      return {
        left: $$int,
        right: $$int,
        output: $$int
      };
    }
    ;
    if (op instanceof OpDivide) {
      return {
        left: $$int,
        right: $$int,
        output: $$int
      };
    }
    ;
    if (op instanceof OpMod) {
      return {
        left: $$int,
        right: $$int,
        output: $$int
      };
    }
    ;
    if (op instanceof OpPow) {
      return {
        left: $$int,
        right: $$int,
        output: $$int
      };
    }
    ;
    if (op instanceof OpLess) {
      return {
        left: $$int,
        right: $$int,
        output: bool
      };
    }
    ;
    if (op instanceof OpGreater) {
      return {
        left: $$int,
        right: $$int,
        output: bool
      };
    }
    ;
    if (op instanceof OpLessEq) {
      return {
        left: $$int,
        right: $$int,
        output: bool
      };
    }
    ;
    if (op instanceof OpGreaterEq) {
      return {
        left: $$int,
        right: $$int,
        output: bool
      };
    }
    ;
    if (op instanceof OpAnd) {
      return {
        left: bool,
        right: bool,
        output: bool
      };
    }
    ;
    if (op instanceof OpOr) {
      return {
        left: bool,
        right: bool,
        output: bool
      };
    }
    ;
    throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 259, column 5 - line 271, column 55): " + [op.constructor.name]);
  };
  var infixName = function(op) {
    if (op instanceof OpPlus) {
      return "+";
    }
    ;
    if (op instanceof OpMinus) {
      return "-";
    }
    ;
    if (op instanceof OpTimes) {
      return "*";
    }
    ;
    if (op instanceof OpDivide) {
      return "/";
    }
    ;
    if (op instanceof OpMod) {
      return "%";
    }
    ;
    if (op instanceof OpPow) {
      return "^";
    }
    ;
    if (op instanceof OpLess) {
      return "<";
    }
    ;
    if (op instanceof OpGreater) {
      return ">";
    }
    ;
    if (op instanceof OpLessEq) {
      return "<=";
    }
    ;
    if (op instanceof OpGreaterEq) {
      return ">=";
    }
    ;
    if (op instanceof OpAnd) {
      return "&&";
    }
    ;
    if (op instanceof OpOr) {
      return "||";
    }
    ;
    throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 275, column 5 - line 287, column 17): " + [op.constructor.name]);
  };
  var inElem = /* @__PURE__ */ makePuncElem("inLet")("in");
  var ifElem = /* @__PURE__ */ makePuncElem("if")("if");
  var generalizeDerivation = function(v) {
    var v1 = function(v2) {
      return inject(v);
    };
    var $2189 = matchExprImpl2(v)(injectMatchExpr(sor(TermSort.value))([slot2, slot2]));
    if ($2189 instanceof Just && $2189.value0.length === 2) {
      return new Expr(csor(TermSort.value), [diff2($2189["value0"][0])(startCtx), inject($2189["value0"][1])]);
    }
    ;
    return v1(true);
  };
  var forgetSorts = function(v) {
    if (v instanceof DerivLabel && v.value0 instanceof FreeVar) {
      return pure36(v);
    }
    ;
    return Nothing.value;
  };
  var errorRightSide = /* @__PURE__ */ div2([/* @__PURE__ */ classNames(["subnode", "punctuation"]), /* @__PURE__ */ style("color: red; margin: 2px; line-height: 12px")])([/* @__PURE__ */ text5("\u2984")]);
  var errorLeftSide = /* @__PURE__ */ div2([/* @__PURE__ */ classNames(["subnode", "punctuation"]), /* @__PURE__ */ style("color: red; margin: 2px; line-height: 12px")])([/* @__PURE__ */ text5("\u2983")]);
  var equalsElem = /* @__PURE__ */ makePuncElem("equals")("=");
  var elseElem = /* @__PURE__ */ makePuncElem("else")("else");
  var dataTypeElem = function(str) {
    return span3([classNames(["datatype"])])([text5(str)]);
  };
  var constantType = function(v) {
    if (v instanceof ConstTrue) {
      return injectSortLabelDerivLabel(new DataType(Bool.value))([]);
    }
    ;
    if (v instanceof ConstFalse) {
      return injectSortLabelDerivLabel(new DataType(Bool.value))([]);
    }
    ;
    if (v instanceof ConstNot) {
      return injectSortLabelDerivLabel(Arrow.value)([injectSortLabelDerivLabel(new DataType(Bool.value))([]), injectSortLabelDerivLabel(new DataType(Bool.value))([])]);
    }
    ;
    throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 215, column 16 - line 218, column 74): " + [v.constructor.name]);
  };
  var language3 = /* @__PURE__ */ makeTotalMap2(function(v) {
    if (v instanceof Zero) {
      return makeRule(["gamma", "x", "type"])(function() {
        return function(v12) {
          if (v12.length === 3) {
            return new Tuple([], injectSortLabelDerivLabel(VarSort.value)([injectSortLabelDerivLabel(CtxConsSort.value)([v12[1], v12[2], v12[0]]), v12[1], v12[2], injectSortLabelDerivLabel(Local.value)([])]));
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 407, column 51 - line 410, column 77): " + [v12.constructor.name]);
        };
      });
    }
    ;
    if (v instanceof Suc) {
      return makeRule(["gamma", "x", "typeX", "y", "typeY", "locality"])(function() {
        return function(v12) {
          if (v12.length === 6) {
            return new Tuple([injectSortLabelDerivLabel(VarSort.value)([v12[0], v12[1], v12[2], v12[5]])], injectSortLabelDerivLabel(VarSort.value)([injectSortLabelDerivLabel(CtxConsSort.value)([v12[3], v12[4], v12[0]]), v12[1], v12[2], v12[5]]));
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 412, column 77 - line 415, column 78): " + [v12.constructor.name]);
        };
      });
    }
    ;
    if (v instanceof Lam) {
      return makeRule(["x", "a", "b", "gamma"])(function() {
        return function(v12) {
          if (v12.length === 4) {
            return new Tuple([pureMetaExpr(new TypeOfLabel(SortString.value))([v12[0]]), injectSortLabelDerivLabel(TypeSort.value)([v12[1]]), injectSortLabelDerivLabel(TermSort.value)([injectSortLabelDerivLabel(CtxConsSort.value)([v12[0], v12[1], v12[3]]), v12[2]])], injectSortLabelDerivLabel(TermSort.value)([v12[3], injectSortLabelDerivLabel(Arrow.value)([v12[1], v12[2]])]));
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 417, column 52 - line 422, column 48): " + [v12.constructor.name]);
        };
      });
    }
    ;
    if (v instanceof App2) {
      return makeRule(["gamma", "a", "b"])(function() {
        return function(v12) {
          if (v12.length === 3) {
            return new Tuple([injectSortLabelDerivLabel(TermSort.value)([v12[0], injectSortLabelDerivLabel(Arrow.value)([v12[1], v12[2]])]), injectSortLabelDerivLabel(TermSort.value)([v12[0], v12[1]])], injectSortLabelDerivLabel(TermSort.value)([v12[0], v12[2]]));
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 424, column 47 - line 428, column 33): " + [v12.constructor.name]);
        };
      });
    }
    ;
    if (v instanceof GreyApp) {
      return makeRule(["gamma", "a", "b"])(function() {
        return function(v12) {
          if (v12.length === 3) {
            return new Tuple([injectSortLabelDerivLabel(TermSort.value)([v12[0], v12[2]]), injectSortLabelDerivLabel(TermSort.value)([v12[0], v12[1]])], injectSortLabelDerivLabel(TermSort.value)([v12[0], v12[2]]));
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 430, column 51 - line 434, column 33): " + [v12.constructor.name]);
        };
      });
    }
    ;
    if (v instanceof FreeVar) {
      return makeRule(["name", "type"])(function() {
        return function(v12) {
          if (v12.length === 2) {
            return new Tuple([], injectSortLabelDerivLabel(VarSort.value)([injectSortLabelDerivLabel(CtxNilSort.value)([]), v12[0], v12[1], injectSortLabelDerivLabel(NonLocal.value)([])]));
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 436, column 48 - line 439, column 70): " + [v12.constructor.name]);
        };
      });
    }
    ;
    if (v instanceof Var) {
      return makeRule(["gamma", "x", "type", "locality"])(function() {
        return function(v12) {
          if (v12.length === 4) {
            return new Tuple([injectSortLabelDerivLabel(VarSort.value)([v12[0], v12[1], v12[2], v12[3]])], injectSortLabelDerivLabel(TermSort.value)([v12[0], v12[2]]));
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 441, column 62 - line 444, column 34): " + [v12.constructor.name]);
        };
      });
    }
    ;
    if (v instanceof TermHole) {
      return makeRule(["gamma", "type"])(function() {
        return function(v12) {
          if (v12.length === 2) {
            return new Tuple([injectSortLabelDerivLabel(TypeSort.value)([v12[1]])], injectSortLabelDerivLabel(TermSort.value)([v12[0], v12[1]]));
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 446, column 50 - line 449, column 34): " + [v12.constructor.name]);
        };
      });
    }
    ;
    if (v instanceof Newline) {
      return makeRule(["gamma", "type"])(function() {
        return function(v12) {
          if (v12.length === 2) {
            return new Tuple([injectSortLabelDerivLabel(TermSort.value)([v12[0], v12[1]])], injectSortLabelDerivLabel(TermSort.value)([v12[0], v12[1]]));
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 451, column 49 - line 454, column 29): " + [v12.constructor.name]);
        };
      });
    }
    ;
    if (v instanceof Let) {
      return makeRule(["x", "a", "b", "gamma"])(function() {
        return function(v12) {
          if (v12.length === 4) {
            return new Tuple([pureMetaExpr(new TypeOfLabel(SortString.value))([v12[0]]), injectSortLabelDerivLabel(TypeSort.value)([v12[1]]), injectSortLabelDerivLabel(TermSort.value)([injectSortLabelDerivLabel(CtxConsSort.value)([v12[0], v12[1], v12[3]]), v12[1]]), injectSortLabelDerivLabel(TermSort.value)([injectSortLabelDerivLabel(CtxConsSort.value)([v12[0], v12[1], v12[3]]), v12[2]])], injectSortLabelDerivLabel(TermSort.value)([v12[3], v12[2]]));
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 456, column 52 - line 462, column 32): " + [v12.constructor.name]);
        };
      });
    }
    ;
    if (v instanceof TypeHole) {
      return makeRule(["type"])(function() {
        return function(v12) {
          if (v12.length === 1) {
            return new Tuple([], injectSortLabelDerivLabel(TypeSort.value)([v12[0]]));
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 464, column 41 - line 467, column 27): " + [v12.constructor.name]);
        };
      });
    }
    ;
    if (v instanceof DataTypeRule) {
      return makeRule([])(function() {
        return function(v12) {
          if (v12.length === 0) {
            return new Tuple([], injectSortLabelDerivLabel(TypeSort.value)([injectSortLabelDerivLabel(new DataType(v.value0))([])]));
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 469, column 50 - line 472, column 50): " + [v12.constructor.name]);
        };
      });
    }
    ;
    if (v instanceof ListRule) {
      return makeRule(["type"])(function() {
        return function(v12) {
          if (v12.length === 1) {
            return new Tuple([injectSortLabelDerivLabel(TypeSort.value)([v12[0]])], injectSortLabelDerivLabel(TypeSort.value)([injectSortLabelDerivLabel(List2.value)([v12[0]])]));
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 474, column 41 - line 477, column 39): " + [v12.constructor.name]);
        };
      });
    }
    ;
    if (v instanceof ArrowRule) {
      return makeRule(["a", "b"])(function() {
        return function(v12) {
          if (v12.length === 2) {
            return new Tuple([injectSortLabelDerivLabel(TypeSort.value)([v12[0]]), injectSortLabelDerivLabel(TypeSort.value)([v12[1]])], injectSortLabelDerivLabel(TypeSort.value)([injectSortLabelDerivLabel(Arrow.value)([v12[0], v12[1]])]));
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 479, column 44 - line 482, column 42): " + [v12.constructor.name]);
        };
      });
    }
    ;
    if (v instanceof If) {
      return makeRule(["gamma", "type"])(function() {
        return function(v12) {
          if (v12.length === 2) {
            return new Tuple([injectSortLabelDerivLabel(TermSort.value)([v12[0], injectSortLabelDerivLabel(new DataType(Bool.value))([])]), injectSortLabelDerivLabel(TermSort.value)([v12[0], v12[1]]), injectSortLabelDerivLabel(TermSort.value)([v12[0], v12[1]])], injectSortLabelDerivLabel(TermSort.value)([v12[0], v12[1]]));
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 484, column 44 - line 489, column 36): " + [v12.constructor.name]);
        };
      });
    }
    ;
    if (v instanceof ErrorBoundary) {
      return makeRule(["gamma", "insideType", "outsideType"])(function() {
        return function(v12) {
          if (v12.length === 3) {
            return new Tuple([injectSortLabelDerivLabel(TermSort.value)([v12[0], v12[1]])], injectSortLabelDerivLabel(TermSort.value)([v12[0], v12[2]]));
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 491, column 76 - line 494, column 42): " + [v12.constructor.name]);
        };
      });
    }
    ;
    if (v instanceof ConstantRule) {
      return makeRule(["gamma"])(function() {
        return function(v12) {
          if (v12.length === 1) {
            return new Tuple([], injectSortLabelDerivLabel(TermSort.value)([v12[0], constantType(v.value0)]));
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 496, column 48 - line 499, column 45): " + [v12.constructor.name]);
        };
      });
    }
    ;
    if (v instanceof InfixRule) {
      var v1 = infixTypes(v.value0);
      return makeRule(["gamma"])(function() {
        return function(v2) {
          if (v2.length === 1) {
            return new Tuple([injectSortLabelDerivLabel(TermSort.value)([v2[0], v1.left]), injectSortLabelDerivLabel(TermSort.value)([v2[0], v1.right])], injectSortLabelDerivLabel(TermSort.value)([v2[0], v1.output]));
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 503, column 32 - line 506, column 37): " + [v2.constructor.name]);
        };
      });
    }
    ;
    if (v instanceof EqualsRule) {
      return makeRule(["gamma", "type"])(function() {
        return function(v12) {
          if (v12.length === 2) {
            return new Tuple([injectSortLabelDerivLabel(TermSort.value)([v12[0], v12[1]]), injectSortLabelDerivLabel(TermSort.value)([v12[0], v12[1]])], injectSortLabelDerivLabel(TermSort.value)([v12[0], injectSortLabelDerivLabel(new DataType(Bool.value))([])]));
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 508, column 52 - line 511, column 52): " + [v12.constructor.name]);
        };
      });
    }
    ;
    if (v instanceof NilRule) {
      return makeRule(["gamma", "type"])(function() {
        return function(v12) {
          if (v12.length === 2) {
            return new Tuple([], injectSortLabelDerivLabel(TermSort.value)([v12[0], injectSortLabelDerivLabel(List2.value)([v12[1]])]));
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 513, column 49 - line 516, column 45): " + [v12.constructor.name]);
        };
      });
    }
    ;
    if (v instanceof ConsRule) {
      return makeRule(["gamma", "type"])(function() {
        return function(v12) {
          if (v12.length === 2) {
            return new Tuple([], injectSortLabelDerivLabel(TermSort.value)([v12[0], injectSortLabelDerivLabel(Arrow.value)([v12[1], injectSortLabelDerivLabel(Arrow.value)([injectSortLabelDerivLabel(List2.value)([v12[1]]), injectSortLabelDerivLabel(List2.value)([v12[1]])])])]));
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 518, column 50 - line 521, column 91): " + [v12.constructor.name]);
        };
      });
    }
    ;
    if (v instanceof HeadRule) {
      return makeRule(["gamma", "type"])(function() {
        return function(v12) {
          if (v12.length === 2) {
            return new Tuple([], injectSortLabelDerivLabel(TermSort.value)([v12[0], injectSortLabelDerivLabel(Arrow.value)([injectSortLabelDerivLabel(List2.value)([v12[1]]), v12[1]])]));
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 523, column 50 - line 526, column 62): " + [v12.constructor.name]);
        };
      });
    }
    ;
    if (v instanceof TailRule) {
      return makeRule(["gamma", "type"])(function() {
        return function(v12) {
          if (v12.length === 2) {
            return new Tuple([], injectSortLabelDerivLabel(TermSort.value)([v12[0], injectSortLabelDerivLabel(Arrow.value)([injectSortLabelDerivLabel(List2.value)([v12[1]]), injectSortLabelDerivLabel(List2.value)([v12[1]])])]));
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 528, column 50 - line 531, column 74): " + [v12.constructor.name]);
        };
      });
    }
    ;
    if (v instanceof IndexRule) {
      return makeRule(["gamma", "type"])(function() {
        return function(v12) {
          if (v12.length === 2) {
            return new Tuple([], injectSortLabelDerivLabel(TermSort.value)([v12[0], injectSortLabelDerivLabel(Arrow.value)([injectSortLabelDerivLabel(List2.value)([v12[1]]), injectSortLabelDerivLabel(Arrow.value)([injectSortLabelDerivLabel(new DataType(Int.value))([]), v12[1]])])]));
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 533, column 51 - line 536, column 97): " + [v12.constructor.name]);
        };
      });
    }
    ;
    if (v instanceof LengthRule) {
      return makeRule(["gamma", "type"])(function() {
        return function(v12) {
          if (v12.length === 2) {
            return new Tuple([], injectSortLabelDerivLabel(TermSort.value)([v12[0], injectSortLabelDerivLabel(Arrow.value)([injectSortLabelDerivLabel(List2.value)([v12[1]]), injectSortLabelDerivLabel(new DataType(Int.value))([])])]));
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 538, column 52 - line 541, column 80): " + [v12.constructor.name]);
        };
      });
    }
    ;
    if (v instanceof AppendRule) {
      return makeRule(["gamma", "type"])(function() {
        return function(v12) {
          if (v12.length === 2) {
            return new Tuple([], injectSortLabelDerivLabel(TermSort.value)([v12[0], injectSortLabelDerivLabel(Arrow.value)([injectSortLabelDerivLabel(List2.value)([v12[1]]), injectSortLabelDerivLabel(Arrow.value)([injectSortLabelDerivLabel(List2.value)([v12[1]]), injectSortLabelDerivLabel(List2.value)([v12[1]])])])]));
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 543, column 52 - line 546, column 103): " + [v12.constructor.name]);
        };
      });
    }
    ;
    if (v instanceof ListMatchRule) {
      return makeRule(["gamma", "type", "outTy", "consElemArg", "consListArg"])(function() {
        return function(v12) {
          if (v12.length === 5) {
            return new Tuple([injectSortLabelDerivLabel(TermSort.value)([v12[0], injectSortLabelDerivLabel(List2.value)([v12[1]])]), injectSortLabelDerivLabel(TermSort.value)([v12[0], v12[2]]), pureMetaExpr(new TypeOfLabel(SortString.value))([v12[3]]), pureMetaExpr(new TypeOfLabel(SortString.value))([v12[4]]), injectSortLabelDerivLabel(TermSort.value)([injectSortLabelDerivLabel(CtxConsSort.value)([v12[3], v12[1], injectSortLabelDerivLabel(CtxConsSort.value)([v12[4], injectSortLabelDerivLabel(List2.value)([v12[1]]), v12[0]])]), v12[2]])], injectSortLabelDerivLabel(TermSort.value)([v12[0], v12[2]]));
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 548, column 94 - line 555, column 36): " + [v12.constructor.name]);
        };
      });
    }
    ;
    if (v instanceof IntegerLiteral) {
      return makeRule(["gamma", "n"])(function() {
        return function(v12) {
          if (v12.length === 2) {
            return new Tuple([pureMetaExpr(new TypeOfLabel(SortInt.value))([v12[1]])], injectSortLabelDerivLabel(TermSort.value)([v12[0], injectSortLabelDerivLabel(new DataType(Int.value))([])]));
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 557, column 53 - line 560, column 52): " + [v12.constructor.name]);
        };
      });
    }
    ;
    if (v instanceof Comment) {
      return makeRule(["c", "gamma", "type"])(function() {
        return function(v12) {
          if (v12.length === 3) {
            return new Tuple([pureMetaExpr(new TypeOfLabel(SortString.value))([v12[0]]), injectSortLabelDerivLabel(TermSort.value)([v12[1], v12[2]])], injectSortLabelDerivLabel(TermSort.value)([v12[1], v12[2]]));
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 562, column 54 - line 566, column 29): " + [v12.constructor.name]);
        };
      });
    }
    ;
    throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 405, column 34 - line 566, column 29): " + [v.constructor.name]);
  });
  var constantName = function(v) {
    if (v instanceof ConstTrue) {
      return "true";
    }
    ;
    if (v instanceof ConstFalse) {
      return "false";
    }
    ;
    if (v instanceof ConstNot) {
      return "!";
    }
    ;
    throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 221, column 16 - line 224, column 20): " + [v.constructor.name]);
  };
  var sortToType = function(v) {
    if (v.value0 instanceof MInj && (v.value0.value0 instanceof SInj && (v.value0.value0.value0 instanceof DataType && v.value1.length === 0))) {
      return new Expr(makeLabel(isRuleLabelPreSortLabelRu)(new DataTypeRule(v.value0.value0.value0.value0))([]), []);
    }
    ;
    if (v.value0 instanceof MInj && (v.value0.value0 instanceof SInj && (v.value0.value0.value0 instanceof Arrow && v.value1.length === 2))) {
      return new Expr(makeLabel(isRuleLabelPreSortLabelRu)(ArrowRule.value)([new Tuple("a", v["value1"][0]), new Tuple("b", v["value1"][1])]), [sortToType(v["value1"][0]), sortToType(v["value1"][1])]);
    }
    ;
    if (v.value0 instanceof MInj && (v.value0.value0 instanceof SInj && (v.value0.value0.value0 instanceof List2 && v.value1.length === 1))) {
      return new Expr(makeLabel(isRuleLabelPreSortLabelRu)(ListRule.value)([new Tuple("type", v["value1"][0])]), [sortToType(v["value1"][0])]);
    }
    ;
    return new Expr(makeLabel(isRuleLabelPreSortLabelRu)(TypeHole.value)([new Tuple("type", v)]), []);
  };
  var isRuleLabelPreSortLabelRu = {
    "prettyExprF'_unsafe_RuleLabel": function() {
      return function(v) {
        if (v.value0 instanceof Zero && v.value1.length === 0) {
          return pretty12(Zero.value);
        }
        ;
        if (v.value0 instanceof Suc && v.value1.length === 1) {
          return pretty12(Suc.value) + v["value1"][0];
        }
        ;
        if (v.value0 instanceof Lam && v.value1.length === 3) {
          return parens(appendSpaced("fun")(appendSpaced(v["value1"][0])(appendSpaced(":")(appendSpaced(v["value1"][1])(appendSpaced("=>")(v["value1"][2]))))));
        }
        ;
        if (v.value0 instanceof Let && v.value1.length === 4) {
          return parens(appendSpaced("let")(appendSpaced(v["value1"][0])(appendSpaced(":")(appendSpaced(v["value1"][1])(appendSpaced("=")(appendSpaced(v["value1"][2])(v["value1"][3])))))));
        }
        ;
        if (v.value0 instanceof ArrowRule && v.value1.length === 2) {
          return parens(appendSpaced(v["value1"][0])(appendSpaced("->")(v["value1"][1])));
        }
        ;
        if (v.value0 instanceof ListRule && v.value1.length === 1) {
          return appendSpaced("List")(v["value1"][0]);
        }
        ;
        if (v.value0 instanceof DataTypeRule && v.value1.length === 0) {
          return pretty6(v.value0.value0);
        }
        ;
        if (v.value0 instanceof App2 && v.value1.length === 2) {
          return parens(appendSpaced(v["value1"][0])(v["value1"][1]));
        }
        ;
        if (v.value0 instanceof GreyApp && v.value1.length === 2) {
          return "<" + appendSpaced(v["value1"][0])(v["value1"][1] + ">");
        }
        ;
        if (v.value0 instanceof Var && v.value1.length === 1) {
          return "@" + v["value1"][0];
        }
        ;
        if (v.value0 instanceof TermHole && v.value1.length === 1) {
          return "(? : " + (v["value1"][0] + ")");
        }
        ;
        if (v.value0 instanceof TypeHole && v.value1.length === 0) {
          return "?<type>";
        }
        ;
        if (v.value0 instanceof Newline && v.value1.length === 1) {
          return "<newline> " + v["value1"][0];
        }
        ;
        if (v.value0 instanceof FreeVar && v.value1.length === 0) {
          return "free";
        }
        ;
        if (v.value0 instanceof If && v.value1.length === 3) {
          return appendSpaced("if")(appendSpaced(v["value1"][0])(appendSpaced("then")(appendSpaced(v["value1"][1])(appendSpaced("else")(v["value1"][2])))));
        }
        ;
        if (v.value0 instanceof ErrorBoundary && v.value1.length === 1) {
          return appendSpaced("{{")(appendSpaced(v["value1"][0])("}}"));
        }
        ;
        if (v.value0 instanceof ConstantRule && v.value1.length === 0) {
          return constantName(v.value0.value0);
        }
        ;
        if (v.value0 instanceof InfixRule && v.value1.length === 2) {
          return parens(appendSpaced(v["value1"][0])(appendSpaced(infixName(v.value0.value0))(v["value1"][1])));
        }
        ;
        if (v.value0 instanceof LengthRule && v.value1.length === 0) {
          return "length";
        }
        ;
        if (v.value0 instanceof AppendRule && v.value1.length === 0) {
          return "append";
        }
        ;
        if (v.value0 instanceof ConsRule && v.value1.length === 0) {
          return "cons";
        }
        ;
        if (v.value0 instanceof NilRule && v.value1.length === 0) {
          return "nil";
        }
        ;
        if (v.value0 instanceof HeadRule && v.value1.length === 0) {
          return "head";
        }
        ;
        if (v.value0 instanceof TailRule && v.value1.length === 0) {
          return "tail";
        }
        ;
        if (v.value0 instanceof LengthRule && v.value1.length === 0) {
          return "tail";
        }
        ;
        if (v.value0 instanceof IndexRule && v.value1.length === 0) {
          return "tail";
        }
        ;
        if (v.value0 instanceof EqualsRule && v.value1.length === 2) {
          return appendSpaced(v["value1"][0])(appendSpaced("==")(v["value1"][1]));
        }
        ;
        if (v.value0 instanceof ListMatchRule && v.value1.length === 5) {
          return appendSpaced("match")(appendSpaced(v["value1"][0])(appendSpaced("with Nil -> ")(appendSpaced(v["value1"][1])(appendSpaced(" cons")(appendSpaced(v["value1"][2])(appendSpaced(" ")(appendSpaced(v["value1"][3])(appendSpaced(" -> ")(v["value1"][4])))))))));
        }
        ;
        if (v.value0 instanceof IntegerLiteral && v.value1.length === 1) {
          return v["value1"][0];
        }
        ;
        if (v.value0 instanceof Comment && v.value1.length === 2) {
          return "/* " + (v["value1"][0] + (" */ " + v["value1"][1]));
        }
        ;
        return bug("[prettyExprF'...] the input was: " + show52(v));
      };
    },
    language: language3,
    isHoleRuleTotalMap: /* @__PURE__ */ makeTotalMap2(function(v) {
      if (v instanceof TermHole) {
        return new Yes(true);
      }
      ;
      if (v instanceof TypeHole) {
        return new Yes(false);
      }
      ;
      return No.value;
    }),
    "defaultDerivTerm'": function() {
      return function(v) {
        if (v.value0 instanceof MInj && (v.value0.value0 instanceof SInj && (v.value0.value0.value0 instanceof TermSort && v.value1.length === 2))) {
          return pure36(new Expr(makeLabel(isRuleLabelPreSortLabelRu)(TermHole.value)([new Tuple("gamma", v["value1"][0]), new Tuple("type", v["value1"][1])]), [sortToType(v["value1"][1])]));
        }
        ;
        if (v.value0 instanceof MInj && (v.value0.value0 instanceof SInj && (v.value0.value0.value0 instanceof VarSort && v.value1.length === 4))) {
          return empty12;
        }
        ;
        if (v.value0 instanceof MInj && (v.value0.value0 instanceof SInj && (v.value0.value0.value0 instanceof TypeSort && v.value1.length === 1))) {
          return pure36(sortToType(v["value1"][0]));
        }
        ;
        return bug("[defaultDerivTerm] no match: " + pretty32(v));
      };
    },
    IsExprLabel0: function() {
      return isExprLabelPreSortLabel;
    },
    Eq1: function() {
      return eqRuleLabel;
    },
    Enum2: function() {
      return enumRuleLabel;
    },
    Bounded3: function() {
      return boundedRuleLabel;
    },
    Show4: function() {
      return showRuleLabel;
    },
    Pretty5: function() {
      return prettyRuleLabel;
    },
    EncodeJson6: function() {
      return encodeJsonPreSortLabel;
    },
    EncodeJson7: function() {
      return encodeJsonRuleLabel;
    },
    DecodeJson8: function() {
      return decodeJsonPreSortLabel;
    },
    DecodeJson9: function() {
      return decodeJsonRuleLabel;
    }
  };
  var makeLabel2 = /* @__PURE__ */ makeLabel(isRuleLabelPreSortLabelRu);
  var makeSubEditFromTerm2 = /* @__PURE__ */ makeSubEditFromTerm(isRuleLabelPreSortLabelRu);
  var ssTermSort2 = /* @__PURE__ */ ssTermSort(isRuleLabelPreSortLabelRu);
  var dTERM2 = /* @__PURE__ */ dTERM(isRuleLabelPreSortLabelRu);
  var makeDownRule2 = /* @__PURE__ */ makeDownRule(isExprLabelPreSortLabel)(isRuleLabelPreSortLabelRu);
  var makeActionFromPath2 = /* @__PURE__ */ makeActionFromPath(isRuleLabelPreSortLabelRu);
  var newPathFromRule2 = /* @__PURE__ */ newPathFromRule(isRuleLabelPreSortLabelRu);
  var injectSSMatchTerm2 = /* @__PURE__ */ injectSSMatchTerm(isRuleLabelPreSortLabelRu);
  var subDerivTerm2 = /* @__PURE__ */ subDerivTerm(isRuleLabelPreSortLabelRu);
  var derivTermSort2 = /* @__PURE__ */ derivTermSort(isRuleLabelPreSortLabelRu);
  var makeWrapEdits2 = /* @__PURE__ */ makeWrapEdits(isRuleLabelPreSortLabelRu);
  var makeUpRule2 = /* @__PURE__ */ makeUpRule(isExprLabelPreSortLabel)(isRuleLabelPreSortLabelRu);
  var defaultDerivTerm2 = /* @__PURE__ */ defaultDerivTerm(isRuleLabelPreSortLabelRu);
  var newTermFromRule2 = /* @__PURE__ */ newTermFromRule(isRuleLabelPreSortLabelRu);
  var makeChangeEditFromTerm2 = /* @__PURE__ */ makeChangeEditFromTerm(isRuleLabelPreSortLabelRu);
  var extraQueryEdits = function(v) {
    return function(v1) {
      var v2 = function(v32) {
        return [];
      };
      var $2443 = matchExprImpl2(v)(injectMatchExpr(sor(TermSort.value))([slot2, slot2]));
      if ($2443 instanceof Just && $2443.value0.length === 2) {
        var v3 = fromString(v1);
        if (v3 instanceof Nothing) {
          return [];
        }
        ;
        if (v3 instanceof Just) {
          var dterm = new Expr(makeLabel2(IntegerLiteral.value)([new Tuple("gamma", $2443["value0"][0]), new Tuple("n", new Expr(new MInj(new DataLabel(new DataInt(v3.value0))), []))]), [new Expr(new DerivLiteral(new DataInt(v3.value0)), [])]);
          return mapMaybe2(identity24)([makeSubEditFromTerm2(dterm)(show16(v3.value0))(v)]);
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 1545, column 9 - line 1550, column 103): " + [v3.constructor.name]);
      }
      ;
      return v2(true);
    };
  };
  var fallbackDownError = function(v) {
    return function(v1) {
      var v2 = function(v3) {
        return Nothing.value;
      };
      if (v1.value0 instanceof Boundary && (v1.value0.value0 instanceof Down && (v1.value1.length === 1 && v1["value1"][0].value0 instanceof SSInj))) {
        var $2451 = matchChange2(v1.value0.value1)(injectChangeMatchExpr(TermSort.value)([cSlot, cSlot]));
        if ($2451 instanceof Just && ($2451.value0.value0.length === 0 && $2451.value0.value1.length === 2)) {
          var $2452 = matchExprImpl2(ssTermSort2(v1["value1"][0]))(injectMatchExpr(sor(TermSort.value))([slot2, slot2]));
          if ($2452 instanceof Just && $2452.value0.length === 2) {
            return trace4("fallbackDownError called")(function(v3) {
              return pure36(dTERM2(ErrorBoundary.value)([new Tuple("gamma", rEndpoint2($2451["value0"]["value1"][0])), new Tuple("insideType", $2452["value0"][1]), new Tuple("outsideType", rEndpoint2($2451["value0"]["value1"][1]))])([wrapBoundary2(Down.value)(new Expr(csor(TermSort.value), [$2451["value0"]["value1"][0], inject($2452["value0"][1])]))(v1["value1"][0])]));
            });
          }
          ;
          return v2(true);
        }
        ;
        return v2(true);
      }
      ;
      return v2(true);
    };
  };
  var fallbackUpError = function(v) {
    return function(sterm) {
      if (sterm.value0 instanceof SSInj && sterm.value0.value0 instanceof DerivLabel) {
        return bind33(flip(findWithIndex)(sterm.value1)(function(_index) {
          return function(v1) {
            var v2 = function(v3) {
              return Nothing.value;
            };
            if (v1.value0 instanceof Boundary && (v1.value0.value0 instanceof Up && v1.value1.length === 1)) {
              var $2471 = matchChange2(v1.value0.value1)(injectChangeMatchExpr(TermSort.value)([cSlot, cSlot]));
              if ($2471 instanceof Just && ($2471.value0.value0.length === 0 && $2471.value0.value1.length === 2)) {
                var $2472 = matchExprImpl2(ssTermSort2(v1["value1"][0]))(injectMatchExpr(sor(TermSort.value))([slot2, slot2]));
                if ($2472 instanceof Just && $2472.value0.length === 2) {
                  return pure36(new Tuple($2471["value0"]["value1"][0], new Tuple($2471["value0"]["value1"][1], new Tuple(v1["value1"][0], $2472["value0"][1]))));
                }
                ;
                return v2(true);
              }
              ;
              return v2(true);
            }
            ;
            return v2(true);
          };
        }))(function(v1) {
          return discard17(traceM2("fallbackUpError called"))(function() {
            var outsideTy = lEndpoint2(v1.value0.value1.value0);
            return pure36(new Expr(new SSInj(sterm.value0.value0), fromJust6(updateAt(v1.value1)(wrapBoundary2(Up.value)(new Expr(csor(TermSort.value), [v1.value0.value0, inject(outsideTy)]))(dTERM2(ErrorBoundary.value)([new Tuple("gamma", rEndpoint2(v1.value0.value0)), new Tuple("insideType", v1.value0.value1.value1.value1), new Tuple("outsideType", outsideTy)])([v1.value0.value1.value1.value0])))(sterm.value1))));
          });
        });
      }
      ;
      return Nothing.value;
    };
  };
  var insertSucRule = /* @__PURE__ */ function() {
    return makeDownRule2(injectChangeMatchExpr(VarSort.value)([dPLUS(CtxConsSort.value)([slot2, slot2])(cSlot)([]), cSlot, cSlot, cSlot]))(slot2)(function() {
      return function(v) {
        if (v.length === 2) {
          return function(v1) {
            if (v1.length === 4) {
              return function(v2) {
                if (v2.length === 1) {
                  return pure36(dTERM2(Suc.value)([new Tuple("gamma", rEndpoint2(v1[0])), new Tuple("x", rEndpoint2(v1[1])), new Tuple("typeX", rEndpoint2(v1[2])), new Tuple("y", v[0]), new Tuple("typeY", v[1]), new Tuple("locality", rEndpoint2(v1[3]))])([wrapBoundary2(Down.value)(new Expr(csor(VarSort.value), [v1[0], v1[1], v1[2], v1[3]]))(v2[0])]));
                }
                ;
                throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 977, column 6 - line 983, column 18): " + [v2.constructor.name]);
              };
            }
            ;
            throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 977, column 6 - line 983, column 18): " + [v1.constructor.name]);
          };
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 977, column 6 - line 983, column 18): " + [v.constructor.name]);
      };
    });
  }();
  var introDownErrorNeutral = function(v) {
    return function(v1) {
      var v2 = function(v3) {
        return Nothing.value;
      };
      if (v1.value0 instanceof Boundary && (v1.value0.value0 instanceof Down && (v1.value1.length === 1 && v1["value1"][0].value0 instanceof SSInj))) {
        var $2512 = matchChange2(v1.value0.value1)(injectChangeMatchExpr(TermSort.value)([cSlot, cSlot]));
        if ($2512 instanceof Just && ($2512.value0.value0.length === 0 && $2512.value0.value1.length === 2)) {
          var $2513 = isNeutralFormWithCursor(v1["value1"][0]);
          if ($2513) {
            var $2514 = !isMerelyASubstitution2($2512["value0"]["value1"][1]);
            if ($2514) {
              var $2524 = function() {
                if (v instanceof Just && (v.value0.value0 instanceof SSInj && (v.value0.value0.value0 instanceof DerivLabel && v.value0.value1.value1 === 0))) {
                  return !(eq7(v.value0.value0.value0.value0)(App2.value) || eq7(v.value0.value0.value0.value0)(GreyApp.value));
                }
                ;
                return true;
              }();
              if ($2524) {
                var $2525 = matchExprImpl2(ssTermSort2(v1["value1"][0]))(injectMatchExpr(sor(TermSort.value))([slot2, slot2]));
                if ($2525 instanceof Just && $2525.value0.length === 2) {
                  return pure36(dTERM2(ErrorBoundary.value)([new Tuple("gamma", rEndpoint2($2512["value0"]["value1"][0])), new Tuple("insideType", $2525["value0"][1]), new Tuple("outsideType", rEndpoint2($2512["value0"]["value1"][1]))])([wrapBoundary2(Down.value)(new Expr(csor(TermSort.value), [$2512["value0"]["value1"][0], inject($2525["value0"][1])]))(v1["value1"][0])]));
                }
                ;
                return v2(true);
              }
              ;
              return v2(true);
            }
            ;
            return v2(true);
          }
          ;
          return v2(true);
        }
        ;
        return v2(true);
      }
      ;
      return v2(true);
    };
  };
  var introUpErrorNeutral = function(v) {
    return function(v1) {
      return bind33(flip(findWithIndex)(v1.value1)(function(i2) {
        return function(v2) {
          var v3 = function(v4) {
            return Nothing.value;
          };
          if (v2.value0 instanceof Boundary && (v2.value0.value0 instanceof Up && v2.value1.length === 1)) {
            var $2577 = matchChange2(v2.value0.value1)(injectChangeMatchExpr(TermSort.value)([cSlot, cSlot]));
            if ($2577 instanceof Just && ($2577.value0.value0.length === 0 && $2577.value0.value1.length === 2)) {
              var $2582 = function() {
                if (v1.value0 instanceof SSInj && v1.value0.value0 instanceof DerivLabel) {
                  return !((eq7(v1.value0.value0.value0)(App2.value) || eq7(v1.value0.value0.value0)(GreyApp.value)) && i2 === 0);
                }
                ;
                return true;
              }();
              if ($2582) {
                var $2583 = isNeutralFormWithoutCursor(v2["value1"][0]);
                if ($2583) {
                  var $2584 = !isMerelyASubstitution2($2577["value0"]["value1"][1]);
                  if ($2584) {
                    var $2585 = matchExprImpl2(ssTermSort2(v2["value1"][0]))(injectMatchExpr(sor(TermSort.value))([slot2, slot2]));
                    if ($2585 instanceof Just && $2585.value0.length === 2) {
                      return pure36(new Tuple($2577["value0"]["value1"][0], new Tuple($2577["value0"]["value1"][1], new Tuple(v2["value1"][0], $2585["value0"][1]))));
                    }
                    ;
                    return v3(true);
                  }
                  ;
                  return v3(true);
                }
                ;
                return v3(true);
              }
              ;
              return v3(true);
            }
            ;
            return v3(true);
          }
          ;
          return v3(true);
        };
      }))(function(v2) {
        var outsideTy = lEndpoint2(v2.value0.value1.value0);
        return pure36(new Expr(v1.value0, fromJust6(updateAt(v2.value1)(wrapBoundary2(Up.value)(new Expr(csor(TermSort.value), [v2.value0.value0, inject(outsideTy)]))(dTERM2(ErrorBoundary.value)([new Tuple("gamma", rEndpoint2(v2.value0.value0)), new Tuple("insideType", v2.value0.value1.value1.value1), new Tuple("outsideType", outsideTy)])([v2.value0.value1.value1.value0])))(v1.value1))));
      });
    };
  };
  var keyAction = function(v) {
    return function(v1) {
      if (v1.value0 instanceof MInj && (v1.value0.value0 instanceof TypeOfLabel && v1.value1.length === 1)) {
        return Nothing.value;
      }
      ;
      if (v === "Enter") {
        return makeActionFromPath2(true)(forgetSorts)(splitChange)(fst(newPathFromRule2(Newline.value)(0)))("newline")(v1);
      }
      ;
      return Nothing.value;
    };
  };
  var makeAppGreyed = function(v) {
    return function(v1) {
      var v2 = function(v3) {
        return Nothing.value;
      };
      if (v1.value0 instanceof SSInj && (v1.value0.value0 instanceof DerivLabel && (v1.value0.value0.value0 instanceof App2 && (v1.value1.length === 2 && (v1["value1"][0].value0 instanceof Boundary && (v1["value1"][0].value0.value0 instanceof Up && v1["value1"][0].value1.length === 1)))))) {
        var $2619 = matchChange2(v1["value1"][0].value0.value1)(injectChangeMatchExpr(TermSort.value)([cSlot, dMINUS(Arrow.value)([slot2])(cSlot)([])]));
        if ($2619 instanceof Just && ($2619.value0.value0.length === 1 && $2619.value0.value1.length === 2)) {
          return pure36(wrapBoundary2(Up.value)(new Expr(csor(TermSort.value), [$2619["value0"]["value1"][0], $2619["value0"]["value1"][1]]))(new Expr(new SSInj(makeLabel2(GreyApp.value)([new Tuple("gamma", rEndpoint2($2619["value0"]["value1"][0])), new Tuple("a", $2619["value0"]["value0"][0]), new Tuple("b", rEndpoint2($2619["value0"]["value1"][1]))])), [v1["value1"][0]["value1"][0], wrapBoundary2(Down.value)(new Expr(csor(TermSort.value), [$2619["value0"]["value1"][0], inject($2619["value0"]["value0"][0])]))(v1["value1"][1])])));
        }
        ;
        return v2(true);
      }
      ;
      return v2(true);
    };
  };
  var makeEditFromPath2 = /* @__PURE__ */ makeEditFromPath(isRuleLabelPreSortLabelRu)(forgetSorts)(splitChange);
  var mergeErrorsDown = function(v) {
    return function(v1) {
      var v2 = function(v3) {
        return Nothing.value;
      };
      if (v1.value0 instanceof Boundary && (v1.value0.value0 instanceof Down && (v1.value1.length === 1 && (v1["value1"][0].value0 instanceof SSInj && (v1["value1"][0].value0.value0 instanceof DerivLabel && (v1["value1"][0].value0.value0.value0 instanceof ErrorBoundary && v1["value1"][0].value1.length === 1)))))) {
        var $2654 = matchChange2(v1.value0.value1)(injectChangeMatchExpr(TermSort.value)([cSlot, cSlot]));
        if ($2654 instanceof Just && ($2654.value0.value0.length === 0 && $2654.value0.value1.length === 2)) {
          var insideInside = lookup$prime3(new RuleMetaVar("insideType"))(v1["value1"][0].value0.value0.value1);
          var outsideOutside = rEndpoint2($2654["value0"]["value1"][1]);
          return pure36(dTERM2(ErrorBoundary.value)([new Tuple("gamma", rEndpoint2($2654["value0"]["value1"][0])), new Tuple("insideType", insideInside), new Tuple("outsideType", outsideOutside)])([wrapBoundary2(Down.value)(new Expr(csor(TermSort.value), [$2654["value0"]["value1"][0], inject(insideInside)]))(v1["value1"][0]["value1"][0])]));
        }
        ;
        return v2(true);
      }
      ;
      return v2(true);
    };
  };
  var mergeErrorsUp = function(v) {
    return function(v1) {
      var v2 = function(v3) {
        return Nothing.value;
      };
      if (v1.value0 instanceof SSInj && (v1.value0.value0 instanceof DerivLabel && (v1.value0.value0.value0 instanceof ErrorBoundary && (v1.value1.length === 1 && (v1["value1"][0].value0 instanceof Boundary && (v1["value1"][0].value0.value0 instanceof Up && v1["value1"][0].value1.length === 1)))))) {
        var $2673 = matchChange2(v1["value1"][0].value0.value1)(injectChangeMatchExpr(TermSort.value)([cSlot, cSlot]));
        if ($2673 instanceof Just && ($2673.value0.value0.length === 0 && $2673.value0.value1.length === 2)) {
          var insideInside = rEndpoint2($2673["value0"]["value1"][1]);
          var outsideOutside = lookup$prime3(new RuleMetaVar("outsideType"))(v1.value0.value0.value1);
          return pure36(wrapBoundary2(Up.value)(new Expr(csor(TermSort.value), [$2673["value0"]["value1"][0], inject(outsideOutside)]))(dTERM2(ErrorBoundary.value)([new Tuple("gamma", rEndpoint2($2673["value0"]["value1"][0])), new Tuple("insideType", insideInside), new Tuple("outsideType", outsideOutside)])([v1["value1"][0]["value1"][0]])));
        }
        ;
        return v2(true);
      }
      ;
      return v2(true);
    };
  };
  var nonlocalBecomesLocal = /* @__PURE__ */ function() {
    return makeDownRule2(injectChangeMatchExpr(VarSort.value)([dPLUS(CtxConsSort.value)([slot2, slot2])(cSlot)([]), cSlot, cSlot, injectChangeMatchExpr(NonLocal.value)([])]))(slot2)(function() {
      return function(v) {
        if (v.length === 2) {
          return function(v1) {
            if (v1.length === 3) {
              return function(v2) {
                if (v2.length === 1) {
                  var $2693 = !(eq42(inject(v[0]))(v1[1]) && isJust(unify2(v[1])(rEndpoint2(v1[2]))));
                  if ($2693) {
                    return Nothing.value;
                  }
                  ;
                  return pure36(wrapBoundary2(Up.value)(new Expr(csor(VarSort.value), [new Expr(csor(CtxConsSort.value), [v1[1], inject(v[1]), inject(rEndpoint2(v1[0]))]), v1[1], diff2(rEndpoint2(v1[2]))(v[1]), replaceChange(new Expr(sor(NonLocal.value), []))(new Expr(sor(Local.value), []))]))(dTERM2(Zero.value)([new Tuple("gamma", rEndpoint2(v1[0])), new Tuple("x", v[0]), new Tuple("type", v[1])])([])));
                }
                ;
                throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 1017, column 6 - line 1024, column 79): " + [v2.constructor.name]);
              };
            }
            ;
            throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 1017, column 6 - line 1024, column 79): " + [v1.constructor.name]);
          };
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 1017, column 6 - line 1024, column 79): " + [v.constructor.name]);
      };
    });
  }();
  var passThroughArrow = function(v) {
    return function(dterm) {
      var v1 = function(v2) {
        return Nothing.value;
      };
      if (dterm.value0 instanceof Boundary && (dterm.value0.value0 instanceof Down && (dterm.value1.length === 1 && (dterm["value1"][0].value0 instanceof SSInj && (dterm["value1"][0].value0.value0 instanceof DerivLabel && (dterm["value1"][0].value0.value0.value0 instanceof ArrowRule && dterm["value1"][0].value1.length === 2)))))) {
        var $2701 = matchChange2(dterm.value0.value1)(injectChangeMatchExpr(TypeSort.value)([injectChangeMatchExpr(Arrow.value)([cSlot, cSlot])]));
        if ($2701 instanceof Just && ($2701.value0.value0.length === 0 && $2701.value0.value1.length === 2)) {
          return pure36(dTERM2(ArrowRule.value)([new Tuple("a", rEndpoint2($2701["value0"]["value1"][0])), new Tuple("b", rEndpoint2($2701["value0"]["value1"][1]))])([wrapBoundary2(Down.value)(new Expr(csor(TypeSort.value), [$2701["value0"]["value1"][0]]))(dterm["value1"][0]["value1"][0]), wrapBoundary2(Down.value)(new Expr(csor(TypeSort.value), [$2701["value0"]["value1"][1]]))(dterm["value1"][0]["value1"][1])]));
        }
        ;
        return v1(true);
      }
      ;
      return v1(true);
    };
  };
  var removeSucRule = /* @__PURE__ */ function() {
    return makeDownRule2(injectChangeMatchExpr(VarSort.value)([dMINUS(CtxConsSort.value)([slot2, slot2])(cSlot)([]), cSlot, cSlot, cSlot]))(injectSSMatchTerm2(Suc.value)([slot2]))(function() {
      return function(v) {
        if (v.length === 2) {
          return function(v1) {
            if (v1.length === 4) {
              return function(v2) {
                if (v2.length === 1) {
                  return pure36(wrapBoundary2(Down.value)(new Expr(csor(VarSort.value), [v1[0], v1[1], v1[2], v1[3]]))(v2[0]));
                }
                ;
                throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 1007, column 6 - line 1009, column 10): " + [v2.constructor.name]);
              };
            }
            ;
            throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 1007, column 6 - line 1009, column 10): " + [v1.constructor.name]);
          };
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 1007, column 6 - line 1009, column 10): " + [v.constructor.name]);
      };
    });
  }();
  var maximallyApplied = function(cursorCtx) {
    return function(cursorTy) {
      return function(tyOft) {
        return function(toBeWrapped) {
          var answerIfMe = function(v2) {
            return bind33(unify2(cursorTy)(tyOft))(function(v12) {
              return pure36(new Tuple(subDerivTerm2(v12.value1)(toBeWrapped), v12.value1));
            });
          };
          var v = matchExprImpl2(tyOft)(injectMatchExpr(sor(Arrow.value))([slot2, slot2]));
          if (v instanceof Just && v.value0.length === 2) {
            var wrapped = new Expr(makeLabel2(App2.value)([new Tuple("gamma", cursorCtx), new Tuple("a", v["value0"][0]), new Tuple("b", v["value0"][1])]), [toBeWrapped, new Expr(makeLabel2(TermHole.value)([new Tuple("gamma", cursorCtx), new Tuple("type", v["value0"][0])]), [sortToType(v["value0"][0])])]);
            var v1 = maximallyApplied(cursorCtx)(cursorTy)(v["value0"][1])(wrapped);
            if (v1 instanceof Just) {
              return new Just(v1.value0);
            }
            ;
            if (v1 instanceof Nothing) {
              return answerIfMe(unit);
            }
            ;
            throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 793, column 9 - line 795, column 39): " + [v1.constructor.name]);
          }
          ;
          return answerIfMe(unit);
        };
      };
    };
  };
  var getAppliedWrapEdits = function(v) {
    return function(v1) {
      return function(v2) {
        var v3 = function(v42) {
          return Nil.value;
        };
        var $2741 = matchExprImpl2(v1)(injectMatchExpr(sor(TermSort.value))([slot2, slot2]));
        if ($2741 instanceof Just && $2741.value0.length === 2) {
          var $2742 = matchExprImpl2(derivTermSort2(v2))(injectMatchExpr(sor(TermSort.value))([slot2, slot2]));
          if ($2742 instanceof Just && $2742.value0.length === 2) {
            var $2743 = unify2($2741["value0"][0])($2742["value0"][0]);
            if ($2743 instanceof Just) {
              var meta2 = fromMetaVar(freshMetaVar("any"));
              var v4 = maximallyApplied($2741["value0"][0])(meta2)($2742["value0"][1])(v2);
              if (v4 instanceof Just) {
                return makeWrapEdits2(isValidCursorSort)(isValidSelectionSorts)(forgetSorts)(splitChange)(v)(v1)(subDerivTerm2(composeSub2($2743.value0.value1)(v4.value0.value1))(v4.value0.value0));
              }
              ;
              if (v4 instanceof Nothing) {
                return Nil.value;
              }
              ;
              throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 867, column 5 - line 871, column 23): " + [v4.constructor.name]);
            }
            ;
            return v3(true);
          }
          ;
          return v3(true);
        }
        ;
        return v3(true);
      };
    };
  };
  var getWrapInAppEdit = function(name15) {
    return function(cursorSort) {
      return function(dterm) {
        return matchExpr22(cursorSort)(injectMatchExpr(sor(TermSort.value))([slot2, slot2]))(function() {
          return function(v) {
            if (v.length === 2) {
              return matchExpr3(derivTermSort2(dterm))(injectMatchExpr(sor(TermSort.value))([slot2, slot2]))(function() {
                return function(v1) {
                  if (v1.length === 2) {
                    var action2 = bind33(unify2(v1[0])(v[0]))(function(v2) {
                      var cursorCtx$prime = subMetaExprPartially2(v2.value1)(v[0]);
                      var cursorTy$prime = subMetaExprPartially2(v2.value1)(v[1]);
                      var ty$prime = subMetaExprPartially2(v2.value1)(v1[1]);
                      var dterm$prime = subDerivTerm2(v2.value1)(dterm);
                      return bind33(maximallyApplied(cursorCtx$prime)(cursorTy$prime)(ty$prime)(dterm$prime))(function(v3) {
                        return pure36(defer3(function(v4) {
                          return new FillAction({
                            sub: composeSub2(v2.value1)(v3.value1),
                            dterm: v3.value0
                          });
                        }));
                      });
                    });
                    return pure36({
                      label: name15,
                      action: function() {
                        if (action2 instanceof Just) {
                          return new Right(action2.value0);
                        }
                        ;
                        if (action2 instanceof Nothing) {
                          return new Left("Not well-typed");
                        }
                        ;
                        throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 840, column 31 - line 842, column 57): " + [action2.constructor.name]);
                      }()
                    });
                  }
                  ;
                  throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 825, column 84 - line 843, column 18): " + [v1.constructor.name]);
                };
              });
            }
            ;
            throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 824, column 59 - line 843, column 18): " + [v.constructor.name]);
          };
        })(slot2)(function() {
          return function(v) {
            if (v.length === 1) {
              return Nothing.value;
            }
            ;
            throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 845, column 14 - line 845, column 29): " + [v.constructor.name]);
          };
        });
      };
    };
  };
  var typeBecomeRhsOfChange = /* @__PURE__ */ function() {
    return makeDownRule2(injectChangeMatchExpr(TypeSort.value)([cSlot]))(slot2)(function() {
      return function(v) {
        if (v.length === 0) {
          return function(v1) {
            if (v1.length === 1) {
              return function(v2) {
                if (v2.length === 1) {
                  return pure36(termToSSTerm(sortToType(rEndpoint2(v1[0]))));
                }
                ;
                throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 1043, column 6 - line 1043, column 78): " + [v2.constructor.name]);
              };
            }
            ;
            throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 1043, column 6 - line 1043, column 78): " + [v1.constructor.name]);
          };
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 1043, column 6 - line 1043, column 78): " + [v.constructor.name]);
      };
    });
  }();
  var wrapApp = function(v) {
    return function(v1) {
      if (v instanceof Just && (v.value0.value0 instanceof SSInj && (v.value0.value0.value0 instanceof DerivLabel && v.value0.value0.value0.value0 instanceof Lam))) {
        return Nothing.value;
      }
      ;
      return makeUpRule2(injectChangeMatchExpr(TermSort.value)([cSlot, dPLUS(Arrow.value)([slot2])(cSlot)([])]))(slot2)(function() {
        return function(v2) {
          if (v2.length === 1) {
            return new Tuple(v2[0], function(v3) {
              if (v3.length === 1) {
                return function(v4) {
                  if (v4.length === 2) {
                    return function(inside) {
                      var $2799 = !isNeutralFormWithoutCursor(inside);
                      if ($2799) {
                        return Nothing.value;
                      }
                      ;
                      return pure36(wrapBoundary2(Up.value)(new Expr(csor(TermSort.value), [v4[0], v4[1]]))(dTERM2(App2.value)([new Tuple("gamma", rEndpoint2(v4[0])), new Tuple("a", v3[0]), new Tuple("b", rEndpoint2(v4[1]))])([inside, termToSSTerm(fromJust$prime("wrapApp")(defaultDerivTerm2(new Expr(sor(TermSort.value), [rEndpoint2(v4[0]), v3[0]]))))])));
                    };
                  }
                  ;
                  throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 1128, column 20 - line 1133, column 143): " + [v4.constructor.name]);
                };
              }
              ;
              throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 1128, column 20 - line 1133, column 143): " + [v3.constructor.name]);
            });
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 1128, column 6 - line 1133, column 144): " + [v2.constructor.name]);
        };
      })(v)(v1);
    };
  };
  var wrapInRef = function(index5) {
    return matchExpr3(derivTermSort2(index5))(injectMatchExpr(sor(VarSort.value))([slot2, slot2, slot2, slot2]))(function() {
      return function(v) {
        if (v.length === 4) {
          return new Tuple(new Expr(makeLabel2(Var.value)([new Tuple("gamma", v[0]), new Tuple("x", v[1]), new Tuple("type", v[2]), new Tuple("locality", v[3])]), [index5]), v[2]);
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 779, column 88 - line 781, column 20): " + [v.constructor.name]);
      };
    });
  };
  var wrapInSuc = function(name15) {
    return function(ty) {
      return function(t) {
        return matchExpr3(derivTermSort2(t))(injectMatchExpr(sor(VarSort.value))([slot2, slot2, slot2, slot2]))(function() {
          return function(v) {
            if (v.length === 4) {
              return new Expr(makeLabel2(Suc.value)([new Tuple("gamma", v[0]), new Tuple("x", v[1]), new Tuple("typeX", v[2]), new Tuple("y", name15), new Tuple("typeY", ty), new Tuple("locality", v[3])]), [t]);
            }
            ;
            throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 750, column 88 - line 752, column 15): " + [v.constructor.name]);
          };
        });
      };
    };
  };
  var getFreeVar = function(ctx) {
    return function(fvName) {
      return function(fvType) {
        return matchExpr22(ctx)(injectMatchExpr(sor(CtxConsSort.value))([slot2, slot2, slot2]))(function() {
          return function(v) {
            if (v.length === 3) {
              return wrapInSuc(v[0])(v[1])(getFreeVar(v[2])(fvName)(fvType));
            }
            ;
            throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 757, column 46 - line 758, column 58): " + [v.constructor.name]);
          };
        })(injectMatchExpr(sor(CtxNilSort.value))([]))(function() {
          return function(v) {
            if (v.length === 0) {
              return new Expr(makeLabel2(FreeVar.value)([new Tuple("name", fvName), new Tuple("type", fvType)]), []);
            }
            ;
            throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 760, column 29 - line 761, column 76): " + [v.constructor.name]);
          };
        });
      };
    };
  };
  var localBecomesNonlocal = /* @__PURE__ */ function() {
    return makeDownRule2(injectChangeMatchExpr(VarSort.value)([dMINUS(CtxConsSort.value)([slot2, slot2])(cSlot)([]), cSlot, cSlot, injectChangeMatchExpr(Local.value)([])]))(injectSSMatchTerm2(Zero.value)([]))(function() {
      return function(v) {
        if (v.length === 2) {
          return function(v1) {
            if (v1.length === 3) {
              return function(v2) {
                if (v2.length === 0) {
                  var $2822 = !(eq42(inject(v[0]))(v1[1]) && eq42(inject(v[1]))(v1[2]));
                  if ($2822) {
                    return Nothing.value;
                  }
                  ;
                  return pure36(wrapBoundary2(Up.value)(new Expr(csor(VarSort.value), [inject(rEndpoint2(v1[0])), v1[1], v1[2], new Expr(new Replace(new Expr(sor(Local.value), []), new Expr(sor(NonLocal.value), [])), [])]))(termToSSTerm(getFreeVar(rEndpoint2(v1[0]))(v[0])(v[1]))));
                }
                ;
                throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 995, column 6 - line 998, column 71): " + [v2.constructor.name]);
              };
            }
            ;
            throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 995, column 6 - line 998, column 71): " + [v1.constructor.name]);
          };
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 995, column 6 - line 998, column 71): " + [v.constructor.name]);
      };
    });
  }();
  var getIndices = function(ctx) {
    return matchExpr22(ctx)(injectMatchExpr(sor(CtxConsSort.value))([slot2, slot2, slot2]))(function() {
      return function(v) {
        if (v.length === 3) {
          return new Cons(new Expr(makeLabel2(Zero.value)([new Tuple("gamma", v[2]), new Tuple("x", v[0]), new Tuple("type", v[1])]), []), map68(wrapInSuc(v[0])(v[1]))(getIndices(v[2])));
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 767, column 46 - line 771, column 52): " + [v.constructor.name]);
      };
    })(injectMatchExpr(sor(CtxNilSort.value))([]))(function() {
      return function(v) {
        if (v.length === 0) {
          return Nil.value;
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 773, column 29 - line 774, column 12): " + [v.constructor.name]);
      };
    });
  };
  var getVarEdits = function(sort2) {
    return matchExpr22(sort2)(injectMatchExpr(sor(TermSort.value))([slot2, slot2]))(function() {
      return function(v) {
        if (v.length === 2) {
          var indices = getIndices(v[0]);
          var makeEdit = function(index5) {
            return matchExpr3(derivTermSort2(index5))(injectMatchExpr(sor(VarSort.value))([slot2, slot2, slot2, slot2]))(function() {
              return function(v1) {
                if (v1.length === 4) {
                  var maybeAction = function() {
                    var v2 = wrapInRef(index5);
                    return bind33(maximallyApplied(v[0])(v[1])(v2.value1)(v2.value0))(function(v3) {
                      return pure36(defer3(function(v4) {
                        return new FillAction({
                          sub: v3.value1,
                          dterm: v3.value0
                        });
                      }));
                    });
                  }();
                  return {
                    label: matchStringLabel(v1[1]),
                    action: function() {
                      if (maybeAction instanceof Just) {
                        return new Right(maybeAction.value0);
                      }
                      ;
                      if (maybeAction instanceof Nothing) {
                        return new Left("Not well-typed");
                      }
                      ;
                      throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 812, column 35 - line 814, column 61): " + [maybeAction.constructor.name]);
                    }()
                  };
                }
                ;
                throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 803, column 103 - line 815, column 22): " + [v1.constructor.name]);
              };
            });
          };
          return map68(makeEdit)(indices);
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 800, column 53 - line 817, column 33): " + [v.constructor.name]);
      };
    })(slot2)(function() {
      return function(v) {
        if (v.length === 1) {
          return Nil.value;
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 820, column 14 - line 820, column 25): " + [v.constructor.name]);
      };
    });
  };
  var editsAtHoleInterior = function(cursorSort) {
    return append110(fromFoldable21(getVarEdits(cursorSort)))(mapMaybe2(identity24)(append110([makeSubEditFromTerm2(newTermFromRule2(If.value))("if")(cursorSort), makeSubEditFromTerm2(newTermFromRule2(Lam.value))("fun")(cursorSort), makeSubEditFromTerm2(newTermFromRule2(Let.value))("let")(cursorSort), makeSubEditFromTerm2(newTermFromRule2(App2.value))("(")(cursorSort), makeSubEditFromTerm2(newTermFromRule2(NilRule.value))("nil")(cursorSort), getWrapInAppEdit("cons")(cursorSort)(newTermFromRule2(ConsRule.value)), getWrapInAppEdit("head")(cursorSort)(newTermFromRule2(HeadRule.value)), getWrapInAppEdit("tail")(cursorSort)(newTermFromRule2(TailRule.value)), getWrapInAppEdit("index")(cursorSort)(newTermFromRule2(IndexRule.value)), getWrapInAppEdit("length")(cursorSort)(newTermFromRule2(LengthRule.value)), getWrapInAppEdit("append")(cursorSort)(newTermFromRule2(AppendRule.value)), makeSubEditFromTerm2(newTermFromRule2(ListMatchRule.value))("match")(cursorSort), makeSubEditFromTerm2(newTermFromRule2(EqualsRule.value))("==")(cursorSort)])(append110(mapFlipped9(allPossible1)(function(constant) {
      return getWrapInAppEdit(constantName(constant))(cursorSort)(newTermFromRule2(new ConstantRule(constant)));
    }))(mapFlipped9(allPossible2)(function(op) {
      return makeSubEditFromTerm2(newTermFromRule2(new InfixRule(op)))(infixName(op))(cursorSort);
    })))));
  };
  var getVarWraps = function(v) {
    var v1 = function(v2) {
      return Nil.value;
    };
    var $2852 = matchExprImpl2(v)(injectMatchExpr(sor(TermSort.value))([slot2, slot2]));
    if ($2852 instanceof Just && $2852.value0.length === 2) {
      var meta2 = fromMetaVar(freshMetaVar("any"));
      var indices = getIndices($2852["value0"][0]);
      var edits = mapFlipped13(indices)(function(index5) {
        var v2 = wrapInRef(index5);
        return bind33(maximallyApplied($2852["value0"][0])(meta2)(v2.value1)(v2.value0))(function(v3) {
          return pure36(matchExpr3(derivTermSort2(index5))(injectMatchExpr(sor(VarSort.value))([slot2, slot2, slot2, slot2]))(function() {
            return function(v4) {
              if (v4.length === 4) {
                return makeWrapEdits2(isValidCursorSort)(isValidSelectionSorts)(forgetSorts)(splitChange)(matchStringLabel(v4[1]))(v)(v3.value0);
              }
              ;
              throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 856, column 102 - line 857, column 162): " + [v4.constructor.name]);
            };
          }));
        });
      });
      return concat(mapMaybe(function(x) {
        return x;
      })(edits));
    }
    ;
    return v1(true);
  };
  var editsAtCursor = function(cursorSort) {
    return append110(mapMaybe2(identity24)([makeChangeEditFromTerm2(newTermFromRule2(new DataTypeRule(Int.value)))("Int")(cursorSort), makeChangeEditFromTerm2(newTermFromRule2(new DataTypeRule(Bool.value)))("Bool")(cursorSort), makeEditFromPath2(newPathFromRule2(ListRule.value)(0))("List")(cursorSort)]))(append110(drop(1)(fromFoldable21(makeWrapEdits2(isValidCursorSort)(isValidSelectionSorts)(forgetSorts)(splitChange)("->")(cursorSort)(newTermFromRule2(ArrowRule.value)))))(function() {
      var $2867 = !isTermSort(cursorSort);
      if ($2867) {
        return [];
      }
      ;
      return append110(mapMaybe2(identity24)([makeEditFromPath2(newPathFromRule2(Lam.value)(2))("fun")(cursorSort), makeEditFromPath2(newPathFromRule2(Let.value)(3))("let")(cursorSort), makeEditFromPath2(newPathFromRule2(Let.value)(2))("let")(cursorSort), makeEditFromPath2(newPathFromRule2(App2.value)(0))("(")(cursorSort)]))(append110(concat2(mapFlipped9(allPossible2)(function(op) {
        return fromFoldable21(makeWrapEdits2(isValidCursorSort)(isValidSelectionSorts)(forgetSorts)(splitChange)(infixName(op))(cursorSort)(newTermFromRule2(new InfixRule(op))));
      })))(append110(fromFoldable21(getVarWraps(cursorSort)))(append110(reverse2(fromFoldable21(getAppliedWrapEdits("cons")(cursorSort)(newTermFromRule2(ConsRule.value)))))(append110(reverse2(fromFoldable21(getAppliedWrapEdits("head")(cursorSort)(newTermFromRule2(HeadRule.value)))))(append110(reverse2(fromFoldable21(getAppliedWrapEdits("tail")(cursorSort)(newTermFromRule2(TailRule.value)))))(append110(reverse2(fromFoldable21(getAppliedWrapEdits("index")(cursorSort)(newTermFromRule2(IndexRule.value)))))(append110(reverse2(fromFoldable21(getAppliedWrapEdits("length")(cursorSort)(newTermFromRule2(LengthRule.value)))))(append110(reverse2(fromFoldable21(getAppliedWrapEdits("append")(cursorSort)(newTermFromRule2(AppendRule.value)))))(append110(fromFoldable21(getAppliedWrapEdits("match")(cursorSort)(newTermFromRule2(ListMatchRule.value))))(append110(catMaybes([makeEditFromPath2(newPathFromRule2(If.value)(1))("if")(cursorSort)]))(append110(fromFoldable21(makeWrapEdits2(isValidCursorSort)(isValidSelectionSorts)(forgetSorts)(splitChange)("==")(cursorSort)(newTermFromRule2(EqualsRule.value))))(concat2(mapFlipped9(allPossible1)(function(constant) {
        return fromFoldable21(getAppliedWrapEdits(constantName(constant))(cursorSort)(newTermFromRule2(new ConstantRule(constant))));
      }))))))))))))));
    }()));
  };
  var wrapLambda = /* @__PURE__ */ function() {
    return makeDownRule2(injectChangeMatchExpr(TermSort.value)([cSlot, dPLUS(Arrow.value)([slot2])(cSlot)([])]))(slot2)(function() {
      return function(v) {
        if (v.length === 1) {
          return function(v1) {
            if (v1.length === 2) {
              return function(v2) {
                if (v2.length === 1) {
                  var varName = new Expr(new MInj(new DataLabel(new DataString(""))), []);
                  return pure36(dTERM2(Lam.value)([new Tuple("x", varName), new Tuple("a", v[0]), new Tuple("b", rEndpoint2(v1[1])), new Tuple("gamma", rEndpoint2(v1[0]))])([termToSSTerm(fromJust$prime("wrapLambda")(defaultDerivTerm2(pureMetaExpr(new TypeOfLabel(SortString.value))([varName])))), termToSSTerm(sortToType(v[0])), wrapBoundary2(Down.value)(new Expr(csor(TermSort.value), [plusChange(sor(CtxConsSort.value))([varName, v[0]])(v1[0])([]), v1[1]]))(v2[0])]));
                }
                ;
                throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 1055, column 6 - line 1063, column 18): " + [v2.constructor.name]);
              };
            }
            ;
            throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 1055, column 6 - line 1063, column 18): " + [v1.constructor.name]);
          };
        }
        ;
        throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 1055, column 6 - line 1063, column 18): " + [v.constructor.name]);
      };
    });
  }();
  var stepRules = /* @__PURE__ */ function() {
    var chLang = langToChLang(isRuleLabelPreSortLabelRu)(language3);
    return fromFoldable(foldableArray)(append110([mergeErrorsDown, mergeErrorsUp, localBecomesNonlocal, nonlocalBecomesLocal, insertSucRule, removeSucRule, passThroughArrow, typeBecomeRhsOfChange, unWrapAppDown, wrapLambda, introDownErrorNeutral, introUpErrorNeutral, removeError, unWrapLambda, mergeAppGreyApp, mergeAppGreyApp2, wrapApp, makeAppGreyed, removeGreyedApp])(append110([defaultDown(isExprLabelPreSortLabel)(isRuleLabelPreSortLabelRu)(chLang), defaultUp(isExprLabelPreSortLabel)(isRuleLabelPreSortLabelRu)(chLang)])([fallbackDownError, fallbackUpError])));
  }();
  var colonElem2 = /* @__PURE__ */ makePuncElem("colon")(":");
  var clipboardSort = function(v) {
    var v1 = function(v2) {
      return fromMetaVar(freshMetaVar("anySort"));
    };
    var $2877 = matchExprImpl2(v)(injectMatchExpr(sor(TermSort.value))([slot2, slot2]));
    if ($2877 instanceof Just && $2877.value0.length === 2) {
      return new Expr(sor(TermSort.value), [startCtx, fromMetaVar(freshMetaVar("anyType"))]);
    }
    ;
    return v1(true);
  };
  var arrowElem = /* @__PURE__ */ makePuncElem("arrow")("\u2192");
  var appCircle = /* @__PURE__ */ makePuncElem("circle")(" \u2022 ");
  var arrangeDerivTermSubs2 = function(v) {
    return function() {
      return function(v1) {
        var renCtx = {
          indentationLevel: v1.renCtx.indentationLevel,
          isCursor: v1.renCtx.isCursor,
          isInteractive: v1.renCtx.isInteractive,
          isInlined: v1.renCtx.isInlined,
          metavarNumbers: v1.renCtx.metavarNumbers,
          pathIdPrefix: v1.renCtx.pathIdPrefix,
          cssClasses: $$delete5("error")(v1.renCtx.cssClasses)
        };
        var parentRule = function() {
          if (v1.mb_parent instanceof Just && v1.mb_parent.value0.value0 instanceof DerivLabel) {
            return new Just(v1.mb_parent.value0.value0.value0);
          }
          ;
          if (v1.mb_parent instanceof Nothing) {
            return Nothing.value;
          }
          ;
          throw new Error("Failed pattern match at Language.Pantograph.Specific.Currying (line 584, column 20 - line 586, column 27): " + [v1.mb_parent.constructor.name]);
        };
        var dotOrNot = function() {
          if (v1.mb_parent instanceof Just && (v1.mb_parent.value0.value0 instanceof DerivLabel && length9(v1.mb_parent.value0.value1.left) === 0)) {
            return isAppOrGreyApp(v1.mb_parent.value0.value0.value0);
          }
          ;
          return false;
        }();
        var html2 = function() {
          var v2 = new Tuple(v1.rule, v1.sort);
          if (v2.value1.value0 instanceof MInj && (v2.value1.value0.value0 instanceof SInj && (v2.value1.value0.value0.value0 instanceof VarSort && (v2.value1.value1.length === 4 && (v2["value1"]["value1"][1].value0 instanceof MInj && (v2["value1"]["value1"][1].value0.value0 instanceof DataLabel && (v2["value1"]["value1"][1].value0.value0.value0 instanceof DataString && v2["value1"]["value1"][1].value1.length === 0))))))) {
            var classes2 = function() {
              var $2898 = eq52(v2["value1"]["value1"][3])(new Expr(sor(Local.value), []));
              if ($2898) {
                return [];
              }
              ;
              return ["error", "free"];
            }();
            return [pure115([div2([classNames(append110(["inline"])(classes2))])([nameElem(v2["value1"]["value1"][1].value0.value0.value0.value0)])])];
          }
          ;
          if (v2.value0 instanceof Var) {
            return [new Left(new Tuple(renCtx, 0))];
          }
          ;
          if (v2.value0 instanceof Lam) {
            var maybeMapsTo = function() {
              if (v1.dzipper instanceof Just && (v1.dzipper.value0.value1.value1.length === 3 && (v1["dzipper"]["value0"]["value1"]["value1"][2].value0 instanceof DerivLabel && v1["dzipper"]["value0"]["value1"]["value1"][2].value0.value0 instanceof Lam))) {
                return [spaceElem];
              }
              ;
              return [mapstoElem];
            }();
            var renCtx$prime = function() {
              var $2929 = eq8(parentRule())(new Just(Lam.value));
              if ($2929) {
                return renCtx;
              }
              ;
              return incremementIndentationLevel(renCtx);
            }();
            return [pure115([lambdaElem]), new Left(new Tuple(renCtx, 0)), pure115([colonElem2]), new Left(new Tuple({
              indentationLevel: renCtx.indentationLevel,
              isCursor: renCtx.isCursor,
              isInlined: renCtx.isInlined,
              isInteractive: renCtx.isInteractive,
              metavarNumbers: renCtx.metavarNumbers,
              pathIdPrefix: renCtx.pathIdPrefix,
              cssClasses: singleton10("typesubscript")
            }, 1)), pure115(maybeMapsTo), new Left(new Tuple(renCtx$prime, 2))];
          }
          ;
          if (v2.value0 instanceof Let) {
            var renCtx$prime = incremementIndentationLevel(renCtx);
            return [pure115([letElem]), new Left(new Tuple(renCtx$prime, 0)), pure115([colonElem2]), new Left(new Tuple(renCtx$prime, 1)), pure115([equalsElem]), new Left(new Tuple(renCtx$prime, 2)), pure115([inElem]), pure115(function() {
              if (renCtx.isInlined) {
                return [];
              }
              ;
              return newlineIndentElem(renCtx.indentationLevel);
            }()), new Left(new Tuple(renCtx, 3))];
          }
          ;
          if (isAppOrGreyApp(v2.value0)) {
            var isGrey = function() {
              if (v2.value0 instanceof GreyApp) {
                return true;
              }
              ;
              return false;
            }();
            var v3 = function() {
              var v4 = function(v5) {
                return new Tuple([lparenElem], [rparenElem]);
              };
              if (v1.mb_parent instanceof Just && v1.mb_parent.value0.value0 instanceof DerivLabel) {
                var $2937 = length9(v1.mb_parent.value0.value1.left) === 0;
                if ($2937) {
                  var $2938 = isAppOrGreyApp(v1.mb_parent.value0.value0.value0);
                  if ($2938) {
                    return new Tuple([], []);
                  }
                  ;
                  return v4(true);
                }
                ;
                return v4(true);
              }
              ;
              return v4(true);
            }();
            var renCtx$prime = incremementIndentationLevel(renCtx);
            var renCtx$prime$prime = function() {
              if (isGrey) {
                return {
                  indentationLevel: renCtx$prime.indentationLevel,
                  isCursor: renCtx$prime.isCursor,
                  isInlined: renCtx$prime.isInlined,
                  isInteractive: renCtx$prime.isInteractive,
                  metavarNumbers: renCtx$prime.metavarNumbers,
                  pathIdPrefix: renCtx$prime.pathIdPrefix,
                  cssClasses: insert15("grey")(singleton10("error"))
                };
              }
              ;
              return renCtx$prime;
            }();
            return [pure115(v3.value0), new Left(new Tuple(renCtx$prime, 0)), new Left(new Tuple(renCtx$prime$prime, 1)), pure115(v3.value1)];
          }
          ;
          if (v2.value0 instanceof DataTypeRule) {
            return [pure115([dataTypeElem(pretty6(v2.value0.value0))])];
          }
          ;
          if (v2.value0 instanceof ArrowRule) {
            var v3 = function() {
              if (v1.mb_parent instanceof Just && (v1.mb_parent.value0.value0 instanceof DerivLabel && (v1.mb_parent.value0.value0.value0 instanceof ArrowRule && length9(v1.mb_parent.value0.value1.left) === 0))) {
                return new Tuple([lparenElem], [rparenElem]);
              }
              ;
              return new Tuple([], []);
            }();
            var renCtx$prime = incremementIndentationLevel(renCtx);
            return [pure115(v3.value0), new Left(new Tuple(renCtx$prime, 0)), pure115([arrowElem]), new Left(new Tuple(renCtx$prime, 1)), pure115(v3.value1)];
          }
          ;
          if (v2.value0 instanceof Newline) {
            return concat2([function() {
              if (renCtx.isInlined) {
                return [];
              }
              ;
              return [pure115([div2([classNames(["newline-symbol"])])([text5(" \u21AA")])]), pure115(newlineIndentElem(renCtx.indentationLevel))];
            }(), [new Left(new Tuple(renCtx, 0))]]);
          }
          ;
          if (v2.value0 instanceof Comment) {
            return concat2([[pure115([span3([classNames(["Comment_anchor"])])([])]), new Left(new Tuple(renCtx, 0))], function() {
              if (renCtx.isInlined) {
                return [];
              }
              ;
              return [pure115(newlineIndentElem(renCtx.indentationLevel))];
            }(), [new Left(new Tuple(renCtx, 1))]]);
          }
          ;
          if (v2.value0 instanceof TermHole && (v2.value1.value0 instanceof MInj && (v2.value1.value0.value0 instanceof SInj && (v2.value1.value0.value0.value0 instanceof TermSort && v2.value1.value1.length === 2)))) {
            return [pure115([lbraceElem]), new Left(new Tuple(renCtx, 0)), pure115([colonElem2]), new Left(new Tuple({
              indentationLevel: renCtx.indentationLevel,
              isCursor: renCtx.isCursor,
              isInlined: renCtx.isInlined,
              isInteractive: renCtx.isInteractive,
              metavarNumbers: renCtx.metavarNumbers,
              pathIdPrefix: renCtx.pathIdPrefix,
              cssClasses: singleton10("typesubscript")
            }, 1)), pure115([rbraceElem])];
          }
          ;
          var v3 = function(v4) {
            if (v2.value0 instanceof TypeHole) {
              return [pure115([text5("error: " + show33(lookup19(new RuleMetaVar("type"))(v1.sigma)))])];
            }
            ;
            if (v2.value0 instanceof If) {
              var renCtx$prime2 = incremementIndentationLevel(renCtx);
              return [pure115([ifElem, spaceElem]), new Left(new Tuple(renCtx$prime2, 0)), pure115(append110(newlineIndentElem(renCtx.indentationLevel))([thenElem, spaceElem])), new Left(new Tuple(renCtx$prime2, 1)), pure115(append110(newlineIndentElem(renCtx.indentationLevel))([elseElem, spaceElem])), new Left(new Tuple(renCtx$prime2, 2))];
            }
            ;
            if (v2.value0 instanceof ErrorBoundary) {
              var v5 = lookup110(v1.rule)(language3);
              var matchRuleMetaVarName = function(v6) {
                return function(v7) {
                  if (v7 instanceof RuleMetaVar) {
                    return v7.value0 === v6;
                  }
                  ;
                  return false;
                };
              };
              var outsideType = lookup$prime3(function() {
                var $3040 = flip(index$prime)(0);
                return function($3041) {
                  return $3040(toUnfoldable8($3041));
                };
              }()(filter6(matchRuleMetaVarName("outsideType"))(v5.value0)))(v1.sigma);
              var insideType = lookup$prime3(function() {
                var $3042 = flip(index$prime)(0);
                return function($3043) {
                  return $3042(toUnfoldable8($3043));
                };
              }()(filter6(matchRuleMetaVarName("insideType"))(v5.value0)))(v1.sigma);
              return [pure115([div2([classes(["error-info ErrorBoundary-info"])])([div_([text5("[type boundary]")]), div_([text5("inside  type: "), v1.renderTerm(new Zipper(Nil.value, sortToType(insideType)))(renCtx)]), div_([text5("outside type: "), v1.renderTerm(new Zipper(Nil.value, sortToType(outsideType)))(renCtx)])])]), pure115([errorLeftSide]), new Left(new Tuple(renCtx, 0)), pure115([errorRightSide])];
            }
            ;
            if (v2.value0 instanceof ConstantRule) {
              return [pure115([text5(constantName(v2.value0.value0))])];
            }
            ;
            if (v2.value0 instanceof InfixRule) {
              return [pure115([lparenElem]), new Left(new Tuple(renCtx, 0)), pure115([spaceElem, text5(infixName(v2.value0.value0)), spaceElem]), new Left(new Tuple(renCtx, 1)), pure115([rparenElem])];
            }
            ;
            if (v2.value0 instanceof EqualsRule) {
              return [new Left(new Tuple(renCtx, 0)), pure115([spaceElem, text5("=="), spaceElem]), new Left(new Tuple(renCtx, 1))];
            }
            ;
            if (v2.value0 instanceof ListRule) {
              return [pure115([text5("List ")]), new Left(new Tuple(renCtx, 0))];
            }
            ;
            if (v2.value0 instanceof NilRule) {
              return [pure115([text5("nil")])];
            }
            ;
            if (v2.value0 instanceof ConsRule) {
              return [pure115([text5("cons")])];
            }
            ;
            if (v2.value0 instanceof HeadRule) {
              return [pure115([text5("head")])];
            }
            ;
            if (v2.value0 instanceof TailRule) {
              return [pure115([text5("tail")])];
            }
            ;
            if (v2.value0 instanceof LengthRule) {
              return [pure115([text5("length")])];
            }
            ;
            if (v2.value0 instanceof AppendRule) {
              return [pure115([text5("append")])];
            }
            ;
            if (v2.value0 instanceof IndexRule) {
              return [pure115([text5("index")])];
            }
            ;
            if (v2.value0 instanceof ListMatchRule) {
              var renCtx$prime2 = incremementIndentationLevel(renCtx);
              return [pure115([b_([text5("match ")])]), new Left(new Tuple(renCtx$prime2, 0)), pure115([b_([text5(" with")])]), pure115(newlineIndentElem(renCtx.indentationLevel)), pure115([text5("nil => ")]), new Left(new Tuple(renCtx$prime2, 1)), pure115(newlineIndentElem(renCtx.indentationLevel)), pure115([text5("cons ")]), new Left(new Tuple(renCtx$prime2, 2)), pure115([text5(" ")]), new Left(new Tuple(renCtx$prime2, 3)), pure115([text5(" => ")]), new Left(new Tuple(renCtx$prime2, 4))];
            }
            ;
            if (v2.value0 instanceof IntegerLiteral) {
              return [new Left(new Tuple(renCtx, 0))];
            }
            ;
            return bug("[STLC.Grammar.arrangeDerivTermSubs] no match" + ("\n" + ("  - rule = " + (pretty12(v1.rule) + ("\n" + ("  - sort = " + show42(v1.sort)))))));
          };
          if (v2.value0 instanceof TypeHole) {
            var $3025 = lookup19(new RuleMetaVar("type"))(v1.sigma);
            if ($3025 instanceof Just && ($3025.value0.value0 instanceof MV && $3025.value0.value1.length === 0)) {
              return [pure115([span3([classes(["TypeHoleMV"])])([text5("?"), text5(show16(getMetavarNumber(renCtx)($3025.value0.value0.value0)))])])];
            }
            ;
            return v3(true);
          }
          ;
          return v3(true);
        }();
        return append110(html2)([pure115(function() {
          if (dotOrNot) {
            return [div2([classNames(["app-circle"])])([appCircle])];
          }
          ;
          return [];
        }())]);
      };
    };
  };
  var editorSpec = /* @__PURE__ */ function() {
    return {
      dterm: assertI(just("SULC dterm")(defaultDerivTerm2(injectSortLabelDerivLabel(TermSort.value)([startCtx, fromMetaVar(freshMetaVar("tyhole"))])))),
      splitChange,
      editsAtCursor,
      editsAtHoleInterior,
      arrangeDerivTermSubs: arrangeDerivTermSubs2,
      stepRules,
      isValidCursorSort,
      isValidSelectionSorts,
      onDelete,
      generalizeDerivation,
      specializeDerivation,
      forgetSorts,
      clipboardSort,
      keyAction,
      extraQueryEdits
    };
  }();

  // output/Language.Pantograph.Specific.CurryingInterpereter/index.js
  var $runtime_lazy11 = function(name15, moduleName, init3) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2)
        return val;
      if (state3 === 1)
        throw new ReferenceError(name15 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init3();
      state3 = 2;
      return val;
    };
  };
  var show17 = /* @__PURE__ */ show(showBoolean);
  var show18 = /* @__PURE__ */ show(showInt);
  var foldr9 = /* @__PURE__ */ foldr(foldableList);
  var all4 = /* @__PURE__ */ all(foldableList)(heytingAlgebraBoolean);
  var pure37 = /* @__PURE__ */ pure(applicativeEither);
  var div4 = /* @__PURE__ */ div(euclideanRingInt);
  var mod4 = /* @__PURE__ */ mod(euclideanRingInt);
  var pure116 = /* @__PURE__ */ pure(applicativeLazy);
  var bind34 = /* @__PURE__ */ bind(bindEither);
  var append111 = /* @__PURE__ */ append(semigroupList);
  var show24 = /* @__PURE__ */ show(showRuleLabel);
  var HoleError = /* @__PURE__ */ function() {
    function HoleError2() {
    }
    ;
    HoleError2.value = new HoleError2();
    return HoleError2;
  }();
  var BoundaryError = /* @__PURE__ */ function() {
    function BoundaryError2() {
    }
    ;
    BoundaryError2.value = new BoundaryError2();
    return BoundaryError2;
  }();
  var FreeVarError = /* @__PURE__ */ function() {
    function FreeVarError2() {
    }
    ;
    FreeVarError2.value = new FreeVarError2();
    return FreeVarError2;
  }();
  var IntVal = /* @__PURE__ */ function() {
    function IntVal2(value0) {
      this.value0 = value0;
    }
    ;
    IntVal2.create = function(value0) {
      return new IntVal2(value0);
    };
    return IntVal2;
  }();
  var BoolVal = /* @__PURE__ */ function() {
    function BoolVal2(value0) {
      this.value0 = value0;
    }
    ;
    BoolVal2.create = function(value0) {
      return new BoolVal2(value0);
    };
    return BoolVal2;
  }();
  var ListVal = /* @__PURE__ */ function() {
    function ListVal2(value0) {
      this.value0 = value0;
    }
    ;
    ListVal2.create = function(value0) {
      return new ListVal2(value0);
    };
    return ListVal2;
  }();
  var FunVal = /* @__PURE__ */ function() {
    function FunVal2(value0) {
      this.value0 = value0;
    }
    ;
    FunVal2.create = function(value0) {
      return new FunVal2(value0);
    };
    return FunVal2;
  }();
  var printValue = function(val) {
    if (val instanceof BoolVal) {
      return show17(val.value0);
    }
    ;
    if (val instanceof IntVal) {
      return show18(val.value0);
    }
    ;
    if (val instanceof ListVal) {
      return foldr9(function(x1) {
        return function(xs) {
          return "(cons " + (printValue(x1) + (" " + (xs + ")")));
        };
      })("nil")(val.value0);
    }
    ;
    if (val instanceof FunVal) {
      return "<function>";
    }
    ;
    throw new Error("Failed pattern match at Language.Pantograph.Specific.CurryingInterpereter (line 124, column 18 - line 128, column 29): " + [val.constructor.name]);
  };
  var eqValue2 = function(v1) {
    return function(v2) {
      var v = new Tuple(v1, v2);
      if (v.value0 instanceof IntVal && v.value1 instanceof IntVal) {
        return v.value0.value0 === v.value1.value0;
      }
      ;
      if (v.value0 instanceof BoolVal && v.value1 instanceof BoolVal) {
        return v.value0.value0 === v.value1.value0;
      }
      ;
      if (v.value0 instanceof ListVal && v.value1 instanceof ListVal) {
        return all4(function(x1) {
          return x1;
        })(zipWith(eqValue2)(v.value0.value0)(v.value1.value0));
      }
      ;
      return false;
    };
  };
  var assertValList = function(v) {
    if (v instanceof ListVal) {
      return v.value0;
    }
    ;
    return bug("assertValint failed");
  };
  var assertValInt = function(v) {
    if (v instanceof IntVal) {
      return v.value0;
    }
    ;
    return bug("assertValint failed");
  };
  var assertValFun = function(v) {
    if (v instanceof FunVal) {
      return v.value0;
    }
    ;
    return bug("assertValint failed");
  };
  var assertValBool = function(v) {
    if (v instanceof BoolVal) {
      return v.value0;
    }
    ;
    return bug("assertValint failed");
  };
  var evalConst = function(v) {
    if (v instanceof ConstTrue) {
      return new BoolVal(true);
    }
    ;
    if (v instanceof ConstFalse) {
      return new BoolVal(false);
    }
    ;
    if (v instanceof ConstNot) {
      return new FunVal(function(b2) {
        return pure37(new BoolVal(!assertValBool(b2)));
      });
    }
    ;
    throw new Error("Failed pattern match at Language.Pantograph.Specific.CurryingInterpereter (line 103, column 13 - line 106, column 70): " + [v.constructor.name]);
  };
  var evalInfix = function(v) {
    if (v instanceof OpPlus) {
      return function(x) {
        return function(y) {
          return new IntVal(assertValInt(x) + assertValInt(y) | 0);
        };
      };
    }
    ;
    if (v instanceof OpMinus) {
      return function(x) {
        return function(y) {
          return new IntVal(assertValInt(x) - assertValInt(y) | 0);
        };
      };
    }
    ;
    if (v instanceof OpTimes) {
      return function(x) {
        return function(y) {
          return new IntVal(assertValInt(x) * assertValInt(y) | 0);
        };
      };
    }
    ;
    if (v instanceof OpDivide) {
      return function(x) {
        return function(y) {
          return new IntVal(div4(assertValInt(x))(assertValInt(y)));
        };
      };
    }
    ;
    if (v instanceof OpMod) {
      return function(x) {
        return function(y) {
          return new IntVal(mod4(assertValInt(x))(assertValInt(y)));
        };
      };
    }
    ;
    if (v instanceof OpPow) {
      return function(x) {
        return function(y) {
          return new IntVal(pow(assertValInt(x))(assertValInt(y)));
        };
      };
    }
    ;
    if (v instanceof OpLess) {
      return function(x) {
        return function(y) {
          return new BoolVal(assertValInt(x) < assertValInt(y));
        };
      };
    }
    ;
    if (v instanceof OpGreater) {
      return function(x) {
        return function(y) {
          return new BoolVal(assertValInt(x) > assertValInt(y));
        };
      };
    }
    ;
    if (v instanceof OpLessEq) {
      return function(x) {
        return function(y) {
          return new BoolVal(assertValInt(x) <= assertValInt(y));
        };
      };
    }
    ;
    if (v instanceof OpGreaterEq) {
      return function(x) {
        return function(y) {
          return new BoolVal(assertValInt(x) >= assertValInt(y));
        };
      };
    }
    ;
    if (v instanceof OpAnd) {
      return function(x) {
        return function(y) {
          return new BoolVal(assertValBool(x) && assertValBool(y));
        };
      };
    }
    ;
    if (v instanceof OpOr) {
      return function(x) {
        return function(y) {
          return new BoolVal(assertValBool(x) || assertValBool(y));
        };
      };
    }
    ;
    throw new Error("Failed pattern match at Language.Pantograph.Specific.CurryingInterpereter (line 109, column 13 - line 121, column 65): " + [v.constructor.name]);
  };
  var $$eval = function(v) {
    return function(v1) {
      if (v1.value0 instanceof DerivLabel) {
        var v2 = new Tuple(v1.value0.value0, v1.value1);
        if (v2.value0 instanceof Zero && v2.value1.length === 0) {
          return force(fromJust$prime("eval Zero case")(head(v)));
        }
        ;
        if (v2.value0 instanceof Suc && v2.value1.length === 1) {
          return $$eval(fromJust$prime("eval suc")(tail(v)))(v2["value1"][0]);
        }
        ;
        if (v2.value0 instanceof Lam && v2.value1.length === 3) {
          return pure37(new FunVal(function(x) {
            return $$eval(new Cons(pure116(new Right(x)), v))(v2["value1"][2]);
          }));
        }
        ;
        if (v2.value0 instanceof Let && v2.value1.length === 4) {
          var $lazy_vDef = $runtime_lazy11("vDef", "Language.Pantograph.Specific.CurryingInterpereter", function() {
            return $$eval(new Cons(defer3(function(v3) {
              return $lazy_vDef(55);
            }), v))(v2["value1"][2]);
          });
          var vDef = $lazy_vDef(55);
          return $$eval(new Cons(pure116(vDef), v))(v2["value1"][3]);
        }
        ;
        if (v2.value0 instanceof App2 && v2.value1.length === 2) {
          return bind34($$eval(v)(v2["value1"][0]))(function(v11) {
            return bind34($$eval(v)(v2["value1"][1]))(function(v21) {
              return assertValFun(v11)(v21);
            });
          });
        }
        ;
        if (v2.value0 instanceof GreyApp && v2.value1.length === 2) {
          return $$eval(v)(v2["value1"][0]);
        }
        ;
        if (v2.value0 instanceof Var && v2.value1.length === 1) {
          return $$eval(v)(v2["value1"][0]);
        }
        ;
        if (v2.value0 instanceof FreeVar && v2.value1.length === 0) {
          return new Left(FreeVarError.value);
        }
        ;
        if (v2.value0 instanceof TermHole && v2.value1.length === 1) {
          return new Left(HoleError.value);
        }
        ;
        if (v2.value0 instanceof Newline && v2.value1.length === 1) {
          return $$eval(v)(v2["value1"][0]);
        }
        ;
        if (v2.value0 instanceof If && v2.value1.length === 3) {
          return bind34($$eval(v)(v2["value1"][0]))(function(vCond) {
            var $106 = assertValBool(vCond);
            if ($106) {
              return $$eval(v)(v2["value1"][1]);
            }
            ;
            return $$eval(v)(v2["value1"][2]);
          });
        }
        ;
        if (v2.value0 instanceof ErrorBoundary && v2.value1.length === 1) {
          return new Left(BoundaryError.value);
        }
        ;
        if (v2.value0 instanceof ConstantRule && v2.value1.length === 0) {
          return pure37(evalConst(v2.value0.value0));
        }
        ;
        if (v2.value0 instanceof InfixRule && v2.value1.length === 2) {
          return bind34($$eval(v)(v2["value1"][0]))(function(v11) {
            return bind34($$eval(v)(v2["value1"][1]))(function(v21) {
              return pure37(evalInfix(v2.value0.value0)(v11)(v21));
            });
          });
        }
        ;
        if (v2.value0 instanceof EqualsRule && v2.value1.length === 2) {
          return bind34($$eval(v)(v2["value1"][0]))(function(v11) {
            return bind34($$eval(v)(v2["value1"][1]))(function(v21) {
              return pure37(new BoolVal(eqValue2(v11)(v21)));
            });
          });
        }
        ;
        if (v2.value0 instanceof NilRule && v2.value1.length === 0) {
          return pure37(new ListVal(Nil.value));
        }
        ;
        if (v2.value0 instanceof ConsRule && v2.value1.length === 0) {
          return pure37(new FunVal(function(x) {
            return pure37(new FunVal(function(xs) {
              return pure37(new ListVal(new Cons(x, assertValList(xs))));
            }));
          }));
        }
        ;
        if (v2.value0 instanceof LengthRule && v2.value1.length === 0) {
          return pure37(new FunVal(function(xs) {
            return pure37(new IntVal(length4(assertValList(xs))));
          }));
        }
        ;
        if (v2.value0 instanceof AppendRule && v2.value1.length === 0) {
          return pure37(new FunVal(function(xs) {
            return pure37(new FunVal(function(ys) {
              return pure37(new ListVal(append111(assertValList(xs))(assertValList(ys))));
            }));
          }));
        }
        ;
        if (v2.value0 instanceof HeadRule && v2.value1.length === 0) {
          return pure37(new FunVal(function(xs) {
            return pure37(fromJust6(head(assertValList(xs))));
          }));
        }
        ;
        if (v2.value0 instanceof TailRule && v2.value1.length === 0) {
          return pure37(new FunVal(function(xs) {
            return pure37(new ListVal(fromJust6(tail(assertValList(xs)))));
          }));
        }
        ;
        if (v2.value0 instanceof IndexRule && v2.value1.length === 0) {
          return pure37(new FunVal(function(xs) {
            return pure37(new FunVal(function(n) {
              return pure37(fromJust6(index2(assertValList(xs))(assertValInt(n))));
            }));
          }));
        }
        ;
        if (v2.value0 instanceof ListMatchRule && v2.value1.length === 5) {
          return bind34($$eval(v)(v2["value1"][0]))(function(vLi) {
            var v3 = assertValList(vLi);
            if (v3 instanceof Nil) {
              return $$eval(v)(v2["value1"][1]);
            }
            ;
            if (v3 instanceof Cons) {
              return $$eval(new Cons(pure116(new Right(v3.value0)), new Cons(pure116(new Right(new ListVal(v3.value1))), v)))(v2["value1"][4]);
            }
            ;
            throw new Error("Failed pattern match at Language.Pantograph.Specific.CurryingInterpereter (line 94, column 13 - line 96, column 91): " + [v3.constructor.name]);
          });
        }
        ;
        if (v2.value0 instanceof IntegerLiteral && (v2.value1.length === 1 && (v2["value1"][0].value0 instanceof DerivLiteral && (v2["value1"][0].value0.value0 instanceof DataInt && v2["value1"][0].value1.length === 0)))) {
          return pure37(new IntVal(v2["value1"][0].value0.value0.value0));
        }
        ;
        if (v2.value0 instanceof Comment && v2.value1.length === 2) {
          return $$eval(v)(v2["value1"][1]);
        }
        ;
        return bug("eval case fail: rule was " + show24(v1.value0.value0));
      }
      ;
      return bug("eval case shouldn't happen");
    };
  };
  var interpereter = function(dterm) {
    var res = realCatchException(Left.create)(Right.create)(function(v) {
      return $$eval(Nil.value)(dterm);
    });
    if (res instanceof Right && res.value0 instanceof Left) {
      if (res.value0.value0 instanceof HoleError) {
        return "Error: hole";
      }
      ;
      if (res.value0.value0 instanceof BoundaryError) {
        return "Error: type boundary";
      }
      ;
      if (res.value0.value0 instanceof FreeVarError) {
        return "Error: unbound variable";
      }
      ;
      throw new Error("Failed pattern match at Language.Pantograph.Specific.CurryingInterpereter (line 134, column 27 - line 137, column 50): " + [res.value0.value0.constructor.name]);
    }
    ;
    if (res instanceof Right && res.value0 instanceof Right) {
      return printValue(res.value0.value0);
    }
    ;
    if (res instanceof Left) {
      return "Error: infinite loop";
    }
    ;
    throw new Error("Failed pattern match at Language.Pantograph.Specific.CurryingInterpereter (line 133, column 5 - line 139, column 41): " + [res.constructor.name]);
  };

  // output/MainStandalone/index.js
  var discard18 = /* @__PURE__ */ discard(discardUnit)(bindAff);
  var log6 = /* @__PURE__ */ log2(monadEffectAff);
  var bind35 = /* @__PURE__ */ bind(bindAff);
  var runEditorForLang = function(dictIsRuleLabel) {
    var component3 = component2(dictIsRuleLabel);
    return function(v) {
      return runHalogenAff(discard18(log6("[main]"))(function() {
        return bind35(awaitBody)(function(body2) {
          return runUI2(component3)({
            spec: v.spec,
            interpreter: v.interpreter
          })(body2);
        });
      }));
    };
  };
  var main2 = /* @__PURE__ */ runEditorForLang(isRuleLabelPreSortLabelRu)({
    spec: editorSpec,
    interpreter: interpereter
  });

  // standalone.js
  main2();
})();
